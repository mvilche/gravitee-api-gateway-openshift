!function(e){function t(t){for(var n,r,s=t[0],l=t[1],c=t[2],p=0,m=[];p<s.length;p++)r=s[p],Object.prototype.hasOwnProperty.call(a,r)&&a[r]&&m.push(a[r][0]),a[r]=0;for(n in l)Object.prototype.hasOwnProperty.call(l,n)&&(e[n]=l[n]);for(d&&d(t);m.length;)m.shift()();return o.push.apply(o,c||[]),i()}function i(){for(var e,t=0;t<o.length;t++){for(var i=o[t],n=!0,s=1;s<i.length;s++){var l=i[s];0!==a[l]&&(n=!1)}n&&(o.splice(t--,1),e=r(r.s=i[0]))}return e}var n={},a={1:0},o=[];function r(t){if(n[t])return n[t].exports;var i=n[t]={i:t,l:!1,exports:{}};return e[t].call(i.exports,i,i.exports,r),i.l=!0,i.exports}r.m=e,r.c=n,r.d=function(e,t,i){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:i})},r.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var i=Object.create(null);if(r.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var n in e)r.d(i,n,function(t){return e[t]}.bind(null,n));return i},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="";var s=window.webpackJsonp=window.webpackJsonp||[],l=s.push.bind(s);s.push=t,s=s.slice();for(var c=0;c<s.length;c++)t(s[c]);var d=l;o.push([630,0,3]),i()}([,,,,,function(e,t){e.exports=' <md-dialog aria-label=warning-dialog> <md-dialog-content layout-padding> <h4>{{title}}</h4> <p ng-bind-html=msg></p> </md-dialog-content> <md-dialog-actions layout=row> <md-button ng-click=ctrl.cancel()>Cancel</md-button> <md-button class="md-raised md-warn" ng-click=ctrl.confirm()>{{confirmButton}}</md-button> </md-dialog-actions> </md-dialog> '},,,,,function(e,t,i){"use strict";var n,a=this&&this.__extends||(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i])},function(e,t){function i(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(i.prototype=t.prototype,new i)});t.__esModule=!0,function(e){e[e.API=0]="API",e[e.APPLICATION=1]="APPLICATION",e[e.PLATFORM=2]="PLATFORM"}(t.Scope||(t.Scope={})),function(e){e.STRING="string",e.THRESHOLD="threshold",e.THRESHOLD_RANGE="threshold_range",e.RATE="rate",e.FREQUENCY="frequency",e.THRESHOLD_ACCUMULATE="threshold_accumulate",e.COMPARE="compare",e.STRING_COMPARE="string_compare"}(t.ConditionType||(t.ConditionType={}));var o=function(e,t){this.key=e,this.name=t},r=function(e,t){this.key=e,this.value=t};t.Tuple=r;var s=function(){function e(e,t,i,n,a,o){this.supportPropertyProjection=!1,this.key=e,this.name=t,this.conditions=i,this.supportPropertyProjection=n,this.scopes=a,this.loader=o}return e.filterByScope=function(e,t){return e.filter((function(e){return void 0===e.scopes||-1!==e.scopes.indexOf(t)}))},e}();t.Metrics=s;var l=function(e,t,i,n,a,o,r){this.name=e,this.severity=t,this.source=i,this.description=n,this.type=a,this.reference_type=o,this.reference_id=r};t.Alert=l;var c=function(){};t.Dampening=c;var d=function(){function e(e,t){this.type=e,this.description=t}return e.STRICT_COUNT=new e("strict_count","N consecutive true evaluations"),e.RELAXED_COUNT=new e("relaxed_count","N true evaluations out of M total evaluations"),e.RELAXED_TIME=new e("relaxed_time","N true evaluations in T time"),e.STRICT_TIME=new e("strict_time","Only true evaluations for at least T time"),e.MODES=[e.STRICT_COUNT,e.RELAXED_COUNT,e.RELAXED_TIME,e.STRICT_TIME],e}();t.DampeningMode=d;var p=function(e,t){this.type=e,this.name=t};t.Condition=p;var m=function(e){function t(){return e.call(this,t.TYPE,"Threshold")||this}return a(t,e),t.prototype.getOperators=function(){return t.OPERATORS},t.TYPE="threshold",t.LT=new o("lt","less than"),t.LTE=new o("lte","less than or equals to"),t.GTE=new o("gte","greater than or equals to"),t.GT=new o("gt","greater than"),t.OPERATORS=[t.LT,t.LTE,t.GTE,t.GT],t}(p);t.ThresholdCondition=m;var u=function(e){function t(){return e.call(this,t.TYPE,"Rate")||this}return a(t,e),t.prototype.getOperators=function(){return t.OPERATORS},t.TYPE="rate",t.LT=new o("lt","less than"),t.LTE=new o("lte","less than or equals to"),t.GTE=new o("gte","greater than or equals to"),t.GT=new o("gt","greater than"),t.OPERATORS=[t.LT,t.LTE,t.GTE,t.GT],t}(p);t.RateCondition=u;var g=function(e){function t(){return e.call(this,t.TYPE,"Frequency")||this}return a(t,e),t.prototype.getOperators=function(){return t.OPERATORS},t.TYPE="frequency",t.LT=new o("lt","less than"),t.LTE=new o("lte","less than or equals to"),t.GTE=new o("gte","greater than or equals to"),t.GT=new o("gt","greater than"),t.OPERATORS=[t.LT,t.LTE,t.GTE,t.GT],t}(p);t.FrequencyCondition=g;var h=function(e,t){this.key=e,this.name=t},f=function(e){function t(){return e.call(this,t.TYPE,"Aggregation")||this}return a(t,e),t.prototype.getOperators=function(){return t.OPERATORS},t.TYPE="aggregation",t.LT=new o("lt","less than"),t.LTE=new o("lte","less than or equals to"),t.GTE=new o("gte","greater than or equals to"),t.GT=new o("gt","greater than"),t.OPERATORS=[t.LT,t.LTE,t.GTE,t.GT],t.FUNCTIONS=[new h("count","count"),new h("avg","average"),new h("min","min"),new h("max","max"),new h("p50","50th percentile"),new h("p90","90th percentile"),new h("p95","95th percentile"),new h("p99","99th percentile")],t}(p);t.AggregationCondition=f;var v=function(e){function t(){return e.call(this,t.TYPE,"Threshold Range")||this}return a(t,e),t.prototype.getOperators=function(){return t.OPERATORS},t.TYPE="threshold_range",t.BETWEEN=new o("between","between"),t.OPERATORS=[t.BETWEEN],t}(p);t.ThresholdRangeCondition=v;var y=function(e){function t(){return e.call(this,t.TYPE,"Compare")||this}return a(t,e),t.prototype.getOperators=function(){return t.OPERATORS},t.TYPE="compare",t.LT=new o("lt","less than"),t.LTE=new o("lte","less than or equals to"),t.GTE=new o("gte","greater than or equals to"),t.GT=new o("gt","greater than"),t.OPERATORS=[t.LT,t.LTE,t.GTE,t.GT],t}(p);t.CompareCondition=y;var b=function(e){function t(){return e.call(this,t.TYPE,"String")||this}return a(t,e),t.prototype.getOperators=function(){return t.OPERATORS},t.TYPE="string",t.EQUALS=new o("equals","equals to"),t.NOT_EQUALS=new o("not_equals","not equals to"),t.STARTS_WITH=new o("starts_with","starts with"),t.ENDS_WITH=new o("ends_with","ends with"),t.CONTAINS=new o("contains","contains"),t.MATCHES=new o("matches","matches"),t.OPERATORS=[t.EQUALS,t.NOT_EQUALS,t.STARTS_WITH,t.ENDS_WITH,t.CONTAINS,t.MATCHES],t}(p);t.StringCondition=b;var $=function(e){function t(){return e.call(this,t.TYPE,"String Compare")||this}return a(t,e),t.prototype.getOperators=function(){return t.OPERATORS},t.TYPE="string_compare",t.EQUALS=new o("equals","equals to"),t.NOT_EQUALS=new o("not_equals","not equals to"),t.STARTS_WITH=new o("starts_with","starts with"),t.ENDS_WITH=new o("ends_with","ends with"),t.CONTAINS=new o("contains","contains"),t.MATCHES=new o("matches","matches"),t.OPERATORS=[t.EQUALS,t.NOT_EQUALS,t.STARTS_WITH,t.ENDS_WITH,t.CONTAINS,t.MATCHES],t}(p);t.StringCompareCondition=$;var w=function(){function e(e,t){this.key=e,this.name=t}return e.SECONDS=new e("seconds","Seconds"),e.MINUTES=new e("minutes","Minutes"),e.HOURS=new e("hours","Hours"),e.TIME_UNITS=[e.SECONDS,e.MINUTES,e.HOURS],e}();t.DurationTimeUnit=w;var S=function(){function e(){}return e.findByType=function(t){return e.CONDITIONS.find((function(e){return e.type===t}))},e.THRESHOLD=new m,e.THRESHOLD_RANGE=new v,e.STRING=new b,e.RATE=new u,e.FREQUENCY=new g,e.COMPARE=new y,e.STRING_COMPARE=new $,e.CONDITIONS=[e.THRESHOLD,e.THRESHOLD_RANGE,e.STRING,e.RATE,e.FREQUENCY,e.COMPARE,e.STRING_COMPARE],e}();t.Conditions=S},,,,,function(e,t,i){"use strict";t.__esModule=!0;var n=i(3),a=function(){};t.DocumentationQuery=a;var o,r=function(){};t.ImportPageEntity=r,function(e){e.HEADER="Header",e.TOPFOOTER="TopFooter",e.FOOTER="Footer",e.ASIDE="Aside"}(t.SystemFolderName||(t.SystemFolderName={})),function(e){e[e.SYSTEM_FOLDER=0]="SYSTEM_FOLDER",e[e.SYSTEM_FOLDER_WITH_FOLDERS=1]="SYSTEM_FOLDER_WITH_FOLDERS",e[e.FOLDER_IN_SYSTEM_FOLDER=2]="FOLDER_IN_SYSTEM_FOLDER",e[e.ROOT=3]="ROOT",e[e.FOLDER_IN_FOLDER=4]="FOLDER_IN_FOLDER"}(o=t.FolderSituation||(t.FolderSituation={}));var s=function(){function e(e,t,i){var a=this;this.$http=e,this.$q=t,this.Constants=i,this.url=function(e,t,i){return e?a.Constants.baseURL+"apis/"+e+"/pages/"+(i?"_import":"")+(t||""):a.Constants.baseURL+"portal/pages/"+(i?"_import":"")+(t||"")},this.supportedTypes=function(e){switch(e){case o.ROOT:return["SWAGGER","MARKDOWN","FOLDER"];case o.SYSTEM_FOLDER:return["LINK"];case o.SYSTEM_FOLDER_WITH_FOLDERS:return["FOLDER","LINK"];case o.FOLDER_IN_FOLDER:return["SWAGGER","MARKDOWN","FOLDER"];case o.FOLDER_IN_SYSTEM_FOLDER:return["LINK"]}},this.partialUpdate=function(e,t,i,n){var o={};return o[e]=t,a.$http.patch(a.url(n,i),o)},this.search=function(e,t,i){var o=a.url(t);if(e||i){var r=[];if(e){var s=Object.keys(e);n.forEach(s,(function(t){var i=e[t];void 0!==i&&""!==i&&r.push(t+"="+i)}))}i&&r.push("translated="+i),o+="?"+r.join("&")}return a.$http.get(o)},this.remove=function(e,t){return a.$http.delete(a.url(t,e))},this.create=function(e,t){return a.$http.post(a.url(t),e)},this.update=function(e,t){return a.$http.put(a.url(t,e.id),{name:e.name,description:e.description,order:e.order,content:e.content||"",source:e.source,published:e.published,homepage:e.homepage,configuration:e.configuration,excluded_groups:e.excluded_groups,parentId:e.parentId})},this.fetch=function(e,t){return a.$http.post(a.url(t,e)+"/_fetch",null,{timeout:3e4})},this.fetchAll=function(e){return a.$http.post(a.url(e)+"_fetch",null,{timeout:3e4})}}return e.$inject=["$http","$q","Constants"],e.prototype.get=function(e,t,i,n){if(t){var a=this.url(e,t),o={};return i&&void 0!==i&&(o.portal=i),n&&(o.translated=n),this.$http.get(a,{params:o})}},e.prototype.getApiHomepage=function(e){var t=this.$q.defer(),i=this;return this.$http.get(this.url(e),{params:{homepage:!0}}).then((function(n){n.data.length>0?i.get(e,n.data[0].id,!0).then((function(e){return t.resolve(e)})):t.resolve({})})).catch((function(e){return t.reject(e)})),t.promise},e.prototype.import=function(e,t){var i=new r;return i.type=e.type,i.published=e.published,i.lastContributor=e.lastContributor,i.source=e.source,i.configuration=e.configuration,i.excluded_groups=e.excluded_groups,this.$http.post(this.url(t,null,!0),i,{timeout:3e4})},e}();t.default=s},,,,,,,,,,function(e,t,i){"use strict";t.__esModule=!0,function(e){e[e.API=0]="API",e[e.APPLICATION=1]="APPLICATION",e[e.PORTAL=2]="PORTAL"}(t.Scope||(t.Scope={}))},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,function(e,t){e.exports=' <md-dialog aria-label=confirm-dialog> <md-dialog-content layout-padding> <h4>{{title}}</h4> <p ng-bind-html=msg></p> </md-dialog-content> <md-dialog-actions layout=row> <md-button ng-click=ctrl.cancel()>{{cancelButton}}</md-button> <md-button class="md-raised md-primary" ng-click=ctrl.confirm()>{{confirmButton}}</md-button> </md-dialog-actions> </md-dialog> '},function(e,t,i){"use strict";t.__esModule=!0;var n=i(10),a=i(164),o=i(183),r=function(){function e(e,t,i,n,a,o){this.source=e,this.type=t,this.description=i,this.scopes=n,this.category=a,this.metrics=o}return e.findByScope=function(t){return e.RULES.filter((function(e){return e.scopes.indexOf(t)>-1}))},e.findByScopeAndType=function(t,i){var n;if(i.includes("@")){var a=i.split("@");n=a[0],i=a[1]}return e.RULES.find((function(e){return(!n||e.source===n)&&e.type===i&&-1!==e.scopes.indexOf(t)}))},e.API_METRICS_THRESHOLD=new e("REQUEST","METRICS_SIMPLE_CONDITION","Alert when a metric of the request validates a condition",[n.Scope.API,n.Scope.PLATFORM],"API metrics",a.ApiMetrics.METRICS),e.API_METRICS_AGGREGATION=new e("REQUEST","METRICS_AGGREGATION","Alert when the aggregated value of a request metric rises a threshold",[n.Scope.API,n.Scope.PLATFORM],"API metrics",[a.ApiMetrics.RESPONSE_TIME,a.ApiMetrics.UPSTREAM_RESPONSE_TIME,a.ApiMetrics.REQUEST_CONTENT_LENGTH,a.ApiMetrics.RESPONSE_CONTENT_LENGTH]),e.API_METRICS_RATE=new e("REQUEST","METRICS_RATE","Alert when the rate of a given condition rises a threshold",[n.Scope.API,n.Scope.PLATFORM],"API metrics",a.ApiMetrics.METRICS),e.API_HC_ENDPOINT_STATUS_CHANGED=new e("ENDPOINT_HEALTH_CHECK","API_HC_ENDPOINT_STATUS_CHANGED","Alert when the health status of an endpoint has changed",[n.Scope.API],"Health-check"),e.APPLICATION_QUOTA=new e("REQUEST","APPLICATION_QUOTA","Alert when the quota rises a threshold",[n.Scope.APPLICATION],"Application"),e.NODE_LIFECYCLE_CHANGED=new e("NODE_LIFECYCLE","NODE_LIFECYCLE_CHANGED","Alert when the lifecycle status of a node has changed",[n.Scope.PLATFORM],"Node"),e.NODE_METRICS_THRESHOLD=new e("NODE_HEARTBEAT","METRICS_SIMPLE_CONDITION","Alert when a metric of the node validates a condition",[n.Scope.PLATFORM],"Node",o.NodeMetrics.METRICS),e.NODE_METRICS_AGGREGATION=new e("NODE_HEARTBEAT","METRICS_AGGREGATION","Alert when the aggregated value of a node metric rises a threshold",[n.Scope.PLATFORM],"Node",o.NodeMetrics.METRICS),e.NODE_METRICS_RATE=new e("NODE_HEARTBEAT","METRICS_RATE","Alert when the rate of a given condition rises a threshold",[n.Scope.PLATFORM],"Node",o.NodeMetrics.METRICS),e.NODE_HEALTHCHECK=new e("NODE_HEALTHCHECK","NODE_HEALTHCHECK","Alert on the health status of the node",[n.Scope.PLATFORM],"Node",o.NodeHealthcheckMetrics.METRICS),e.RULES=[e.API_METRICS_THRESHOLD,e.API_METRICS_AGGREGATION,e.API_METRICS_RATE,e.API_HC_ENDPOINT_STATUS_CHANGED,e.APPLICATION_QUOTA,e.NODE_LIFECYCLE_CHANGED,e.NODE_METRICS_THRESHOLD,e.NODE_METRICS_AGGREGATION,e.NODE_METRICS_RATE,e.NODE_HEALTHCHECK],e}();t.Rule=r},function(e,t,i){"use strict";var n,a=this&&this.__extends||(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i])},function(e,t){function i(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(i.prototype=t.prototype,new i)});t.__esModule=!0;var o=i(3),r=i(10),s=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return a(t,e),t.RESPONSE_TIME=new t("response.response_time","Response Time (ms)",[r.ThresholdCondition.TYPE,r.ThresholdRangeCondition.TYPE,r.CompareCondition.TYPE]),t.QUOTA_COUNTER=new t("quota.counter","Quota Counter",[r.CompareCondition.TYPE]),t.UPSTREAM_RESPONSE_TIME=new t("response.upstream_response_time","Upstream Response Time (ms)",[r.ThresholdCondition.TYPE,r.ThresholdRangeCondition.TYPE,r.CompareCondition.TYPE]),t.RESPONSE_STATUS=new t("response.status","Status Code",[r.ThresholdCondition.TYPE,r.ThresholdRangeCondition.TYPE],!0),t.ERROR_KEY=new t("error.key","Error Key",[r.StringCondition.TYPE],!0,void 0,(function(){var e=[];return["API_KEY_MISSING","API_KEY_INVALID","QUOTA_TOO_MANY_REQUESTS","RATE_LIMIT_TOO_MANY_REQUESTS","REQUEST_CONTENT_LIMIT_TOO_LARGE","REQUEST_CONTENT_LIMIT_LENGTH_REQUIRED","REQUEST_TIMEOUT","REQUEST_VALIDATION_INVALID","RESOURCE_FILTERING_FORBIDDEN","RBAC_FORBIDDEN","RBAC_INVALID_USER_ROLES","RBAC_NO_USER_ROLE","OAUTH2_MISSING_SERVER","OAUTH2_MISSING_HEADER","OAUTH2_MISSING_ACCESS_TOKEN","OAUTH2_INVALID_ACCESS_TOKEN","OAUTH2_INVALID_SERVER_RESPONSE","OAUTH2_INSUFFICIENT_SCOPE","OAUTH2_SERVER_UNAVAILABLE","JWT_MISSING_TOKEN","JWT_INVALID_TOKEN","JSON_INVALID_PAYLOAD","JSON_INVALID_FORMAT","GATEWAY_INVALID_REQUEST","GATEWAY_INVALID_RESPONSE","GATEWAY_OAUTH2_ACCESS_DENIED","GATEWAY_OAUTH2_SERVER_ERROR","GATEWAY_OAUTH2_INVALID_CLIENT","GATEWAY_MISSING_SECURITY_PROVIDER","GATEWAY_POLICY_INTERNAL_ERROR","GATEWAY_MISSING_SECURED_REQUEST_PLAN"].forEach((function(t){e.push(new r.Tuple(t,t))})),e})),t.REQUEST_CONTENT_LENGTH=new t("request.content_length","Request Content-Length",[r.ThresholdCondition.TYPE,r.ThresholdRangeCondition.TYPE,r.CompareCondition.TYPE]),t.RESPONSE_CONTENT_LENGTH=new t("response.content_length","Response Content-Length",[r.ThresholdCondition.TYPE,r.ThresholdRangeCondition.TYPE,r.CompareCondition.TYPE]),t.TENANT=new t("tenant","Tenant",[r.StringCondition.TYPE],!0,void 0,(function(e,t,i){var n=[];return i.get("TenantService").list().then((function(e){e.data.forEach((function(e){n.push(new r.Tuple(e.id,e.name))}))})),n})),t.API=new t("api","API",[r.StringCondition.TYPE],!0,[r.Scope.APPLICATION,r.Scope.PLATFORM],(function(e,t,i){var n=[];return 2===e?i.get("ApiService").searchApis().then((function(e){e.data.forEach((function(e){n.push(new r.Tuple(e.id,e.name))}))})):1===e&&i.get("ApplicationService").getSubscribedAPI(t).then((function(e){e.data.forEach((function(e){n.push(new r.Tuple(e.id,e.name))}))})),n})),t.APPLICATION=new t("application","Application",[r.StringCondition.TYPE],!0,[r.Scope.API,r.Scope.PLATFORM],(function(e,t,i){var n=[];return 0===e&&i.get("ApiService").getSubscribers(t).then((function(e){e.data.forEach((function(e){n.push(new r.Tuple(e.id,e.name))}))})),n})),t.PLAN=new t("plan","Plan",[r.StringCondition.TYPE],!0,void 0,(function(e,t,i){var n=[];return 0===e?i.get("ApiService").getPublishedApiPlans(t).then((function(e){e.data.forEach((function(e){n.push(new r.Tuple(e.id,e.name))}))})):1===e&&i.get("ApplicationService").listSubscriptions(t).then((function(e){var t=o.keys(o.keyBy(e.data.data,(function(e){return e.plan})));o.each(t,(function(t){n.push(new r.Tuple(t,e.data.metadata[t].name))}))})),n})),t.METRICS=[t.RESPONSE_TIME,t.UPSTREAM_RESPONSE_TIME,t.RESPONSE_STATUS,t.REQUEST_CONTENT_LENGTH,t.RESPONSE_CONTENT_LENGTH,t.ERROR_KEY,t.API,t.TENANT,t.APPLICATION,t.PLAN],t}(r.Metrics);t.ApiMetrics=s},,,,,,,,,,,,,,,,function(e,t,i){"use strict";t.__esModule=!0;var n=i(3),a=function(){};t.LogsQuery=a;var o=function(){function e(e,t){this.$http=e,this.apisURL=t.baseURL+"apis/",this.Constants=t,this.analyticsHttpTimeout=t.analytics.clientTimeout}return e.$inject=["$http","Constants"],e.prototype.defaultHttpHeaders=function(){return["Accept","Accept-Charset","Accept-Encoding","Accept-Language","Accept-Ranges","Access-Control-Allow-Credentials","Access-Control-Allow-Headers","Access-Control-Allow-Methods","Access-Control-Allow-Origin","Access-Control-Expose-Headers","Access-Control-Max-Age","Access-Control-Request-Headers","Access-Control-Request-Method","Age","Allow","Authorization","Cache-Control","Connection","Content-Disposition","Content-Encoding","Content-ID","Content-Language","Content-Length","Content-Location","Content-MD5","Content-Range","Content-Type","Cookie","Date","ETag","Expires","Expect","Forwarded","From","Host","If-Match","If-Modified-Since","If-None-Match","If-Unmodified-Since","Keep-Alive","Last-Modified","Location","Link","Max-Forwards","MIME-Version","Origin","Pragma","Proxy-Authenticate","Proxy-Authorization","Proxy-Connection","Range","Referer","Retry-After","Server","Set-Cookie","Set-Cookie2","TE","Trailer","Transfer-Encoding","Upgrade","User-Agent","Vary","Via","Warning","WWW-Authenticate","X-Forwarded-For","X-Forwarded-Proto","X-Forwarded-Server","X-Forwarded-Host"]},e.prototype.get=function(e){return this.$http.get(this.apisURL+e)},e.prototype.list=function(e,t,i){var n="";return null!=e&&(n+="?category="+e),void 0!==t&&(n+=""===n?"?":"&",n+="portal="+t),this.$http.get(this.apisURL+n,{},i)},e.prototype.searchApis=function(e,t){return this.$http.post(this.apisURL+"_search?q="+e,{},t)},e.prototype.listTopAPIs=function(){return this.$http.get(this.apisURL+"?top=true")},e.prototype.listByGroup=function(e){return this.$http.get(this.apisURL+"?group="+e)},e.prototype.start=function(e){return this.$http.post(this.apisURL+e.id+"?action=START",{},{headers:{"If-Match":e.etag}})},e.prototype.stop=function(e){return this.$http.post(this.apisURL+e.id+"?action=STOP",{},{headers:{"If-Match":e.etag}})},e.prototype.reload=function(e){return this.$http.post(this.apisURL+"reload/"+e)},e.prototype.update=function(e){return e.proxy&&e.proxy.endpoints&&n.forEach(e.proxy.endpoints,(function(e){!e.proxy||e.proxy.host&&e.proxy.port||delete e.proxy})),this.$http.put(this.apisURL+e.id,{version:e.version,description:e.description,proxy:e.proxy,paths:e.paths,private:e.private,visibility:e.visibility,name:e.name,services:e.services,properties:e.properties,tags:e.tags,picture:e.picture,resources:e.resources,categories:e.categories,groups:e.groups,labels:e.labels,path_mappings:e.path_mappings,response_templates:e.response_templates,lifecycle_state:e.lifecycle_state},{headers:{"If-Match":e.etag}})},e.prototype.delete=function(e){return this.$http.delete(this.apisURL+e)},e.prototype.listPolicies=function(e){return this.$http.get(this.apisURL+e+"/policies")},e.prototype.isAPISynchronized=function(e){return this.$http.get(this.apisURL+e+"/state")},e.prototype.deploy=function(e){return this.$http.post(this.apisURL+e+"/deploy")},e.prototype.rollback=function(e,t){return this.$http.post(this.apisURL+e+"/rollback",t)},e.prototype.import=function(e,t){return this.$http.post(this.apisURL+(e?e+"/":"")+"import",t)},e.prototype.importSwagger=function(e,t){return this.$http.post(this.apisURL+(e?e+"/":"")+"import/swagger",t)},e.prototype.export=function(e,t,i){return this.$http.get(this.apisURL+e+"/export?exclude="+t.join(",")+(i?"&version="+i:""))},e.prototype.verify=function(e,t){return this.$http.post(this.apisURL+"verify",e,t)},e.prototype.importPathMappings=function(e,t){return this.$http.post(this.apisURL+e+"/import-path-mappings?page="+t)},e.prototype.duplicate=function(e,t){return this.$http.post(this.apisURL+e+"/duplicate",t)},e.prototype.analytics=function(e,t){var i=this.apisURL+e+"/analytics?",a=Object.keys(t);return n.forEach(a,(function(e){var n=t[e];void 0!==n&&""!==n&&(i+=e+"="+n+"&")})),this.$http.get(i,{timeout:this.analyticsHttpTimeout})},e.prototype.findLogs=function(e,t){return this.$http.get(this.buildURLWithQuery(this.cloneQuery(t),this.apisURL+e+"/logs?"),{timeout:3e4})},e.prototype.exportLogsAsCSV=function(e,t){return this.$http.get(this.buildURLWithQuery(this.cloneQuery(t),this.apisURL+e+"/logs/export?"),{timeout:3e4})},e.prototype.getLog=function(e,t,i){return this.$http.get(this.apisURL+e+"/logs/"+t+(i?"?timestamp="+i:""))},e.prototype.getMembers=function(e){return this.$http.get(this.apisURL+e+"/members")},e.prototype.addOrUpdateMember=function(e,t){return this.$http.post(""+this.apisURL+e+"/members",t)},e.prototype.deleteMember=function(e,t){return this.$http.delete(this.apisURL+e+"/members?user="+t)},e.prototype.transferOwnership=function(e,t){return this.$http.post(this.apisURL+e+"/members/transfer_ownership",t)},e.prototype.getApiEvents=function(e,t){return this.$http.get(this.apisURL+e+"/events?type="+t)},e.prototype.listPlans=function(e,t){var i=this.$http.get(this.apisURL+e+"/plans");return t&&(i+="?type="+t),i},e.prototype.getApiPlans=function(e,t,i){return this.$http.get(this.apisURL+e+"/plans?status="+(t||"staging,published,closed,deprecated")+(i?"&security="+i:""))},e.prototype.getApiPlan=function(e,t){return this.$http.get(this.apisURL+e+"/plans/"+t)},e.prototype.getPublishedApiPlans=function(e){return this.$http.get(this.apisURL+e+"/plans?status=published")},e.prototype.savePlan=function(e,t){return t.id?this.$http.put(this.apisURL+e+"/plans/"+t.id,{id:t.id,name:t.name,description:t.description,validation:t.validation,policies:t.policies,securityDefinition:t.securityDefinition,characteristics:t.characteristics,order:t.order,paths:t.paths,excluded_groups:t.excluded_groups,comment_required:t.comment_required,comment_message:t.comment_message,tags:t.tags,selection_rule:t.selection_rule}):this.$http.post(this.apisURL+e+"/plans",{name:t.name,description:t.description,api:t.api,validation:t.validation,policies:t.policies,characteristics:t.characteristics,type:t.type,paths:t.paths,security:t.security,securityDefinition:t.securityDefinition,excluded_groups:t.excluded_groups,comment_required:t.comment_required,comment_message:t.comment_message,tags:t.tags,selection_rule:t.selection_rule})},e.prototype.closePlan=function(e,t){return this.$http.post(this.apisURL+e+"/plans/"+t+"/_close")},e.prototype.deletePlan=function(e,t){return this.$http.delete(this.apisURL+e+"/plans/"+t)},e.prototype.publishPlan=function(e,t){return this.$http.post(this.apisURL+e+"/plans/"+t+"/_publish")},e.prototype.depreciatePlan=function(e,t){return this.$http.post(this.apisURL+e+"/plans/"+t+"/_depreciate")},e.prototype.getSubscriptions=function(e,t){var i=this.apisURL+e+"/subscriptions";return void 0!==t&&(i+=t),this.$http.get(i)},e.prototype.exportSubscriptionsAsCSV=function(e,t){var i=this.apisURL+e+"/subscriptions/export";return void 0!==t&&(i+=t),this.$http.get(i,{timeout:3e4})},e.prototype.getSubscribers=function(e){return this.$http.get(this.apisURL+e+"/subscribers")},e.prototype.getSubscription=function(e,t){return this.$http.get(this.apisURL+e+"/subscriptions/"+t)},e.prototype.closeSubscription=function(e,t){return this.$http.post(this.apisURL+e+"/subscriptions/"+t+"/status?status=CLOSED")},e.prototype.pauseSubscription=function(e,t){return this.$http.post(this.apisURL+e+"/subscriptions/"+t+"/status?status=PAUSED")},e.prototype.updateSubscription=function(e,t){return this.$http.put(this.apisURL+e+"/subscriptions/"+t.id,{id:t.id,starting_at:t.starting_at,ending_at:t.ending_at})},e.prototype.resumeSubscription=function(e,t){return this.$http.post(this.apisURL+e+"/subscriptions/"+t+"/status?status=RESUMED")},e.prototype.processSubscription=function(e,t,i){return this.$http.post(this.apisURL+e+"/subscriptions/"+t+"/_process",i)},e.prototype.transferSubscription=function(e,t,i){return this.$http.post(this.apisURL+e+"/subscriptions/"+t+"/_transfer",{id:i.id,plan:i.plan})},e.prototype.getPlanSubscriptions=function(e,t){return this.$http.get(this.apisURL+e+"/subscriptions?plan="+t)},e.prototype.getAllPlanSubscriptions=function(e,t){return this.$http.get(this.apisURL+e+"/subscriptions?plan="+t+"&status=accepted,pending,rejected,closed")},e.prototype.subscribe=function(e,t,i){return this.$http.post(this.apisURL+e+"/subscriptions?plan="+i+"&application="+t,"")},e.prototype.listApiKeys=function(e,t){return this.$http.get(this.apisURL+e+"/subscriptions/"+t+"/keys")},e.prototype.revokeApiKey=function(e,t,i){return this.$http.delete(this.apisURL+e+"/subscriptions/"+t+"/keys/"+i)},e.prototype.renewApiKey=function(e,t){return this.$http.post(this.apisURL+e+"/subscriptions/"+t)},e.prototype.updateApiKey=function(e,t){return this.$http.put(this.apisURL+e+"/keys/"+t.key,t)},e.prototype.listApiMetadata=function(e){return this.$http.get(this.apisURL+e+"/metadata")},e.prototype.getApiMetadata=function(e,t){return this.$http.get(this.apisURL+e+"/metadata/"+t)},e.prototype.createMetadata=function(e,t){return this.$http.post(this.apisURL+e+"/metadata",t)},e.prototype.updateMetadata=function(e,t){return this.$http.put(this.apisURL+e+"/metadata/"+t.key,t)},e.prototype.deleteMetadata=function(e,t){return this.$http.delete(this.apisURL+e+"/metadata/"+t)},e.prototype.getPermissions=function(e){return this.$http.get(this.apisURL+e+"/members/permissions")},e.prototype.apiHealth=function(e,t,i){var n=this.apisURL+e+"/health";return void 0!==t&&(n+="?type="+t),void 0!==i&&(n+="&field="+i),this.$http.get(n,{timeout:3e4})},e.prototype.apiHealthLogs=function(e,t){var i=this.apisURL+e+"/health/logs?",a=Object.keys(t);return n.forEach(a,(function(e){var n=t[e];void 0!==n&&""!==n&&(i+=e+"="+n+"&")})),this.$http.get(i,{timeout:3e4})},e.prototype.getHealthLog=function(e,t){return this.$http.get(this.apisURL+e+"/health/logs/"+t)},e.prototype.apiHealthAverage=function(e,t){var i=this.apisURL+e+"/health/average?",a=Object.keys(t);return n.forEach(a,(function(e){var n=t[e];void 0!==n&&""!==n&&(i+=e+"="+n+"&")})),this.$http.get(i,{timeout:3e4})},e.prototype.isRatingEnabled=function(){return this.Constants.portal.rating.enabled},e.prototype.getApiRatings=function(e,t){return this.$http.get(this.apisURL+e+"/ratings?pageSize=10&pageNumber="+t)},e.prototype.getApiRatingForConnectedUser=function(e){return this.$http.get(this.apisURL+e+"/ratings/current")},e.prototype.getApiRatingSummaryByApi=function(e){return this.$http.get(this.apisURL+e+"/ratings/summary")},e.prototype.createRating=function(e,t){return this.$http.post(this.apisURL+e+"/ratings",t)},e.prototype.createRatingAnswer=function(e,t,i){return this.$http.post(this.apisURL+e+"/ratings/"+t+"/answers",i)},e.prototype.updateRating=function(e,t){return this.$http.put(this.apisURL+e+"/ratings/"+t.id,{rate:t.rate,title:t.title,comment:t.comment})},e.prototype.deleteRating=function(e,t){return this.$http.delete(this.apisURL+e+"/ratings/"+t)},e.prototype.deleteRatingAnswer=function(e,t,i){return this.$http.delete(this.apisURL+e+"/ratings/"+t+"/answers/"+i)},e.prototype.getQualityMetrics=function(e){return this.$http.get(this.apisURL+e+"/quality")},e.prototype.getQualityMetricCssClass=function(e){if(void 0!==e)return e<50?"gravitee-qm-score-bad":e>=50&&e<80?"gravitee-qm-score-medium":"gravitee-qm-score-good"},e.prototype.getPortalHeaders=function(e){return this.$http.get(this.apisURL+e+"/headers")},e.prototype.isEndpointNameAlreadyUsed=function(e,t,i){var a=[];return n.forEach(e.proxy.groups,(function(e){a.push(e.name),n.forEach(e.endpoints,(function(e){a.push(e.name)}))})),n.filter(a,(function(e){return t===e})).length>(i?0:1)},e.prototype.askForReview=function(e,t){return this.$http.post(this.apisURL+e.id+"/reviews?action=ASK",{message:t},{headers:{"If-Match":e.etag}})},e.prototype.acceptReview=function(e,t){return this.$http.post(this.apisURL+e.id+"/reviews?action=ACCEPT",{message:t},{headers:{"If-Match":e.etag}})},e.prototype.rejectReview=function(e,t){return this.$http.post(this.apisURL+e.id+"/reviews?action=REJECT",{message:t},{headers:{"If-Match":e.etag}})},e.prototype.buildURLWithQuery=function(e,t){var i=Object.keys(e);return n.forEach(i,(function(i){var n=e[i];void 0!==n&&""!==n&&(t+=i+"="+n+"&")})),t},e.prototype.cloneQuery=function(e){var t=n.clone(e);return n.startsWith(t.field,"-")?(t.order=!1,t.field=t.field.substring(1)):t.order=!0,t},e}();t.default=o},function(e,t){e.exports=' <md-dialog aria-label=warning-dialog> <md-dialog-content layout-padding> <h4>{{title}}</h4> <div class=gv-page-draft-banner style=background-color:rgba(206,72,68,.1)> <ng-md-icon icon=warning class=gv-warning></ng-md-icon> {{warning}} </div> <p style="margin:35px 0" ng-bind-html=msg></p> <hr style=margin:0 /> <p ng-bind-html=validationMessage></p> <input type=text style=width:100% autofocus ng-model=confirmValue /> </md-dialog-content> <md-dialog-actions layout=row> <md-button ng-click=ctrl.cancel()>Cancel</md-button> <md-button class="md-raised md-warn" ng-disabled="confirmValue!==validationValue" ng-click=ctrl.confirm()>{{confirmButton}}</md-button> </md-dialog-actions> </md-dialog> '},function(e,t,i){"use strict";t.__esModule=!0;var n=function(){},a=function(){function e(){this.data=[],this.metadata={},this.page=new n}return e.prototype.populate=function(e){this.data=e.data,this.metadata=e.metadata,this.page=e.page},e}();t.PagedResult=a},function(e,t,i){"use strict";var n,a=this&&this.__extends||(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i])},function(e,t){function i(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(i.prototype=t.prototype,new i)});t.__esModule=!0;var o=i(10),r=function(){function e(e,t){this.application=e,this.name=t}return e.API_GATEWAY=new e("gio-apim-gateway","API Gateway"),e.MANAGEMENT_API=new e("gio-apim-management","Management API"),e.TYPES=[e.API_GATEWAY,e.MANAGEMENT_API],e}();t.NodeType=r;var s=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return a(t,e),t.NODE_HOSTNAME=new t("node.hostname","Hostname",[o.StringCondition.TYPE],!0),t.NODE_APPLICATION=new t("node.application","Type",[o.StringCondition.TYPE],!0,void 0,(function(e,t,i){var n=[];return r.TYPES.forEach((function(e){n.push(new o.Tuple(e.application,e.name))})),n})),t.OS_CPU_PERCENT=new t("os.cpu.percent","OS CPU (%)",[o.ThresholdCondition.TYPE,o.ThresholdRangeCondition.TYPE,o.CompareCondition.TYPE]),t.PROCESS_CPU_PERCENT=new t("process.cpu.percent","Process CPU (%)",[o.ThresholdCondition.TYPE,o.ThresholdRangeCondition.TYPE,o.CompareCondition.TYPE]),t.PROCESS_CPU_TOTAL=new t("process.cpu.total","Process CPU (total)",[o.ThresholdCondition.TYPE,o.ThresholdRangeCondition.TYPE,o.CompareCondition.TYPE]),t.JVM_MEM_HEAP_USED=new t("jvm.mem.heap.used","JVM Heap used",[o.ThresholdCondition.TYPE,o.ThresholdRangeCondition.TYPE,o.CompareCondition.TYPE]),t.JVM_MEM_HEAP_MAX=new t("jvm.mem.heap.max","JVM Heap max",[o.ThresholdCondition.TYPE,o.ThresholdRangeCondition.TYPE,o.CompareCondition.TYPE]),t.JVM_MEM_HEAP_PERCENT=new t("jvm.mem.heap.percent","JVM Heap (%))",[o.ThresholdCondition.TYPE,o.ThresholdRangeCondition.TYPE,o.CompareCondition.TYPE]),t.METRICS=[t.NODE_HOSTNAME,t.NODE_APPLICATION,t.OS_CPU_PERCENT,t.PROCESS_CPU_PERCENT,t.PROCESS_CPU_TOTAL,t.JVM_MEM_HEAP_USED,t.JVM_MEM_HEAP_MAX,t.JVM_MEM_HEAP_PERCENT],t}(o.Metrics);t.NodeMetrics=s;var l=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return a(t,e),t.NODE_HOSTNAME=new t("node.hostname","Hostname",[o.StringCondition.TYPE],!0),t.NODE_APPLICATION=new t("node.application","Type",[o.StringCondition.TYPE],!0,void 0,(function(e,t,i){var n=[];return r.TYPES.forEach((function(e){n.push(new o.Tuple(e.application,e.name))})),n})),t.NODE_EVENT=new t("node.event","Event",[o.StringCondition.TYPE],!0,void 0,(function(e,t,i){var n=[];return n.push(new o.Tuple("NODE_START","Start")),n.push(new o.Tuple("NODE_STOP","Stop")),n})),t.METRICS=[t.NODE_HOSTNAME,t.NODE_APPLICATION,t.NODE_EVENT],t}(o.Metrics);t.NodeLifecycleMetrics=l;var c=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return a(t,e),t.NODE_HOSTNAME=new t("node.hostname","Hostname",[o.StringCondition.TYPE]),t.NODE_APPLICATION=new t("node.application","Type",[o.StringCondition.TYPE],void 0,(function(e,t,i){var n=[];return r.TYPES.forEach((function(e){n.push(new o.Tuple(e.application,e.name))})),n})),t.NODE_STATUS=new t("node.healthy","Status",[o.StringCondition.TYPE],void 0,(function(e,t,i){var n=[];return n.push(new o.Tuple("true","Healthy")),n.push(new o.Tuple("false","Unhealthy")),n})),t.METRICS=[t.NODE_HOSTNAME,t.NODE_APPLICATION,t.NODE_STATUS],t}(o.Metrics);t.NodeHealthcheckMetrics=c},,,,,,,,,,,,,,,function(e,t,i){var n={"./af":28,"./af.js":28,"./ar":29,"./ar-dz":30,"./ar-dz.js":30,"./ar-kw":31,"./ar-kw.js":31,"./ar-ly":32,"./ar-ly.js":32,"./ar-ma":33,"./ar-ma.js":33,"./ar-sa":34,"./ar-sa.js":34,"./ar-tn":35,"./ar-tn.js":35,"./ar.js":29,"./az":36,"./az.js":36,"./be":37,"./be.js":37,"./bg":38,"./bg.js":38,"./bm":39,"./bm.js":39,"./bn":40,"./bn.js":40,"./bo":41,"./bo.js":41,"./br":42,"./br.js":42,"./bs":43,"./bs.js":43,"./ca":44,"./ca.js":44,"./cs":45,"./cs.js":45,"./cv":46,"./cv.js":46,"./cy":47,"./cy.js":47,"./da":48,"./da.js":48,"./de":49,"./de-at":50,"./de-at.js":50,"./de-ch":51,"./de-ch.js":51,"./de.js":49,"./dv":52,"./dv.js":52,"./el":53,"./el.js":53,"./en-au":54,"./en-au.js":54,"./en-ca":55,"./en-ca.js":55,"./en-gb":56,"./en-gb.js":56,"./en-ie":57,"./en-ie.js":57,"./en-il":58,"./en-il.js":58,"./en-in":59,"./en-in.js":59,"./en-nz":60,"./en-nz.js":60,"./en-sg":61,"./en-sg.js":61,"./eo":62,"./eo.js":62,"./es":63,"./es-do":64,"./es-do.js":64,"./es-us":65,"./es-us.js":65,"./es.js":63,"./et":66,"./et.js":66,"./eu":67,"./eu.js":67,"./fa":68,"./fa.js":68,"./fi":69,"./fi.js":69,"./fil":70,"./fil.js":70,"./fo":71,"./fo.js":71,"./fr":72,"./fr-ca":73,"./fr-ca.js":73,"./fr-ch":74,"./fr-ch.js":74,"./fr.js":72,"./fy":75,"./fy.js":75,"./ga":76,"./ga.js":76,"./gd":77,"./gd.js":77,"./gl":78,"./gl.js":78,"./gom-deva":79,"./gom-deva.js":79,"./gom-latn":80,"./gom-latn.js":80,"./gu":81,"./gu.js":81,"./he":82,"./he.js":82,"./hi":83,"./hi.js":83,"./hr":84,"./hr.js":84,"./hu":85,"./hu.js":85,"./hy-am":86,"./hy-am.js":86,"./id":87,"./id.js":87,"./is":88,"./is.js":88,"./it":89,"./it-ch":90,"./it-ch.js":90,"./it.js":89,"./ja":91,"./ja.js":91,"./jv":92,"./jv.js":92,"./ka":93,"./ka.js":93,"./kk":94,"./kk.js":94,"./km":95,"./km.js":95,"./kn":96,"./kn.js":96,"./ko":97,"./ko.js":97,"./ku":98,"./ku.js":98,"./ky":99,"./ky.js":99,"./lb":100,"./lb.js":100,"./lo":101,"./lo.js":101,"./lt":102,"./lt.js":102,"./lv":103,"./lv.js":103,"./me":104,"./me.js":104,"./mi":105,"./mi.js":105,"./mk":106,"./mk.js":106,"./ml":107,"./ml.js":107,"./mn":108,"./mn.js":108,"./mr":109,"./mr.js":109,"./ms":110,"./ms-my":111,"./ms-my.js":111,"./ms.js":110,"./mt":112,"./mt.js":112,"./my":113,"./my.js":113,"./nb":114,"./nb.js":114,"./ne":115,"./ne.js":115,"./nl":116,"./nl-be":117,"./nl-be.js":117,"./nl.js":116,"./nn":118,"./nn.js":118,"./oc-lnc":119,"./oc-lnc.js":119,"./pa-in":120,"./pa-in.js":120,"./pl":121,"./pl.js":121,"./pt":122,"./pt-br":123,"./pt-br.js":123,"./pt.js":122,"./ro":124,"./ro.js":124,"./ru":125,"./ru.js":125,"./sd":126,"./sd.js":126,"./se":127,"./se.js":127,"./si":128,"./si.js":128,"./sk":129,"./sk.js":129,"./sl":130,"./sl.js":130,"./sq":131,"./sq.js":131,"./sr":132,"./sr-cyrl":133,"./sr-cyrl.js":133,"./sr.js":132,"./ss":134,"./ss.js":134,"./sv":135,"./sv.js":135,"./sw":136,"./sw.js":136,"./ta":137,"./ta.js":137,"./te":138,"./te.js":138,"./tet":139,"./tet.js":139,"./tg":140,"./tg.js":140,"./th":141,"./th.js":141,"./tl-ph":142,"./tl-ph.js":142,"./tlh":143,"./tlh.js":143,"./tr":144,"./tr.js":144,"./tzl":145,"./tzl.js":145,"./tzm":146,"./tzm-latn":147,"./tzm-latn.js":147,"./tzm.js":146,"./ug-cn":148,"./ug-cn.js":148,"./uk":149,"./uk.js":149,"./ur":150,"./ur.js":150,"./uz":151,"./uz-latn":152,"./uz-latn.js":152,"./uz.js":151,"./vi":153,"./vi.js":153,"./x-pseudo":154,"./x-pseudo.js":154,"./yo":155,"./yo.js":155,"./zh-cn":156,"./zh-cn.js":156,"./zh-hk":157,"./zh-hk.js":157,"./zh-mo":158,"./zh-mo.js":158,"./zh-tw":159,"./zh-tw.js":159};function a(e){var t=o(e);return i(t)}function o(e){if(!i.o(n,e)){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}return n[e]}a.keys=function(){return Object.keys(n)},a.resolve=o,e.exports=a,a.id=198},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,function(e,t,i){"use strict";t.__esModule=!0;var n=i(3),a=function(){function e(e,t,i,a,o,r,s,l,c,d,p,m,u,g){var h=this;this.ApiService=e,this.$mdDialog=t,this.$scope=i,this.$state=a,this.Constants=o,this.Build=r,this.resolvedApis=s,this.UserService=l,this.graviteeUser=c,this.$filter=d,this.$transitions=p,this.$stateParams=m,this.$timeout=u,this.$q=g,this.query="",this.order="",this.loadMore=function(e,t){if(!(t&&(h.apisProvider&&h.apisProvider.length)===(h.apis&&h.apis.length)&&0===n.difference(n.map(h.apisProvider,"id"),n.map(h.apis,"id")).length)&&h.apisProvider){var i=n.clone(h.apisProvider);i=n.sortBy(i,n.replace(e,"-","")),n.startsWith(e,"-")&&i.reverse();var a=h.apis?h.apis.length:0;h.apis=n.take(i,20+a),n.forEach(h.apis,(function(e){n.isUndefined(h.syncStatus[e.id])&&h.ApiService.isAPISynchronized(e.id).then((function(t){h.syncStatus[e.id]=t.data.is_synchronized})),h.isQualityDisplayed&&n.isUndefined(h.qualityScores[e.id])&&h.ApiService.getQualityMetrics(e.id).then((function(t){h.qualityScores[e.id]=n.floor(100*t.data.score)}))}))}},this.$q=g,this.graviteeUser=c,this.graviteeUIVersion=r.version,this.portalTitle=o.portal.title,this.query=a.params.q,this.apisProvider=s.data,this.apisProvider.length||l.current(),this.apisScrollAreaHeight="apis.list"===this.$state.current.name?195:90,this.isAPIsHome=this.$state.includes("apis"),this.selectedApis=[],this.syncStatus=[],this.qualityScores=[],this.isQualityDisplayed=o.apiQualityMetrics&&o.apiQualityMetrics.enabled,i.$watch("$ctrl.query",(function(e,t){u.cancel(h.timer),h.timer=u((function(){void 0!==e&&e!==t&&h.search()}),300)})),this.canceler=g.defer()}return e.$inject=["ApiService","$mdDialog","$scope","$state","Constants","Build","resolvedApis","UserService","graviteeUser","$filter","$transitions","$stateParams","$timeout","$q"],e.prototype.search=function(){var e=this;this.$timeout.cancel(this.timer),this.$scope.searchResult=!0,this.$scope.apisLoading=!0,this.canceler.resolve(),this.canceler=this.$q.defer();var t={timeout:this.canceler.promise};this.$state.transitionTo(this.$state.current,{q:this.query},{notify:!1}),(this.query?this.ApiService.searchApis(this.query,t):this.ApiService.list(null,!1,t)).then((function(t){e.apisProvider=t.data,e.loadMore(e.order,!1),e.$scope.apisLoading=!1}))},e.prototype.isSearchResult=function(){return void 0!==this.$state.params.q||this.$scope.searchResult},e.prototype.update=function(e){var t=this;this.ApiService.update(e).then((function(){t.$scope.formApi.$setPristine(),t.NotificationService.show("Api updated with success")}))},e.prototype.getVisibilityIcon=function(e){switch(e.visibility){case"public":return"public";case"private":return"lock"}},e.prototype.getVisibility=function(e){switch(e.visibility){case"public":return"Public";case"private":return"Private"}},e.prototype.showImportDialog=function(){var e=this;this.$mdDialog.show({controller:"DialogApiImportController",controllerAs:"dialogApiImportCtrl",template:i(245),locals:{apiId:""},clickOutsideToClose:!0}).then((function(t){t&&e.$state.go("apis.admin.general",{apiId:t.data.id},{reload:!0})}))},e.prototype.getSubMessage=function(){return this.graviteeUser.id?this.UserService.isUserHasPermissions(["environment-api-c"])?"Start creating an API":"":"Login to get access to more APIs"},e.prototype.getQualityMetricCssClass=function(e){return this.ApiService.getQualityMetricCssClass(e)},e.prototype.getWorkflowStateLabel=function(e){if("deprecated"===e.lifecycle_state)return"DEPRECATED";switch(e.workflow_state){case"draft":return"DRAFT";case"in_review":return"IN REVIEW";case"request_for_changes":return"NEED CHANGES";case"review_ok":return""}},e.prototype.getWorkflowStateColor=function(e){if("deprecated"===e.lifecycle_state)return"#d73a49";switch(e.workflow_state){case"draft":return"#54a3ff";case"in_review":case"request_for_changes":return"#d73a49"}},e.prototype.getEntrypoints=function(e){return n.uniq(n.map(e.virtual_hosts,"path")).join(" - ")},e}();t.ApisController=a,t.default=a},function(e,t){e.exports=" <md-dialog style=min-width:30%;min-height:59%> <gv-api-import cancel-action=hide() api-id=apiId policies=policies></gv-api-import> </md-dialog> "},function(e,t){e.exports=' <md-dialog aria-label="Edit policy"> <form name=formApi ng-submit=editPolicyDialogCtrl.save() novalidate> <md-dialog-content layout-padding> <h4>Policy Description</h4> <md-input-container class=md-block> <textarea aria-label="Policy description" ng-model=description required md-maxlength=500 rows=2 cols=50></textarea> </md-input-container> </md-dialog-content> <md-dialog-actions layout=row> <md-button ng-click=editPolicyDialogCtrl.hide()> Cancel </md-button> <md-button type=submit class="md-raised md-primary" ng-disabled=formApi.$invalid> Update </md-button> </md-dialog-actions> </form> </md-dialog> '},function(e,t,i){"use strict";function n(e,t,i){e.path=i,this.hide=function(){t.hide()},this.save=function(){t.hide(e.path)}}n.$inject=["$scope","$mdDialog","pathMapping"],t.__esModule=!0,t.default=n},function(e,t,i){"use strict";function n(e,t,i){e.docs=i,this.hide=function(){t.hide()},this.save=function(){t.hide(e.selectedDoc)}}n.$inject=["$scope","$mdDialog","docs"],t.__esModule=!0,t.default=n},,function(e,t){e.exports=' <md-dialog aria-label="Set expiration date for API Key"> <form name=formExpireSubscriptionProperty ng-submit=dialogApiKeyExpirationController.save() novalidate> <md-dialog-content layout-padding> <h4>Expire API Key</h4> <div ng-cloak class=md-inline-form> <md-input-container style=margin-bottom:0> <label>New Expiration Date</label> <input moment-picker=$ctrl.endDateFormated locale=en-gb format="YYYY-MM-DD HH:mm" min-date=minDate max-date=maxDate ng-model=expiration ng-model-options="{ updateOn: \'blur\' }"> </md-input-container> <md-subheader class=md-warn ng-bind=error></md-subheader> </div> </md-dialog-content> <md-dialog-actions layout=row> <md-button ng-click=dialogApiKeyExpirationController.hide()>Cancel</md-button> <md-button type=submit class="md-raised md-primary" ng-disabled=formExpireSubscriptionProperty.$invalid>Expire</md-button> </md-dialog-actions> </form> </md-dialog> '},function(e,t,i){"use strict";t.__esModule=!0;var n=i(3),a=function(){};t.LogsQuery=a;var o=function(){function e(e,t){this.$http=e,this.applicationsURL=t.baseURL+"applications/",this.analyticsHttpTimeout=t.analyticsHttpTimeout}return e.$inject=["$http","Constants"],e.prototype.get=function(e){return this.$http.get(this.applicationsURL+e)},e.prototype.getApplicationType=function(e){return this.$http.get(this.applicationsURL+e+"/configuration")},e.prototype.getMembers=function(e){return this.$http.get(this.applicationsURL+e+"/members")},e.prototype.addOrUpdateMember=function(e,t){return this.$http.post(""+this.applicationsURL+e+"/members",t)},e.prototype.deleteMember=function(e,t){return this.$http.delete(this.applicationsURL+e+"/members?user="+t)},e.prototype.transferOwnership=function(e,t){return this.$http.post(this.applicationsURL+e+"/members/transfer_ownership",t)},e.prototype.list=function(){return this.$http.get(this.applicationsURL)},e.prototype.listByGroup=function(e){return this.$http.get(this.applicationsURL+"?group="+e)},e.prototype.create=function(e){return this.$http.post(this.applicationsURL,e)},e.prototype.update=function(e){return this.$http.put(this.applicationsURL+e.id,{name:e.name,description:e.description,groups:e.groups,settings:e.settings,picture:e.picture})},e.prototype.delete=function(e){return this.$http.delete(this.applicationsURL+e)},e.prototype.search=function(e){return this.$http.get(this.applicationsURL+"?query="+e)},e.prototype.subscribe=function(e,t,i){var n;return n=i?{request:i}:"",this.$http.post(this.subscriptionsURL(e)+"?plan="+t,n)},e.prototype.listSubscriptions=function(e,t){var i=this.subscriptionsURL(e);return void 0!==t&&(i+=t),this.$http.get(i)},e.prototype.getSubscribedAPI=function(e){return this.$http.get(this.applicationsURL+e+"/subscribed")},e.prototype.getSubscription=function(e,t){return this.$http.get(this.subscriptionsURL(e)+t)},e.prototype.closeSubscription=function(e,t){return this.$http.delete(this.subscriptionsURL(e)+t)},e.prototype.listApiKeys=function(e,t){return this.$http.get(this.subscriptionsURL(e)+t+"/keys")},e.prototype.renewApiKey=function(e,t){return this.$http.post(this.subscriptionsURL(e)+t,"")},e.prototype.revokeApiKey=function(e,t,i){return this.$http.delete(this.subscriptionsURL(e)+t+"/keys/"+i)},e.prototype.analytics=function(e,t){var i=this.applicationsURL+e+"/analytics?",a=Object.keys(t);return n.forEach(a,(function(e){var n=t[e];void 0!==n&&""!==n&&(i+=e+"="+n+"&")})),this.$http.get(i,{timeout:this.analyticsHttpTimeout})},e.prototype.findLogs=function(e,t){return this.$http.get(this.buildURLWithQuery(this.cloneQuery(t),this.applicationsURL+e+"/logs?"),{timeout:3e4})},e.prototype.exportLogsAsCSV=function(e,t){return this.$http.get(this.buildURLWithQuery(this.cloneQuery(t),this.applicationsURL+e+"/logs/export?"),{timeout:3e4})},e.prototype.getLog=function(e,t,i){return this.$http.get(this.applicationsURL+e+"/logs/"+t+(i?"?timestamp="+i:""))},e.prototype.getPermissions=function(e){return this.$http.get(this.applicationsURL+e+"/members/permissions")},e.prototype.renewClientSecret=function(e){return this.$http.post(""+this.applicationsURL+e+"/renew_secret",{})},e.prototype.getType=function(e){var t="Simple";if(e.settings)if(e.settings.app&&e.settings.app.type)t=e.settings.app.type;else if(e.settings.oauth)switch(e.settings.oauth.application_type){case"backend_to_backend":t="Backend to backend";break;case"browser":t="Browser";break;case"native":t="Native";break;case"web":t="Web"}return t},e.prototype.subscriptionsURL=function(e){return""+this.applicationsURL+e+"/subscriptions/"},e.prototype.buildURLWithQuery=function(e,t){var i=Object.keys(e);return n.forEach(i,(function(i){var n=e[i];void 0!==n&&""!==n&&(t+=i+"="+n+"&")})),t},e.prototype.cloneQuery=function(e){var t=n.clone(e);return n.startsWith(t.field,"-")?(t.order=!1,t.field=t.field.substring(1)):t.order=!0,t},e}();t.default=o},function(e,t,i){"use strict";s.$inject=["$scope","$mdDialog","plans","subscribers"],t.__esModule=!0;var n=i(3),a=i(1),o=function(e,t,i){this.title=e,this.id=t,this.statement=i};t.ConditionType=o;var r=function(){function e(e,t,i){this.type=e,this.operator=t,this.value=i}return e.prototype.toCondition=function(){if("logging-duration"===this.type.id){var e=a().add(a.duration(this.param1,this.param2));return this.type.statement+" <= "+e+"l"}if("logging-end-date"===this.type.id){e=this.param1;return this.type.statement+" <= "+e+"l"}return"request-header"!==this.type.id&&"request-param"!==this.type.id?this.type.statement+" "+this.operator+" '"+this.value+"'":this.type.statement+"['"+this.param1+"'] != null && "+this.type.statement+"['"+this.param1+"'][0] "+this.operator+" '"+this.value+"'"},e}();function s(e,t,i,a){e.selectedType=null,e.plans=i,e.subscribers=a,e.methods=["GET","POST","PUT","DELETE","PATCH","HEAD","OPTIONS"],e.timeUnits=["SECONDS","MINUTES","HOURS","DAYS"],e.types=[o],e.conditions=[],e.types.push(new o("Plan","plan","#context.plan")),e.types.push(new o("Application","application","#context.application")),e.types.push(new o("Request header","request-header","#request.headers")),e.types.push(new o("Request query-parameter","request-param","#request.params")),e.types.push(new o("HTTP Method","request-method","#request.method")),e.types.push(new o("Request IP","request-remote-address","#request.remoteAddress")),e.types.push(new o("Duration","logging-duration","#request.timestamp")),e.types.push(new o("End date","logging-end-date","#request.timestamp")),this.addCondition=function(){var t=n.find(e.types,{id:e.selectedType});void 0!==t&&e.conditions.push(new r(t,"==","")),e.selectedType=null},this.removeCondition=function(t){e.conditions.splice(t,1)},this.hide=function(){t.hide()},this.save=function(){var i=n(e.conditions).map((function(e){return e.toCondition()})).join(" && ");t.hide(i)}}t.Condition=r,t.default=s},function(e,t,i){"use strict";t.__esModule=!0;var n=i(3),a=function(){};t.LogsQuery=a;var o=function(){function e(e,t,i){this.$http=e,this.$stateParams=i,this.platformUrl=t.baseURL+"platform",this.analyticsURL=t.baseURL+"platform/analytics",this.analyticsHttpTimeout=t.analytics.clientTimeout}return e.$inject=["$http","Constants","$stateParams"],e.prototype.analytics=function(e){var t=this.analyticsURL+"?",i=Object.keys(e);return n.forEach(i,(function(i){var n=e[i];void 0!==n&&(t+=i+"="+n+"&")})),this.$http.get(t,{timeout:this.analyticsHttpTimeout})},e.prototype.findLogs=function(e){return this.$http.get(this.buildURLWithQuery(this.cloneQuery(e),this.platformUrl+"/logs?"),{timeout:3e4})},e.prototype.exportLogsAsCSV=function(e){return this.$http.get(this.buildURLWithQuery(this.cloneQuery(e),this.platformUrl+"/logs/export?"),{timeout:3e4})},e.prototype.getLog=function(e,t){return this.$http.get(this.platformUrl+"/logs/"+e+(t?"?timestamp="+t:""))},e.prototype.getQueryFilters=function(){var e=this,t=this.$stateParams.q;if(t){var i={};return t.split(/\s(OR|AND)\s/).forEach((function(t){if(t.includes(":")){var n=t.split(":"),a=e.cleanParam(n[0]),o=e.cleanParam(n[1]);i[a]?i[a].push(o):i[a]=[o]}})),i}return null},e.prototype.buildQueryParam=function(e,t){return e="body"===t?"*"+e+"*":e,e=(e='\\"'+(e="uri"===t?e+"*":e)+'\\"').replace(/\//g,"\\\\/")},e.prototype.buildURLWithQuery=function(e,t){var i=Object.keys(e);return n.forEach(i,(function(i){var n=e[i];void 0!==n&&""!==n&&(t+=i+"="+n+"&")})),t},e.prototype.cloneQuery=function(e){var t=n.clone(e);return n.startsWith(t.field,"-")?(t.order=!1,t.field=t.field.substring(1)):t.order=!0,t},e.prototype.cleanParam=function(e){return e.replace("%20"," ").replace(/[()]/g,"").replace(/[\\\"]/g,"")},e}();t.default=o},function(e,t){e.exports=" <md-dialog aria-label=\"{{$ctrl.metadata.key?'Update':'New'}} metadata\"> <form name=formMetadata ng-submit=$ctrl.save() novalidate> <md-dialog-content layout-padding> <h4>{{$ctrl.metadata.key?'Update':'New'}} metadata</h4> <div layout=column> <div layout=row> <md-input-container ng-if=$ctrl.metadata.key> <label>Key</label> <input ng-model=$ctrl.metadata.key disabled=disabled> </md-input-container> <md-input-container flex> <label>Name</label> <input ng-model=$ctrl.metadata.name required autofocus> </md-input-container> </div> <md-input-container> <label>Format</label> <md-select ng-model=$ctrl.metadata.format> <md-option ng-repeat=\"metadataFormat in $ctrl.metadataFormats\" ng-value=metadataFormat> {{metadataFormat}} </md-option> </md-select> </md-input-container> <div layout=row> <md-input-container ng-if=\"$ctrl.metadata.format === 'boolean'\" flex> <md-checkbox ng-model=$ctrl.metadata.value gv-metadata-format=$ctrl.metadata.format ng-pattern=pattern ng-true-value=\"'true'\" ng-false-value=\"'false'\" gv-metadata-validator> Default value </md-checkbox> </md-input-container> <md-input-container ng-if=\"$ctrl.metadata.format === 'date'\" flex> <label>Default value</label> <md-datepicker ng-model=$ctrl.metadata.value gv-metadata-format=$ctrl.metadata.format ng-pattern=pattern></md-datepicker> </md-input-container> <md-input-container ng-if=\"$ctrl.metadata.format !== 'boolean' && $ctrl.metadata.format !== 'date'\" flex> <label>Default value</label> <input type=text ng-model=$ctrl.metadata.value gv-metadata-format=$ctrl.metadata.format ng-pattern=pattern gv-metadata-validator> </md-input-container> </div> </div> </md-dialog-content> <md-dialog-actions layout=row> <md-button ng-click=$ctrl.cancel()> Cancel </md-button> <md-button type=submit class=\"md-raised md-primary\" ng-disabled=formMetadata.$invalid> {{$ctrl.metadata.key?'Update':'Create'}} metadata </md-button> </md-dialog-actions> </form> </md-dialog> "},function(e,t){e.exports=" <md-dialog aria-label=\"{{$ctrl.metadata.key?'Update':'Create'}} API metadata\"> <form name=formMetadata ng-submit=$ctrl.save() novalidate> <md-dialog-content layout-padding> <h4>{{$ctrl.metadata.key?'Update':'Create'}} API metadata</h4> <div layout=column> <div layout=row> <md-input-container ng-if=$ctrl.metadata.key> <label>Key</label> <input ng-model=$ctrl.metadata.key disabled=disabled> </md-input-container> <md-input-container flex> <label>Name</label> <input ng-model=$ctrl.metadata.name md-autofocus=\"{{$ctrl.metadata.key?'false':'true'}}\" required ng-disabled=\"$ctrl.metadata.key && !$ctrl.metadata.apiId\"> </md-input-container> </div> <md-input-container> <label>Format</label> <md-select ng-model=$ctrl.metadata.format ng-disabled=\"$ctrl.metadata.key && !$ctrl.metadata.apiId\"> <md-option ng-repeat=\"metadataFormat in $ctrl.metadataFormats\" ng-value=metadataFormat> {{metadataFormat}} </md-option> </md-select> </md-input-container> <div layout=row> <md-input-container ng-if=\"$ctrl.metadata.format === 'boolean'\" flex> <md-checkbox ng-model=$ctrl.metadata.value md-autofocus=\"{{$ctrl.metadata.key && !$ctrl.metadata.apiId?'true':'false'}}\" gv-metadata-format=$ctrl.metadata.format ng-pattern=pattern ng-true-value=\"'true'\" ng-false-value=\"'false'\" gv-metadata-validator> Value </md-checkbox> </md-input-container> <md-input-container ng-if=\"$ctrl.metadata.format === 'date'\" flex> <label>Value</label> <md-datepicker ng-model=$ctrl.metadata.value md-autofocus=\"{{$ctrl.metadata.key && !$ctrl.metadata.apiId?'true':'false'}}\" gv-metadata-format=$ctrl.metadata.format ng-pattern=pattern></md-datepicker> </md-input-container> <md-input-container ng-if=\"$ctrl.metadata.format !== 'boolean' && $ctrl.metadata.format !== 'date'\" flex> <label>Value</label> <input type=text ng-model=$ctrl.metadata.value placeholder={{$ctrl.metadata.defaultValue}} md-autofocus=\"{{$ctrl.metadata.key && !$ctrl.metadata.apiId?'true':'false'}}\" gv-metadata-format=$ctrl.metadata.format ng-pattern=pattern gv-metadata-validator> <div class=hint>Supports Freemarker</div> </md-input-container> <md-input-container ng-if=\"$ctrl.metadata.key && !$ctrl.metadata.apiId && $ctrl.metadata.format === 'boolean'\" flex> <md-checkbox ng-model=$ctrl.metadata.defaultValue gv-metadata-format=$ctrl.metadata.format ng-pattern=pattern ng-true-value=\"'true'\" ng-false-value=\"'false'\" gv-metadata-validator disabled=disabled> Default value </md-checkbox> </md-input-container> <md-input-container ng-if=\"$ctrl.metadata.key && !$ctrl.metadata.apiId && $ctrl.metadata.format === 'date'\"> <label>Default value</label> <md-datepicker ng-model=$ctrl.metadata.defaultValue gv-metadata-format=$ctrl.metadata.format ng-pattern=pattern disabled=disabled></md-datepicker> </md-input-container> <md-input-container ng-if=\"$ctrl.metadata.key && !$ctrl.metadata.apiId && $ctrl.metadata.format !== 'boolean' && $ctrl.metadata.format !== 'date'\"> <label>Default value</label> <input type=text ng-model=$ctrl.metadata.defaultValue gv-metadata-format=$ctrl.metadata.format ng-pattern=pattern gv-metadata-validator disabled=disabled> </md-input-container> </div> </div> </md-dialog-content> <md-dialog-actions layout=row> <md-button ng-click=$ctrl.cancel()> Cancel </md-button> <md-button type=submit class=\"md-raised md-primary\" ng-disabled=formMetadata.$invalid> {{$ctrl.metadata.key?'Update':'Create'}} </md-button> </md-dialog-actions> </form> </md-dialog> "},function(e,t){e.exports=' <div class="gv-forms gv-forms-fluid" layout=column> <h1>Metadata</h1> <div class=gv-form> <h2></h2> <div class=gv-form-content layout=column> <md-table-container> <table md-table class=gv-table-dense ng-init="metadataOrder = \'key\'"> <thead md-head md-order=metadataOrder> <tr md-row> <th md-column md-order-by=key>Key</th> <th md-column md-order-by=name>Name</th> <th md-column md-order-by=format>Format</th> <th md-column md-order-by="value || defaultValue">Value</th> <th md-column md-order-by=defaultValue>Default value</th> <th md-column width=64px nowrap=nowrap></th> </tr> </thead> <tbody md-body> <tr md-row ng-repeat="metadata in apiMetadataCtrl.metadata | orderBy: metadataOrder"> <td md-cell><a ng-click=apiMetadataCtrl.updateMetadata(metadata)>{{metadata.key}}</a></td> <td md-cell>{{metadata.name}}</td> <td md-cell>{{metadata.format}}</td> <td md-cell> <span ng-if=metadata.value>{{metadata.value}}</span> <i ng-if=!metadata.value style=color:silver>{{metadata.defaultValue}}</i> </td> <td md-cell>{{metadata.defaultValue}}</td> <td md-cell> <div layout=row layout-align="end end"> <ng-md-icon permission permission-only="\'api-metadata-d\'" ng-if=metadata.apiId icon=delete ng-click=apiMetadataCtrl.deleteMetadata(metadata) style="padding:0 10px"> <md-tooltip md-direction=top md-visible=false>Delete API metadata</md-tooltip> </ng-md-icon> </div> </td> </tr> </tbody> </table> </md-table-container> </div> </div> </div> <md-fab-speed-dial permission permission-only="\'api-metadata-c\'" md-open=false class="md-scale md-fab-bottom-right" ng-class="{\'md-fab-bottom-right md-fab-scrollable\' : apiMetadataCtrl.metadata.length > 0, \'gv-help-displayed\': apiMetadataCtrl.$rootScope.helpDisplayed}"> <md-fab-trigger> <md-button aria-label="Add API metadata" class="md-fab md-success" ng-click=apiMetadataCtrl.newMetadata()> <md-tooltip md-direction=top md-visible=false>Add a new API metadata</md-tooltip> <ng-md-icon icon=add></ng-md-icon> </md-button> </md-fab-trigger> </md-fab-speed-dial> '},function(e,t){e.exports=' <div class="gv-forms gv-forms-fluid" layout=column> <div class=gv-forms-header> <h1>Health-check Configuration</h1> <a ng-if="healthCheckCtrl.endpoint !== undefined" ng-click=healthCheckCtrl.backToEndpointConfiguration()>Back to endpoint configuration</a> <a ng-if="healthCheckCtrl.endpoint === undefined" ng-click=healthCheckCtrl.backToHealthcheck()>Back to Health-check</a> </div> <div class=gv-form> <h2></h2> <div class=gv-form-content layout=column> <div layout=row flex> <section layout=column flex=70 class=configuration-card> <md-subheader>General</md-subheader> <md-content> <md-input-container class=md-block> <md-checkbox ng-model=healthCheckCtrl.healthcheck.enabled aria-label="Enable health-check" class="md-warn md-align-top-left" flex> Enable health-check <span class=ipsum ng-if="healthCheckCtrl.endpoint === undefined"> By enabling health-check, all non-backup endpoints will be checked except if health-check is disabled at endpoint level.</span> <span class=ipsum ng-if="healthCheckCtrl.endpoint !== undefined"> Enable / disable health-check for this endpoint.</span> </md-checkbox> </md-input-container> <md-input-container class=md-block ng-if="healthCheckCtrl.endpoint !== undefined"> <md-checkbox ng-model=healthCheckCtrl.healthcheck.inherit ng-disabled=!healthCheckCtrl.rootHealthcheckEnabled aria-label="Inherit health-check" class=md-align-top-left flex> Inherit configuration <span class=ipsum ng-if=healthCheckCtrl.rootHealthcheckEnabled>Inherit health-check configuration from global health-check configuration.</span> <span class=ipsum ng-if=!healthCheckCtrl.rootHealthcheckEnabled>You must enable a global health-check to be able to inherit from it.</span> </md-checkbox> </md-input-container> </md-content> <div ng-show="!healthCheckCtrl.healthcheck.inherit && healthCheckCtrl.healthcheck.enabled === true"> <md-subheader>Trigger</md-subheader> <md-content> <form name=formApiHealthCheckTrigger novalidate layou=column> <md-input-container flex class=md-block> <label>Interval</label> <input required ng-model=healthCheckCtrl.healthcheck.trigger.rate autofocus type=number min=1 required> <div class=hint>Interval between each health-check.</div> </md-input-container> <md-input-container flex class=md-block> <label>Time Unit</label> <md-select ng-model=healthCheckCtrl.healthcheck.trigger.unit placeholder="Time unit" required> <md-option ng-value=timeUnit ng-repeat="timeUnit in healthCheckCtrl.timeUnits">{{timeUnit}}</md-option> </md-select> <div class=hint>Time-unit for fixed rate trigger.</div> </md-input-container> </form> </md-content> <md-subheader>Request</md-subheader> <md-content> <form name=formApiHealthCheckRequest novalidate layout-gt-sm=row flex=100> <fieldset ng-disabled=formApiHealthCheckTrigger.$invalid ng-class="{\'form-disabled\': formApiHealthCheckTrigger.$invalid}" flex=100> <div layout=column> <h5 style=color:grey>Endpoint</h5> <md-input-container> <label>HTTP Method</label> <md-select ng-model=healthCheckCtrl.healthcheck.steps[0].request.method required ng-disabled=formApiHealthCheckTrigger.$invalid> <md-option ng-value=httpMethod ng-repeat="httpMethod in healthCheckCtrl.httpMethods">{{httpMethod}}</md-option> </md-select> <div class=hint>HTTP Method used to health-check endpoint.</div> </md-input-container> <md-input-container> <label>Path</label> <input ng-model=healthCheckCtrl.healthcheck.steps[0].request.path type=text required> <div class=hint>Additional path added to the endpoint target.</div> </md-input-container> <md-checkbox ng-model=healthCheckCtrl.healthcheck.steps[0].request.fromRoot aria-label="Run request from root path" class=md-align-top-left> From root path (\'/\')<br/> <span class=ipsum> When "from root" is enabled, the path is appended to the root path (\'/\') of the endpoint without any additional path configured at the endpoint level. </span> </md-checkbox> </div> <div layout=row layout-sm=column ng-if="healthCheckCtrl.healthcheck.steps[0].request.method !== \'GET\' && healthCheckCtrl.healthcheck.steps[0].request.method !== undefined"> <md-input-container class=md-block flex-gt-sm> <label>Request Body</label> <textarea ng-model=healthCheckCtrl.healthcheck.steps[0].request.body md-maxlength=1000 rows=5 md-select-on-focus></textarea> <div class=hint><ng-md-icon icon=error_outline style=fill:red></ng-md-icon>Make sure to add Content-Type header for POST/PUT HTTP method</div> </md-input-container> </div> <div layout=column layout-sm=column> <h5 style=color:grey> <span>Headers</span> <ng-md-icon icon=add_circle_outline style=fill:#b1bdc5 aria-label="Add HTTP header" ng-click=healthCheckCtrl.addHTTPHeader()>Add headers</ng-md-icon> </h5> <div layout=row layout-sm=column layout-align="center center" ng-repeat="header in healthCheckCtrl.healthcheck.steps[0].request.headers"> <ng-md-icon icon=remove_circle_outline style=fill:#b1bdc5 aria-label="Delete header" ng-click=healthCheckCtrl.removeHTTPHeader($index)></ng-md-icon> <div flex=5 hide-xs hide-sm> </div> <md-input-container flex-gt-sm> <input aria-label="Header name" ng-model=header.name type=text placeholder="Header name" ng-required=true> </md-input-container> <div flex=5 hide-xs hide-sm> </div> <md-input-container flex-gt-sm> <input aria-label="Header value" ng-model=header.value type=text placeholder="Header value" ng-required=true> </md-input-container> </div> </div> </fieldset> </form> </md-content> <br> <md-subheader> Assertions <ng-md-icon icon=info style=fill:#b1bdc5 aria-label="Expectation info" ng-click=healthCheckCtrl.showAssertionInformation()></ng-md-icon> <ng-md-icon icon=add_circle_outline style=fill:#b1bdc5 aria-label="Add assertion" ng-click=healthCheckCtrl.addAssertion()></ng-md-icon> </md-subheader> <form name=formApiHealthCheckResponse novalidate layout-gt-sm=row flex=100> <fieldset ng-disabled=formApiHealthCheckTrigger.$invalid ng-class="{\'form-disabled\': formApiHealthCheckTrigger.$invalid}" flex=100> <div layout=column layout-sm=column> <div layout=row layout-sm=column ng-repeat="assertion in healthCheckCtrl.healthcheck.steps[0].response.assertions track by $index"> <ng-md-icon size=24 icon=remove_circle_outline style=fill:#b1bdc5 aria-label="Delete assertion" ng-click=healthCheckCtrl.removeAssertion($index)></ng-md-icon> <md-input-container flex-gt-sm> <label>Assertion #{{$index+1}}</label> <input ng-model=healthCheckCtrl.healthcheck.steps[0].response.assertions[$index] type=text required> </md-input-container> </div> </div> </fieldset> </form> </div> <div layout=row> <md-button class="md-raised md-primary" type=submit ng-click=healthCheckCtrl.update() ng-disabled="((healthCheckCtrl.healthcheck.inherit === false && healthCheckCtrl.healthcheck.enabled === true) && (formApiHealthCheckTrigger.$invalid || formApiHealthCheckResponse.$invalid || formApiHealthCheckRequest.$invalid))"> Save </md-button> </div> </section> <div class=healthcheck-summary-timeline-wrapper layout-padding flex=30> <div> <h4>Summary</h4> <md-divider></md-divider> </div> <div class=healthcheck-summary-timeline> <timeline> <timeline-event side=right> <timeline-badge ng-class="{\'disable\': formApiHealthCheckTrigger.$invalid, \'info\': formApiHealthCheckTrigger.$valid}"> <i class="glyphicon glyphicon-play-circle"></i> </timeline-badge> <timeline-panel ng-class="{\'disable\': formApiHealthCheckTrigger.$invalid, \'info\': formApiHealthCheckTrigger.$valid}"> <timeline-heading> <div style=font-weight:600;text-overflow:ellipsis;white-space:nowrap;overflow:hidden>Trigger</div> </timeline-heading> <p>{{healthCheckCtrl.buildTrigger()}}</p> </timeline-panel> </timeline-event> <timeline-event side=right> <timeline-badge ng-class="{\'disable\': formApiHealthCheckRequest.$invalid, \'info\': formApiHealthCheckRequest.$valid}"> <i class="glyphicon glyphicon-screenshot"></i> </timeline-badge> <timeline-panel ng-class="{\'disable\': formApiHealthCheckRequest.$invalid, \'info\': formApiHealthCheckRequest.$valid}"> <timeline-heading> <div style=font-weight:600;text-overflow:ellipsis;white-space:nowrap;overflow:hidden>Request</div> </timeline-heading> <span style=font-weight:700><code>{{healthCheckCtrl.buildRequest()}}</code></span> <p ng-repeat="header in healthCheckCtrl.healthcheck.steps[0].request.headers track by $index"> &bigoplus; {{healthCheckCtrl.healthcheck.steps[0].request.headers[$index].name}}: {{healthCheckCtrl.healthcheck.steps[0].request.headers[$index].value}} </p> </timeline-panel> </timeline-event> <timeline-event side=right> <timeline-badge ng-class="{\'disable\': formApiHealthCheckResponse.$invalid, \'info\': formApiHealthCheckResponse.$valid}"> <i class="glyphicon glyphicon-ok-circle"></i> </timeline-badge> <timeline-panel ng-class="{\'disable\': formApiHealthCheckResponse.$invalid, \'info\': formApiHealthCheckResponse.$valid}"> <timeline-heading> <div style=font-weight:600;text-overflow:ellipsis;white-space:nowrap;overflow:hidden>Assertions</div> </timeline-heading> <p ng-repeat="assertion in healthCheckCtrl.healthcheck.steps[0].response.assertions track by $index"> &bigoplus; {{healthCheckCtrl.healthcheck.steps[0].response.assertions[$index]}} </p> <p></p> </timeline-panel> </timeline-event> </timeline> </div> </div> </div> </div> </div> </div>'},function(e,t){e.exports=' <md-dialog aria-label=confirm-dialog> <md-dialog-content layout-padding> <h4>{{title}}</h4> <div ng-repeat="folder in folders"> <md-icon md-svg-src=assets/logo_folder.svg></md-icon> <a ng-click=ctrl.select(folder.id)>{{folder.path}}</a> </div> </md-dialog-content> <md-dialog-actions layout=row> <md-button ng-click=ctrl.cancel()>Cancel</md-button> </md-dialog-actions> </md-dialog>'},,,,function(e,t,i){"use strict";t.__esModule=!0;var n=i(3),a=function(){this.mgmt=!1,this.api=null,this.application=null,this.event=null};t.AuditQuery=a;var o=function(){function e(e,t){this.$http=e,this.auditURL=t.baseURL+"audit",this.apiAuditURL=t.baseURL+"apis/"}return e.$inject=["$http","Constants"],e.prototype.list=function(e,t){var i;return i=t?this.apiAuditURL+t+"/audit?":this.auditURL+"?",n.forEach(e,(function(e,t){null!=e&&""!==e&&(i+=t+"="+(e instanceof Date?e.getTime():e)+"&")})),this.$http.get(i)},e.prototype.listEvents=function(e){var t;return t=e?this.apiAuditURL+e+"/audit/events":this.auditURL+"/events",this.$http.get(t)},e}();t.default=o},function(e,t){e.exports=" <md-dialog aria-label=\"{{$ctrl.header.id?'Update':'New'}} API Header\"> <form name=form ng-submit=$ctrl.save() novalidate> <md-dialog-content layout-padding> <h4>{{$ctrl.header.id?'Update':'New'}} API Header</h4> <div layout=column> <md-input-container> <label>Name</label> <input ng-model=$ctrl.header.name> </md-input-container> <md-input-container> <label>Value</label> <input ng-model=$ctrl.header.value> </md-input-container> </div> </md-dialog-content> <md-dialog-actions layout=row> <md-button ng-click=$ctrl.cancel()> Cancel </md-button> <md-button type=submit class=\"md-raised md-primary\" ng-disabled=form.$invalid> {{$ctrl.header.id?'Update':'Create'}} </md-button> </md-dialog-actions> </form> </md-dialog> "},function(e,t,i){"use strict";var n,a=this&&this.__extends||(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var i in t)t.hasOwnProperty(i)&&(e[i]=t[i])},function(e,t){function i(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(i.prototype=t.prototype,new i)});t.__esModule=!0;var o=i(10),r=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return a(t,e),t.ENDPOINT_NAME=new t("endpoint.name","Endpoint name",[o.StringCondition.TYPE]),t.RESPONSE_TIME=new t("response_time","Response Time (ms)",[o.ThresholdCondition.TYPE,o.ThresholdRangeCondition.TYPE,o.CompareCondition.TYPE]),t.TENANT=new t("tenant","Tenant",[o.StringCondition.TYPE],!1,void 0,(function(e,t,i){var n=[];return i.get("TenantService").list().then((function(e){e.data.forEach((function(e){n.push(new o.Tuple(e.id,e.name))}))})),n})),t.METRICS=[t.ENDPOINT_NAME,t.RESPONSE_TIME,t.TENANT],t}(o.Metrics);t.HealthcheckMetrics=r},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,function(e,t,i){"use strict";t.__esModule=!0;var n=i(7),a=i(3);n.uppercase=a.toUpper,n.lowercase=a.toLower,i(1228),i(631),i(1224);var o,r=n.injector(["ng"]),s=r.get("$http"),l=r.get("$q"),c={headers:{"Cache-Control":"no-cache",Pragma:"no-cache"}};l.all([s.get("constants.json",c),s.get("build.json",c)]).then((function(e){o=e[0].data;var t=e[1].data;return n.module("gravitee-management").constant("Build",t),s.get(o.baseURL+"portal")})).then((function(e){var t=a.merge(e.data,o);if(n.module("gravitee-management").constant("Constants",t),t.theme.css){var i=document.createElement("link");i.rel="stylesheet",i.type="text/css",i.href=t.theme.css,document.head.appendChild(i)}return t})).catch((function(e){throw document.getElementById("gravitee-error").innerText="Management API unreachable or error occurs, please check logs",e})).then((function(e){return function(e){var t=document.createElement("img");return t.classList.add("gravitee-splash-screen"),t.setAttribute("src",e.theme.loader),document.getElementById("loader").appendChild(t),l.resolve(e)}(e)})).then((function(e){return function(e){return s.get("./themes/"+e.theme.name+"-theme.json",c).then((function(e){n.module("gravitee-management").constant("Theme",e.data)})).catch((function(){return s.get("./themes/default-theme.json",c).then((function(e){n.module("gravitee-management").constant("Theme",e.data)}))}))}(e)})).then((function(){n.element(document).ready((function(){n.bootstrap(document,["gravitee-i18n","gravitee-management"])}))}))},function(e,t,i){"use strict";t.__esModule=!0;var n=i(11);i(167),i(166),i(168),i(200),i(192),i(169),i(170);var a=i(242),o=i(210),r=i(26),s=i(8),l=i(171),c=i(1),d=i(173),p=i(632),m=i(633),u=i(180),g=i(244),h=i(634),f=i(637),v=i(640),y=i(641),b=i(643),$=i(645),w=i(647),S=i(648),x=i(649),C=i(651),A=i(652),P=i(653),k=i(656),T=i(659),_=i(660),R=i(661),I=i(662),E=i(663),D=i(664),M=i(665),N=i(666),L=i(15),U=i(667),O=i(668),q=i(669),F=i(670),H=i(671),j=i(672),G=i(673),B=i(674),z=i(675),W=i(676),V=i(677),Y=i(678),K=i(679),Q=i(680),J=i(682),X=i(684),Z=i(686),ee=i(688),te=i(690),ie=i(691),ne=i(693),ae=i(695),oe=i(697),re=i(699),se=i(701),le=i(703),ce=i(704),de=i(706),pe=i(707),me=i(709),ue=i(711),ge=i(713),he=i(715),fe=i(717),ve=i(719),ye=i(721),be=i(724),$e=i(251),we=i(730),Se=i(731),xe=i(733),Ce=i(734),Ae=i(736),Pe=i(737),ke=i(739),Te=i(741),_e=i(742),Re=i(744),Ie=i(746),Ee=i(748),De=i(750),Me=i(751),Ne=i(753),Le=i(756),Ue=i(758),Oe=i(759),qe=i(761),Fe=i(763),He=i(764),je=i(766),Ge=i(767),Be=i(769),ze=i(771),We=i(772),Ve=i(773),Ye=i(774),Ke=i(775),Qe=i(777),Je=i(778),Xe=i(780),Ze=i(782),et=i(783),tt=i(785),it=i(787),nt=i(789),at=i(791),ot=i(793),rt=i(795),st=i(797),lt=i(799),ct=i(801),dt=i(803),pt=i(805),mt=i(807),ut=i(809),gt=i(811),ht=i(813),ft=i(814),vt=i(816),yt=i(817),bt=i(819),$t=i(820),wt=i(821),St=i(823),xt=i(824),Ct=i(826),At=i(827),Pt=i(829),kt=i(252),Tt=i(831),_t=i(832),Rt=i(834),It=i(836),Et=i(253),Dt=i(837),Mt=i(838),Nt=i(839),Lt=i(841),Ut=i(843),Ot=i(845),qt=i(847),Ft=i(848),Ht=i(849),jt=i(850),Gt=i(851),Bt=i(852),zt=i(853),Wt=i(854),Vt=i(855),Yt=i(856),Kt=i(857),Qt=i(858),Jt=i(859),Xt=i(860),Zt=i(862),ei=i(863),ti=i(866),ii=i(867),ni=i(869),ai=i(870),oi=i(871),ri=i(872),si=i(873),li=i(874),ci=i(875),di=i(876),pi=i(877),mi=i(878),ui=i(879),gi=i(881),hi=i(882),fi=i(883),vi=i(885),yi=i(887),bi=i(889),$i=i(891),wi=i(893),Si=i(894),xi=i(896),Ci=i(897),Ai=i(898),Pi=i(899),ki=i(900),Ti=i(902),_i=i(905),Ri=i(907),Ii=i(908),Ei=i(909),Di=i(911),Mi=i(912),Ni=i(916),Li=i(922),Ui=i(927),Oi=i(932),qi=i(946),Fi=i(952),Hi=i(953),ji=i(954),Gi=i(955),Bi=i(957),zi=i(958),Wi=i(960),Vi=i(961),Yi=i(963),Ki=i(964),Qi=i(966),Ji=i(967),Xi=i(969),Zi=i(973),en=i(974),tn=i(976),nn=i(978),an=i(982),on=i(984),rn=i(986),sn=i(989),ln=i(991),cn=i(993),dn=i(995),pn=i(997),mn=i(999),un=i(1e3),gn=i(1001),hn=i(1003),fn=i(1004),vn=i(1006),yn=i(1007),bn=i(262),$n=i(1008),wn=i(1009),Sn=i(1010),xn=i(1012),Cn=i(1014),An=i(1015),Pn=i(1017),kn=i(1018),Tn=i(1020),_n=i(1023),Rn=i(1025),In=i(1026),En=i(1028),Dn=i(1032),Mn=i(1033),Nn=i(1034),Ln=i(1036),Un=i(1037),On=i(1039),qn=i(1041),Fn=i(1042),Hn=i(1044),jn=i(1046),Gn=i(1048),Bn=i(1050),zn=i(1052),Wn=i(1054),Vn=i(1056),Yn=i(1057),Kn=i(1058),Qn=i(1059),Jn=i(1060),Xn=i(1066),Zn=i(1070),ea=i(1071),ta=i(1072),ia=i(1227),na=i(199),aa=i(1074),oa=i(1075),ra=i(1076),sa=i(1077),la=i(1080),ca=i(1081),da=i(1083),pa=i(1084),ma=i(1085),ua=i(1086),ga=i(247),ha=i(248),fa=i(1088),va=i(1089),ya=i(1090),ba=i(1092),$a=i(1093),wa=i(1095),Sa=i(1096),xa=i(1097),Ca=i(1099),Aa=i(1100),Pa=i(1101),ka=i(1103),Ta=i(1105),_a=i(1107),Ra=i(1109),Ia=i(1111),Ea=i(1113),Da=i(1115),Ma=i(1117),Na=i(1119),La=i(1121),Ua=i(1123),Oa=i(1125),qa=i(1127),Fa=i(1129),Ha=i(1131),ja=i(1133),Ga=i(1135),Ba=i(1137),za=i(1139),Wa=i(1141),Va=i(1143),Ya=i(1145),Ka=i(1147),Qa=i(1149),Ja=i(1150),Xa=i(1151),Za=i(1153),eo=i(1154),to=i(1155),io=i(1157),no=i(1158),ao=i(1159),oo=i(1160),ro=i(1161),so=i(1163),lo=i(1165),co=i(1167),po=i(1168),mo=i(1170),uo=i(1172),go=i(1174),ho=i(1175);window.jQuery=n;var fo=i(7),vo=i(214),yo=i(1178),bo=i(1179),$o=i(1180),wo=i(1182),So=i(1183),xo=i(1184),Co=i(1187),Ao=i(1189),Po=i(1190),ko=i(1191),To=i(1192),_o=i(1193),Ro=i(1194),Io=i(1196),Eo=i(1197),Do=i(1198);window.traverse=a,window.marked=o,window.hljs=r,window.CodeMirror=s,i(239),i(193),i(189),i(265),i(1199),i(266),i(1200),i(1201),i(1202),i(1206),i(267),i(1207),i(184),i(1208),i(1209),i(1210),i(1211),window.resolveUrl=function(e){return e.startsWith("http")?e:window.location.origin+e},i(195),i(194),i(187),i(196),i(205),i(243),i(201),i(1212),i(1213),i(1214),i(259),i(1215),i(216),i(204),i(217),i(202),i(1216),i(213),i(212),i(203),i(190),i(215),i(241),i(240),i(188),i(1217),i(249),i(191);var Mo=i(16);window.Highcharts=Mo;var No=i(1219),Lo=i(1220),Uo=i(1221),Oo=i(1222);No(Mo),Lo(Mo),Uo(Mo),Oo(Mo),i(1223),window.jsyaml=l,window.moment=c,i(197),window.tinycolor=d,i(211),fo.module("gravitee-management",[ia.default,na.permission,na.uiPermission,"ngMaterial","ng-showdown","ngMdIcons","ui.codemirror","md.data.table","ngCookies","dragularModule","readMore","ngMessages","vAccordion","schemaForm","ngclipboard","ui.validate","angular-timeline","utf8-base64","ngFileUpload","md-steppers","ui.tree","angular-jwt","gridster","angular-loading-bar","ngAnimate","LocalStorageModule","satellizer",vo,"moment-picker","mdColorPicker","pascalprecht.translate"]).config(["cfpLoadingBarProvider",function(e){e.includeSpinner=!1}]).config(["localStorageServiceProvider",function(e){e.setPrefix("gravitee")}]).config(Qn.default).config(Jn.default).config(Eo.default).config(Xn.default).config(Ei.default).config(Di.default).config(Mi.default).config(qi.default).config(Oi.default).config(Ui.default).config(Ni.default).config(Li.default).config(Fi.default).config(ba.default).config(Hi.default).config(ji.default).config(Zn.default).config(ea.default).config(["$mdThemingProvider",function(e){e.definePalette("gravitee",{0:"28444F",50:"28444F",100:"28444F",200:"28444F",300:"28444F",400:"28444F",500:"28444F",600:"28444F",700:"28444F",800:"28444F",900:"28444F",A100:"28444F",A200:"28444F",A400:"28444F",A700:"28444F",contrastDefaultColor:"light"}),e.theme("default").primaryPalette("gravitee").accentPalette("gravitee"),e.theme("sidenav").backgroundPalette("grey",{default:"50"}),e.theme("toast-success"),e.theme("toast-error")}]).config(["$showdownProvider",function(e){e.setOption("tables",!0),e.loadExtension("highlightjs"),e.loadExtension("prettify"),e.loadExtension("docHelper")}]).run(ta.default).controller("ApisController",g.default).controller("ApiAdminController",f.default).controller("ApiHeaderController",aa.default).controller("ApiAnalyticsController",v.default).controller("ApiPoliciesController",$.default).controller("AddPoliciesPathController",C.default).controller("ApiMembersController",y.default).controller("ApiTransferOwnershipController",b.default).controller("ApiPortalController",h.default).controller("ApiProxyController",ma.default).controller("ApiHealthCheckController",un.default).controller("ApiEndpointController",w.default).controller("ApiEndpointGroupController",S.default).component("gvHttpConfiguration",x.default).controller("DialogAssertionInformationController",mn.default).controller("ApiPropertiesController",k.default).controller("ApiEventsController",T.default).controller("ApiHistoryController",_.default).controller("ApiResourcesController",A.default).controller("ApiPathMappingsController",P.default).controller("DialogAddPathMappingController",ga.default).controller("DialogImportPathMappingController",ha.default).controller("DialogAddPropertyController",R.default).controller("DialogAddMemberApiController",I.default).controller("DialogTransferApiController",E.default).controller("DialogApiKeyExpirationController",D.default).controller("UserController",Bi.default).controller("DialogApiImportController",W.default).controller("DialogApiExportController",V.default).controller("DialogApiDuplicateController",Y.default).controller("DialogEditPolicyController",M.default).controller("LoginController",B.default).controller("InstancesController",Ye.default).controller("InstanceEnvironmentController",Qe.default).controller("InstanceMonitoringController",Ze.default).controller("DashboardController",Dt.default).controller("CategoriesController",Ut.default).controller("CategoryController",Ot.default).controller("TenantsController",ui.default).controller("DeleteCategoryDialogController",Ft.default).controller("DeleteAPICategoryDialogController",Ht.default).controller("DeleteTenantDialogController",hi.default).component("groups",In.default).component("group",En.default).controller("DialogAddGroupMemberController",jt.default).controller("RegistrationController",Gt.default).controller("ConfirmController",Bt.default).controller("ResetPasswordController",zt.default).controller("ConfirmProfileController",Do.default).controller("DialogSubscriptionRejectController",Vt.default).controller("DialogSubscriptionAcceptController",Yt.default).controller("DialogSubscriptionCreateController",Kt.default).controller("DialogSubscriptionTransferController",Qt.default).controller("DialogSubscriptionChangeEndDateController",Jt.default).controller("DialogPublishPlanController",Zt.default).controller("TagsController",ei.default).controller("MetadataController",ii.default).controller("ApiMetadataController",Si.default).controller("DeleteTagDialogController",ai.default).controller("DeleteMetadataDialogController",oi.default).controller("NewMetadataDialogController",ri.default).controller("UpdateMetadataDialogController",si.default).controller("NewApiMetadataDialogController",Pi.default).controller("UpdateApiMetadataDialogController",Ci.default).controller("DeleteApiMetadataDialogController",Ai.default).controller("DialogConfirmController",di.default).controller("DialogConfirmAndValidateController",pi.default).controller("DialogDynamicProviderHttpController",mi.default).controller("DialogAddUserRoleController",Ii.default).controller("SupportTicketController",yn.default).controller("AuditController",$n.default).controller("ApiAuditController",wn.default).controller("ThemeController",_o.default).controller("TopApisController",sa.default).controller("AddTopApiDialogController",da.default).controller("DeleteTopApiDialogController",pa.default).controller("SelectFolderDialogController",no.default).controller("DialogReviewController",yo.default).controller("DialogRequestForChangesController",bo.default).service("ApplicationService",$e.default).service("ApplicationTypesService",we.default).service("ApiService",u.default).service("DocumentationService",L.default).service("InstancesService",Ve.default).service("NotificationService",U.default).service("PolicyService",O.default).service("NotifierService",j.default).service("UserService",Gi.default).service("Base64Service",Ca.default).service("ResourceService",F.default).service("FetcherService",H.default).service("ServiceDiscoveryService",G.default).service("EventsService",It.default).service("AnalyticsService",Et.default).service("CategoryService",qt.default).service("GroupService",Dn.default).service("SubscriptionService",Wt.default).service("TagService",ti.default).service("MetadataService",ni.default).service("TenantService",gi.default).service("StringService",Yn.default).service("AuthenticationService",Kn.default).service("RoleService",Ri.default).service("TicketService",vn.default).service("AuditService",bn.default).service("ChartService",oa.default).service("TopApiService",la.default).service("MessageService",va.default).service("PortalService",q.default).service("ThemeService",Io.default).service("ReCaptchaService",To.default).directive("filecontent",(function(){return N.default})).directive("noDirtyCheck",(function(){return new p.default})).directive("autofocus",(function(){return new m.default})).directive("graviteeDiff",(function(){return z.default})).directive("graviteeIdentityPicture",(function(){return new _t.default})).directive("graviteeImage",(function(){return new Rt.default})).directive("graviteeEmptyState",(function(){return new Xt.default})).directive("graviteeChart",(function(){return new li.default})).directive("graviteeUserAvatar",(function(){return new ci.default})).directive("gvThemeElement",(function(){return Tt.default})).component("gvWidget",it.default).component("gvWidgetDataTable",nt.default).component("gvWidgetDataStats",st.default).component("gvWidgetChartPie",ot.default).component("gvWidgetChartLine",at.default).component("gvWidgetChartMap",rt.default).component("gvWidgetDataTableConfiguration",lt.default).component("gvWidgetDataLineConfiguration",ct.default).component("gvWidgetDataMapConfiguration",dt.default).component("gvWidgetDataPieConfiguration",pt.default).component("gvWidgetDataStatsConfiguration",mt.default).component("categories",fi.default).component("category",vi.default).component("tenants",yi.default).component("tags",bi.default).component("metadata",$i.default).component("roles",_i.default).component("role",ki.default).component("roleMembers",Ti.default).component("theme",Ro.default).component("topApis",ca.default).component("portalSettings",ua.default).component("analyticsSettings",lo.default).directive("gvMetadataValidator",(function(){return wi.default})).component("instances",et.default).component("instance",tt.default).component("instanceHeader",Ke.default).component("instanceEnvironment",Je.default).component("instanceMonitoring",Xe.default).component("apiHeader",Z.default).component("apiCreation",ee.default).controller("ApiCreationController",te.default).controller("NewApiController",le.default).component("apiCreationStep1",ie.default).component("apiCreationStep2",ne.default).component("apiCreationStep3",ae.default).component("apiCreationStep4",oe.default).component("apiCreationStep5",re.default).component("gvApiImport",se.default).component("apiMetadata",xi.default).component("gvDashboard",ut.default).component("gvDashboardFilter",gt.default).controller("DashboardFilterController",ht.default).component("gvDashboardTimeframe",ft.default).controller("DashboardTimeframeController",vt.default).component("apiPlan",ce.default).component("editPlan",pe.default).controller("ApiEditPlanController",de.default).component("listPlans",me.default).controller("ApiListPlansController",ue.default).component("planWizardGeneral",ge.default).component("planWizardSecurity",he.default).component("planWizardPolicies",ve.default).component("planWizardRestrictions",fe.default).component("apiSubscriptions",ye.default).component("apiSubscription",be.default).component("applications",Se.default).component("application",Ie.default).component("applicationSubscribe",$o.default).controller("ApplicationSubscribeController",wo.default).component("createApplication",Ce.default).controller("ApplicationCreationController",Ae.default).component("applicationCreationStep1",Pe.default).component("applicationCreationStep2",ke.default).controller("ApplicationCreationStep2Controller",Te.default).component("applicationCreationStep3",_e.default).component("applicationCreationStep4",Re.default).component("applicationHeader",Ee.default).component("applicationGeneral",Me.default).component("applicationSubscriptions",Oe.default).component("applicationSubscription",qe.default).component("applicationMembers",Le.default).component("applicationAnalytics",He.default).component("applicationLogs",Ge.default).component("applicationLog",Be.default).controller("DialogAddMemberController",ze.default).controller("ApplicationsController",xe.default).controller("ApplicationGeneralController",De.default).controller("ApplicationMembersController",Ne.default).controller("ApplicationSubscriptionsController",Ue.default).controller("ApplicationAnalyticsController",Fe.default).controller("ApplicationLogsController",je.default).controller("DialogTransferApplicationController",We.default).component("user",zi.default).component("tasks",Vi.default).service("TaskService",Yi.default).component("portalNotifications",Ki.default).service("UserNotificationService",Qi.default).service("NotificationSettingsService",Zi.default).controller("DialogAddNotificationSettingsController",ra.default).component("notificationSettingsComponent",Xi.default).component("notificationsComponent",Ji.default).component("documentationManagement",en.default).component("newPage",ln.default).component("importPages",dn.default).component("editPage",cn.default).component("gvPage",tn.default).component("gvPageMarkdown",an.default).component("gvPageEditorMarkdown",on.default).component("gvPageEditorMarkdownViewer",rn.default).component("gvPageSwagger",nn.default).directive("gvPageSidenav",(function(){return sn.default})).component("gvSidenav",Q.SidenavComponent).component("gvSubmenu",J.SubmenuComponent).component("graviteeNavbar",X.NavbarComponent).filter("currentSubmenus",Wi.submenuFilter).service("SidenavService",K.default).controller("ApiLogsController",$t.default).component("gvLogsTimeframe",wt.default).controller("LogsTimeframeController",St.default).component("log",At.default).component("gvLogsFilters",xt.default).controller("LogsFiltersController",Ct.default).controller("ApiLoggingConfigurationController",Pt.default).controller("DialogConfigureLoggingEditorController",kt.default).component("gvAudit",Sn.default).component("gvContextualDoc",yt.default).controller("ContextualDocController",bt.default).controller("ApiHealthCheckConfigureController",pn.default).controller("ApiHealthCheckLogController",hn.default).component("progressBar",gn.default).component("gvHealthcheckMetric",fn.default).controller("ApiResponseTemplatesController",ao.default).controller("ApiResponseTemplateController",oo.default).component("gvResponseTemplateType",ro.default).component("gvResponseTemplate",so.default).component("settings",xn.default).service("PortalConfigService",Cn.default).component("apiLogging",An.default).controller("ApiLoggingController",Pn.default).component("users",kn.default).component("userDetail",Tn.default).component("newUser",_n.default).controller("DialogAddUserGroupController",Rn.default).service("RouterService",fa.default).component("messages",ya.default).service("DictionaryService",Mn.default).component("dictionaries",Nn.default).component("dictionary",Un.default).controller("DictionariesController",Ln.default).controller("DictionaryController",On.default).controller("DialogDictionaryAddPropertyController",qn.default).component("configApiPortalHeader",$a.default).service("ApiHeaderService",wa.default).controller("NewApiPortalHeaderDialogController",xa.default).controller("UpdateApiPortalHeaderDialogController",Sa.default).component("configApiQuality",xo.default).component("qualityRule",Co.default).controller("ApiQualityRuleController",Ao.default).controller("DeleteApiQualityRuleDialogController",Po.default).service("QualityRuleService",So.default).component("identityProviders",Fn.default).component("identityProvider",Hn.default).component("gvIdentityproviderGraviteeioAm",zn.default).component("gvIdentityproviderGoogle",Gn.default).component("gvIdentityproviderGithub",Bn.default).component("gvIdentityproviderOidc",Wn.default).controller("IdentityProviderController",jn.default).service("IdentityProviderService",Vn.default).component("clientRegistrationProviders",po.default).component("clientRegistrationProvider",mo.default).controller("ClientRegistrationProviderController",uo.default).service("ClientRegistrationProviderService",co.default).service("AlertService",Aa.default).component("alertsComponent",Pa.default).component("alertComponent",ka.default).component("gvAlertNotification",_a.default).component("gvAlertNotifications",Ta.default).component("gvAlertHistory",Ra.default).component("gvAlertTriggerWindow",Ea.default).component("gvAlertTriggerDampening",Ia.default).component("gvAlertTriggerCondition",Na.default).component("gvAlertTriggerFilters",Da.default).component("gvAlertTriggerFilter",Ma.default).component("gvAlertTriggerConditionThreshold",La.default).component("gvAlertTriggerConditionThresholdRange",Ua.default).component("gvAlertTriggerConditionString",Oa.default).component("gvAlertTriggerConditionCompare",qa.default).component("gvAlertTriggerMetricsSimpleCondition",Fa.default).component("gvAlertTriggerMetricsAggregation",Ha.default).component("gvAlertTriggerMetricsRate",ja.default).component("gvAlertTriggerApiHealthCheckStatusChanged",Ga.default).component("gvAlertTriggerNodeLifecycleChanged",Ba.default).component("gvAlertTriggerNodeHealthcheck",za.default).component("gvAlertTriggerApplicationQuota",Wa.default).component("gvAlertTriggerProjections",Va.default).component("gvAlertTriggerProjection",Ya.default).component("circularPercentage",Ka.default).controller("CircularPercentageController",Qa.default).service("EntrypointService",Ja.default).component("entrypoint",Xa.default).controller("EntrypointController",Za.default).controller("DeleteEntrypointDialogController",eo.default).component("tag",to.default).controller("TagController",io.default).service("DashboardService",go.default).component("dashboard",ho.default).controller("DialogQueryFilterInformationController",ko.default).component("platformLogs",Nt.default).component("platformLog",Lt.default).controller("PlatformLogsController",Mt.default).filter("humanDateFilter",(function(){return function(e){return c().subtract(1,"weeks").isAfter(e)?c(e).format("ll"):c(e).fromNow()}})).filter("humanDatetimeFilter",(function(){return function(e){return c().subtract(1,"weeks").isAfter(e)?c(e).format("D MMM YYYY HH:mm:ss"):c(e).fromNow()}})).filter("datetimeFilter",(function(){return function(e){return c(e).format("D MMM YYYY HH:mm:ss")}})).filter("apiKeyFilter",(function(){return function(e){return e}})).filter("floor",(function(){return function(e){return Math.floor(e)}}))},function(e,t,i){"use strict";t.__esModule=!0;var n=function(){return{restrict:"A",require:"ngModel",link:function(e,t,i,n){n.$pristine=!1}}};t.default=n},function(e,t,i){"use strict";t.__esModule=!0;var n=function(){return{restrict:"A",require:"ngModel",link:function(e,t){setTimeout((function(){t[0].focus()}))}}};t.default=n},function(e,t,i){"use strict";t.__esModule=!0;var n=i(3),a=i(7),o=function(){function e(e,t,i,a,o,r,s,l,c,d,p,m,u,g,h,f,v){var y=this;this.ApiService=e,this.NotificationService=t,this.UserService=i,this.PolicyService=a,this.$scope=o,this.$mdDialog=r,this.$mdEditDialog=s,this.$rootScope=l,this.$state=c,this.GroupService=d,this.SidenavService=p,this.resolvedCategories=m,this.resolvedGroups=u,this.resolvedTags=g,this.resolvedTenants=h,this.Constants=f,this.qualityRules=v,this.ApiService=e,this.NotificationService=t,this.UserService=i,this.GroupService=d,this.$scope=o,this.$rootScope=l,this.$mdEditDialog=s,this.$mdDialog=r,this.initialApi=n.cloneDeep(this.$scope.$parent.apiCtrl.api),this.api=n.cloneDeep(this.$scope.$parent.apiCtrl.api),this.tenants=h.data,this.$scope.selected=[],this.$scope.searchHeaders=null,this.api.labels=this.api.labels||[],this.$scope.lbs=[{name:"Round-Robin",value:"ROUND_ROBIN"},{name:"Random",value:"RANDOM"},{name:"Weighted Round-Robin",value:"WEIGHTED_ROUND_ROBIN"},{name:"Weighted Random",value:"WEIGHTED_RANDOM"}],this.$scope.loggingModes=[{name:"None",value:"NONE"},{name:"Client only",value:"CLIENT"},{name:"Proxy only",value:"PROXY"},{name:"Client and proxy",value:"CLIENT_PROXY"}],this.$scope.methods=["GET","DELETE","PATCH","POST","PUT","TRACE","HEAD"],this.initState(),this.categories=m,this.tags=g,this.groups=u,this.headers=["Accept","Accept-Charset","Accept-Encoding","Accept-Language","Accept-Ranges","Access-Control-Allow-Credentials","Access-Control-Allow-Headers","Access-Control-Allow-Methods","Access-Control-Allow-Origin","Access-Control-Expose-Headers","Access-Control-Max-Age","Access-Control-Request-Headers","Access-Control-Request-Method","Age","Allow","Authorization","Cache-Control","Connection","Content-Disposition","Content-Encoding","Content-ID","Content-Language","Content-Length","Content-Location","Content-MD5","Content-Range","Content-Type","Cookie","Date","ETag","Expires","Expect","Forwarded","From","Host","If-Match","If-Modified-Since","If-None-Match","If-Unmodified-Since","Keep-Alive","Last-Modified","Location","Link","Max-Forwards","MIME-Version","Origin","Pragma","Proxy-Authenticate","Proxy-Authorization","Proxy-Connection","Range","Referer","Retry-After","Server","Set-Cookie","Set-Cookie2","TE","Trailer","Transfer-Encoding","Upgrade","User-Agent","Vary","Via","Warning","WWW-Authenticate","X-Forwarded-For","X-Forwarded-Proto","X-Forwarded-Server","X-Forwarded-Host"],this.$scope.$on("apiChangeSuccess",(function(e,t){y.api=t.api,y.computeQualityMetrics()})),this.isQualityEnabled=f.apiQualityMetrics&&f.apiQualityMetrics.enabled,this.qualityMetricsDescription=new Map,this.qualityMetricsDescription.set("api.quality.metrics.functional.documentation.weight","A functional page must be published"),this.qualityMetricsDescription.set("api.quality.metrics.technical.documentation.weight","A swagger page must be published"),this.qualityMetricsDescription.set("api.quality.metrics.healthcheck.weight","An healthcheck must be configured"),this.qualityMetricsDescription.set("api.quality.metrics.description.weight","The API description must be filled"),this.qualityMetricsDescription.set("api.quality.metrics.logo.weight","Put your own logo"),this.qualityMetricsDescription.set("api.quality.metrics.categories.weight","Link your API to categories"),this.qualityMetricsDescription.set("api.quality.metrics.labels.weight","Add labels to your API"),n.forEach(this.qualityRules,(function(e){y.qualityMetricsDescription.set(e.id,e.description)}))}return e.$inject=["ApiService","NotificationService","UserService","PolicyService","$scope","$mdDialog","$mdEditDialog","$rootScope","$state","GroupService","SidenavService","resolvedCategories","resolvedGroups","resolvedTags","resolvedTenants","Constants","qualityRules"],e.prototype.$onInit=function(){this.computeQualityMetrics()},e.prototype.computeQualityMetrics=function(){var e=this;this.isQualityEnabled&&this.ApiService.getQualityMetrics(this.api.id).then((function(t){e.qualityMetrics=t.data}))},e.prototype.toggleVisibility=function(){"public"===this.api.visibility?this.api.visibility="private":this.api.visibility="public",this.formApi.$setDirty()},e.prototype.initState=function(){this.$scope.apiEnabled="started"===this.$scope.$parent.apiCtrl.api.state,this.$scope.apiPublic="public"===this.$scope.$parent.apiCtrl.api.visibility,this.failoverEnabled=void 0!==this.api.proxy.failover,this.contextPathEditable=this.UserService.currentUser.id===this.api.owner.id,this.api.proxy.cors=this.api.proxy.cors||{allowOrigin:["*"],allowHeaders:[],allowMethods:[],exposeHeaders:[],maxAge:-1,allowCredentials:!1}},e.prototype.editWeight=function(e,t){e.stopPropagation();var i=this,n={modelValue:t.weight,placeholder:"Weight",save:function(e){t.weight=e.$modelValue,i.formApi.$setDirty()},targetEvent:e,title:"Endpoint weight",type:"number",validators:{"ng-required":"true",min:1,max:99}};this.$mdEditDialog.large(n).then((function(e){var t=e.getInput();t.$viewChangeListeners.push((function(){t.$setValidity("test","test"!==t.$modelValue)}))}))},e.prototype.removeEndpoints=function(){var e=this,t=this;this.$mdDialog.show({controller:"DialogConfirmController",controllerAs:"ctrl",template:i(5),clickOutsideToClose:!0,locals:{title:"Are you sure you want to delete endpoint(s) ?",msg:"",confirmButton:"Delete"}}).then((function(i){i&&(n(e.$scope.selected).forEach((function(t){n(e.api.proxy.endpoints).forEach((function(e,i,n){void 0!==e&&e.name===t.name&&n.splice(i,1)}))})),t.update(t.api))}))},e.prototype.reset=function(){this.api=n.cloneDeep(this.initialApi),this.formApi&&(this.formApi.$setPristine(),this.formApi.$setUntouched())},e.prototype.delete=function(e){var t=this;this.$mdDialog.show({controller:"DialogConfirmAndValidateController",controllerAs:"ctrl",template:i(181),clickOutsideToClose:!0,locals:{title:"Are you sure you want to delete '"+this.api.name+"'?",warning:"This operation is irreversible.",msg:"The API must be stopped and without any active plans and subscriptions.",validationMessage:"Please, type in the name of the api <code>"+this.api.name+"</code> to confirm.",validationValue:this.api.name,confirmButton:"Yes, delete this API."}}).then((function(i){i&&t.ApiService.delete(e).then((function(){t.NotificationService.show("API "+t.initialApi.name+" has been removed"),t.$state.go("management.apis.list",{},{reload:!0})}))}))},e.prototype.onApiUpdate=function(e){this.api=e,this.initialApi=n.cloneDeep(e),this.formApi.$setPristine(),this.$rootScope.$broadcast("apiChangeSuccess",{api:n.cloneDeep(e)}),this.NotificationService.show("API '"+this.initialApi.name+"' saved"),this.SidenavService.setCurrentResource(this.api.name),this.initState(),this.computeQualityMetrics()},e.prototype.update=function(e){var t=this;this.failoverEnabled||delete e.proxy.failover,this.ApiService.update(e).then((function(e){e.data.etag=e.headers("etag"),t.onApiUpdate(e.data)}))},e.prototype.showImportDialog=function(){var e=this,t=this;this.PolicyService.listSwaggerPolicies().then((function(n){e.$mdDialog.show({controller:"DialogApiImportController",controllerAs:"dialogApiImportCtrl",template:i(245),clickOutsideToClose:!0,locals:{apiId:e.$scope.$parent.apiCtrl.api.id,policies:n.data}}).then((function(e){e&&t.onApiUpdate(e.data)}))}))},e.prototype.showExportDialog=function(){this.$mdDialog.show({controller:"DialogApiExportController",controllerAs:"dialogApiExportCtrl",template:i(635),clickOutsideToClose:!0,locals:{apiId:this.$scope.$parent.apiCtrl.api.id}})},e.prototype.getTenants=function(e){var t=this;return void 0!==e?n(e).map((function(e){return n.find(t.tenants,{id:e})})).map((function(e){return e.name})).join(", "):""},e.prototype.getGroup=function(e){return n.find(this.groups,{id:e})},e.prototype.querySearchHeaders=function(e){return e?this.headers.filter(this.createFilterFor(e)):[]},e.prototype.createFilterFor=function(e){var t=a.lowercase(e);return function(e){return 0===a.lowercase(e).indexOf(t)}},e.prototype.getQualityMetricCssClass=function(){return this.ApiService.getQualityMetricCssClass(100*this.qualityMetrics.score)},e.prototype.changeLifecycle=function(){var e=this,t="started"===this.api.state;this.$mdDialog.show({controller:"DialogConfirmController",controllerAs:"ctrl",template:i(5),clickOutsideToClose:!0,locals:{title:"Are you sure you want to "+(t?"stop":"start")+" the API?",msg:"",confirmButton:t?"stop":"start"}}).then((function(i){i&&(t?e.ApiService.stop(e.api).then((function(t){e.api.state="stopped",e.api.etag=t.headers("etag"),e.$rootScope.$broadcast("apiChangeSuccess",{api:e.api}),e.NotificationService.show("API "+e.api.name+" has been stopped with success")})):e.ApiService.start(e.api).then((function(t){e.api.state="started",e.api.etag=t.headers("etag"),e.NotificationService.show("API "+e.api.name+" has been started with success"),e.$rootScope.$broadcast("apiChangeSuccess",{api:e.api})})))}))},e.prototype.changeApiLifecycle=function(e){var t=this,a=n.cloneDeep(this.api);a.lifecycle_state=e;var o=e.slice(0,-1);o=o.replace("publishe","publish"),this.$mdDialog.show({controller:"DialogConfirmController",controllerAs:"ctrl",template:i(5),clickOutsideToClose:!0,locals:{title:"Are you sure you want to "+o+" the API?",msg:"",confirmButton:n.capitalize(o)}}).then((function(i){i&&(t.api=a,t.ApiService.update(a).then((function(i){t.api=i.data,t.api.etag=i.headers("etag"),t.$rootScope.$broadcast("apiChangeSuccess",{api:t.api}),t.NotificationService.show("API "+t.api.name+" has been "+e+" with success")})))}))},e.prototype.canAskForReview=function(){return this.Constants.apiReview.enabled&&("draft"===this.api.workflow_state||"request_for_changes"===this.api.workflow_state||!this.api.workflow_state)},e.prototype.canChangeLifecycle=function(){return!this.Constants.apiReview.enabled||this.Constants.apiReview.enabled&&(!this.api.workflow_state||"review_ok"===this.api.workflow_state)},e.prototype.canChangeApiLifecycle=function(){return this.Constants.apiReview.enabled?!this.api.workflow_state||"review_ok"===this.api.workflow_state:"created"===this.api.lifecycle_state||"published"===this.api.lifecycle_state||"unpublished"===this.api.lifecycle_state},e.prototype.canPublish=function(){return!this.api.lifecycle_state||"created"===this.api.lifecycle_state||"unpublished"===this.api.lifecycle_state},e.prototype.isDeprecated=function(){return"deprecated"===this.api.lifecycle_state},e.prototype.askForReview=function(){var e=this;this.$mdDialog.show({controller:"DialogConfirmController",controllerAs:"ctrl",template:i(5),clickOutsideToClose:!0,locals:{title:"Are you sure you want to ask for a review of the API?",msg:"",confirmButton:"Ask for review"}}).then((function(t){t&&e.ApiService.askForReview(e.api).then((function(t){e.api.workflow_state="in_review",e.api.etag=t.headers("etag"),e.$rootScope.$broadcast("apiChangeSuccess",{api:e.api}),e.NotificationService.show("Review has been asked for API "+e.api.name)}))}))},e.prototype.showDuplicateDialog=function(){var e=this;this.$mdDialog.show({controller:"DialogApiDuplicateController",controllerAs:"$ctrl",template:i(636),clickOutsideToClose:!0,locals:{api:this.$scope.$parent.apiCtrl.api}}).then((function(t){t&&e.$state.go("management.apis.detail.portal.general",{apiId:t.id})}))},e}();t.default=o},function(e,t){e.exports=' <md-dialog> <form name=formApiDefinition ng-submit=export() novalidate> <md-dialog-content layout-padding> <div> <h4>Export API definition as :</h4> <div layout=column layout-align="space-between center"> <md-select ng-model=data.exportVersion placeholder="Export as"> <md-option value=default selected=selected>Current version ({{ graviteeVersion }})</md-option> <md-option value=1.25>1.25.x to 1.28.x version</md-option> <md-option value=1.20>1.20.x to 1.24.x version</md-option> <md-option value=1.15>1.15.x to 1.16.x version</md-option> </md-select> </div> <span ng-if="data.exportVersion !== \'default\'" style=font-size:75%;color:orange> <ng-md-icon icon=warning style=fill:orange></ng-md-icon>Some data loss may occur depending on the target version. </span> </div> <h4>What do you want to export ?</h4> <div layout=column> <md-checkbox ng-repeat="fl in filteredFields" aria-label=fl.id ng-model=fl.checked> {{ fl.description }} </md-checkbox> </div> </md-dialog-content> <md-dialog-actions layout=row> <md-button md-no-ink ng-click=hide()> Cancel </md-button> <md-button type=submit class="md-raised md-primary" ng-disabled=formApiDefinition.$invalid> Export </md-button> </md-dialog-actions> </form> </md-dialog> '},function(e,t){e.exports=' <md-dialog> <form name=formApiDefinition ng-submit=$ctrl.duplicate() novalidate> <md-dialog-content layout-padding> <h4>What do you want to duplicate?</h4> <div layout=column> <div layout=row> <md-input-container layout=row flex> <label>Context path</label> <input type=text ng-model=$ctrl.contextPath name=contextPath ng-change=$ctrl.onContextPathChanged() minlength=3 ng-pattern=/^\\/[\\/.a-zA-Z0-9-_]+$/ placeholder={{$ctrl.contextPathPlaceholder}} required> <div ng-messages=$ctrl.contextPath.$error> <div ng-message=required>Context path is required.</div> <div ng-message=minlength>Context path has to be more than 3 characters long.</div> <div ng-message=pattern>Context path is not valid (must start with a \'/\' and must contain any letter, capitalize letter, number, dash or underscore)</div> </div> <ng-md-icon icon=close style=fill:red ng-if="$ctrl.contextPathInvalid === true"></ng-md-icon> <ng-md-icon icon=check style=fill:green ng-if="$ctrl.contextPathInvalid === false"></ng-md-icon> </md-input-container> <md-input-container flex=30> <label>Version</label> <input ng-model=$ctrl.version type=text maxlength=32 name=version placeholder={{$ctrl.versionPlaceholder}}> <div class=hint ng-if="$ctrl.version.$valid || $ctrl.version.$pristine">API Version (ex: 1.0)</div> <div ng-messages=$ctrl.version.$error> <div ng-message=required>API Version is required.</div> <div ng-message=md-maxlength>The version has to be less than 32 characters long.</div> </div> </md-input-container> </div> <md-checkbox ng-repeat="fl in $ctrl.filteredFields" aria-label=fl.id ng-model=fl.checked> {{ fl.description }} </md-checkbox> </div> </md-dialog-content> <md-dialog-actions layout=row> <md-button md-no-ink ng-click=$ctrl.hide()> Cancel </md-button> <md-button type=submit class="md-raised md-primary" ng-disabled="formApiDefinition.$invalid || $ctrl.contextPathInvalid"> Duplicate </md-button> </md-dialog-actions> </form> </md-dialog> '},function(e,t,i){"use strict";t.__esModule=!0;var n=function(){function e(e,t,i,n,a,o,r,s,l,c,d){this.resolvedApi=e,this.$state=t,this.$scope=i,this.$rootScope=n,this.$mdDialog=a,this.ApiService=o,this.NotificationService=r,this.resolvedApiState=s,this.SidenavService=l,this.UserService=c,this.Constants=d,this.$scope=i,this.$state=t,this.$mdDialog=a,this.$rootScope=n,this.api=e.data,this.api.etag=e.headers("etag"),l.setCurrentResource(this.api.name),this.ApiService=o,this.NotificationService=r,this.UserService=c,this.apiJustDeployed=!1,this.apiIsSynchronized=s.data.is_synchronized,this.menu={},this.init()}return e.$inject=["resolvedApi","$state","$scope","$rootScope","$mdDialog","ApiService","NotificationService","resolvedApiState","SidenavService","UserService","Constants"],e.prototype.init=function(){var e=this;this.$scope.$on("apiPictureChangeSuccess",(function(t,i){e.api.picture=i.image,e.updatePicture(e.api)})),this.$scope.$on("apiChangeSuccess",(function(t,i){e.api=i.api,e.checkAPISynchronization(e.api)})),this.menu={plans:{perm:this.UserService.isUserHasPermissions(["api-plan-r"]),goTo:"management.apis.detail.portal.plans.list"},subscriptions:{perm:this.UserService.isUserHasPermissions(["api-subscription-r"]),goTo:"management.apis.detail.portal.subscriptions.list"},documentation:{perm:this.UserService.isUserHasPermissions(["api-documentation-r"]),goTo:"management.apis.detail.portal.documentation"},metadata:{perm:this.UserService.isUserHasPermissions(["api-metadata-r"]),goTo:"management.apis.detail.portal.metadata"},members:{perm:this.UserService.isUserHasPermissions(["api-member-r"]),goTo:"management.apis.detail.portal.members"},groups:{perm:this.UserService.isUserHasPermissions(["api-member-r"]),goTo:"management.apis.detail.portal.groups"}}},e.prototype.checkAPISynchronization=function(e){var t=this;this.ApiService.isAPISynchronized(e.id).then((function(e){t.apiJustDeployed=!1,t.apiIsSynchronized=!!e.data.is_synchronized,t.$rootScope.$broadcast("checkAPISynchronizationSucceed")}))},e.prototype.showDeployAPIConfirm=function(e,t){e.stopPropagation();var n=this;this.$mdDialog.show({controller:"DialogConfirmController",controllerAs:"ctrl",template:i(162),clickOutsideToClose:!0,locals:{title:"Would you like to deploy your API?",confirmButton:"OK"}}).then((function(e){e&&n.deploy(t)}))},e.prototype.showReviewConfirm=function(e,t){var n=this;e.stopPropagation(),this.$mdDialog.show({controller:"DialogReviewController",controllerAs:"$ctrl",template:i(638),clickOutsideToClose:!0,locals:{api:t},resolve:{qualityRules:["QualityRuleService",function(e){return e.list().then((function(e){return e.data}))}],apiQualityRules:["QualityRuleService",function(e){return e.listByApi(t.id).then((function(e){return e.data}))}]}}).then((function(e){e&&(e.accept?n.ApiService.acceptReview(t,e.message).then((function(e){n.api.workflow_state="review_ok",n.api.etag=e.headers("etag"),n.NotificationService.show("Changes accepted for API "+n.api.name),n.$rootScope.$broadcast("apiChangeSuccess",{api:n.api})})):n.ApiService.rejectReview(t,e.message).then((function(e){n.api.workflow_state="request_for_changes",n.api.etag=e.headers("etag"),n.NotificationService.show("Changes rejected for API "+n.api.name),n.$rootScope.$broadcast("apiChangeSuccess",{api:n.api})})))}))},e.prototype.deploy=function(e){var t=this;this.ApiService.deploy(e.id).then((function(i){t.NotificationService.show("API deployed"),t.api=i.data,t.api.etag=i.headers("etag"),t.api.picture_url=e.picture_url,t.apiJustDeployed=!0,t.$rootScope.$broadcast("apiChangeSuccess",{api:t.api})}))},e.prototype.updatePicture=function(e){var t=this;this.ApiService.update(e).then((function(e){t.api=e.data,t.api.etag=e.headers("etag"),t.NotificationService.show("API '"+t.api.name+"' saved"),t.$rootScope.$broadcast("apiChangeSuccess",{api:t.api})}))},e.prototype.canDeploy=function(){return!this.Constants.apiReview.enabled||(!this.api.workflow_state||"review_ok"===this.api.workflow_state)},e.prototype.canReview=function(){return this.Constants.apiReview.enabled&&"in_review"===this.api.workflow_state},e.prototype.isRequestForChanges=function(){return this.Constants.apiReview.enabled&&"request_for_changes"===this.api.workflow_state},e.prototype.isInDraft=function(){return this.Constants.apiReview.enabled&&"draft"===this.api.workflow_state},e.prototype.isReviewOK=function(){return this.Constants.apiReview.enabled&&"review_ok"===this.api.workflow_state},e.prototype.isDeprecated=function(){return"deprecated"===this.api.lifecycle_state},e.prototype.showRequestForChangesConfirm=function(){var e=this;this.$mdDialog.show({controller:"DialogRequestForChangesController",controllerAs:"$ctrl",template:i(639),clickOutsideToClose:!0}).then((function(t){t&&e.ApiService.rejectReview(e.api,t.message).then((function(t){e.api.workflow_state="request_for_changes",e.api.etag=t.headers("etag"),e.$rootScope.$broadcast("apiChangeSuccess",{api:e.api}),e.NotificationService.show("Changes has been requested for API "+e.api.name)}))}))},e}();t.default=n},function(e,t){e.exports=' <md-dialog aria-label=confirm-dialog> <md-dialog-content layout-padding> <h4>Validate review?</h4> <p ng-bind-html=msg></p> <div layout=column> <md-checkbox aria-label="Quality rules" ng-repeat="qualityRule in $ctrl.qualityRules" ng-click=$ctrl.toggleQualityRule(qualityRule) ng-checked=$ctrl.isChecked(qualityRule)> {{qualityRule.description}} </md-checkbox> </div> <md-input-container class=md-block> <label>Comments</label> <textarea aria-label="Review message" ng-model=$ctrl.message maxlength=500 rows=2 cols=50></textarea> </md-input-container> </md-dialog-content> <md-dialog-actions layout=row> <md-button ng-click=$ctrl.cancel()>Cancel</md-button> <md-button class="md-raised md-primary" ng-click=$ctrl.confirm(true)>Accept</md-button> <md-button class="md-raised md-warn" ng-click=$ctrl.confirm(false)>Reject</md-button> </md-dialog-actions> </md-dialog> '},function(e,t){e.exports=' <md-dialog aria-label=confirm-dialog> <md-dialog-content layout-padding> <h4>Are you sure you want to request for changes on the API?</h4> <p ng-bind-html=msg></p> <md-input-container class=md-block> <label>Comments</label> <textarea aria-label="Review message" ng-model=$ctrl.message maxlength=500 rows=2 cols=50></textarea> </md-input-container> </md-dialog-content> <md-dialog-actions layout=row> <md-button ng-click=$ctrl.cancel()>Cancel</md-button> <md-button class="md-raised md-warn" ng-click=$ctrl.confirm()>Request for changes</md-button> </md-dialog-actions> </md-dialog> '},function(e,t,i){"use strict";t.__esModule=!0;var n=i(3),a=function(){function e(e,t,i,a,o){var r=this;this.ApiService=e,this.resolvedApi=t,this.$scope=i,this.$state=a,this.dashboards=o,this.ApiService=e,this.$scope=i,this.api=t.data,this.dashboards=n.filter(this.dashboards,"enabled");var s=this.$state.params.dashboard;s?(this.dashboard=n.find(this.dashboards,{id:s}),this.dashboard||(delete this.$state.params.dashboard,this.$state.go(this.$state.current))):this.dashboard=this.dashboards[0],n.forEach(this.dashboards,(function(e){e.definition&&(e.definition=JSON.parse(e.definition)),n.forEach(e.definition,(function(e){n.merge(e,{root:r.api.id,chart:{service:{caller:r.ApiService,function:r.ApiService.analytics}}})}))}))}return e.$inject=["ApiService","resolvedApi","$scope","$state","dashboards"],e.prototype.viewLogs=function(){this.$state.transitionTo("management.apis.detail.analytics.logs",this.$state.params)},e.prototype.onDashboardChanged=function(){this.$scope.$broadcast("dashboardReload"),this.setDashboard(this.dashboard.id)},e.prototype.setDashboard=function(e){this.$state.transitionTo(this.$state.current,n.merge(this.$state.params,{dashboard:e}),{reload:!0})},e}();t.default=a},function(e,t,i){"use strict";t.__esModule=!0;var n=i(7),a=i(3),o=function(){function e(e,t,i,n,o,r,s,l,c){var d=this;if(this.ApiService=e,this.resolvedMembers=t,this.resolvedGroups=i,this.$mdDialog=n,this.NotificationService=o,this.$scope=r,this.UserService=s,this.GroupService=l,this.RoleService=c,this.api=this.$scope.$parent.apiCtrl.api,this.members=t.data,this.newPrimaryOwner=null,this.$scope.searchText="",this.groupById=a.keyBy(i,"id"),this.displayGroups={},a.forEach(i,(function(e){d.displayGroups[e.id]=!1})),this.groupMembers={},this.groupIdsWithMembers=[],this.api.groups){var p=this;a.forEach(this.api.groups,(function(e){l.getMembers(e).then((function(t){var i=a.filter(t.data,(function(e){return e.roles.API}));i.length>0&&(p.groupMembers[e]=i,p.groupIdsWithMembers.push(e))}))}))}var m=this;c.list("API").then((function(e){m.roles=e,m.newPORoles=a.filter(e,(function(e){return"PRIMARY_OWNER"!==e.name})),m.newPORole=a.find(e,(function(e){return e.default}))}))}return e.$inject=["ApiService","resolvedMembers","resolvedGroups","$mdDialog","NotificationService","$scope","UserService","GroupService","RoleService"],e.prototype.updateMember=function(e){var t=this;e.role&&this.ApiService.addOrUpdateMember(this.api.id,a.pick(e,["id","reference","role"])).then((function(){t.NotificationService.show("Member "+e.displayName+" has been updated with role "+e.role)}))},e.prototype.deleteMember=function(e){var t=this,i=this.members.indexOf(e);this.ApiService.deleteMember(this.api.id,e.id).then((function(){t.members.splice(i,1),t.NotificationService.show("Member "+e.displayName+" has been removed")}))},e.prototype.isPrimaryOwner=function(){return this.UserService.currentUser.id===this.api.owner.id},e.prototype.showAddMemberModal=function(e){var t=this;this.$mdDialog.show({controller:"DialogAddMemberApiController",template:i(642),parent:n.element(document.body),targetEvent:e,clickOutsideToClose:!0,locals:{api:this.api,members:this.members}}).then((function(e){e&&t.ApiService.getMembers(e.id).then((function(e){t.members=e.data}))}),(function(){}))},e.prototype.showDeleteMemberConfirm=function(e,t){e.stopPropagation();var n=this;this.$mdDialog.show({controller:"DialogConfirmController",controllerAs:"ctrl",template:i(162),clickOutsideToClose:!0,locals:{title:"Would you like to remove the member ?",confirmButton:"Remove"}}).then((function(e){e&&n.deleteMember(t)}))},e.prototype.getMembershipDisplay=function(e){return e.displayName?e.username?e.displayName+" ("+e.username+")":e.displayName:e.username},e.prototype.getMembershipAvatar=function(e){return e.id?this.UserService.getUserAvatar(e.id):"assets/default_photo.png"},e}();t.default=o},function(e,t){e.exports=' <md-dialog aria-label="Add member" layout-padding flex=30> <md-dialog-content class=searchMembers> <form name=formMember ng-submit=$event.preventDefault()> <md-autocomplete md-selected-item=selectedItem md-search-text=searchText md-selected-item-change=selectUser(user) md-items="user in searchUser(searchText)" md-item-text=user.reference md-min-length=1 md-delay=500 placeholder="Search user..." md-autofocus=true md-menu-class=autocomplete-search-user flex> <md-item-template> <md-list-item class="md-2-line contact-item"> <gravitee-identity-picture image-id=user.id image-url=getUserAvatar(user.id) image-name=user.displayName image-width=40 image-border-radius=true class=md-avatar></gravitee-identity-picture> <div class="md-list-item-text compact"> <h3>{{user.displayName}}</h3> <span ng-if=user.email>{{user.email}}</span> </div> </md-list-item> </md-item-template> <md-not-found> No user matching "{{searchText}}" were found, or users already selected. </md-not-found> </md-autocomplete> <br/> <md-list class=fixedRows ng-show="usersSelected.length > 0"> <md-subheader class=md-no-sticky>Selected users</md-subheader> <md-list-item class="md-2-line contact-item" ng-repeat="(index, user) in usersSelected"> <gravitee-identity-picture image-id=user.id image-url=getUserAvatar(user.id) image-name=user.displayName image-width=40 image-border-radius=true class=md-avatar></gravitee-identity-picture> <div class="md-list-item-text compact"> <h3>{{user.displayName}}</h3> </div> </md-list-item> </md-list> <div ng-show="usersSelected.length > 0"> <md-subheader class=md-no-sticky>Select role</md-subheader> <md-input-container class=md-block> <label>Role</label> <md-select ng-model=role required> <md-option ng-repeat="role in roles" ng-value=role ng-disabled=role.system> {{role.name}} </md-option> </md-select> </md-input-container> </div> </form> </md-dialog-content> <md-dialog-actions layout=row> <md-button ng-click=hide()> Cancel </md-button> <md-button type=submit class="md-raised md-primary" ng-click=addMembers() ng-disabled="formMember.$invalid || usersSelected.length === 0"> Add </md-button> </md-dialog-actions> </md-dialog> '},function(e,t,i){"use strict";t.__esModule=!0;var n=i(7),a=i(3),o=function(){function e(e,t,i,n,o,r,s,l,c,d,p,m){var u=this;if(this.ApiService=e,this.resolvedApi=t,this.resolvedMembers=i,this.resolvedGroups=n,this.$state=o,this.$mdDialog=r,this.NotificationService=s,this.$scope=l,this.UserService=c,this.GroupService=d,this.RoleService=p,this.Constants=m,this.api=t.data,this.members=i.data,this.newPrimaryOwner=null,this.$scope.searchText="",this.groupById=a.keyBy(n,"id"),this.displayGroups={},a.forEach(n,(function(e){u.displayGroups[e.id]=!1})),this.groupMembers={},this.groupIdsWithMembers=[],this.api.groups){var g=this;a.forEach(this.api.groups,(function(e){d.getMembers(e).then((function(t){var i=a.filter(t.data,(function(e){return e.roles.API}));i.length>0&&(g.groupMembers[e]=i,g.groupIdsWithMembers.push(e))}))}))}var h=this;p.list("API").then((function(e){h.roles=e,h.newPORoles=a.filter(e,(function(e){return"PRIMARY_OWNER"!==e.name})),h.newPORole=a.find(e,(function(e){return e.default}))}))}return e.$inject=["ApiService","resolvedApi","resolvedMembers","resolvedGroups","$state","$mdDialog","NotificationService","$scope","UserService","GroupService","RoleService","Constants"],e.prototype.isPrimaryOwner=function(){return this.UserService.currentUser.id===this.api.owner.id},e.prototype.showTransferOwnershipConfirm=function(e){var t=this;this.$mdDialog.show({controller:"DialogTransferApiController",controllerAs:"$ctrl",template:i(644),parent:n.element(document.body),targetEvent:e,clickOutsideToClose:!0,locals:{newRole:this.newPORole}}).then((function(e){e&&t.transferOwnership(t.newPORole.name)}),(function(){}))},e.prototype.isAllowedToTransferOwnership=function(){return this.UserService.currentUser.isAdmin()||this.isPrimaryOwner()},e.prototype.searchUser=function(e){var t=this;return e?this.UserService.search(e).then((function(e){var i=e.data;return a.filter(i,(function(e){return void 0===e.id||-1===a.findIndex(t.members,(function(t){return t.id===e.id&&"PRIMARY_OWNER"===t.role}))}))})):a.filter(this.members,(function(e){return"PRIMARY_OWNER"!==e.role}))},e.prototype.selectedUserChange=function(e){e?this.newPrimaryOwner=e:null!==this.newPrimaryOwner&&(this.newPrimaryOwner=null)},e.prototype.transferOwnership=function(e){var t=this,i={id:this.newPrimaryOwner.id,reference:this.newPrimaryOwner.reference,role:e};this.ApiService.transferOwnership(this.api.id,i).then((function(){t.NotificationService.show("API ownership changed !"),t.$state.go("management.apis.list")}))},e}();t.default=o},function(e,t){e.exports=' <md-dialog aria-label="Transfer API"> <md-dialog-content layout-padding> <h4>Transfer API</h4> <p> This action cannot be undone. If you are the primary owner of this API, your role will be set to <code>{{$ctrl.newRole.name}}</code>. </p> </md-dialog-content> <md-dialog-actions layout=row> <md-button ng-click=cancel()> Cancel </md-button> <md-button ng-click=transferOwnership() class="md-raised md-warn"> I understand, transfer this API </md-button> </md-dialog-actions> </md-dialog> '},function(e,t,i){"use strict";t.__esModule=!0;var n=i(3),a=i(7),o=function(){function e(e,t,i,a,o,r,s,l,c,d){var p=this;this.ApiService=e,this.PolicyService=t,this.$mdDialog=i,this.NotificationService=a,this.$scope=o,this.dragularService=r,this.$q=s,this.$rootScope=l,this.StringService=c,this.UserService=d,this.pathsInitialized=[],this.dndEnabled=d.isUserHasPermissions(["api-definition-u"]),this.apiPoliciesByPath={},this.policiesToCopy=[],this.policiesMap={},this.selectedApiPolicy={},this.httpMethods=["GET","POST","PUT","DELETE","HEAD","PATCH","OPTIONS","TRACE","CONNECT"],this.httpMethodsFilter=n.clone(this.httpMethods),this.httpMethodsUpdated=!1,this.schemaByPolicyId={},this.listAllPolicies().then((function(e){n.forEach(e,(function(e){var t=e.policy;p.policiesToCopy.push(t),p.policiesMap[t.policyId]=t})),n.forEach(p.$scope.$parent.apiCtrl.api.paths,(function(e,t){p.apiPoliciesByPath[t]=n.cloneDeep(e)})),p.completeApiPolicies(p.apiPoliciesByPath),p.initDragular(),p.pathsToCompare=p.generatePathsToCompare()}));var m=this;this.$scope.$on("dragulardrop",(function(e,t,i,n,a,o,r,s){null!==r?m.editPolicy(s,i.attributes["data-path"].value).then((function(e){"empty"===e.id&&m.savePaths()})):m.savePaths()}))}return e.$inject=["ApiService","PolicyService","$mdDialog","NotificationService","$scope","dragularService","$q","$rootScope","StringService","UserService"],e.prototype.generatePathsToCompare=function(){var e=this;return n.map(n.keys(this.apiPoliciesByPath),(function(t){return e.clearPathParam(t)}))},e.prototype.completeApiPolicies=function(e){var t=this;n.forEach(e,(function(e){n.forEach(e,(function(e){n.forEach(e,(function(i,n){if("methods"!==n&&"enabled"!==n&&"description"!==n&&"$$hashKey"!==n){e.policyId=n;var a=t.policiesMap[e.policyId];a&&(e.name=a.name,e.type=a.type,e.version=a.version,e.schema=a.schema)}})),e.methods?e.methods=n.map(e.methods,(function(e){return e.toUpperCase()})):e.methods=n.clone(t.httpMethods)}))}))},e.prototype.initDragular=function(){var e=document.querySelector(".gravitee-policy-draggable");this.dragularService([e],{moves:function(){return!0},copy:!0,scope:this.$scope,containersModel:this.policiesToCopy,classes:{unselectable:"gravitee-policy-draggable-selected"},nameSpace:"policies",accepts:this.acceptDragDrop})},e.prototype.initDragularDropZone=function(e){if(!this.pathsInitialized[e]){var t=document.querySelector(".dropzone-"+this.StringService.hashCode(e));t&&(this.dragularService([t],{moves:function(){return!0},copy:!1,scope:this.$scope,containersModel:this.apiPoliciesByPath[e],classes:{unselectable:"gravitee-policy-draggable-selected"},nameSpace:"policies",accepts:this.acceptDragDrop}),this.pathsInitialized[e]=!0)}},e.prototype.listAllPolicies=function(){var e=this;return this.PolicyService.list({expandSchema:!0}).then((function(t){return n.map(t.data,(function(t){return{policy:{policyId:t.id,methods:e.httpMethods,version:t.version,name:t.name,type:t.type,description:t.description,enabled:t.enabled||!0}}}))}))},e.prototype.acceptDragDrop=function(e,t,i){return i===document.querySelector(".gravitee-policy-draggable")||i===t},e.prototype.editPolicy=function(e,t){var i=this;return this.$scope.policyJsonSchemaForm=["*"],this.selectedApiPolicy=this.apiPoliciesByPath[t][e],void 0===this.schemaByPolicyId[this.selectedApiPolicy.policyId]?this.PolicyService.getSchema(this.selectedApiPolicy.policyId).then((function(e){return i.$scope.policyJsonSchema=i.schemaByPolicyId[i.selectedApiPolicy.policyId]=e.data,i.selectedApiPolicy[i.selectedApiPolicy.policyId]=i.selectedApiPolicy[i.selectedApiPolicy.policyId]||{},i.checkEmptySchema(),i.$scope.policyJsonSchema})):this.$q((function(){return i.$scope.policyJsonSchema=i.schemaByPolicyId[i.selectedApiPolicy.policyId],i.selectedApiPolicy[i.selectedApiPolicy.policyId]=i.selectedApiPolicy[i.selectedApiPolicy.policyId]||{},i.checkEmptySchema(),i.$scope.policyJsonSchema}))},e.prototype.getHttpMethodClass=function(e,t){return"gravitee-policy-method-badge-"+e+(t.indexOf(e)>-1?"-selected":"-unselected")},e.prototype.getApiPolicyClass=function(e){var t=[],i=this.selectedApiPolicy&&this.selectedApiPolicy.$$hashKey===e.$$hashKey;return i&&t.push("gravitee-policy-card-selected"),i||e.enabled||t.push("gravitee-policy-card-disabled"),e.name||t.push("gravitee-policy-card-missed"),t.join(" ")},e.prototype.getDropzoneClass=function(e){return"gravitee-policy-dropzone gravitee-policy-dropzone-filled dropzone-"+this.StringService.hashCode(e)},e.prototype.toggleHttpMethod=function(e,t){this.httpMethodsUpdated=!0;var i=t.indexOf(e);i>-1?t.splice(i,1):t.push(e)},e.prototype.filterByMethod=function(e){var t=this;return n.reduce(n.map(e.methods,(function(e){return t.httpMethodsFilter.indexOf(e)<0})),(function(e,t){return e&&t}))},e.prototype.removePolicy=function(e,t,a){a.stopPropagation(),this.selectedApiPolicy=null;var o=this.apiPoliciesByPath[t][e].$$hashKey,r=this;this.$mdDialog.show({controller:"DialogConfirmController",controllerAs:"ctrl",template:i(5),clickOutsideToClose:!0,locals:{title:"Are you sure you want to remove this policy ?",confirmButton:"Remove"}}).then((function(e){e&&(n.forEach(r.apiPoliciesByPath[t],(function(e,i){if(e.$$hashKey===o)return r.apiPoliciesByPath[t].splice(i,1),!1})),r.savePaths())}))},e.prototype.editPolicyDescription=function(e,t,n){n.stopPropagation(),this.selectedApiPolicy=null;var a=this.apiPoliciesByPath[t][e],o=this;this.$mdDialog.show({controller:"DialogEditPolicyController",controllerAs:"editPolicyDialogCtrl",template:i(246),clickOutsideToClose:!0,locals:{description:a.description}}).then((function(e){a.description=e,o.savePaths()}),(function(){}))},e.prototype.switchPolicyEnabled=function(e,t,i){i.stopPropagation(),this.selectedApiPolicy=null;var n=this.apiPoliciesByPath[t][e];n.enabled=!n.enabled,this.savePaths()},e.prototype.savePaths=function(){this.$scope.$parent.apiCtrl.api.paths=n.cloneDeep(this.apiPoliciesByPath),n.forEach(this.$scope.$parent.apiCtrl.api.paths,(function(e){n.forEach(e,(function(e){delete e.policyId,delete e.name,delete e.type,delete e.version,delete e.schema,n.forOwn(e,(function(e){n.forOwn(e,(function(e){n.isArray(e)&&n.remove(e,(function(e){return void 0===e||""===e}))}))}))}))}));var e=this,t=this.$scope.$parent.apiCtrl.api;return this.ApiService.update(t).then((function(t){e.NotificationService.show("API '"+t.data.name+"' saved"),e.pathsToCompare=e.generatePathsToCompare(),e.httpMethodsUpdated=!1,e.$rootScope.$broadcast("apiChangeSuccess",{api:t.data})}))},e.prototype.showAddPathModal=function(e){var t=this;this.$mdDialog.show({controller:"AddPoliciesPathController",controllerAs:"addPoliciesPathCtrl",template:i(646),parent:a.element(document.body),targetEvent:e,clickOutsideToClose:!0,locals:{paths:this.apiPoliciesByPath,rootCtrl:this}}).then((function(e){t.apiPoliciesByPath=e,t.savePaths()}))},e.prototype.removePath=function(e){this.selectedApiPolicy={};var t=this;this.$mdDialog.show({controller:"DialogConfirmController",controllerAs:"ctrl",template:i(5),clickOutsideToClose:!0,locals:{title:"Are you sure you want to remove this path ?",confirmButton:"Remove"}}).then((function(i){i&&(delete t.apiPoliciesByPath[e],t.pathsInitialized[e]=!1,t.savePaths())}))},e.prototype.pathNotExists=function(e,t){return!e||""===e.trim()||(!(!t||this.clearPathParam(e)!==this.clearPathParam(this.sortedPaths()[t]))||!n.includes(this.pathsToCompare,this.clearPathParam(e)))},e.prototype.pathStartWithSlash=function(e){return!e||""===e.trim()||"/"===e[0]},e.prototype.clearPathParam=function(e){return"/"===e?"/":e.trim().replace(/(:.*?\/)|(:.*$)/g,":x/").replace(/\/+$/,"")},e.prototype.sortedPaths=function(){var e=this,t=n.keys(this.apiPoliciesByPath);return n.sortBy(t,(function(t){return e.clearPathParam(t)}))},e.prototype.pathKeyPress=function(e,t,i,n){switch(e.keyCode){case 13:if(!t.$invalid){var a=this.sortedPaths()[n];this.apiPoliciesByPath[i]=this.apiPoliciesByPath[a],delete this.apiPoliciesByPath[a],this.savePaths()}break;case 27:this.restoreOldPath(n,t)}},e.prototype.restoreOldPath=function(e,t){t.$setViewValue(this.sortedPaths()[e]),t.$commitViewValue(),document.forms.editPathForm["path"+e].value=this.sortedPaths()[e]},e.prototype.checkEmptySchema=function(){this.$scope.policyJsonSchema&&0!==Object.keys(this.$scope.policyJsonSchema).length||(this.$scope.policyJsonSchema={type:"object",id:"empty",properties:{"":{}}}),this.httpMethodsUpdated=!1},e}();t.default=o},function(e,t){e.exports=' <md-dialog aria-label="Add a new path"> <form name=newPathForm ng-submit=addPoliciesPathCtrl.add() novalidate> <md-dialog-content layout-padding> <h4>New path</h4> <md-input-container class=md-block flex-gt-sm> <label>New Path</label> <input required name=path ui-validate="{\n                    pathAlreadyExists : \'addPoliciesPathCtrl.rootCtrl.pathNotExists($value)\',\n                    mustStartWithSlash : \'addPoliciesPathCtrl.rootCtrl.pathStartWithSlash($value)\'\n                 }" ng-model=addPoliciesPathCtrl.newPath.path> <div ng-messages=newPathForm.path.$error ng-show=newPathForm.path.$dirty> <div ng-message=required>This is required!</div> <div ng-message=pathAlreadyExists>This path is already configured.</div> <div ng-message=mustStartWithSlash>The path must start with /</div> </div> </md-input-container> <md-checkbox ng-model=addPoliciesPathCtrl.newPath.copyFromRootPath aria-label="Copy from root path" ng-disabled=!addPoliciesPathCtrl.canCopyFromRootPath> Copy all policies and configuration from the root path ? </md-checkbox> </md-dialog-content> <md-dialog-actions layout=row> <md-button ng-click=addPoliciesPathCtrl.hide()> Cancel </md-button> <md-button type=submit class="md-raised md-primary" ng-disabled=newPathForm.$invalid> Add </md-button> </md-dialog-actions> </form> </md-dialog> '},function(e,t,i){"use strict";t.__esModule=!0;var n=i(3),a=function(){function e(e,t,i,a,o,r,s){this.ApiService=e,this.NotificationService=t,this.$scope=i,this.$rootScope=a,this.$state=o,this.$stateParams=r,this.resolvedTenants=s,this.creation=!1,this.api=this.$scope.$parent.apiCtrl.api,this.tenants=s.data,this.$scope.groupName=r.groupName,this.$scope.duplicateEndpointNames=!1,this.group=n.find(this.api.proxy.groups,{name:r.groupName}),this.endpoint=n.find(this.group.endpoints,{name:r.endpointName}),this.initialEndpoints=n.cloneDeep(this.group.endpoints),this.endpoint||(this.endpoint={weight:1,inherit:!0},this.creation=!0)}return e.$inject=["ApiService","NotificationService","$scope","$rootScope","$state","$stateParams","resolvedTenants"],e.prototype.update=function(e){var t=this;this.endpoint.inherit||(this.endpoint.ssl.trustAll&&delete this.endpoint.ssl.trustStore,!this.endpoint.ssl.trustStore||this.endpoint.ssl.trustStore.type&&""!==this.endpoint.ssl.trustStore.type||delete this.endpoint.ssl.trustStore,!this.endpoint.ssl.keyStore||this.endpoint.ssl.keyStore.type&&""!==this.endpoint.ssl.keyStore.type||delete this.endpoint.ssl.keyStore,this.endpoint.headers.length>0?this.endpoint.headers=n.mapValues(n.keyBy(this.endpoint.headers,"name"),"value"):delete this.endpoint.headers);var i=n.find(this.api.proxy.groups,{name:this.$stateParams.groupName});n.includes(i.endpoints,this.endpoint)||(i.endpoints=i.endpoints||[],i.endpoints.push(this.endpoint)),this.ApiService.update(e).then((function(e){t.api=e.data,t.api.etag=e.headers("etag"),t.onApiUpdate(),t.initialEndpoints=n.cloneDeep(i.endpoints)}))},e.prototype.onApiUpdate=function(){this.$rootScope.$broadcast("apiChangeSuccess",{api:this.api}),this.NotificationService.show("Endpoint saved"),this.$state.go("management.apis.detail.proxy.endpoints")},e.prototype.reset=function(){this.$scope.duplicateEndpointNames=!1,this.$state.reload()},e.prototype.backToEndpointsConfiguration=function(){n.find(this.api.proxy.groups,{name:this.$stateParams.groupName}).endpoints=n.cloneDeep(this.initialEndpoints),this.$state.go("management.apis.detail.proxy.endpoints")},e.prototype.checkEndpointNameUniqueness=function(){this.$scope.duplicateEndpointNames=this.ApiService.isEndpointNameAlreadyUsed(this.api,this.endpoint.name,this.creation)},e}();t.default=a},function(e,t,i){"use strict";t.__esModule=!0;var n=i(3),a=function(){function e(e,t,i,n,a,o,r,s,l){this.ApiService=e,this.NotificationService=t,this.ServiceDiscoveryService=i,this.$scope=n,this.$rootScope=a,this.resolvedServicesDiscovery=o,this.$state=r,this.$stateParams=s,this.$timeout=l,this.creation=!1}return e.$inject=["ApiService","NotificationService","ServiceDiscoveryService","$scope","$rootScope","resolvedServicesDiscovery","$state","$stateParams","$timeout"],e.prototype.$onInit=function(){this.api=this.$scope.$parent.apiCtrl.api,this.group=n.find(this.api.proxy.groups,{name:this.$stateParams.groupName}),this.$scope.duplicateEndpointNames=!1,this.group||(this.group={},this.creation=!0),this.serviceDiscoveryJsonSchemaForm=["*"],this.types=this.resolvedServicesDiscovery.data,this.discovery=this.group.services&&this.group.services.discovery,this.discovery=this.discovery||{enabled:!1,configuration:{}},this.initialGroups=n.cloneDeep(this.api.proxy.groups),this.$scope.lbs=[{name:"Round-Robin",value:"ROUND_ROBIN"},{name:"Random",value:"RANDOM"},{name:"Weighted Round-Robin",value:"WEIGHTED_ROUND_ROBIN"},{name:"Weighted Random",value:"WEIGHTED_RANDOM"}],this.group.load_balancing||(this.group.load_balancing={type:this.$scope.lbs[0].value}),this.retrievePluginSchema()},e.prototype.onTypeChange=function(){this.discovery.configuration={},this.retrievePluginSchema()},e.prototype.retrievePluginSchema=function(){var e=this;void 0!==this.discovery.provider&&this.ServiceDiscoveryService.getSchema(this.discovery.provider).then((function(t){var i=t.data;e.serviceDiscoveryJsonSchema=i}),(function(t){if(404===t.status)return e.serviceDiscoveryJsonSchema={},{schema:{}};e.NotificationService.showError("Unexpected error while loading service discovery schema for "+e.discovery.provider)}))},e.prototype.update=function(e){var t=this;this.group.services={discovery:this.discovery},n.includes(e.proxy.groups,this.group)||(e.proxy.groups?e.proxy.groups.push(this.group):e.proxy.groups=[this.group]),this.group.ssl.trustAll&&delete this.group.ssl.trustStore,!this.group.ssl.trustStore||this.group.ssl.trustStore.type&&""!==this.group.ssl.trustStore.type||delete this.group.ssl.trustStore,!this.group.ssl.keyStore||this.group.ssl.keyStore.type&&""!==this.group.ssl.keyStore.type||delete this.group.ssl.keyStore,this.group.headers.length>0?this.group.headers=n.mapValues(n.keyBy(this.group.headers,"name"),"value"):delete this.group.headers,this.ApiService.update(e).then((function(i){t.api=i.data,t.api.etag=i.headers("etag"),t.onApiUpdate(),t.initialGroups=n.cloneDeep(e.proxy.groups)}))},e.prototype.onApiUpdate=function(){this.$rootScope.$broadcast("apiChangeSuccess",{api:this.api}),this.NotificationService.show("Group configuration saved"),this.$state.go("management.apis.detail.proxy.endpoints")},e.prototype.reset=function(){this.$scope.duplicateEndpointNames=!1,this.$state.reload()},e.prototype.backToEndpointsConfiguration=function(){this.reset(),this.api.proxy.groups=n.cloneDeep(this.initialGroups),this.$state.go("management.apis.detail.proxy.endpoints")},e.prototype.checkEndpointNameUniqueness=function(){this.$scope.duplicateEndpointNames=this.ApiService.isEndpointNameAlreadyUsed(this.api,this.group.name,this.creation)},e}();t.default=a},function(e,t,i){"use strict";t.__esModule=!0;var n=i(3),a={bindings:{httpConfiguration:"=",inheritHttpConfiguration:"<",form:"<"},controller:function(){function e(){}return e.prototype.$onInit=function(){this.proxies=[{name:"HTTP CONNECT proxy",value:"HTTP"},{name:"SOCKS4/4a tcp proxy",value:"SOCKS4"},{name:"SOCKS5 tcp proxy",value:"SOCKS5"}],this.trustStoreTypes=[{name:"None",value:""},{name:"Java Trust Store (.jks)",value:"JKS"},{name:"PKCS#12 (.p12) / PFX (.pfx)",value:"PKCS12"},{name:"PEM (.pem)",value:"PEM"}],this.keyStoreTypes=[{name:"None",value:""},{name:"Java Trust Store (.jks)",value:"JKS"},{name:"PKCS#12 (.p12) / PFX (.pfx)",value:"PKCS12"},{name:"PEM (.pem)",value:"PEM"}],this.initModel()},e.prototype.toggleInherit=function(e){e?(delete this.httpConfiguration.http,delete this.httpConfiguration.ssl,delete this.httpConfiguration.proxy,delete this.httpConfiguration.headers):(this.httpConfiguration.http=n.cloneDeep(this.inheritHttpConfiguration.http),this.httpConfiguration.ssl=n.cloneDeep(this.inheritHttpConfiguration.ssl),this.httpConfiguration.proxy=n.cloneDeep(this.inheritHttpConfiguration.proxy),this.httpConfiguration.headers=n.cloneDeep(this.inheritHttpConfiguration.headers),this.initModel())},e.prototype.initModel=function(){var e=this;this.httpConfiguration.ssl=this.httpConfiguration.ssl||{trustAll:!1},this.httpConfiguration.ssl.trustStore=this.httpConfiguration.ssl.trustStore||{type:""},this.httpConfiguration.ssl.keyStore=this.httpConfiguration.ssl.keyStore||{type:""},this.httpConfiguration.headers=this.httpConfiguration.headers?Object.keys(this.httpConfiguration.headers).map((function(t){return{name:t,value:e.httpConfiguration.headers[t]}})):[],this.httpConfiguration.http||(this.httpConfiguration.http={connectTimeout:5e3,idleTimeout:6e4,keepAlive:!0,readTimeout:1e4,pipelining:!1,maxConcurrentConnections:100,useCompression:!0,followRedirects:!1}),this.httpConfiguration.ssl||(this.httpConfiguration.ssl={trustAll:!1,trustStore:{type:""}}),this.httpConfiguration.proxy||(this.httpConfiguration.proxy={}),this.httpConfiguration.headers||(this.httpConfiguration.headers={})},e.prototype.addHTTPHeader=function(){this.httpConfiguration.headers.push({name:"",value:""})},e.prototype.removeHTTPHeader=function(e){void 0!==this.httpConfiguration.headers&&(this.httpConfiguration.headers.splice(e,1),this.form.$setDirty())},e}(),template:i(650)};t.default=a},function(e,t){e.exports=' <md-input-container ng-if=$ctrl.inheritHttpConfiguration class=md-block> <md-checkbox ng-model=$ctrl.httpConfiguration.inherit aria-label="Inherit http configuration" class=md-align-top-left ng-change=$ctrl.toggleInherit($ctrl.httpConfiguration.inherit) flex> <span>Inherit HTTP configuration from group</span> </md-checkbox> </md-input-container> <div ng-if=!$ctrl.httpConfiguration.inherit> <section> <md-subheader> HTTP Request <div class=hints>Default configuration of HTTP requests emitted by the API gateway to upstream</div> </md-subheader> <div layout=column layout-wrap layout-gt-sm=row> <div layout=column layout-sm=column> <h5 style=color:grey> <span>Headers</span> <ng-md-icon icon=add_circle_outline style=fill:#b1bdc5 aria-label="Add HTTP header" ng-click=$ctrl.addHTTPHeader()>Add headers</ng-md-icon> </h5> <div layout=row layout-sm=column layout-align="center center" ng-repeat="header in $ctrl.httpConfiguration.headers"> <ng-md-icon icon=remove_circle_outline style=fill:#b1bdc5 aria-label="Delete header" ng-click=$ctrl.removeHTTPHeader($index)></ng-md-icon> <div flex=5 hide-xs hide-sm> </div> <md-input-container flex-gt-sm> <input aria-label="Header name" ng-model=header.name type=text placeholder="Header name" ng-required=true> </md-input-container> <div flex=5 hide-xs hide-sm> </div> <md-input-container flex-gt-sm> <input aria-label="Header value" ng-model=header.value type=text placeholder="Header value" ng-required=true> </md-input-container> </div> </div> </div> </section> <br/> <md-subheader>HTTP Configuration</md-subheader> <section> <div layout=column layout-wrap layout-gt-sm=row> <div flex-xs flex=50> <md-input-container flex-xs flex=50> <label>Connect timeout (ms)</label> <input ng-model=$ctrl.httpConfiguration.http.connectTimeout type=number required min=0> </md-input-container> </div> <div flex-xs flex=50> <md-input-container flex-xs flex=50> <label>Read timeout (ms)</label> <input ng-model=$ctrl.httpConfiguration.http.readTimeout type=number required min=0> </md-input-container> </div> <div flex-xs flex=50> <md-input-container flex-xs flex=50> <label>Idle timeout (ms)</label> <input ng-model=$ctrl.httpConfiguration.http.idleTimeout type=number required min=0> </md-input-container> </div> <div flex-xs flex=50> <md-input-container flex-xs flex=50> <label>Max concurrent connections</label> <input ng-model=$ctrl.httpConfiguration.http.maxConcurrentConnections type=number required min=10> </md-input-container> </div> </div> <div layout=column layout-wrap layout-gt-sm=row> <div flex-xs flex=50> <div layout-xs=column flex-xs=50> <md-checkbox ng-model=$ctrl.httpConfiguration.http.keepAlive aria-label="Enable keep-alive" class=md-align-top-left flex> Enable keep-alive<br/> <span class=ipsum> Use an HTTP persistent connection to send and receive multiple HTTP requests / responses. </span> </md-checkbox> </div> <div layout-xs=column flex-xs=50> <md-checkbox ng-model=$ctrl.httpConfiguration.http.pipelining aria-label="HTTP pipe-lining" class=md-align-top-left flex> HTTP pipe-lining<br/> <span class=ipsum> When pipe-lining is enabled requests will be written to connections without waiting for previous responses to return. </span> </md-checkbox> </div> <div layout-xs=column flex-xs=50> <md-checkbox ng-model=$ctrl.httpConfiguration.http.useCompression aria-label="Enables compression" class=md-align-top-left flex> Enables compression (gzip, deflate)<br/> <span class=ipsum> The gateway can let the remote http server know that it supports compression, and will be able to handle compressed response bodies. </span> </md-checkbox> </div> <div layout-xs=column flex-xs=50> <md-checkbox ng-model=$ctrl.httpConfiguration.http.followRedirects aria-label="Enables follow HTTP redirections" class=md-align-top-left flex> Follow HTTP redirections<br/> <span class=ipsum> when the client receives an <code>301</code>, <code>302</code>, <code>303</code> or <code>307</code> status code, it follows the redirection provided by the <code>Location</code> response header </span> </md-checkbox> </div> </div> </div> </section> <section> <md-subheader> <md-checkbox ng-model=$ctrl.httpConfiguration.proxy.enabled aria-label="Enable proxy" flex> <div ng-switch on=$ctrl.httpConfiguration.proxy.enabled> HTTP Proxy <span class=proxy-activated ng-switch-when=true>(active)</span> <span class=proxy-deactivated ng-switch-when=false>(not active)</span> <span class=proxy-deactivated ng-switch-default>(not active)</span> </div> <div class=hints>Use proxy for client connections</div> </md-checkbox> </md-subheader> <div layout=column layout-wrap layout-gt-sm=row> <div flex-xs flex=50> <md-input-container class=md-block flex-gt-sm> <label>Proxy type</label> <md-select ng-model=$ctrl.httpConfiguration.proxy.type ng-required=$ctrl.httpConfiguration.proxy.enabled ng-disabled=!$ctrl.httpConfiguration.proxy.enabled> <md-option ng-repeat="proxy in $ctrl.proxies" value={{proxy.value}}> {{proxy.name}} </md-option> </md-select> <div class=hint>Type of the TCP proxy server</div> </md-input-container> </div> </div> <div layout=column layout-wrap layout-gt-sm=row> <div flex-xs flex=50> <md-input-container class=md-block flex-gt-sm> <label>Host</label> <input ng-model=$ctrl.httpConfiguration.proxy.host type=text ng-required=$ctrl.httpConfiguration.proxy.enabled ng-disabled=!$ctrl.httpConfiguration.proxy.enabled> <div class=hint>Proxy host to connect to</div> </md-input-container> </div> <div flex-xs flex=50> <md-input-container class=md-block flex-gt-sm> <label>Port</label> <input ng-model=$ctrl.httpConfiguration.proxy.port type=number min=0 max=65536 ng-required=$ctrl.httpConfiguration.proxy.enabled ng-disabled=!$ctrl.httpConfiguration.proxy.enabled> <div class=hint>Proxy port to connect to</div> </md-input-container> </div> <div flex-xs flex=50> <md-input-container class=md-block flex-gt-sm> <label>Username</label> <input ng-model=$ctrl.httpConfiguration.proxy.username type=text ng-disabled=!$ctrl.httpConfiguration.proxy.enabled> <div class=hint>Optional proxy username</div> </md-input-container> </div> <div flex-xs flex=50> <md-input-container class=md-block flex-gt-sm> <label>Password</label> <input ng-model=$ctrl.httpConfiguration.proxy.password type=password autocomplete=new-password ng-disabled=!$ctrl.httpConfiguration.proxy.enabled> <div class=hint>Optional proxy password</div> </md-input-container> </div> </div> </section> <br/> <section> <md-subheader>SSL / TLS</md-subheader> <div layout=column layout-wrap> <div flex-xs flex=50> <div layout-xs=column flex-xs=100> <md-checkbox ng-model=$ctrl.httpConfiguration.ssl.trustAll aria-label="Enable trust all" class="md-warn md-align-top-left" flex> Trust all server certificates<br/> <span class=ipsum> Use this with caution (if over Internet). The gateway must trust any origin certificates. The connection will still be encrypted but this mode is vulnerable to \'man in the middle\' attacks. </span> </md-checkbox> </div> </div> <div flex-xs flex=50> <md-input-container class=md-block flex-gt-sm> <label>Type</label> <md-select ng-model=$ctrl.httpConfiguration.ssl.trustStore.type ng-disabled=$ctrl.httpConfiguration.ssl.trustAll> <md-option ng-repeat="trustStore in $ctrl.trustStoreTypes" value={{trustStore.value}}> {{trustStore.name}} </md-option> </md-select> <div class=hint>Type of the trust store</div> </md-input-container> </div> <div flex ng-if="!$ctrl.httpConfiguration.ssl.trustAll && $ctrl.httpConfiguration.ssl.trustStore.type === \'JKS\'"> <div flex-xs flex=50> <md-input-container class=md-block flex-gt-sm> <label>Path to JKS file</label> <input ng-model=$ctrl.httpConfiguration.ssl.trustStore.path type=text name=truststore-jks-path ng-required=!$ctrl.httpConfiguration.ssl.trustStore.content> <div class=hint>Path to the JKS file</div> </md-input-container> </div> <div flex-xs flex=50> <md-input-container class=md-block flex-gt-sm> <label>JKS content</label> <textarea ng-model=$ctrl.httpConfiguration.ssl.trustStore.content name=truststore-jks-content rows=5 md-select-on-focus ng-required=!$ctrl.httpConfiguration.ssl.trustStore.path></textarea> <div class=hint>JKS binary content</div> </md-input-container> </div> <div flex-xs flex=50> <md-input-container class=md-block flex-gt-sm> <label>Password</label> <input ng-model=$ctrl.httpConfiguration.ssl.trustStore.password type=password name=truststore-jks-password required> <div class=hint>Trust store password</div> </md-input-container> </div> </div> <div flex ng-if="!$ctrl.httpConfiguration.ssl.trustAll && $ctrl.httpConfiguration.ssl.trustStore.type === \'PKCS12\'"> <div flex-xs flex=50> <md-input-container class=md-block flex-gt-sm> <label>Path to PKCS#12 file</label> <input ng-model=$ctrl.httpConfiguration.ssl.trustStore.path type=text name=truststore-pkcs12-path ng-required=!$ctrl.httpConfiguration.ssl.trustStore.content> <div class=hint>Path to the PKCS#12 file (.p12 or .pfx)</div> </md-input-container> </div> <div flex-xs flex=50> <md-input-container class=md-block flex-gt-sm> <label>PKCS#12 content</label> <textarea ng-model=$ctrl.httpConfiguration.ssl.trustStore.content name=truststore-pkcs12-content rows=5 md-select-on-focus ng-required=!$ctrl.httpConfiguration.ssl.trustStore.path></textarea> <div class=hint>PKCS#12 binary content</div> </md-input-container> </div> <div flex-xs flex=50> <md-input-container class=md-block flex-gt-sm> <label>Password</label> <input ng-model=$ctrl.httpConfiguration.ssl.trustStore.password type=password name=truststore-pkcs12-password required> <div class=hint>Trust store password</div> </md-input-container> </div> </div> <div flex ng-if="!$ctrl.httpConfiguration.ssl.trustAll && $ctrl.httpConfiguration.ssl.trustStore.type === \'PEM\'"> <div flex-xs flex=50> <md-input-container class=md-block flex-gt-sm> <label>Path to cert file</label> <input ng-model=$ctrl.httpConfiguration.ssl.trustStore.path type=text name=truststore-pem-path ng-required=!$ctrl.httpConfiguration.ssl.trustStore.content> <div class=hint>Path to the cert file (.pem)</div> </md-input-container> </div> <div flex-xs flex=50> <md-input-container class=md-block flex-gt-sm> <label>Certificate</label> <textarea ng-model=$ctrl.httpConfiguration.ssl.trustStore.content name=truststore-pem-content rows=5 md-select-on-focus ng-required=!$ctrl.httpConfiguration.ssl.trustStore.path></textarea> <div class=hint>Certificate</div> </md-input-container> </div> </div> </div> </section> <br/> <section> <md-subheader> SSL - Client Authentication </md-subheader> <div layout=column layout-wrap> <div flex-xs flex=50> <md-input-container class=md-block flex-gt-sm> <label>Type</label> <md-select ng-model=$ctrl.httpConfiguration.ssl.keyStore.type> <md-option ng-repeat="keyStore in $ctrl.keyStoreTypes" value={{keyStore.value}}> {{keyStore.name}} </md-option> </md-select> <div class=hint>Type of the key store</div> </md-input-container> </div> <div flex ng-if="$ctrl.httpConfiguration.ssl.keyStore.type === \'JKS\'"> <div flex-xs flex=50> <md-input-container class=md-block flex-gt-sm> <label>Path to JKS file</label> <input ng-model=$ctrl.httpConfiguration.ssl.keyStore.path type=text name=keystore-jks-path ng-required=!$ctrl.httpConfiguration.ssl.keyStore.content> <div class=hint>Path to JKS file</div> </md-input-container> </div> <div flex-xs flex=50> <md-input-container class=md-block flex-gt-sm> <label>JKS content</label> <textarea ng-model=$ctrl.httpConfiguration.ssl.keyStore.content name=keystore-jks-content rows=5 md-select-on-focus ng-required=!$ctrl.httpConfiguration.ssl.keyStore.path></textarea> <div class=hint>JKS binary content</div> </md-input-container> </div> <div flex-xs flex=50> <md-input-container class=md-block flex-gt-sm> <label>Password</label> <input ng-model=$ctrl.httpConfiguration.ssl.keyStore.password type=password name=keystore-jks-password required> <div class=hint>Key store password</div> </md-input-container> </div> </div> <div flex ng-if="$ctrl.httpConfiguration.ssl.keyStore.type === \'PKCS12\'"> <div flex-xs flex=50> <md-input-container class=md-block flex-gt-sm> <label>Path to PKCS#12 file</label> <input ng-model=$ctrl.httpConfiguration.ssl.keyStore.path type=text name=keystore-pkcs12-path ng-required=!$ctrl.httpConfiguration.ssl.keyStore.content> <div class=hint>Path to the PKCS#12 file (.p12 or .pfx)</div> </md-input-container> </div> <div flex-xs flex=50> <md-input-container class=md-block flex-gt-sm> <label>PKCS#12 content</label> <textarea ng-model=$ctrl.httpConfiguration.ssl.keyStore.content name=keystore-pkcs12-content rows=5 md-select-on-focus ng-required=!$ctrl.httpConfiguration.ssl.keyStore.path></textarea> <div class=hint>PKCS#12 binary content</div> </md-input-container> </div> <div flex-xs flex=50> <md-input-container class=md-block flex-gt-sm> <label>Password</label> <input ng-model=$ctrl.httpConfiguration.ssl.keyStore.password type=password name=keystore-pkcs12-password required> <div class=hint>Key store password</div> </md-input-container> </div> </div> <div flex ng-if="$ctrl.httpConfiguration.ssl.keyStore.type === \'PEM\'"> <div flex-xs flex=50> <md-input-container class=md-block flex-gt-sm> <label>Path to cert file</label> <input ng-model=$ctrl.httpConfiguration.ssl.keyStore.certPath type=text name=keystore-pem-cert-path ng-required=!$ctrl.httpConfiguration.ssl.keyStore.certContent> <div class=hint>Path to the cert file (.pem)</div> </md-input-container> </div> <div flex-xs flex=50> <md-input-container class=md-block flex-gt-sm> <label>Certificate</label> <textarea ng-model=$ctrl.httpConfiguration.ssl.keyStore.certContent name=keystore-pem-cert-content rows=5 md-select-on-focus ng-required=!$ctrl.httpConfiguration.ssl.keyStore.certPath></textarea> <div class=hint>Certificate</div> </md-input-container> </div> <div flex-xs flex=50> <md-input-container class=md-block flex-gt-sm> <label>Path to private key file</label> <input ng-model=$ctrl.httpConfiguration.ssl.keyStore.keyPath type=text name=keystore-pem-key-path ng-required=!$ctrl.httpConfiguration.ssl.keyStore.keyContent> <div class=hint>Path to the private key file (.pem)</div> </md-input-container> </div> <div flex-xs flex=50> <md-input-container class=md-block flex-gt-sm> <label>Private Key</label> <textarea ng-model=$ctrl.httpConfiguration.ssl.keyStore.keyContent name=keystore-pem-key-content rows=5 md-select-on-focus ng-required=!$ctrl.httpConfiguration.ssl.keyStore.keyPath></textarea> <div class=hint>Private Key</div> </md-input-container> </div> </div> </div> </section> </div> '},function(e,t,i){"use strict";t.__esModule=!0;var n=i(3),a=function(){function e(e,t){this.$mdDialog=e,this.locals=t,this.paths=t.paths,this.rootCtrl=t.rootCtrl,this.canCopyFromRootPath=void 0!==this.paths["/"],this.newPath={path:"",copyFromRootPath:this.canCopyFromRootPath}}return e.$inject=["$mdDialog","locals"],e.prototype.hide=function(){this.$mdDialog.cancel()},e.prototype.add=function(){this.newPath.copyFromRootPath?(this.paths[this.newPath.path]=n.cloneDeep(this.paths["/"]),n.forEach(this.paths[this.newPath.path],(function(e){delete e.$$hashKey}))):this.paths[this.newPath.path]=[],this.$mdDialog.hide(this.paths)},e}();t.default=a},function(e,t,i){"use strict";t.__esModule=!0;var n=i(3),a=function(){function e(e,t,i,n,a,o,r,s,l){this.ApiService=e,this.$mdSidenav=t,this.$mdDialog=i,this.ResourceService=n,this.NotificationService=a,this.$scope=o,this.$rootScope=r,this.resolvedResources=s,this.$timeout=l,this.creation=!0,this.resourceJsonSchemaForm=["*"],this.types=s.data}return e.$inject=["ApiService","$mdSidenav","$mdDialog","ResourceService","NotificationService","$scope","$rootScope","resolvedResources","$timeout"],e.prototype.initState=function(){void 0!==this.resource?this.$scope.resourceEnabled=this.resource.enabled:this.$scope.resourceEnabled=!1},e.prototype.switchEnabled=function(){void 0===this.resource&&(this.resource={}),this.resource.enabled=this.$scope.resourceEnabled,this.updateApi()},e.prototype.showResourcePanel=function(e){var t=this;this.$mdSidenav("resource-config").toggle(),e?(this.creation=!1,this.resource=e,this.resource.configuration||(this.resource.configuration={}),this.ResourceService.getSchema(this.resource.type).then((function(e){var i=e.data;return t.resourceJsonSchema=i,{schema:i}}),(function(e){if(404===e.status)return{schema:{}};t.NotificationService.showError("Unexpected error while loading resource schema for "+t.resource.type)}))):(this.resourceJsonSchema={},this.creation=!0,this.resource={},this.resource.configuration={},this.resource.enabled=!0),this.initState()},e.prototype.closeResourcePanel=function(){this.$mdSidenav("resource-config").close()},e.prototype.onTypeChange=function(){var e=this;this.resource.configuration={},this.ResourceService.getSchema(this.resource.type).then((function(t){var i=t.data;return e.resourceJsonSchema=i,{schema:i}}),(function(t){if(404===t.status)return e.resourceJsonSchema={},{schema:{}};e.NotificationService.showError("Unexpected error while loading resource schema for "+e.resource.type)}))},e.prototype.deleteResource=function(e){var t=this;this.$mdDialog.show({controller:"DialogConfirmController",controllerAs:"ctrl",template:i(5),clickOutsideToClose:!0,locals:{title:"Are you sure you want to remove this resource ?",msg:"",confirmButton:"Remove"}}).then((function(i){i&&(t.$scope.$parent.apiCtrl.api.resources.splice(e,1),t.updateApi())}))},e.prototype.saveResource=function(){delete this.resource.$$hashKey,this.creation&&this.$scope.$parent.apiCtrl.api.resources.push(this.resource),this.updateApi()},e.prototype.updateApi=function(){var e=this,t=this.$scope.$parent.apiCtrl.api;return this.ApiService.update(t).then((function(i){var n=i.data;e.closeResourcePanel(),e.$rootScope.$broadcast("apiChangeSuccess",{api:n}),e.NotificationService.show("API '"+n.name+"' saved"),e.$timeout((function(){t=n}))}))},e.prototype.getResourceTypeName=function(e){return n.find(this.types,{id:e}).name},e}();t.default=a},function(e,t,i){"use strict";t.__esModule=!0;var n=i(3),a=i(247),o=i(248),r=i(15),s=function(){function e(e,t,i,a,o,s,l,c,d,p){var m=this;this.ApiService=e,this.resolvedApi=t,this.$mdSidenav=i,this.$mdEditDialog=a,this.$mdDialog=o,this.NotificationService=s,this.$scope=l,this.$rootScope=c,this.$state=p,this.api=this.$scope.$parent.apiCtrl.api,this.api.path_mappings=n.sortBy(this.api.path_mappings);var u=new r.DocumentationQuery;u.type="SWAGGER",d.search(u,this.api.id).then((function(e){m.swaggerDocs=e.data})),this.$scope.$on("apiChangeSuccess",(function(e,t){m.api=t.api}))}return e.$inject=["ApiService","resolvedApi","$mdSidenav","$mdEditDialog","$mdDialog","NotificationService","$scope","$rootScope","DocumentationService","$state"],e.prototype.update=function(){var e=this;this.ApiService.update(this.api).then((function(t){e.onSave(t)}),(function(){e.$state.reload()}))},e.prototype.showSavePathMappingDialog=function(e){var t=this;this.$mdDialog.show({controller:a.default,controllerAs:"$ctrl",template:i(654),clickOutsideToClose:!0,locals:{pathMapping:this.api.path_mappings[e]}}).then((function(i){if(i&&!n.includes(t.api.path_mappings,i)){var a=void 0===e?t.api.path_mappings.length:e;t.api.path_mappings[a]=i,t.update()}}),(function(){}))},e.prototype.showImportPathMappingDialog=function(e){var t=this;this.$mdDialog.show({controller:o.default,controllerAs:"$ctrl",template:i(655),clickOutsideToClose:!0,locals:{docs:this.swaggerDocs}}).then((function(e){e&&t.ApiService.importPathMappings(t.api.id,e).then((function(e){t.onSave(e)}))}),(function(){}))},e.prototype.delete=function(e){var t=this;this.$mdDialog.show({controller:"DialogConfirmController",controllerAs:"ctrl",template:i(5),clickOutsideToClose:!0,locals:{title:"Are you sure you want to remove mapping path ["+this.api.path_mappings[e]+"] ?",msg:"",confirmButton:"Remove"}}).then((function(i){i&&(t.api.path_mappings.splice(e,1),t.update())}))},e.prototype.onSave=function(e){this.api=e.data,this.api.path_mappings=n.sortBy(this.api.path_mappings),this.api.etag=e.headers("etag"),this.$rootScope.$broadcast("apiChangeSuccess",{api:this.api}),this.NotificationService.show("API '"+this.$scope.$parent.apiCtrl.api.name+"' saved")},e}();t.default=s},function(e,t){e.exports=' <md-dialog aria-label="New path mapping"> <form name=formApiPathMapping ng-submit=$ctrl.save() novalidate> <md-dialog-content layout-padding layout=column> <h4>Save path mapping</h4> <label style=color:silver>Path must start with slash and parameters with two points</label> <md-input-container> <label>Path</label> <input ng-model=path placeholder=/products/:productId required md-auto-focus> </md-input-container> </md-dialog-content> <md-dialog-actions layout=row> <md-button ng-click=$ctrl.hide()>Cancel</md-button> <md-button type=submit class="md-raised md-primary" ng-disabled=formApiPathMapping.$invalid>Save</md-button> </md-dialog-actions> </form> </md-dialog> '},function(e,t){e.exports=' <md-dialog aria-label="Import path mapping"> <form name=formImportPathMapping ng-submit=$ctrl.save() novalidate> <md-dialog-content layout-padding layout=column> <h4>Select a swagger document to import</h4> <label ng-if=!docs.length>No swagger documentation on your API</label> <md-radio-group ng-show=docs.length ng-model=selectedDoc required> <md-radio-button ng-repeat="doc in docs | orderBy: \'name\'" value={{doc.id}}> {{doc.name}} </md-radio-button> </md-radio-group> </md-dialog-content> <md-dialog-actions layout=row> <md-button ng-click=$ctrl.hide()>Cancel</md-button> <md-button type=submit class="md-raised md-primary" ng-disabled=formImportPathMapping.$invalid>Import</md-button> </md-dialog-actions> </form> </md-dialog> '},function(e,t,i){"use strict";t.__esModule=!0;var n=i(3),a=i(7),o=function(){function e(e,t,i,n,a,o,r,s){var l=this;this.ApiService=e,this.resolvedApi=t,this.$mdSidenav=i,this.$mdEditDialog=n,this.$mdDialog=a,this.NotificationService=o,this.$scope=r,this.$rootScope=s,this.selectedProperties={},this.dynamicPropertyProviders=[{id:"HTTP",name:"Custom (HTTP)"}],this.timeUnits=["SECONDS","MINUTES","HOURS"],this.api=this.$scope.$parent.apiCtrl.api,this.$mdSidenav=i,this.$mdEditDialog=n,this.editor=void 0,this.joltSpecificationOptions={placeholder:"Edit your JOLT specification here.",lineWrapping:!0,lineNumbers:!0,allowDropFileTypes:!0,autoCloseTags:!0,mode:"javascript",controller:this},this.dynamicPropertyService=this.api.services&&this.api.services["dynamic-property"],void 0!==this.dynamicPropertyService?this.$scope.dynamicPropertyEnabled=this.dynamicPropertyService.enabled:this.$scope.dynamicPropertyEnabled=!1,this.$scope.$on("apiChangeSuccess",(function(e,t){l.api=t.api}))}return e.$inject=["ApiService","resolvedApi","$mdSidenav","$mdEditDialog","$mdDialog","NotificationService","$scope","$rootScope"],e.prototype.hasPropertiesDefined=function(){return this.api.properties&&Object.keys(this.api.properties).length>0},e.prototype.deleteProperty=function(e){var t=this;this.$mdDialog.show({controller:"DialogConfirmController",controllerAs:"ctrl",template:i(5),clickOutsideToClose:!0,locals:{title:"Are you sure you want to remove property ["+e+"]?",msg:"",confirmButton:"Remove"}}).then((function(i){i&&(n.remove(t.api.properties,(function(t){return t.key===e})),t.update())}))},e.prototype.showPropertyModal=function(){var e=this;this.$mdDialog.show({controller:"DialogAddPropertyController",controllerAs:"dialogAddPropertyCtrl",template:i(657),clickOutsideToClose:!0}).then((function(t){void 0===e.api.properties&&(e.api.properties=[]),t&&(e.api.properties.push(t),e.update())}))},e.prototype.update=function(){var e=this;return this.api.services["dynamic-property"]=this.dynamicPropertyService,this.ApiService.update(this.api).then((function(t){e.api=t.data,e.api.etag=t.headers("etag"),e.$rootScope.$broadcast("apiChangeSuccess",{api:e.api}),e.NotificationService.show("API '"+e.$scope.$parent.apiCtrl.api.name+"' saved")}))},e.prototype.editValue=function(e,t){e.stopPropagation();var i=this;this.$mdEditDialog.small({modelValue:t.value,placeholder:"Set property value",save:function(e){t.value=e.$modelValue,t.dynamic=!1,i.update()},targetEvent:e,validators:{"md-maxlength":160}})},e.prototype.switchEnabled=function(){void 0===this.dynamicPropertyService&&(this.dynamicPropertyService={}),this.dynamicPropertyService.enabled=this.$scope.dynamicPropertyEnabled,this.update()},e.prototype.open=function(){var e=this;this.$mdSidenav("dynamic-properties-config").open().then((function(){e.editor&&e.editor.setSize("100%","100%")}))},e.prototype.close=function(){this.$mdSidenav("dynamic-properties-config").close()},e.prototype.codemirrorLoaded=function(e){this.controller.editor=e,this.controller.editor.getDoc().markClean()},e.prototype.showExpectedProviderOutput=function(){this.$mdDialog.show({controller:"DialogDynamicProviderHttpController",controllerAs:"ctrl",template:i(658),parent:a.element(document.body),clickOutsideToClose:!0})},e.prototype.deleteSelectedProperties=function(){var e=this;this.$mdDialog.show({controller:"DialogConfirmController",controllerAs:"ctrl",template:i(5),clickOutsideToClose:!0,locals:{title:"Are you sure you want to remove selected properties?",msg:"",confirmButton:"Remove"}}).then((function(t){t&&(n.forEach(e.selectedProperties,(function(t,i){t&&(n.remove(e.api.properties,(function(e){return e.key===i})),delete e.selectedProperties[i])})),e.update())}))},e.prototype.toggleSelectAll=function(e){var t=this;e?n.forEach(this.api.properties,(function(e){return t.selectedProperties[e.key]=!0})):this.selectedProperties={}},e.prototype.checkSelectAll=function(){this.selectAll=n.filter(this.selectedProperties,(function(e){return e})).length===Object.keys(this.api.properties).length},e.prototype.hasSelectedProperties=function(){return n.filter(this.selectedProperties,(function(e){return e})).length>0},e}();t.default=o},function(e,t){e.exports=' <md-dialog aria-label="New property"> <form name=formApiProperty ng-submit=dialogAddPropertyCtrl.save() novalidate> <md-dialog-content layout-padding> <h4>New property</h4> <md-input-container> <label>Name</label> <input ng-model=property.name id=key required> </md-input-container> <md-input-container> <label>Value</label> <input ng-model=property.value id=value required> </md-input-container> </md-dialog-content> <md-dialog-actions layout=row> <md-button ng-click=dialogAddPropertyCtrl.hide()> Cancel </md-button> <md-button type=submit class="md-raised md-primary" ng-disabled=formApiProperty.$invalid> Add </md-button> </md-dialog-actions> </form> </md-dialog> '},function(e,t){e.exports=' <md-dialog aria-label="HTTP provider output"> <md-dialog-content layout-padding> <h4>Expected HTTP provider output</h4> <p> <textarea ui-codemirror="{ onLoad : ctrl.codemirrorLoaded }" ui-codemirror-opts=ctrl.codeMirrorOptions ng-model=ctrl.specificationExample>\n      </textarea> </p> </md-dialog-content> <md-dialog-actions layout=row> <md-button class=md-primary ng-click=ctrl.cancel()> Close </md-button> </md-dialog-actions> </md-dialog> '},function(e,t,i){"use strict";t.__esModule=!0;var n=i(3),a=function(){function e(e){this.events=e.data,this.eventsTimeline=[],this.initTimeline(this.events)}return e.$inject=["resolvedEvents"],e.prototype.initTimeline=function(e){var t=this;n.forEach(e,(function(e){var i=t.getEventTypeTimeline(e.type),n={event:e,badgeClass:i.badgeClass,badgeIconClass:i.icon,title:e.type,when:e.created_at,user:e.user};t.eventsTimeline.push(n)}))},e.prototype.reloadEventsTimeline=function(e){this.eventsTimeline=[],this.initTimeline(e)},e.prototype.getEventTypeTimeline=function(e){var t={};switch(e){case"start_api":t.icon="glyphicon-play",t.badgeClass="info";break;case"stop_api":t.icon="glyphicon-stop",t.badgeClass="danger";break;default:t.icon="glyphicon-check",t.badgeClass="info"}return t},e}();t.default=a},function(e,t,i){"use strict";t.__esModule=!0;var n=i(3),a=i(7),o=function(){function e(e,t,i,o,r,s,l,c){this.$mdDialog=e,this.$scope=t,this.$rootScope=i,this.$state=o,this.ApiService=r,this.NotificationService=s,this.resolvedEvents=l,this.$timeout=c,this.api=JSON.parse(a.toJson(n.cloneDeep(this.$scope.$parent.apiCtrl.api))),this.events=l.data,this.eventsSelected=[],this.eventsTimeline=[],this.eventsToCompare=[],this.eventSelected={},this.diffMode=!1,this.eventToCompareRequired=!1,this.eventTypes="PUBLISH_API",this.cleanAPI(this.api),this.init(),this.initTimeline(this.events)}return e.$inject=["$mdDialog","$scope","$rootScope","$state","ApiService","NotificationService","resolvedEvents","$timeout"],e.prototype.init=function(){var e=this;this.$scope.$parent.apiCtrl.checkAPISynchronization(e.api),this.$scope.$on("apiChangeSuccess",(function(t,i){e.$state.current.name.endsWith("history")&&(e.api=JSON.parse(a.toJson(n.cloneDeep(n.cloneDeep(i.api)))),e.cleanAPI(e.api),e.ApiService.getApiEvents(e.api.id,e.eventTypes).then((function(t){e.events=t.data,e.reloadEventsTimeline(e.events)})))})),this.$scope.$on("checkAPISynchronizationSucceed",(function(){e.reloadEventsTimeline(e.events)}))},e.prototype.initTimeline=function(e){var t=this;n.forEach(e,(function(e){var i={event:e,badgeClass:"info",badgeIconClass:"glyphicon-check",title:e.type,when:e.created_at,user:e.user};t.eventsTimeline.push(i)}))},e.prototype.selectEvent=function(e){if(this.eventToCompareRequired)this.diff(e),this.selectEventToCompare(e);else{this.diffMode=!1,this.apisSelected=[],this.eventsSelected=[],this.clearDataToCompare();var t=this.eventsSelected.indexOf(e);if(t>-1?this.eventsSelected.splice(t,1):this.eventsSelected.push(e),this.eventsSelected.length>0){var i=this.eventsSelected[0];i.isCurrentAPI?this.eventSelectedPayloadDefinition=i.event:(this.eventSelectedPayload=JSON.parse(i.event.payload),this.eventSelectedPayloadDefinition=this.reorganizeEvent(this.eventSelectedPayload)),this.cleanAPI(this.eventSelectedPayloadDefinition)}}},e.prototype.selectEventToCompare=function(e){this.eventsToCompare.push(e)},e.prototype.clearDataToCompare=function(){this.eventsToCompare=[]},e.prototype.clearDataSelected=function(){this.eventsSelected=[]},e.prototype.isEventSelectedForComparaison=function(e){return this.eventsToCompare.indexOf(e)>-1},e.prototype.diffWithMaster=function(){this.clearDataToCompare(),this.diffMode=!0;var e=this.events[0];this.eventsSelected.length>0&&(this.eventsSelected[0].isCurrentAPI?(this.right=this.eventsSelected[0].event,this.left=this.reorganizeEvent(JSON.parse(e.payload))):(this.left=this.reorganizeEvent(JSON.parse(this.eventsSelected[0].event.payload)),this.right=this.reorganizeEvent(JSON.parse(e.payload))))},e.prototype.enableDiff=function(){this.clearDataToCompare(),this.eventToCompareRequired=!0},e.prototype.disableDiff=function(){this.eventToCompareRequired=!1},e.prototype.diff=function(e){if(this.diffMode=!0,this.eventsSelected.length>0)if(e.isCurrentAPI)this.left=this.reorganizeEvent(JSON.parse(this.eventsSelected[0].event.payload)),this.right=e.event;else{var t={},i=e.event.updated_at,n=this.eventsSelected[0].event.updated_at;t=this.eventsSelected[0].isCurrentAPI?this.eventsSelected[0].event:this.reorganizeEvent(JSON.parse(this.eventsSelected[0].event.payload)),i>n?(this.left=t,this.right=this.reorganizeEvent(JSON.parse(e.event.payload))):(this.left=this.reorganizeEvent(JSON.parse(e.event.payload)),this.right=t)}this.disableDiff()},e.prototype.isEventSelected=function(e){return this.eventsSelected.indexOf(e)>-1},e.prototype.rollback=function(e){var t=JSON.parse(e.definition);delete t.id,delete t.deployed_at,t.description=e.description,t.visibility=e.visibility;var i=this;i.ApiService.rollback(this.api.id,t).then((function(){i.NotificationService.show("Api rollback !"),i.ApiService.get(i.api.id).then((function(e){i.$rootScope.$broadcast("apiChangeSuccess",{api:e.data})}))}))},e.prototype.showRollbackAPIConfirm=function(e,t){e.stopPropagation();var n=this;this.$mdDialog.show({controller:"DialogConfirmController",controllerAs:"ctrl",template:i(162),clickOutsideToClose:!0,locals:{title:"Would you like to rollback your API ?",confirmButton:"Rollback"}}).then((function(e){e&&n.rollback(t)}))},e.prototype.reloadEventsTimeline=function(e){if(this.clearDataSelected(),this.eventsTimeline=[],this.initTimeline(e),!this.$scope.$parent.apiCtrl.apiIsSynchronized&&!this.$scope.$parent.apiCtrl.apiJustDeployed){var t={event:this.api,badgeClass:"warning",badgeIconClass:"glyphicon-refresh",title:"TO_DEPLOY",isCurrentAPI:!0};this.eventsTimeline.unshift(t)}},e.prototype.reorganizeEvent=function(e){var t=JSON.parse(e.definition);return{id:t.id,name:t.name,version:t.version,description:e.description,tags:t.tags,proxy:t.proxy,paths:t.paths,properties:t.properties,services:t.services,resources:t.resources,path_mappings:t.path_mappings,response_templates:t.response_templates}},e.prototype.cleanAPI=function(e){delete e.deployed_at,delete e.created_at,delete e.updated_at,delete e.visibility,delete e.state,delete e.permission,delete e.owner,delete e.picture_url,delete e.categories,delete e.groups,delete e.etag,delete e.context_path},e}();t.default=o},function(e,t,i){"use strict";function n(e,t){this.hide=function(){t.hide()},this.save=function(){var i={key:e.property.name,value:e.property.value};t.hide(i)}}n.$inject=["$scope","$mdDialog"],t.__esModule=!0,t.default=n},function(e,t,i){"use strict";a.$inject=["$scope","$mdDialog","api","members","ApiService","NotificationService","RoleService","UserService"],t.__esModule=!0;var n=i(3);function a(e,t,i,a,o,r,s,l){s.list("API").then((function(t){e.roles=t})),e.api=i,e.members=a,e.usersSelected=[],e.searchText="",e.hide=function(){t.cancel()},e.searchUser=function(t){if(t)return l.search(t).then((function(t){return n.filter(t.data,(function(t){return-1===n.findIndex(e.members,{id:t.id})}))}))},e.getUserAvatar=function(e){return e?l.getUserAvatar(e):"assets/default_photo.png"},e.selectUser=function(t){t&&t.reference&&(n.find(e.usersSelected,{reference:t.reference})||e.usersSelected.push(t),e.searchText="")},e.addMembers=function(){for(var i=function(t){var i=e.usersSelected[t],n={id:i.id,reference:i.reference,role:e.role.name};o.addOrUpdateMember(e.api.id,n).then((function(){r.show("User "+i.displayName+" has been added as a member.")})).catch((function(t){e.error=t}))},n=0;n<e.usersSelected.length;n++)i(n);t.hide(e.api)}}t.default=a},function(e,t,i){"use strict";function n(e,t,i){this.newRole=i,e.cancel=function(){t.cancel()},e.transferOwnership=function(){t.hide(!0)}}n.$inject=["$scope","$mdDialog","newRole"],t.__esModule=!0,t.default=n},function(e,t,i){"use strict";a.$inject=["$scope","$mdDialog","maxEndDate"],t.__esModule=!0;var n=i(1);function a(e,t,i){var a=new Date;e.minDate=a,e.maxDate=i?new Date(i):new Date(2099,11,31),e.expiration=n(a),this.hide=function(){t.cancel()},this.save=function(){t.hide(e.expiration?e.expiration.toDate():null)}}t.default=a},function(e,t,i){"use strict";function n(e,t,i){e.description=i.description,this.hide=function(){t.cancel()},this.save=function(){t.hide(e.description)}}n.$inject=["$scope","$mdDialog","locals"],t.__esModule=!0,t.default=n},function(e,t,i){"use strict";t.__esModule=!0;var n={scope:{filecontent:"=",filename:"="},link:function(e,t){t.bind("change",(function(t){var i=new FileReader,n=t.target.files[0];i.onload=function(t){e.$apply((function(){e.filecontent=t.target.result,e.filename=n.name}))},i.readAsText(n)}))}};t.default=n},function(e,t,i){"use strict";t.__esModule=!0;var n=function(){function e(e,t,i){this.$mdToast=e,this.$translate=t,this.$state=i}return e.$inject=["$mdToast","$translate","$state"],e.prototype.show=function(e,t,i){var n,a=this;a.$translate(e.statusText||e,i).then((function(e){n=e})).catch((function(e){n=e})).finally((function(){var e=412===t;a.$mdToast.show(a.$mdToast.simple().action(e?"Refresh":"").textContent(e?"The API version is outdated and must be refreshed (current modifications will be lost)":n).position("bottom right").hideDelay(e?1e4:3e3).theme(t?"toast-error":"toast-success")).then((function(e){"ok"===e&&a.$state.go(a.$state.current,{},{reload:!0})})).catch((function(){}))}))},e.prototype.showError=function(e,t){this.show(t||(e.data?Array.isArray(e.data)?e.data[0].message:e.data.message||("string"==typeof e.data?e.data:e.statusText):e),e.status||!0)},e}();t.default=n},function(e,t,i){"use strict";t.__esModule=!0;var n=function(){function e(e,t){this.$http=e,this.policiesURL=t.baseURL+"policies/"}return e.$inject=["$http","Constants"],e.prototype.list=function(){var e=this.policiesURL;return this.$http.get(e)},e.prototype.listSwaggerPolicies=function(){return this.$http.get(this.policiesURL+"swagger")},e.prototype.getSchema=function(e){return this.$http.get(this.policiesURL+e+"/schema")},e}();t.default=n},function(e,t,i){"use strict";t.__esModule=!0;var n=function(){function e(e,t){this.$http=e,this.portalURL=t.baseURL+"portal/",this.Constants=t}return e.$inject=["$http","Constants"],e.prototype.searchApis=function(e,t){var i=this.portalURL+"apis/_search?q="+e;return this.$http.post(i,{},t)},e.prototype.listSocialIdentityProviders=function(){return this.$http.get(this.portalURL+"identities")},e}();t.default=n},function(e,t,i){"use strict";t.__esModule=!0;var n=function(){function e(e,t){this.$http=e,this.resourcesURL=t.baseURL+"resources/"}return e.$inject=["$http","Constants"],e.prototype.list=function(){var e=this.resourcesURL;return this.$http.get(e)},e.prototype.getSchema=function(e){return this.$http.get(this.resourcesURL+e+"/schema")},e}();t.default=n},function(e,t,i){"use strict";t.__esModule=!0;var n=function(){function e(e,t){this.$http=e,this.resourcesURL=t.baseURL+"fetchers/"}return e.$inject=["$http","Constants"],e.prototype.list=function(e){var t=this.resourcesURL+"?expand=schema"+(e?"&import=true":"");return this.$http.get(t)},e}();t.default=n},function(e,t,i){"use strict";t.__esModule=!0;var n=function(){function e(e,t){this.$http=e,this.notifiersURL=t.baseURL+"notifiers/"}return e.$inject=["$http","Constants"],e.prototype.list=function(){return this.$http.get(this.notifiersURL)},e.prototype.getSchema=function(e){return this.$http.get(this.notifiersURL+e+"/schema")},e}();t.default=n},function(e,t,i){"use strict";t.__esModule=!0;var n=function(){function e(e,t){this.$http=e,this.serviceDiscoveriesURL=t.baseURL+"services-discovery/"}return e.$inject=["$http","Constants"],e.prototype.list=function(){var e=this.serviceDiscoveriesURL;return this.$http.get(e)},e.prototype.getSchema=function(e){return this.$http.get(this.serviceDiscoveriesURL+e+"/schema")},e}();t.default=n},function(e,t,i){"use strict";t.__esModule=!0;var n=i(3),a=function(){function e(e,t,i,n,a,o,r,s,l,c,d){var p=this;this.AuthenticationService=e,this.UserService=t,this.$state=i,this.Constants=n,this.$rootScope=a,this.RouterService=o,this.identityProviders=r,this.$window=s,this.$stateParams=l,this.$scope=c,this.ReCaptchaService=d,this.user={},this._toDisabledMode=function(){p.$scope.canBeDisabled=!0,p.$scope.$apply(),document.removeEventListener("click",p._toDisabledMode)},this.userCreationEnabled=n.portal.userCreation.enabled,this.localLoginDisabled=!n.authentication.localLogin.enabled||!1,this.$state=i,this.$rootScope=a,this.$scope=c,c.canBeDisabled=!1}return e.$inject=["AuthenticationService","UserService","$state","Constants","$rootScope","RouterService","identityProviders","$window","$stateParams","$scope","ReCaptchaService"],e.prototype.$onInit=function(){this.ReCaptchaService.displayBadge(),document.addEventListener("click",this._toDisabledMode)},e.prototype.$onDestroy=function(){document.removeEventListener("click",this._toDisabledMode)},e.prototype.authenticate=function(e){var t=this.AuthenticationService.nonce(32);this.$window.localStorage[t]=JSON.stringify({redirectUri:this.$stateParams.redirectUri});var i=n.find(this.identityProviders,{id:e});this.AuthenticationService.authenticate(i,t)},e.prototype.login=function(){var e=this;this.ReCaptchaService.execute("login").then((function(){return e.UserService.login(e.user).then((function(){e.UserService.current().then((function(t){e.loginSuccess(t)}))})).catch((function(){e.user.username="",e.user.password=""}))}))},e.prototype.loginSuccess=function(e){if(this.$rootScope.$broadcast("graviteeUserRefresh",{user:e}),this.$state.params.redirectUri)this.$window.location.href="#!"+this.$state.params.redirectUri;else{var t=this.RouterService.getLastRoute();t.from&&""!==t.from.name&&"logout"!==t.from.name&&"confirm"!==t.from.name&&"resetPassword"!==t.from.name?this.$state.go(t.from.name,t.fromParams):this.$state.go("management")}},e.prototype.getProviderBackGroundColor=function(e){return e.color?e.color:"oidc"===e.type?"black":"graviteeio_am"===e.type?"#86c3d0":""},e.prototype.getProviderColor=function(e){return"graviteeio_am"===e.type?"#383E3F":"white"},e.prototype.getProviderStyle=function(e){return{"background-color":this.getProviderBackGroundColor(e),color:this.getProviderColor(e)}},e}();t.default=a},function(e,t,i){"use strict";t.__esModule=!0;var n=i(249),a={restrict:"AE",scope:{oldValue:"=",newValue:"="},link:function(e,t){e.$watch("oldValue",(function(){var i=e.oldValue,a=e.newValue;i&&a&&(t.html(""),n.diffJson(i,a).forEach((function(e){var i=e.added?"green":e.removed?"red":"grey",n=document.createElement("span");n.style.color=i,n.appendChild(document.createTextNode(e.value)),t.append(n)})))}))}};t.default=a},function(e,t,i){"use strict";function n(e,t,i,n,a){e.apiId=n,e.policies=a,e.hide=function(){t.hide()},e.import=function(){i.import(n,e.pageContentFile.content).then((function(e){t.hide(e)}))}}n.$inject=["$scope","$mdDialog","ApiService","apiId","policies"],t.__esModule=!0,t.default=n},function(e,t,i){"use strict";a.$inject=["$scope","$mdDialog","ApiService","apiId","base64","Build"],t.__esModule=!0;var n=i(3);function a(e,t,i,a,o,r){e.filteredFields=[{id:"groups",description:"Groups",checked:!0},{id:"members",description:"Members",checked:!0},{id:"pages",description:"Pages",checked:!0},{id:"plans",description:"Plans",checked:!0},{id:"metadata",description:"Metadata",checked:!0}],e.data={exportVersion:null},e.hide=function(){t.hide()},e.graviteeVersion=r.version,e.export=function(){var r=n.map(n.filter(e.filteredFields,(function(e){return!e.checked})),"id");i.export(a,r,e.data.exportVersion).then((function(e){var t=document.createElement("a");document.body.appendChild(t),t.href="data:application/json;charset=utf-8;base64,"+o.encode(JSON.stringify(e.data,null,2));var i=e.data.name+" "+e.data.version;i=(i=i.replace(/[\s]/gi,"-")).replace(/[^\w]/gi,"-"),t.download=i+".json",t.target="_self",t.click(),document.body.removeChild(t)})).then((function(e){t.hide(e)}))}}t.default=a},function(e,t,i){"use strict";a.$inject=["$mdDialog","ApiService","api"],t.__esModule=!0;var n=i(3);function a(e,t,i){var a=this;this.contextPathPlaceholder=i.proxy.virtual_hosts[0].path,this.versionPlaceholder=i.version,this.filteredFields=[{id:"groups",description:"Groups",checked:!0},{id:"members",description:"Members",checked:!0},{id:"pages",description:"Pages",checked:!0},{id:"plans",description:"Plans",checked:!0}],this.hide=function(){e.hide()},this.duplicate=function(){var o={context_path:a.contextPath,version:a.version,filtered_fields:n.map(n.filter(a.filteredFields,(function(e){return!e.checked})),"id")};t.duplicate(i.id,o).then((function(t){e.hide(t.data)}))},this.onContextPathChanged=function(){a.contextPathInvalid=!1,t.verify({context_path:a.contextPath},{ignoreLoadingBar:!0,silentCall:!0}).then((function(){a.contextPathInvalid=!1}),(function(){a.contextPathInvalid=!0}))}}t.default=a},function(e,t,i){"use strict";t.__esModule=!0;var n=function(){function e(){}return e.prototype.getCurrentResource=function(){return this.currentResource},e.prototype.setCurrentResource=function(e){this.currentResource=e},e}();t.default=n},function(e,t,i){"use strict";t.__esModule=!0,t.SidenavComponent={template:i(681),bindings:{graviteeUser:"<",menuItems:"<",allMenuItems:"<"},controller:["$window","$scope","$state","$rootScope",function(e,t,i,n){var a=this;this.$window=e,this.reducedMode=!1,this.$onInit=function(){null!==a.$window.localStorage.getItem("gv-sidenav-reduce-mode")&&(a.reducedMode=JSON.parse(a.$window.localStorage.getItem("gv-sidenav-reduce-mode")))},this.toggleReducedMode=function(){a.reducedMode=!a.reducedMode,e.localStorage.setItem("gv-sidenav-reduce-mode",a.reducedMode),n.$broadcast("onWidgetResize")},this.isActive=function(e){var t=e.name.split("."),n=i.current.name.split(".");return t[0]===n[0]&&t[1]===n[1]},t.$on("reduceSideNav",(function(){a.reducedMode||a.toggleReducedMode()}))}]}},function(e,t){e.exports=' <md-sidenav class="md-sidenav-left md-whiteframe-z2 md-sidenav-theme" md-component-id=left md-is-locked-open=true ng-class="{\'md-sidenav-min\': $ctrl.reducedMode}" style=overflow:inherit> <md-list class=sidenav-list> <md-list-item ng-repeat="menuItem in $ctrl.menuItems|orderBy:\'data.menu.order\' track by menuItem.name"> <md-tooltip md-delay=400>{{menuItem.data.menu.label}}</md-tooltip> <a ui-sref="{{ :: menuItem.name}}" ui-sref-opts="{inherit: false}" title="{{ :: menuItem.data.menu.label}}" ng-class="{\'sidenav-active\': $ctrl.isActive(menuItem)}"> <ng-md-icon icon="{{ :: menuItem.data.menu.icon }}"></ng-md-icon> <span>{{ :: menuItem.data.menu.label }}</span> </a> </md-list-item> <gv-submenu all-menu-items=$ctrl.allMenuItems reduced-mode=$ctrl.reducedMode></gv-submenu> </md-list> <div class=sidenav-footer> <md-button class="md-fab md-mini sidenav-toggle" md-no-ink md-no-focus-style ng-click=$ctrl.toggleReducedMode() aria-label="Mini FAB"> <ng-md-icon class=sidenav-toggle-icon size=16 icon="{{$ctrl.reducedMode?\'chevron_right\':\'chevron_left\'}}"></ng-md-icon> </md-button> </div> </md-sidenav> '},function(e,t,i){"use strict";t.__esModule=!0;var n=i(3);t.SubmenuComponent={template:i(683),bindings:{allMenuItems:"<",reducedMode:"<"},require:{parent:"^gvSidenav"},controller:["SidenavService","$filter","$transitions","$state","ApiService","ApplicationService","UserService",function(e,t,i,a,o,r,s){this.sidenavService=e;var l=this;i.onSuccess({},(function(){l.reload()})),this.$onInit=function(){l.reload()},this.reload=function(){a.params.apiId&&!s.currentUser.userApiPermissions?(s.currentUser.userApiPermissions=[],o.getPermissions(a.params.apiId).then((function(e){n.forEach(n.keys(e.data),(function(t){n.forEach(e.data[t],(function(e){var i="API-"+t+"-"+e;s.currentUser.userApiPermissions.push(n.toLower(i))}))})),c()}))):a.params.applicationId&&!s.currentUser.userApplicationPermissions?(s.currentUser.userApplicationPermissions=[],r.getPermissions(a.params.applicationId).then((function(e){n.forEach(n.keys(e.data),(function(t){n.forEach(e.data[t],(function(e){var i="APPLICATION-"+t+"-"+e;s.currentUser.userApplicationPermissions.push(n.toLower(i))}))})),c()}))):c()};var c=function(){s.reloadPermissions(),l.submenuItems=t("currentSubmenus")(l.allMenuItems)};this.isActive=function(e){var t=e.name.split("."),i=a.current.name.split(".");return t[0]===i[0]&&t[1]===i[1]&&t[2]===i[2]&&t[3]===i[3]}}]}},function(e,t){e.exports=' <hr/> <md-list-item ng-if="$ctrl.submenuItems.length > 0" class=subheader> <h4>{{$ctrl.sidenavService.getCurrentResource()}}</h4> </md-list-item> <md-list-item ng-repeat="menuItem in $ctrl.submenuItems track by menuItem.name"> <md-tooltip md-delay=400>{{menuItem.data.menu.label}}</md-tooltip> <a ui-sref="{{ :: menuItem.name }}" title="{{ :: menuItem.data.menu.label }}" ng-class="{\'sidenav-active\': $ctrl.isActive(menuItem)}"> <ng-md-icon icon="{{ :: menuItem.data.menu.icon }}"></ng-md-icon> <span>{{ :: menuItem.data.menu.label}}</span> </a> </md-list-item> '},function(e,t,i){"use strict";t.__esModule=!0;var n=i(182);t.NavbarComponent={template:i(685),controller:["UserService","TaskService","UserNotificationService","PortalService","$scope","Constants","$rootScope","$state","$transitions","$interval","AuthenticationService","$window",function(e,t,i,a,o,r,s,l,c,d,p,m){var u=this;u.refreshUser=function(e){u.profileConfirmed=e&&!e.firstLogin||m.localStorage.getItem("profileConfirmed")},u.$state=l,u.tasksScheduler=null,u.$rootScope=s,u.displayContextualDocumentationButton=!1,u.visible=!0,u.localLoginDisabled=!r.authentication.localLogin.enabled||!1,u.refreshUser(e.currentUser),o.$on("graviteeUserRefresh",(function(t,i){var n=i.user;i.refresh?e.current().then((function(e){u.startTasks(e),u.refreshUser(e)})).catch((function(){return delete u.graviteeUser})):n&&n.authenticated?(u.startTasks(n),u.refreshUser(n)):delete u.graviteeUser})),u.startTasks=function(e){e.authenticated&&(u.graviteeUser=e,u.tasksScheduler||(u.refreshUserTasks(),u.tasksScheduler=d((function(){u.refreshUserTasks()}),1e3*t.getTaskSchedulerInSeconds())))},o.$on("graviteeUserTaskRefresh",(function(){u.refreshUserTasks()})),o.$on("graviteeUserCancelScheduledServices",(function(){u.cancelRefreshUserTasks()})),c.onFinish({},(function(e){u.displayContextualDocumentationButton=!(e.to().name.startsWith("portal")||e.to().name.startsWith("support")||e.to().name.startsWith("login")||e.to().name.startsWith("registration")||e.to().name.startsWith("confirm")||e.to().name.startsWith("user")),u.visible="login"!==e.to().name&&"registration"!==e.to().name&&"confirm"!==e.to().name})),u.$onInit=function(){u.supportEnabled=r.portal.support.enabled,o.$emit("graviteeUserRefresh",{user:void 0,refresh:!0}),u.portalURL=r.portal.url},u.userShortName=function(){return u.graviteeUser.firstname&&u.graviteeUser.lastname?u.graviteeUser.firstname[0].toUpperCase()+u.graviteeUser.firstname.slice(1)+" "+u.graviteeUser.lastname[0].toUpperCase()+".":u.graviteeUser.displayName},u.isUserManagement=function(){return u.graviteeUser.isAdmin()},u.isAppManagement=function(){return u.graviteeUser.allowedTo(["environment-application-r"])},u.getLogo=function(){return r.theme.logo},u.getUserPicture=function(){return e.currentUserPicture()},u.openContextualDocumentation=function(){u.$rootScope.$broadcast("openContextualDocumentation")},u.hasAlert=function(){return this.getUserTaskCount()>0},u.getUserTaskCount=function(){return u.graviteeUser.tasks?u.graviteeUser.tasks.page.total_elements:0},u.refreshUserTasks=function(){u.$rootScope.isWindowFocused&&t.getTasks().then((function(e){var i=new n.PagedResult;i.populate(e.data),u.graviteeUser=t.fillUserTasks(i)}))},u.cancelRefreshUserTasks=function(){u.tasksScheduler&&(d.cancel(u.tasksScheduler),u.tasksScheduler=void 0)},u.authenticate=function(){var e=this;a.listSocialIdentityProviders().then((function(t){var i=t.data;u.localLoginDisabled&&1===i.length?p.authenticate(i[0]):e.$state.go("login")}))}}]}},function(e,t){e.exports=' <md-toolbar class=topnavbar id=gv-navbar layout=row layout-align="left center" gv-theme-element=portal.navbar ng-if=$ctrl.visible> <div class="topnavbar-brand navigation-header"> <a ui-sref=management.apis.list style=text-decoration:none> <img ng-src={{$ctrl.getLogo()}} alt=logo /> </a> <md-button ng-if=$ctrl.portalURL class=gv-navbar-link ng-href={{$ctrl.portalURL}} target=_blank>{{\'menu.portal\' | translate}}</md-button> </div> <span flex></span> <md-button class=gv-navbar-button ng-click=$ctrl.openContextualDocumentation(); aria-label="Display contextual documentation" ng-if=$ctrl.displayContextualDocumentationButton> <ng-md-icon icon=live_help gv-theme-element=portal.navbar.help></ng-md-icon> </md-button> <portal-notifications user=$ctrl.graviteeUser ng-if="$ctrl.graviteeUser.id && $ctrl.profileConfirmed"></portal-notifications> <md-menu ng-if="$ctrl.graviteeUser.id && $ctrl.profileConfirmed" md-offset="0 54"> <md-button class=gv-navbar-user-link ng-click=$mdMenu.open($event) aria-label="Open user menu"> <gravitee-identity-picture ng-if=$ctrl.hasAlert() image-id="\'navbar\'" image-url=$ctrl.getUserPicture() image-name=$ctrl.graviteeUser.displayName image-width=42 image-border-radius=true image-theme="\'portal.navbar.user.img.alert\'"></gravitee-identity-picture> <gravitee-identity-picture ng-if=!$ctrl.hasAlert() image-id="\'navbar\'" image-url=$ctrl.getUserPicture() image-name=$ctrl.graviteeUser.displayName image-width=42 image-border-radius=true image-theme="\'portal.navbar.user.img\'"></gravitee-identity-picture> <span ng-if=$ctrl.hasAlert() flex class=gv-menu-badge-alert gv-theme-element=portal.navbar.user.notification></span> </md-button> <md-menu-content class=gv-menu-content ng-mouseleave=$mdMenu.close()> <div layout=column class=gv-menu-content-main> <div layout=row> <div layout=column layout-align="start center"> <gravitee-identity-picture image-id="\'menu\'" image-url=$ctrl.getUserPicture() image-name=$ctrl.graviteeUser.displayName image-width=42 image-border-radius=true></gravitee-identity-picture> </div> <div layout=column layout-align="start start"> <h5>{{$ctrl.userShortName()}}</h5> <small>{{$ctrl.graviteeUser.email}}</small> </div> </div> <md-divider></md-divider> <div layout=column layout-align="end start" class=gv-menu-content-links> <a ui-sref=user>{{\'menu.profile\' | translate}}</a> <a ui-sref=management.tasks>{{\'menu.tasks\' | translate}}<span ng-if="$ctrl.getUserTaskCount() > 0" flex class="badge gv-menu-badge">{{$ctrl.getUserTaskCount()}}</span></a> <a ui-sref=management.support>{{\'menu.support\' | translate}}</a> </div> </div> <md-divider></md-divider> <div layout=row layout-align="end end" class=gv-menu-content-footer> <md-button ui-sref=logout style="border:1px solid grey;font-size:12px">{{\'menu.logout\' | translate}}</md-button> </div> </md-menu-content> </md-menu> </md-toolbar> '},function(e,t,i){"use strict";t.__esModule=!0;var n={bindings:{api:"<",readOnly:"<"},template:i(687),controller:"ApiHeaderController"};t.default=n},function(e,t){e.exports=' <div layout=column layout-align=end-start class=gravitee-api-header flex> <div class=gravitee-api-header-content> <div ng-switch=$ctrl.api.visibility layout=row layout-align="start stretch"> <div class=gravitee-api-header-image ng-if=$ctrl.readOnly ng-style="{\'background-image\':\'url({{$ctrl.api.picture || $ctrl.api.picture_url || \'assets/default_api_logo.png\'}})\'}" layout=column layout-align="center center"></div> <gravitee-image ng-if=!$ctrl.readOnly image-id=$ctrl.api.id image=$ctrl.api.picture image-url=$ctrl.api.picture_url image-name="$ctrl.api.name + \'  \' + $ctrl.api.version"></gravitee-image> <div flex=70 layout=column layout-align="start start"> <div> <h4>{{$ctrl.api.name}} <small>({{$ctrl.api.version}}) <span ng-switch-when=public flex=10><ng-md-icon icon=public></ng-md-icon><md-tooltip md-direction=right>public</md-tooltip></span> <span ng-switch-when=private flex=10><ng-md-icon icon=lock></ng-md-icon><md-tooltip md-direction=right>private</md-tooltip></span> </small> </h4> <md-content flex class=gravitee-api-header-description> <div class=gravitee-api-header-read-more read-more ng-model=$ctrl.api.description words=false length=150></div> <div layout=row layout-align="start center"> <md-switch class=md-primary aria-label="Manage API lifecycle" ng-model=$ctrl.apiEnabled ng-change=$ctrl.changeLifecycle()> <div class="api-life-cycle started" ng-if="$ctrl.api.state===\'started\'"> <span style=color:green>Started</span> </div> <div class="api-life-cycle stopped" ng-if="$ctrl.api.state===\'stopped\'"> <span style=color:#e00000>Stopped</span> </div> </md-switch> </div> </md-content> </div> </div> <div flex=30 layout=column layout-align="center end"> <p style=padding:0;margin:0> <span>{{$ctrl.api.owner.displayName}}<md-tooltip md-direction=left>Owner</md-tooltip></span> <span><ng-md-icon icon=person></ng-md-icon></span> </p> <p style=padding:0;margin:0> <span>{{$ctrl.api.created_at | humanDateFilter}}<md-tooltip md-direction=left>Created at</md-tooltip></span> <span><ng-md-icon icon=timer></ng-md-icon></span> </p> <p ng-if=!$ctrl.readOnly ng-if=$ctrl.api.deployed_at style=padding:0;margin:0> <span>{{$ctrl.api.deployed_at | humanDateFilter}}<md-tooltip md-direction=left>Last deployment</md-tooltip></span> <span><ng-md-icon icon=send></ng-md-icon></span> </p> <p ng-if=$ctrl.api.proxy.context_path style=padding:0;margin:0> <span>{{$ctrl.api.proxy.context_path}}<md-tooltip md-direction=left>Context path</md-tooltip></span> <span><ng-md-icon icon=http></ng-md-icon></span> </p> <p ng-if=$ctrl.readOnly style=padding:0;margin:0> <md-button class="md-raised md-primary" style="margin:6px 0;background-color:#006cab" ui-sref=management.apis.detail.portal.plans> Subscribe </md-button> </p> </div> </div> </div> </div> '},function(e,t,i){"use strict";t.__esModule=!0;var n={bindings:{tags:"<",tenants:"<"},template:i(689),controller:"ApiCreationController"};t.default=n},function(e,t){e.exports=' <section layout=column flex> <div layout=row> <div class=gv-creation-steppers flex="{{$ctrl.vm.selectedStep !== 4 ? 60: 100}}"> <md-steppers md-dynamic-height md-disable-tabs-behavior=true md-stretch-steppers=always md-selected=$ctrl.vm.selectedStep md-busy-text="\'Processing...\'" md-busy=$ctrl.vm.showBusyText> <api-creation-step1></api-creation-step1> <api-creation-step2></api-creation-step2> <api-creation-step3></api-creation-step3> <api-creation-step4></api-creation-step4> <api-creation-step5></api-creation-step5> </md-steppers> </div> <div class=gv-creation-timeline-wrapper layout-padding flex ng-show="$ctrl.vm.selectedStep !== 4"> <div> <h4>Prepare your API</h4> <md-divider></md-divider> </div> <div class=gv-creation-timeline> <timeline> <timeline-event ng-repeat="apiStep in $ctrl.apiSteps" side=right> <timeline-badge class={{apiStep.badgeClass}}> <i class="glyphicon {{apiStep.badgeIconClass}}"></i> </timeline-badge> <timeline-panel class={{apiStep.badgeClass}}> <timeline-heading> <div style=font-weight:600;text-overflow:ellipsis;white-space:nowrap;overflow:hidden ng-bind-html=apiStep.title></div> </timeline-heading> <p>{{apiStep.content}}</p> </timeline-panel> </timeline-event> </timeline> </div> </div> </div> </section> '},function(e,t,i){"use strict";t.__esModule=!0;var n=i(3),a=function(){function e(e,t,i,n,a,o,r,s,l,c){this.$scope=e,this.$timeout=t,this.$mdDialog=i,this.$stateParams=n,this.$window=a,this.ApiService=o,this.NotificationService=r,this.$state=s,this.Constants=l,this.$rootScope=c,this.api={},this.contextPathInvalid=!0,this.api.proxy={},this.api.proxy.endpoints=[],this.api.pages=[],this.api.plans=[],this.api.tags=[],this.plan={characteristics:[]},this.pages={},this.securityTypes=[],this.Constants.plan.security.apikey.enabled&&this.securityTypes.push({id:"API_KEY",name:"API Key"}),this.Constants.plan.security.keyless.enabled&&this.securityTypes.push({id:"KEY_LESS",name:"Keyless (public)"}),this.rateLimitTimeUnits=["SECONDS","MINUTES"],this.quotaTimeUnits=["HOURS","DAYS","WEEKS","MONTHS"],this.methods=["GET","POST","PUT","DELETE","HEAD","PATCH","OPTIONS","TRACE","CONNECT"],this.resourceFiltering={whitelist:[]},this.initStepSettings(),this.initDocumentationSettings()}return e.$inject=["$scope","$timeout","$mdDialog","$stateParams","$window","ApiService","NotificationService","$state","Constants","$rootScope"],e.prototype.initStepSettings=function(){this.skippedStep=!1,this.apiSteps=[],this.apiSteps.push(this.steps()[0]),this.vm={selectedStep:0,stepProgress:1,maxStep:5,showBusyText:!1,stepData:[{step:1,completed:!1,optional:!1,data:{}},{step:2,completed:!1,optional:!1,data:{}},{step:3,label:"Plan",completed:!1,optional:!0,data:{}},{step:4,label:"Documentation",completed:!1,optional:!0,data:{}},{step:5,label:"Confirmation",completed:!1,optional:!1,data:{}}]}},e.prototype.enableNextStep=function(){if(!(this.vm.selectedStep>=this.vm.maxStep)){this.vm.selectedStep===this.vm.stepProgress-1&&(this.vm.stepProgress=this.vm.stepProgress+1),this.skippedStep?(this.apiSteps[this.vm.selectedStep].badgeClass="disable",this.apiSteps[this.vm.selectedStep].badgeIconClass="glyphicon-remove-circle",this.apiSteps[this.vm.selectedStep].title=this.steps()[this.vm.selectedStep].title+" <em>skipped</em>",this.skippedStep=!1):(this.apiSteps[this.vm.selectedStep].badgeClass="info",this.apiSteps[this.vm.selectedStep].badgeIconClass="glyphicon-ok-circle"),this.apiSteps[this.vm.selectedStep+1]||this.apiSteps.push(this.steps()[this.vm.selectedStep+1]);var e=this;this.$timeout((function(){e.vm.selectedStep=e.vm.selectedStep+1}))}},e.prototype.moveToPreviousStep=function(){this.vm.selectedStep>0?this.vm.selectedStep=this.vm.selectedStep-1:this.$state.go("management.apis.new")},e.prototype.selectStep=function(e){this.vm.selectedStep=e},e.prototype.submitCurrentStep=function(e){this.vm.showBusyText=!0,e.completed?(this.vm.showBusyText=!1,this.enableNextStep()):4!==this.vm.selectedStep&&(this.vm.showBusyText=!1,e.completed=!0,this.enableNextStep())},e.prototype.createAPI=function(e,t){var i=this.$mdDialog.confirm({title:"Create API ?",content:"The API "+this.api.name+" in version "+this.api.version+" will be created"+(e?" and deployed.":"."),ok:"CREATE"+(t?" AND ASK FOR REVIEW":""),cancel:"CANCEL"}),n=this;this.$mdDialog.show(i).then((function(){n._createAPI(e,t)}))},e.prototype._createAPI=function(e,t){var i=this;n.forEach(this.api.pages,(function(t){t.name||(t.name=t.fileName),delete t.fileName,t.published=e})),n.forEach(this.api.plans,(function(t){t.status=e?"PUBLISHED":"STAGING"})),e&&(this.api.lifecycle_state="PUBLISHED"),this.ApiService.import(null,this.api).then((function(n){return i.vm.showBusyText=!1,t&&i.ApiService.askForReview(n.data).then((function(e){n.data.workflow_state="in_review",n.data.etag=e.headers("etag"),i.api=n.data,i.$rootScope.$broadcast("apiChangeSuccess",{api:n.data})})),e?i.ApiService.deploy(n.data.id).then((function(){i.ApiService.start(n.data).then((function(){i.NotificationService.show("API created, deployed and started"),i.$state.go("management.apis.detail.portal.general",{apiId:n.data.id})}))})):(i.NotificationService.show("API created"),i.$state.go("management.apis.detail.portal.general",{apiId:n.data.id})),n})).catch((function(){i.vm.showBusyText=!1}))},e.prototype.validFirstStep=function(e){var t=this.api.name+" ("+this.api.version+") <code>"+this.api.proxy.context_path+"</code>";if(this.contextPathInvalid){var i=this,n={context_path:this.api.proxy.context_path};this.ApiService.verify(n).then((function(){i.contextPathInvalid=!1,i.submitCurrentStep(e),i.apiSteps[i.vm.selectedStep].title=t}),(function(){i.contextPathInvalid=!0}))}else this.submitCurrentStep(e),this.apiSteps[this.vm.selectedStep].title=t},e.prototype.onChangeContextPath=function(){this.contextPathInvalid=!0},e.prototype.selectEndpoint=function(){this.api.proxy.endpoints=[];var e={name:"default",target:this.endpoint,tenants:this.selectedTenants,inherit:!0};this.api.proxy.endpoints.push(e);var t=e.target;this.apiSteps[this.vm.selectedStep].title=t},e.prototype.selectPlan=function(){"KEY_LESS"===this.plan.security&&(this.plan.validation="AUTO"),this.plan.validation||(this.plan.validation="MANUAL"),this.api.plans=[],this.plan.paths={"/":[]},n.remove(this.resourceFiltering.whitelist,(function(e){return!e.pattern})),this.resourceFiltering.whitelist.length&&this.plan.paths["/"].push({methods:this.methods,"resource-filtering":{whitelist:this.resourceFiltering.whitelist}}),this.rateLimit&&this.rateLimit.limit&&this.plan.paths["/"].push({methods:this.methods,"rate-limit":{rate:this.rateLimit}}),this.quota&&this.quota.limit&&this.plan.paths["/"].push({methods:this.methods,quota:{quota:this.quota,addHeaders:!0}}),this.api.plans.push(this.plan);var e=this.plan.name+" <code>"+this.plan.security+"</code> <code>"+this.plan.validation+"</code>";this.apiSteps[this.vm.selectedStep].title=e},e.prototype.skipAddPlan=function(){this.api.plans=[],this.plan={},this.skippedStep=!0},e.prototype.resetRateLimit=function(){delete this.rateLimit},e.prototype.resetQuota=function(){delete this.quota},e.prototype.initDocumentationSettings=function(){var e=this;this.$scope.$watch("newApiPageFile.content",(function(t){if(t){var i={name:e.$scope.newApiPageFile.name,content:t,type:""};switch(i.name.split(".").pop().toUpperCase()){case"MD":i.type="MARKDOWN";break;case"YAML":case"YML":case"JSON":i.type="SWAGGER"}i.type?e.selectFile(i):e.NotificationService.showError("Only Markdown and OpenAPI file are supported")}}))},e.prototype.selectDocumentation=function(){var e="";n.forEach(this.api.pages,(function(t){e+=t.name+" "})),this.apiSteps[this.vm.selectedStep].title=e},e.prototype.selectFile=function(e){if(e&&!this.pageAlreadyExist(e.name)){var t={fileName:e.name,name:e.name,content:e.content,type:e.type,published:!1};this.api.pages.push(t)}},e.prototype.pageAlreadyExist=function(e){return n.some(this.api.pages,(function(t){return t.fileName===e}))},e.prototype.hasPage=function(){return this.api.pages.length>0},e.prototype.removePage=function(e){var t=this.$mdDialog.confirm({title:"Warning",content:"Are you sure you want to remove this page ?",ok:"OK",cancel:"Cancel"}),i=this;this.$mdDialog.show(t).then((function(){n.remove(i.api.pages,(function(t){return t.fileName===e.fileName}))}))},e.prototype.skipDocumentation=function(){this.api.pages=[],this.skippedStep=!0},e.prototype.steps=function(){return[{badgeClass:"disable",badgeIconClass:"glyphicon-refresh",title:"General",content:"Name, version and context-path"},{badgeClass:"disable",badgeIconClass:"glyphicon-refresh",title:"Gateway",content:"Endpoint"},{badgeClass:"disable",badgeIconClass:"glyphicon-refresh",title:"Plan",content:"Name, security type and validation mode"},{badgeClass:"disable",badgeIconClass:"glyphicon-refresh",title:"Documentation",content:"Pages name"}]},e}();t.default=a},function(e,t,i){"use strict";t.__esModule=!0;var n={require:{parent:"^apiCreation"},template:i(692)};t.default=n},function(e,t){e.exports=' <md-step label=General md-complete=$ctrl.parent.vm.stepData[0].data.completed> <md-step-body> <md-content layout-padding class="gv-creation-general-content gv-creation-content"> <form name=apiGeneralForm ng-submit=$ctrl.parent.validFirstStep($ctrl.parent.vm.stepData[0].data)> <div layout-gt-sm=row> <md-input-container class=md-block flex-gt-sm> <label>Name</label> <input ng-model=$ctrl.parent.api.name type=text required name=name md-maxlength=512 autofocus/> <div class=hint ng-if="apiGeneralForm.name.$valid || apiGeneralForm.name.$pristine">API Name</div> <div ng-messages=apiGeneralForm.name.$error> <div ng-message=required>API Name is required.</div> <div ng-message=md-maxlength>The name has to be less than 50 characters long.</div> </div> </md-input-container> <md-input-container class=md-block> <label>Version</label> <input ng-model=$ctrl.parent.api.version type=text md-maxlength=32 required name=version> <div class=hint ng-if="apiGeneralForm.version.$valid || apiGeneralForm.version.$pristine">API Version (ex: 1.0) </div> <div ng-messages=apiGeneralForm.version.$error> <div ng-message=required>API Version is required.</div> <div ng-message=md-maxlength>The version has to be less than 32 characters long.</div> </div> </md-input-container> </div> <div layout-gt-sm=row> <md-input-container class=md-block flex-gt-sm> <label>Description</label> <input ng-model=$ctrl.parent.api.description type=text required name=description> <div class=hint ng-if="apiGeneralForm.description.$valid || apiGeneralForm.description.$pristine"> Provide a description of your API, what it does, ... </div> <div ng-messages=apiGeneralForm.description.$error> <div ng-message=required>API Description is required.</div> </div> </md-input-container> </div> <div layout-gt-sm=row> <md-input-container class=md-block flex-gt-sm> <label>Context-path</label> <input ng-model=$ctrl.parent.api.proxy.context_path type=text minlength=3 ng-pattern=/^\\/[\\/.a-zA-Z0-9-_]+$/ required name=contextPath ng-change=$ctrl.parent.onChangeContextPath()> <div class=hint ng-if="apiGeneralForm.contextPath.$valid || apiGeneralForm.contextPath.$pristine"> Path where API is exposed, must start with a \'/\' and must contain any letter, capitalize letter, number, dash or underscore. </div> <div ng-messages=apiGeneralForm.contextPath.$error> <div ng-message=required>Context path is required.</div> <div ng-message=minlength>Context path has to be more than 3 characters long.</div> <div ng-message=pattern>Context path is not valid (must start with a \'/\' and must contain any letter, capitalize letter, number, dash or underscore)</div> </div> </md-input-container> </div> <md-step-actions layout=row> <div flex> <md-button ng-click=$ctrl.parent.moveToPreviousStep()>CANCEL</md-button> </div> <div layout=row flex layout-align="end top"> <md-button type=submit ng-disabled=apiGeneralForm.$invalid>NEXT</md-button> </div> </md-step-actions> </form> </md-content> </md-step-body> </md-step> '},function(e,t,i){"use strict";t.__esModule=!0;var n={require:{parent:"^apiCreation"},template:i(694),controller:function(){var e=this;this.toggleAdvancedMode=function(){e.advancedMode=!e.advancedMode,e.advancedMode||(e.parent.api.tags=[],e.parent.selectedTenants=[])},this.advancedMode=!1}};t.default=n},function(e,t){e.exports=' <md-step label=Gateway md-complete=$ctrl.parent.vm.stepData[1].data.completed ng-disabled="$ctrl.parent.vm.stepProgress < 2"> <md-step-body> <md-content layout-padding class=gv-creation-content> <div layout=row layout-align="end start"><a ng-click=$ctrl.toggleAdvancedMode()>Advanced mode</a></div> <form name=apiGatewayForm ng-submit="$ctrl.parent.selectEndpoint(); $ctrl.parent.submitCurrentStep($ctrl.parent.vm.stepData[1].data)"> <div layout-gt-sm=row> <md-input-container class=md-block flex-gt-sm> <label>Backend</label> <input ng-model=$ctrl.parent.endpoint type=url required name=endpoint /> <div class=hint ng-if="apiGatewayForm.endpoint.$valid || apiGatewayForm.endpoint.$pristine">Target backend when a request is received for the API context-path</div> <div ng-messages=apiGatewayForm.endpoint.$error> <div ng-message=required>Endpoint is required.</div> <div ng-message=url>Endpoint is not a valid URL.</div> </div> </md-input-container> <md-input-container class=md-block flex-gt-sm flex=25 ng-if=$ctrl.advancedMode> <label>Tenants</label> <md-select ng-model=$ctrl.parent.selectedTenants multiple=multiple> <md-option ng-repeat="tenant in $ctrl.parent.tenants" ng-value=tenant.id> {{tenant.name}}<span ng-if=tenant.description class=gravitee-general-description> - {{tenant.description}}</span> </md-option> </md-select> <div class=hint>Select tenants you want to use for this backend.</div> </md-input-container> </div> <md-input-container class=md-block ng-if=$ctrl.advancedMode> <label>Sharding tags</label> <md-select ng-model=$ctrl.parent.api.tags multiple=multiple> <md-option ng-repeat="tag in $ctrl.parent.tags" ng-value=tag.id> {{tag.name}}<span ng-if=tag.description class=gravitee-general-description> - {{tag.description}}</span> </md-option> </md-select> <div class=hint>Select sharding tags you want to use for this backend.</div> </md-input-container> <md-step-actions layout=row> <div flex> <md-button ng-click=$ctrl.parent.moveToPreviousStep()>PREVIOUS</md-button> </div> <div flex layout=row layout-align="end top"> <md-button type=submit ng-disabled=apiGatewayForm.$invalid>NEXT</md-button> </div> </md-step-actions> </form> </md-content> </md-step-body> </md-step> '},function(e,t,i){"use strict";t.__esModule=!0;var n={require:{parent:"^apiCreation"},template:i(696)};t.default=n},function(e,t){e.exports=' <md-step label=Plan md-complete=$ctrl.parent.vm.stepData[2].data.completed ng-disabled="$ctrl.parent.vm.stepProgress < 3"> <md-step-body> <md-content layout=column class="gv-creation-plan-content gv-creation-content" layout-padding> <form name=apiPlanForm flex> <div layout-gt-sm=row> <md-input-container class=md-block flex-gt-sm=50> <label>Name</label> <input ng-model=$ctrl.parent.plan.name type=text required name=name minlength=4 md-maxlength=50> <div class=hint ng-if="apiPlanForm.name.$valid || apiPlanForm.name.$pristine">Plan Name</div> <div ng-messages=apiPlanForm.name.$error> <div ng-message=required>Plan name is required.</div> <div ng-message=minlength>The name has to be more than 4 characters long.</div> <div ng-message=md-maxlength>The name has to be less than 50 characters long.</div> </div> </md-input-container> <md-input-container class=md-block flex-gt-sm=25> <label>Security Type</label> <md-select ng-model=$ctrl.parent.plan.security placeholder="Security type" required ng-required=true> <md-option ng-repeat="type in $ctrl.parent.securityTypes" ng-value=type.id>{{type.name}}</md-option> </md-select> </md-input-container> <md-input-container class=md-block flex-gt-sm style=margin-left:10px> <md-switch aria-label="Auto validate subscription" ng-model=$ctrl.parent.plan.validation ng-true-value="\'AUTO\'" ng-disabled="$ctrl.parent.plan.security == \'KEY_LESS\'" ng-false-value="\'MANUAL\'"> &nbsp;&nbsp;Auto validate subscription </md-switch> </md-input-container> </div> <div layout-gt-sm=row> <md-input-container class=md-block flex-gt-sm> <label>Description</label> <input type=text ng-model=$ctrl.parent.plan.description required> </md-input-container> </div> <div layout-gt-sm=row> <div layout=column flex> <h5>Characteristics</h5> <md-chips ng-model=$ctrl.parent.plan.characteristics placeholder="Enter a characteristic" md-add-on-blur=true secondary-placeholder=+Characteristic ng-click=apiPlanForm.$setDirty()></md-chips> </div> </div> <div layout-gt-sm=row style=margin-top:30px> <div layout=column flex> <h5>Rate limit</h5> <div layout=row flex> <md-input-container class=md-block ng-if=$ctrl.parent.rateLimit.limit> <md-button class=md-icon-button aria-label="Reset rate limit" ng-click=$ctrl.parent.resetRateLimit();apiPlanForm.$setDirty()> <md-tooltip md-direction=top>Reset rate limit</md-tooltip> <ng-md-icon icon=remove_circle_outline style=fill:#b1bdc5;top:0></ng-md-icon> </md-button> </md-input-container> <md-input-container class=md-block flex> <label>Max requests</label> <input type=number ng-model=$ctrl.parent.rateLimit.limit ng-required=$ctrl.parent.rateLimit.periodTime> </md-input-container> <md-input-container class=md-block> <label>Period time</label> <input type=number ng-model=$ctrl.parent.rateLimit.periodTime ng-required=$ctrl.parent.rateLimit.limit> </md-input-container> <md-input-container class=md-block flex> <label>Period time unit</label> <md-select ng-model=$ctrl.parent.rateLimit.periodTimeUnit placeholder="Time unit" ng-required=$ctrl.parent.rateLimit.limit> <md-option ng-value=timeUnit ng-repeat="timeUnit in $ctrl.parent.rateLimitTimeUnits">{{timeUnit}}</md-option> </md-select> </md-input-container> </div> </div> <div layout=column flex> <h5>Quota</h5> <div layout=row flex> <md-input-container class=md-block ng-if=$ctrl.parent.quota.limit> <md-button class=md-icon-button aria-label="Reset quota" ng-click=$ctrl.parent.resetQuota();apiPlanForm.$setDirty()> <md-tooltip md-direction=top>Reset quota</md-tooltip> <ng-md-icon icon=remove_circle_outline style=fill:#b1bdc5;top:0></ng-md-icon> </md-button> </md-input-container> <md-input-container class=md-block flex> <label>Max requests</label> <input type=number ng-model=$ctrl.parent.quota.limit ng-required=$ctrl.parent.quota.periodTime> </md-input-container> <md-input-container class=md-block flex> <label>Period time</label> <input type=number ng-model=$ctrl.parent.quota.periodTime ng-required=$ctrl.parent.quota.limit> </md-input-container> <md-input-container class=md-block flex> <label>Period time unit</label> <md-select ng-model=$ctrl.parent.quota.periodTimeUnit placeholder="Time unit" ng-required=$ctrl.parent.quota.limit> <md-option ng-value=timeUnit ng-repeat="timeUnit in $ctrl.parent.quotaTimeUnits">{{timeUnit}}</md-option> </md-select> </md-input-container> </div> </div> </div> <div layout=row> <h4>Path authorization</h4> <md-tooltip md-direction=top>Add path authorization</md-tooltip> <md-button type=button class=md-icon-button aria-label="Add path authorization" ng-click=$ctrl.parent.resourceFiltering.whitelist.push({})> <ng-md-icon icon=add_circle_outline style=fill:#b1bdc5;top:0></ng-md-icon> </md-button> </div> <div ng-repeat="whitelist in $ctrl.parent.resourceFiltering.whitelist"> <div layout=row> <md-input-container class=md-block> <md-tooltip md-direction=top>Delete path authorization</md-tooltip> <md-button class=md-icon-button aria-label="Delete path authorization" ng-click="$ctrl.parent.resourceFiltering.whitelist.splice($index, 1);apiPlanForm.$setDirty()"> <ng-md-icon icon=remove_circle_outline style=fill:#b1bdc5;top:0></ng-md-icon> </md-button> </md-input-container> <md-input-container class=md-block flex=80> <label>Ant pattern</label> <input type=text ng-model=whitelist.pattern> </md-input-container> <md-input-container class=md-block flex> <label>Methods</label> <md-select ng-model=whitelist.methods placeholder="Select the methods (Default ALL)" multiple=multiple> <md-option ng-value=method ng-repeat="method in $ctrl.parent.methods">{{method}}</md-option> </md-select> </md-input-container> </div> </div> </form> </md-content> <md-step-actions layout=row> <div flex> <md-button ng-click=$ctrl.parent.moveToPreviousStep()>PREVIOUS</md-button> </div> <div flex layout=row layout-align="end top"> <md-button ng-if=$ctrl.parent.vm.stepData[2].optional ng-click="$ctrl.parent.skipAddPlan($ctrl.parent.vm.stepData[2].data); $ctrl.parent.submitCurrentStep($ctrl.parent.vm.stepData[2].data); apiPlanForm.$setPristine();">SKIP </md-button> <md-button ng-disabled=apiPlanForm.$invalid ng-click="$ctrl.parent.selectPlan(); $ctrl.parent.submitCurrentStep($ctrl.parent.vm.stepData[2].data)">NEXT </md-button> </div> </md-step-actions> </md-step-body> </md-step> '},function(e,t,i){"use strict";t.__esModule=!0;var n={require:{parent:"^apiCreation"},template:i(698)};t.default=n},function(e,t){e.exports=' <md-step label=Doc md-complete=$ctrl.parent.vm.stepData[3].data.completed ng-disabled="$ctrl.parent.vm.stepProgress < 4"> <md-step-body> <md-tabs md-dynamic-height md-border-bottom flex layout-padding class=gv-creation-content> <md-tab label="Import file"> <div class=import-file-drop-box> <input type=file filecontent=$parent.newApiPageFile.content filename=$parent.newApiPageFile.name> </div> <md-content class=gv-creation-pages-content> <md-table-container ng-if=$ctrl.parent.hasPage() style=margin-top:20px> <table md-table style=border:none> <thead md-head style=background:#fff> <tr md-row> <th md-column>Page name</th> <th md-column>File name</th> <th md-column></th> </tr> </thead> <tbody md-body> <tr md-row ng-repeat="page in $ctrl.parent.api.pages" style=background:#fff> <td md-cell><input type=text ng-model=page.name placeholder="Page name"/></td> <td md-cell>{{page.fileName}}</td> <td md-cell ng-click=$event.stopPropagation()> <div layout=row layout-align="end center"> <span> <md-tooltip md-direction=top>delete</md-tooltip> <ng-md-icon icon=delete ng-click=$ctrl.parent.removePage(page) aria-label=delete-page></ng-md-icon> </span> </div> </td> </tr> </tbody> </table> </md-table-container> </md-content> </md-tab> </md-tabs> <md-step-actions layout=row> <div flex> <md-button ng-click=$ctrl.parent.moveToPreviousStep()>PREVIOUS</md-button> </div> <div flex layout=row layout-align="end top"> <md-button ng-if=$ctrl.parent.vm.stepData[3].optional ng-click="$ctrl.parent.skipDocumentation(); $ctrl.parent.submitCurrentStep($ctrl.parent.vm.stepData[3].data)">SKIP </md-button> <md-button ng-disabled=!$ctrl.parent.hasPage() ng-click="$ctrl.parent.selectDocumentation(); $ctrl.parent.submitCurrentStep($ctrl.parent.vm.stepData[3].data)">NEXT </md-button> </div> </md-step-actions> </md-step-body> </md-step> '},function(e,t,i){"use strict";t.__esModule=!0;var n={require:{parent:"^apiCreation"},template:i(700),controller:["Constants",function(e){e.documentation&&e.documentation.url?this.url=e.documentation.url:this.url="https://docs.gravitee.io"}]};t.default=n},function(e,t){e.exports=' <md-step label=Deployment md-complete=$ctrl.parent.vm.stepData[4].data.completed ng-disabled="$ctrl.parent.vm.stepProgress < 5"> <md-step-body> <md-content flex layout-padding class="gv-abstract-content gv-creation-content"> <h5>API <a ng-click=$ctrl.parent.selectStep(0)> <md-tooltip>Jump to general edition</md-tooltip> <ng-md-icon icon=mode_edit size=20></ng-md-icon> </a> </h5> <p> You are about to create the API <code>{{$ctrl.parent.api.name}}</code> in version <code>{{$ctrl.parent.api.version}}</code>. The API will be map to the following context path <code>{{$ctrl.parent.api.proxy.context_path}}</code>. </p> <h5>Gateway <a ng-click=$ctrl.parent.selectStep(1)> <md-tooltip>Jump to gateway edition</md-tooltip> <ng-md-icon icon=mode_edit size=20></ng-md-icon> </a> </h5> <p> The upstream endpoint will be <code ng-repeat="endpoint in $ctrl.parent.api.proxy.endpoints">{{endpoint.target}}</code>. </p> <h5>Plan <a ng-click=$ctrl.parent.selectStep(2)> <md-tooltip>Jump to plan edition</md-tooltip> <ng-md-icon icon=mode_edit size=20></ng-md-icon> </a> </h5> <p ng-if="$ctrl.parent.api.plans.length > 0"> The <code>{{$ctrl.parent.api.plans[0].name}}</code> plan will allow users to subscribe to the API. The <code>{{$ctrl.parent.api.plans[0].security}}</code> plan security scheme means that the API <span ng-if="$ctrl.parent.api.plans[0].security === \'KEY_LESS\'">will be open access and causes API Gateway to bypass any access control mechanisms.</span> <span ng-if="$ctrl.parent.api.plans[0].security === \'API_KEY\'">will enforce verification of API keys during request processing, letting only apps with approved API keys access the API.</span> The plan has validation mode set to <code>{{$ctrl.parent.api.plans[0].validation}}</code> meaning that application developers <span ng-if="$ctrl.parent.api.plans[0].validation === \'AUTO\'">can subscribe to this Plan immediately.</span> <span ng-if="$ctrl.parent.api.plans[0].validation === \'MANUAL\'">have to request approval for access to subscribe to this Plan.</span> </p> <p ng-if="$ctrl.parent.api.plans.length == 0" class=gv-abstract-warning> <ng-md-icon icon=warning style=fill:orange></ng-md-icon> No plan means that nobody can subscribe and consume your API. </p> <h5>Documentation <a ng-click=$ctrl.parent.selectStep(3)> <md-tooltip>Jump to documentation edition</md-tooltip> <ng-md-icon icon=mode_edit size=20></ng-md-icon> </a> </h5> <p ng-if="$ctrl.parent.api.pages.length > 0"> The API will have the <code ng-repeat-start="page in $ctrl.parent.api.pages" ng-bind=page.name></code> <span ng-repeat-end></span>documentation to helping users understand and use the API. </p> <p ng-if="$ctrl.parent.api.pages.length == 0" class=gv-abstract-warning> <ng-md-icon icon=warning style=fill:orange></ng-md-icon> No documentation provided, remember to provide consumers understandable and accurate information about your API. </p> <h5>Confirmation</h5> <p style=padding-top:0 ng-if=!$ctrl.parent.Constants.apiReview.enabled> You can now either <strong><md-button class=md-raised ng-click=$ctrl.parent.createAPI(false)>create the API without deploying it</md-button></strong> letting you continue configure the API or <strong><md-button class=md-raised ng-click=$ctrl.parent.createAPI(true)>create and start the API</md-button></strong> to make it immediately available for the application developers. </p> <p style=padding-top:0 ng-if=$ctrl.parent.Constants.apiReview.enabled> You can now either <strong><md-button class=md-raised ng-click="$ctrl.parent.createAPI(false, false)">create the API in draft</md-button></strong> letting you continue configure the API or <strong><md-button class=md-raised ng-click="$ctrl.parent.createAPI(false, true)">create the API and ask for review</md-button></strong> before publishing/starting it. </p> <div layout=row> <a ng-href={{$ctrl.url}} target=_blank class=gv-abstract-documentation-link flex>To go further on API configuration, please consult <strong>API Management documentation</strong></a> </div> </md-content> </md-step-body> </md-step> '},function(e,t,i){"use strict";t.__esModule=!0;var n=i(3),a={template:i(702),bindings:{apiId:"<",cancelAction:"&",policies:"<"},controller:["$state","$scope","$mdDialog","NotificationService","ApiService",function(e,t,i,a,o){var r=this;this.$onInit=function(){var e=r;r.importFileMode=!0,r.importURLMode=!1,r.enableFileImport=!1,r.importFileMode=!0,r.importURLMode=!1,r.importURLTypes=[{id:"SWAGGER",name:"Swagger / OpenAPI"},{id:"GRAVITEE",name:"API Definition"}],r.importURLType="SWAGGER",r.apiDescriptorURL=null,r.importAPIFile=null,r.importCreateDocumentation=!0,r.importCreatePolicyPaths=!1,r.importCreatePathMapping=!0,r.importCreateMocks=!1,t.$watch("$ctrl.importAPIFile.content",(function(t){t&&(e.enableFileImport=!0)}))},this.placeholder=function(){return"SWAGGER"===r.importURLType?"Enter Swagger descriptor URL":"GRAVITEE"===r.importURLType?"Enter API definition URL":void 0},this.cancel=function(){r.cancelAction()},this.isSwaggerImport=function(){if(r.importURLMode&&"SWAGGER"===r.importURLType)return!0;if(r.importFileMode&&r.importAPIFile)switch(r.importAPIFile.name.split(".").pop()){case"yml":case"yaml":return!0;case"json":if(r.isSwaggerDescriptor())return!0;break;default:return!1}return!1},this.isForUpdate=function(){return null!=r.apiId},this.isSwaggerDescriptor=function(){try{if(r.enableFileImport){var e=JSON.parse(r.importAPIFile.content);return e.hasOwnProperty("swagger")||e.hasOwnProperty("swaggerVersion")||e.hasOwnProperty("openapi")}}catch(e){a.showError("Invalid json file."),r.enableFileImport=!1}},this.enableImport=function(){return r.importFileMode?r.enableFileImport:r.apiDescriptorURL&&r.apiDescriptorURL.length},this.importAPI=function(){if(r.importFileMode)switch(r.importAPIFile.name.split(".").pop()){case"yml":case"yaml":r.importSwagger();break;case"json":var e=r.isSwaggerDescriptor();null!==e&&(e?r.importSwagger():r.importGraviteeIODefinition());break;default:r.enableFileImport=!1,a.showError("Input file must be a valid API definition file.")}else"SWAGGER"===r.importURLType?r.importSwagger():"GRAVITEE"===r.importURLType&&r.importGraviteeIODefinition();r.isForUpdate()&&r.cancel()},this.importGraviteeIODefinition=function(){var t=r.isForUpdate()?r.apiId:null,i=r.importFileMode?r.importAPIFile.content:r.apiDescriptorURL,n=r.isForUpdate();o.import(t,i).then((function(t){a.show("API updated"),n?e.reload():e.go("management.apis.detail.portal.general",{apiId:t.data.id})}))},this.importSwagger=function(){var t={with_documentation:r.importCreateDocumentation,with_path_mapping:r.importCreatePathMapping,with_policy_paths:r.importCreatePolicyPaths,with_policies:n.map(n.filter(r.policies,"enable"),"id")};r.importFileMode?(t.type="INLINE",t.payload=r.importAPIFile.content):(t.type="URL",t.payload=r.apiDescriptorURL),r.isForUpdate()?o.importSwagger(r.apiId,t).then((function(t){a.show("API successfully imported"),e.reload()})):o.importSwagger(null,t).then((function(t){a.show("API successfully updated"),e.go("management.apis.detail.portal.general",{apiId:t.data.id})}))}}]};t.default=a},function(e,t){e.exports=" <md-dialog-content> <md-tabs md-dynamic-height md-border-bottom> <md-tab label=\"Import file\" ng-click=\"$ctrl.importFileMode= true; $ctrl.importURLMode= false;\"> <div class=import-file-drop-box> <input type=file filecontent=$ctrl.importAPIFile.content filename=$ctrl.importAPIFile.name> </div> </md-tab> <md-tab label=\"Import from link\" ng-click=\"$ctrl.importFileMode= false; $ctrl.importURLMode= true;\"> <div class=\"input-group import-file-from-url\"> <input class=form-control ng-model=$ctrl.apiDescriptorURL required type=url placeholder={{$ctrl.placeholder()}} /> </div> <md-radio-group ng-model=$ctrl.importURLType style=\"margin:0 24px\"> <md-radio-button class=import-file-from-url ng-repeat=\"type in $ctrl.importURLTypes\" value={{type.id}}>{{type.name}}</md-radio-button> </md-radio-group> </md-tab> </md-tabs> <div style=margin:24px ng-class=\"{'gv-swagger-conf-update': $ctrl.isForUpdate() }\" layout=column ng-if=$ctrl.isSwaggerImport()> <h4>Swagger import configurations:</h4> <div class=gv-warn style=padding-bottom:10px ng-show=$ctrl.isForUpdate()>This will overwrite the name, the description and the version.</div> <md-checkbox ng-model=$ctrl.importCreateDocumentation aria-label=\"($ctrl.isForUpdate() ? 'Update' : 'Create') documentation pages\" flex ng-change=$ctrl.updateWarnText()> {{($ctrl.isForUpdate() ? 'Update' : 'Create')}} documentation <div class=ipsum style=color:grey>{{($ctrl.isForUpdate() ? 'Update the' : 'Add a')}} documentation page with the content of the swagger descriptor.</div> <div class=gv-warn ng-show=\"$ctrl.isForUpdate() && $ctrl.importCreateDocumentation\">This will overwrite the swagger documentation if there is only one existing, or create it if it does not exist yet.</div> </md-checkbox> <md-checkbox ng-model=$ctrl.importCreatePathMapping aria-label=\"($ctrl.isForUpdate() ? 'Update' : 'Create') the path-mapping for analytics\" flex ng-change=$ctrl.updateWarnText()> {{($ctrl.isForUpdate() ? 'Update' : 'Create')}} the path-mapping for analytics <div class=ipsum style=color:grey>{{($ctrl.isForUpdate() ? 'Update' : 'Create')}} each path from the swagger descriptor.</div> <div class=gv-warn ng-show=\"$ctrl.isForUpdate() && $ctrl.importCreatePathMapping\">This will overwrite all the path-mappings.</div> </md-checkbox> <md-checkbox ng-model=$ctrl.importCreatePolicyPaths aria-label=\"($ctrl.isForUpdate() ? 'Update' : 'Create') paths for policies\" ng-click=\"$ctrl.importCreateMocks = false\" flex ng-change=$ctrl.updateWarnText()> {{($ctrl.isForUpdate() ? 'Update' : 'Create')}} policies on paths <div class=ipsum style=color:grey>{{($ctrl.isForUpdate() ? 'Update' : 'Create')}} each path from the swagger descriptor.</div> <div class=gv-warn ng-show=\"$ctrl.isForUpdate() && $ctrl.importCreatePolicyPaths\">This will overwrite all the policies.</div> </md-checkbox> <md-checkbox ng-repeat=\"policy in $ctrl.policies track by policy.id\" ng-model=policy.enable aria-label=\"Apply {{::policy.name}} on paths\" flex ng-change=$ctrl.updateWarnText() ng-disabled=!$ctrl.importCreatePolicyPaths style=margin-left:20px> Apply {{::policy.name}} policy <div class=ipsum style=color:grey>Apply policy on each path from the swagger descriptor.</div> <div class=gv-warn ng-show=\"$ctrl.isForUpdate() && $ctrl.importCreateMocks\">This will overwrite all the existing policy.</div> </md-checkbox> </div> </md-dialog-content> <md-dialog-actions layout=row> <md-button md-no-ink ng-click=$ctrl.cancel() ng-show=$ctrl.isForUpdate()>Cancel</md-button> <md-button ng-disabled=!$ctrl.enableImport() ng-click=$ctrl.importAPI() class=\"md-raised gv-import-api-button\" ng-class=\"{'md-warn': $ctrl.isForUpdate()}\">Import</md-button> </md-dialog-actions> "},function(e,t,i){"use strict";t.__esModule=!0;var n=function(){function e(e){this.policies=e}return e.$inject=["policies"],e}();t.default=n},function(e,t,i){"use strict";t.__esModule=!0;var n={bindings:{plan:"<",subscribable:"<",unsubscribable:"<",onSubscribe:"&",onUnsubscribe:"&"},template:i(705),controller:["UserService",function(e){this.authenticated=e.isAuthenticated(),this.subscribe=function(){this.onSubscribe(this.plan)},this.unsubscribe=function(){this.onUnsubscribe(this.plan)}}]};t.default=n},function(e,t){e.exports=' <md-card class="gravitee-card gravitee-plan-box plans" style="min-width:250px;max-width:350px;margin:0 auto"> <md-card-header> <md-toolbar> <div class=md-toolbar-tools> <div layout=column> <h4>{{$ctrl.plan.name}}</h4> <span style=font-size:12px>Authentication: {{$ctrl.plan.security}}</span> </div> <span flex></span> <span ng-if="$ctrl.plan.alreadySubscribed && $ctrl.unsubscribable && !$ctrl.plan.pending"> <md-tooltip md-direction=top>Unsubscribe</md-tooltip> <ng-md-icon style=fill:grey icon=cancel ng-click=$ctrl.unsubscribe(); disabled=disabled></ng-md-icon> </span> </div> </md-toolbar> </md-card-header> <md-divider></md-divider> <md-card-content layout=column> <h4 class=gravitee-plan-content>{{$ctrl.plan.description}}</h4> <md-divider></md-divider> <div ng-repeat="characteristic in $ctrl.plan.characteristics"> <h5 class=gravitee-plan-content>{{characteristic}}</h5> <md-divider></md-divider> </div> </md-card-content> <md-card-footer ng-if=$ctrl.authenticated> <md-divider></md-divider> <div layout=row layout-align=end> <md-button ng-if="$ctrl.plan.security !== \'key_less\' || $ctrl.plan.security === undefined" class="md-primary md-raised" aria-label=Execute ng-click=$ctrl.subscribe() ng-disabled="!$ctrl.subscribable || $ctrl.plan.alreadySubscribed"> {{$ctrl.plan.alreadySubscribed ? \'Subscribed\' : ($ctrl.plan.validation === \'auto\'?\'Subscribe\': \'Request for subscription\')}} {{$ctrl.plan.pending ? \'(pending)\' : \'\'}} </md-button> <md-button ng-if="$ctrl.plan.security === \'key_less\'" class="md-primary md-raised" aria-label=Execute ng-disabled=true> No subscription required </md-button> </div> </md-card-footer> </md-card> '},function(e,t,i){"use strict";t.__esModule=!0;var n=i(3),a=function(){function e(e,t,i,n,a,o){this.$scope=e,this.$state=t,this.$stateParams=i,this.$timeout=n,this.ApiService=a,this.NotificationService=o,this.vm={selectedStep:0,stepProgress:1,maxStep:4,showBusyText:!1,stepData:[{step:1,completed:!1,optional:!1,data:{}},{step:2,completed:!1,optional:!1,data:{}},{step:3,completed:!1,optional:!0,data:{}},{step:4,completed:!1,optional:!0,data:{}}]}}return e.$inject=["$scope","$state","$stateParams","$timeout","ApiService","NotificationService"],e.prototype.$onInit=function(){var e=this;if(this.plan||(this.plan={characteristics:[]}),this.plan.paths&&this.plan.paths["/"]||(this.plan.paths={"/":[]}),this.planPolicies=this.plan.paths["/"],this.planPolicies&&this.planPolicies.forEach((function(t){n.forEach(t,(function(i,n){if("methods"!==n&&"enabled"!==n&&"description"!==n&&"$$hashKey"!==n){t.id=n;var a=e.policies.find((function(e){return e.id===t.id}));a&&(t.name=a.name)}}))})),"private"===this.api.visibility)if(this.api.groups){var t=this.api.groups;this.groups=n.filter(this.groups,(function(e){return t.indexOf(e.id)>-1}))}else this.groups=[]},e.prototype.moveToNextStep=function(e){this.submitCurrentStep(e)},e.prototype.moveToPreviousStep=function(){this.vm.selectedStep>0&&(this.vm.selectedStep=this.vm.selectedStep-1)},e.prototype.selectStep=function(e){this.vm.selectedStep=e},e.prototype.submitCurrentStep=function(e){this.vm.showBusyText=!0,e.completed?(this.vm.showBusyText=!1,this.enableNextStep()):4!==this.vm.selectedStep&&(this.vm.showBusyText=!1,e.completed=!0,this.enableNextStep())},e.prototype.enableNextStep=function(){var e=this;this.vm.selectedStep>=this.vm.maxStep||(this.vm.selectedStep===this.vm.stepProgress-1&&(this.vm.stepProgress=this.vm.stepProgress+1),this.$timeout((function(){return e.vm.selectedStep=e.vm.selectedStep+1})))},e.prototype.saveOrUpdate=function(){var e=this;this.plan.securityDefinition=JSON.stringify(this.plan.securityDefinition),this.ApiService.savePlan(this.$stateParams.apiId,this.plan).then((function(){e.NotificationService.show(e.plan.name+" has been saved successfully"),e.$state.go("management.apis.detail.portal.plans.list",void 0===e.plan.id?{state:"staging"}:{}),e.$scope.$parent.apiCtrl.checkAPISynchronization({id:e.$stateParams.apiId})}))},e.prototype.isTagDisabled=function(e){return!n.includes(this.userTags,e.id)||!n.includes(this.api.tags,e.id)},e}();t.default=a},function(e,t,i){"use strict";t.__esModule=!0;var n={bindings:{api:"<",plan:"<",groups:"<",policies:"<",tags:"<",userTags:"<"},controller:"ApiEditPlanController",template:i(708)};t.default=n},function(e,t){e.exports=' <div layout=column> <div> <span class=md-headline style="padding:24px 16px 16px">Plan</span> </div> <div layout=row flex> <div class=gv-creation-steppers flex="{{$ctrl.vm.selectedStep !== 4 ? 65: 100}}"> <md-stepper-card-content class=md-no-padding> <md-steppers md-dynamic-height md-stretch-steppers=always md-disable-tabs-behavior=true md-selected=$ctrl.vm.selectedStep md-busy-text="\'Processing...\'" md-busy=$ctrl.vm.showBusyText> <plan-wizard-general></plan-wizard-general> <plan-wizard-security></plan-wizard-security> <plan-wizard-restrictions></plan-wizard-restrictions> <plan-wizard-policies></plan-wizard-policies> </md-steppers> </md-stepper-card-content> </div> <div class=gv-creation-timeline-wrapper layout-padding flex ng-show="$ctrl.vm.selectedStep !== 4"> <h4>Preview</h4> <api-plan plan=$ctrl.plan subscribable=false></api-plan> </div> </div> </div> '},function(e,t,i){"use strict";t.__esModule=!0;var n={bindings:{plans:"<",api:"<"},controller:"ApiListPlansController",template:i(710)};t.default=n},function(e,t){e.exports=' <div class="gv-forms gv-forms-fluid" layout=column> <h1>Plans</h1> <div class=gv-form> <h2></h2> <div class=gv-form-content layout=column> <div class=btn-group> <button class="btn btn-default" ng-class="{\'active\': $ctrl.selectedStatus.indexOf(statusFilter) !== -1}" ng-click=$ctrl.changeFilter(statusFilter) type=button ng-repeat="statusFilter in $ctrl.statusFilters" style=text-transform:capitalize> {{statusFilter}} <span ng-if=$ctrl.countByStatus[statusFilter]>({{$ctrl.countByStatus[statusFilter]}})</span> </button> </div> <div layout=column flex> <div layout=row layout-align=center layout-wrap class=plans> <div class=md-block ng-repeat="plan in $ctrl.filteredPlans" layout=row layout-align=center> <md-card class="gravitee-card gravitee-plan-box" style=min-width:250px;max-width:350px> <md-card-header> <md-toolbar class=md-menu-toolbar> <div class=md-toolbar-tools> <div layout=column> <h4 ng-class="{italic: plan.status === \'staging\', strike: plan.status === \'closed\'}"> {{plan.name}} </h4> <span style=font-size:12px>Authentication: {{plan.security}}</span> <span style=font-size:12px ng-if="plan.tags && plan.tags.length > 0">Deploy on: {{plan.tags.join(\', \')}}</span> </div> <span flex></span> <span ng-if="plan.status !== \'closed\'" permission permission-only="\'api-plan-u\'"> <md-tooltip md-direction=top>Configure plan</md-tooltip> <ng-md-icon style=fill:grey icon=mode_edit ng-click=$ctrl.editPlan(plan)></ng-md-icon> </span> <span ng-if="plan.status === \'staging\'" permission permission-only="\'api-plan-u\'"> <md-tooltip md-direction=top>Publish plan</md-tooltip> <ng-md-icon style=fill:#6ba2c5 icon=backup ng-click=$ctrl.publish(plan)></ng-md-icon> </span> <span ng-if="plan.status === \'published\'" permission permission-only="\'api-plan-u\'"> <md-tooltip md-direction=top>Depreciate plan</md-tooltip> <ng-md-icon style=fill:#d3772d icon=portable_wifi_off ng-click=$ctrl.depreciate(plan)></ng-md-icon> </span> <span ng-if="plan.status !== \'closed\'" permission permission-only="\'api-plan-u\'"> <md-tooltip md-direction=top>Close plan</md-tooltip> <ng-md-icon style=fill:#d3091d icon=close ng-click=$ctrl.close(plan)></ng-md-icon> </span> </div> </md-toolbar> </md-card-header> <md-divider></md-divider> <md-card-content layout=column> <h4 class=gravitee-plan-content>{{plan.description}}</h4> <md-divider></md-divider> <div ng-repeat="characteristic in plan.characteristics"> <h5 class=gravitee-plan-content>{{characteristic}}</h5> <md-divider></md-divider> </div> </md-card-content> <md-divider ng-if="graviteeUser || plan.isPublic"></md-divider> <md-card-footer ng-if="graviteeUser || plan.isPublic"> <div layout=row layout-align=end> <md-button ng-if="plan.security !== \'key_less\' || plan.security === undefined" class="md-primary md-raised" aria-label=Execute ng-click=subscribe(plan) ng-disabled="plan.status || planEdit"> {{plan.alreadySubscribed ? \'Subscribed\' : (plan.validation === \'auto\'?\'Subscribe\': \'Request for subscription\')}} </md-button> <md-button ng-if="plan.security === \'key_less\'" class="md-primary md-raised" aria-label=Execute ng-click=subscribe(plan) ng-disabled="plan.status || planEdit"> No subscription required </md-button> </div> </md-card-footer> </md-card> </div> </div> <div permission permission-only="\'api-plan-u\'" layout=row layout-align=center layout-wrap> <span ng-if="$ctrl.filteredPlans.length != 0 && $ctrl.dndEnabled"><ng-md-icon icon=info style=fill:#b1bdc5></ng-md-icon> Plans can be re-ordered by dragging & dropping them.</span> </div> </div> <gravitee-empty-state ng-if="$ctrl.filteredPlans.length == 0" icon=view_week model=Plan message="Plans will appear here" sub-message={{$ctrl.creationEmptyMessage}} create-mode=true></gravitee-empty-state> <div permission permission-only="\'api-plan-c\'" ng-style="$ctrl.filteredPlans.length == 0 && {\'text-align\':\'center\'}" ng-if=!$ctrl.isApiDeprecated> <md-button ng-class="{\'md-fab-bottom-right\': $ctrl.filteredPlans.length > 0}" class=md-fab aria-label=Add ng-click=$ctrl.addPlan()> <ng-md-icon icon=add></ng-md-icon> </md-button> </div> </div> </div> </div> '},function(e,t,i){"use strict";t.__esModule=!0;var n=i(3),a=i(7),o=function(){function e(e,t,i,n,a,o,r,s,l){this.$scope=e,this.$rootScope=t,this.$state=i,this.$stateParams=n,this.$mdDialog=a,this.dragularService=o,this.NotificationService=r,this.UserService=s,this.ApiService=l,this.dndEnabled=s.isUserHasPermissions(["api-plan-u"]),this.statusFilters=["staging","published","deprecated","closed"],this.selectedStatus=["published"],this.countByStatus={}}return e.$inject=["$scope","$rootScope","$state","$stateParams","$mdDialog","dragularService","NotificationService","UserService","ApiService"],e.prototype.$onInit=function(){var e=this,t=document.querySelector(".plans");this.dragularService([t],{moves:function(){return e.dndEnabled},scope:this.$scope,containersModel:this.plans,nameSpace:"plan"}),this.$scope.$on("dragulardrop",(function(t,i,n,a,o,r,s,l){var c=e.filteredPlans[r];c.order=l+1,e.ApiService.savePlan(e.$stateParams.apiId,c).then((function(){e.list(),e.NotificationService.show("Plans have been reordered successfully")}))})),this.$stateParams.state&&n.includes(this.statusFilters,this.$stateParams.state)?this.changeFilter(this.$stateParams.state):this.applyFilters(),this.isApiDeprecated="deprecated"===this.api.lifecycle_state,this.creationEmptyMessage=this.isApiDeprecated?"The API is deprecated":"Start creating a plan"},e.prototype.list=function(){var e=this;this.ApiService.getApiPlans(this.$stateParams.apiId).then((function(t){var i=e;e.$scope.$applyAsync((function(){i.plans.length=0,Array.prototype.push.apply(i.plans,t.data),i.applyFilters()}))}))},e.prototype.changeFilter=function(e){this.selectedStatus=e,this.dndEnabled="published"===e&&this.UserService.isUserHasPermissions(["api-plan-u"]),n.includes(this.selectedStatus,e)?n.pull(this.selectedStatus,e):this.selectedStatus.push(e),this.$state.transitionTo(this.$state.current,n.merge(this.$state.params,{state:e})),this.applyFilters()},e.prototype.applyFilters=function(){this.countPlansByStatus();var e=this;this.filteredPlans=n.sortBy(n.filter(this.plans,(function(t){return n.includes(e.selectedStatus,t.status)})),"order")},e.prototype.addPlan=function(){this.$state.go("management.apis.detail.portal.plans.new")},e.prototype.editPlan=function(e){this.$state.go("management.apis.detail.portal.plans.plan",{planId:e.id})},e.prototype.close=function(e,t){var n=this;this.ApiService.getAllPlanSubscriptions(this.$stateParams.apiId,e.id).then((function(t){var a=t.data.page.size,o="";"key_less"===e.security?o="A keyless plan may have consumers. <br/>By closing this plan you will remove free access to this API.":0===a?o="No subscription is associated to this plan. You can delete it safely.":a>0&&(o="There are <code>"+a+"</code> subscription(s) associated to this plan.<br/>By closing this plan, all relative active subscriptions will also be closed.");var r="Yes, close this plan.";0===a&&"api_key"===e.security&&(r="Yes, delete this plan."),n.$mdDialog.show({controller:"DialogConfirmAndValidateController",controllerAs:"ctrl",template:i(181),clickOutsideToClose:!0,locals:{title:'Would you like to close plan "'+e.name+'" ?',warning:"This operation is irreversible.",msg:o,validationMessage:"Please, type in the name of the plan <code>"+e.name+"</code> to confirm.",validationValue:e.name,confirmButton:r}}).then((function(t){if(t){var i=n;n.ApiService.closePlan(n.$stateParams.apiId,e.id).then((function(){i.NotificationService.show("Plan "+e.name+" has been closed"),i.$rootScope.$broadcast("planChangeSuccess",{state:"closed"}),i.$scope.$parent.apiCtrl.checkAPISynchronization({id:i.$stateParams.apiId}),i.selectedStatus=["closed"],i.list()})).catch((function(t){i.NotificationService.show("Error while closing plan "+e.name)}))}}))}))},e.prototype.depreciate=function(e,t){var n=this;this.$mdDialog.show({controller:"DialogConfirmController",controllerAs:"ctrl",template:i(5),clickOutsideToClose:!0,locals:{title:'Would you like to deprecate plan "'+e.name+'" ?',msg:"By deprecating this plan, users will no more be able to subscribe to it.",confirmButton:"Deprecate"}}).then((function(t){t&&n.ApiService.depreciatePlan(n.$stateParams.apiId,e.id).then((function(){n.NotificationService.show("Plan "+e.name+" has been deprecated"),n.$rootScope.$broadcast("planChangeSuccess",{state:"deprecated"}),n.$scope.$parent.apiCtrl.checkAPISynchronization({id:n.$stateParams.apiId}),n.selectedStatus=["published"],n.list()}))}))},e.prototype.publish=function(e,t){var n=this;this.$mdDialog.show({controller:"DialogPublishPlanController",template:i(712),parent:a.element(document.body),targetEvent:t,clickOutsideToClose:!0,locals:{plan:e}}).then((function(e){e&&n.ApiService.publishPlan(n.$stateParams.apiId,e.id).then((function(){n.NotificationService.show("Plan "+e.name+" has been published"),n.$rootScope.$broadcast("planChangeSuccess",{state:"published"}),n.$scope.$parent.apiCtrl.checkAPISynchronization({id:n.$stateParams.apiId}),n.selectedStatus=["published"],n.list()}))}),(function(){}))},e.prototype.countPlansByStatus=function(){this.countByStatus=n.countBy(this.plans,"status")},e}();t.default=o},function(e,t){e.exports=' <md-dialog aria-label="Publish plan"> <md-dialog-content layout-padding> <h4>Would you like to publish plan <code>{{plan.name}}</code> ?</h4> <p> By publishing this plan, users will now be able to subscribe to it. </p> </md-dialog-content> <md-dialog-actions layout=row> <md-button ng-click=hide() md-autofocus> Cancel </md-button> <md-button class="md-raised md-primary" ng-click=publish()> Publish </md-button> </md-dialog-actions> </md-dialog> '},function(e,t,i){"use strict";t.__esModule=!0;var n={require:{parent:"^editPlan"},template:i(714),controller:function(){this.gotoNextStep=function(){this.parent.vm.stepData[0].data=this.plan,this.parent.moveToNextStep(this.parent.vm.stepData[0])}}};t.default=n},function(e,t){e.exports=' <md-step label=Define md-complete=$ctrl.parent.vm.stepData[0].completed> <md-step-body> <md-content layout-padding class="gv-creation-general-content gv-creation-content"> <form name=$ctrl.planGeneralForm> <section> <md-subheader>General</md-subheader> <div layout-gt-sm=row> <md-input-container class=md-block flex-gt-sm> <label>Name</label> <input ng-model=$ctrl.parent.plan.name type=text required name=name md-maxlength=50> <div class=hint ng-if="$ctrl.planGeneralForm.name.$valid || $ctrl.planGeneralForm.name.$pristine">Plan name</div> <div ng-messages=$ctrl.planGeneralForm.name.$error> <div ng-message=required>Name is required.</div> <div ng-message=md-maxlength>The name has to be less than 50 characters long.</div> </div> </md-input-container> </div> <div layout-gt-sm=row> <md-input-container class=md-block flex-gt-sm> <label>Description</label> <input ng-model=$ctrl.parent.plan.description type=text required name=description> <div class=hint ng-if="$ctrl.planGeneralForm.description.$valid || $ctrl.planGeneralForm.description.$pristine"> Provide a description of your plan, what it does, ... </div> <div ng-messages=$ctrl.planGeneralForm.description.$error> <div ng-message=required>Description is required.</div> </div> </md-input-container> </div> <div layout-gt-sm=row> <div class=md-block flex-gt-sm> <label>Characteristics</label> <md-chips ng-model=$ctrl.parent.plan.characteristics placeholder="Enter a characteristic" md-add-on-blur=true secondary-placeholder=+Characteristic ng-click=$ctrl.planGeneralForm.$setDirty()></md-chips> </div> </div> </section> <br/> <section> <md-subheader>Subscriptions</md-subheader> <div layout-gt-md=row> <md-input-container class=md-block flex-gt-md> <md-switch aria-label="Auto validate subscriptions" ng-model=$ctrl.parent.plan.validation ng-true-value="\'auto\'" ng-disabled="plan.security == \'key_less\'" ng-false-value="\'manual\'"> Auto validate subscription. </md-switch> </md-input-container> </div> <div layout-gt-md=row> <md-input-container class=md-block flex-gt-md> <md-switch aria-label="Consumer comment" ng-model=$ctrl.parent.plan.comment_required ng-disabled="plan.security == \'key_less\'"> Consumer must provide a comment when subscribing to the plan. </md-switch> </md-input-container> <md-input-container class=md-block flex-gt-md> <label>Custom message to display to consumer</label> <input ng-model=$ctrl.parent.plan.comment_message type=text name=comment_message md-maxlength=64> <div ng-messages=$ctrl.planGeneralForm.comment_message.$error> <div ng-message=md-maxlength>The comment message has to be less than 64 characters long.</div> </div> </md-input-container> </div> </section> <br/> <section> <md-subheader>Deployment</md-subheader> <div layout-gt-sm=row> <md-input-container class=md-block flex=100> <label>Sharding tags</label> <md-select ng-model=$ctrl.parent.plan.tags multiple=multiple> <md-option ng-repeat="tag in $ctrl.parent.tags" ng-value=tag.id ng-disabled=$ctrl.parent.isTagDisabled(tag)> {{tag.name}}<span ng-if=tag.description class=gravitee-general-description> - {{tag.description}}</span> </md-option> </md-select> </md-input-container> </div> </section> <br/> <section> <md-subheader>Access-Control</md-subheader> <div layout-gt-sm=row> <md-input-container class=md-block flex=100> <label>Groups excluded</label> <md-select ng-model=$ctrl.parent.plan.excluded_groups multiple=multiple> <md-option ng-repeat="group in $ctrl.parent.groups | orderBy:\'name\'" ng-value=group.id> {{group.name}} </md-option> </md-select> </md-input-container> </div> </section> </form> <br/> <md-step-actions layout=row> <div flex layout=row layout-align="end top"> <md-button ng-disabled=$ctrl.planGeneralForm.$invalid ng-click=$ctrl.gotoNextStep()>NEXT</md-button> </div> </md-step-actions> </md-content> </md-step-body> </md-step> '},function(e,t,i){"use strict";t.__esModule=!0;var n=i(3),a={require:{parent:"^editPlan"},template:i(716),controller:function(){function e(e,t){this.PolicyService=e,this.securityTypes=n.filter([{id:"oauth2",name:"OAuth2",policy:"oauth2"},{id:"jwt",name:"JWT",policy:"jwt"},{id:"api_key",name:"API Key",policy:"api-key"},{id:"key_less",name:"Keyless (public)"}],(function(e){return t.plan.security[n.replace(e.id,"_","")].enabled}))}return e.$inject=["PolicyService","Constants"],e.prototype.$onInit=function(){this.parent.plan.security&&this.onSecurityTypeChange()},e.prototype.onSecurityTypeChange=function(){var e=this,t=n.find(this.securityTypes,{id:this.parent.plan.security});t&&t.policy?this.PolicyService.getSchema(t.policy).then((function(t){if(e.securitySchema=t.data,e.parent.plan.securityDefinition)try{e.parent.plan.securityDefinition=JSON.parse(e.parent.plan.securityDefinition),e.parent.plan.securityDefinition=JSON.parse(e.parent.plan.securityDefinition)}catch(e){}else e.parent.plan.securityDefinition={}})):(this.securitySchema=void 0,this.parent.plan.securityDefinition={}),void 0===this.parent.plan.id&&(this.parent.plan.securityDefinition={})},e.prototype.gotoNextStep=function(){this.parent.vm.stepData[1].data=this.parent.plan,this.parent.moveToNextStep(this.parent.vm.stepData[1])},e}()};t.default=a},function(e,t){e.exports=' <md-step label=Secure md-complete=$ctrl.parent.vm.stepData[1].completed> <md-step-body> <md-content layout-padding class="gv-creation-general-content gv-creation-content"> <section> <md-subheader>Authentication</md-subheader> <form name=$ctrl.planGeneralForm> <div layout-gt-sm=row> <md-input-container class=md-block flex-gt-sm> <label>Authentication type</label> <md-select ng-model=$ctrl.parent.plan.security placeholder="Security type" required ng-disabled=$ctrl.parent.plan.id ng-change=$ctrl.onSecurityTypeChange()> <md-option ng-repeat="type in $ctrl.securityTypes" ng-value=type.id>{{type.name}}</md-option> </md-select> <div class=hint>Select the type of authentication</div> </md-input-container> </div> </form> </section> <br/> <section ng-if=$ctrl.securitySchema> <md-subheader>Configuration</md-subheader> <form name=$ctrl.securityConfigurationForm sf-schema=$ctrl.securitySchema sf-form="[\'*\']" sf-model=$ctrl.parent.plan.securityDefinition sf-options="{ validateOnRender: true, formDefaults: { startEmpty: true } }"> </form> </section> <br/> <section ng-if=$ctrl.securitySchema> <md-subheader>Additional selection rule</md-subheader> <form name=$ctrl.planGeneralForm> <div layout-gt-sm=row> <md-input-container class=md-block flex-gt-sm> <input ng-model=$ctrl.parent.plan.selection_rule type=text placeholder="Selection Rule" name=selectionrule> <div class=hint style=top:40px> Define an additional rule when you\'re managing multiple plans of the same type to improve the plan\'s selection process. For example, if you want to check the issuer of a jwt token: #context.attributes[\'jwt\'].claims[\'iss\'] == \'my-issuer\' </div> </md-input-container> </div> </form> </section> <md-step-actions layout=row> <div flex> <md-button ng-click=$ctrl.parent.moveToPreviousStep()>PREVIOUS</md-button> <md-button class="md-raised md-warn" ui-sref=management.apis.detail.portal.plans.list>CANCEL</md-button> </div> <div flex layout=row layout-align="end top"> <md-button ng-disabled="$ctrl.planGeneralForm.$invalid || $ctrl.securityConfigurationForm.$invalid" ng-click=$ctrl.gotoNextStep()>NEXT</md-button> </div> </md-step-actions> </md-content> </md-step-body> </md-step> '},function(e,t,i){"use strict";t.__esModule=!0;var n=i(3),a={require:{parent:"^editPlan"},template:i(718),controller:function(){function e(e){this.PolicyService=e,this.methods=["GET","POST","PUT","DELETE","HEAD","PATCH","OPTIONS","TRACE","CONNECT"],this.policies=[{id:"rate-limit",title:"Rate-Limiting",description:"Rate limit how many HTTP requests an application can make in a given period of seconds or minutes"},{id:"quota",title:"Quota",description:"Rate limit how many HTTP requests an application can make in a given period of hours, days or months"},{id:"resource-filtering",title:"Path Authorization",description:"Restrict paths according to whitelist and / or blacklist rules"}]}return e.$inject=["PolicyService"],e.prototype.$onInit=function(){var e=this;n.each(this.policies,(function(t){e.PolicyService.getSchema(t.id).then((function(i){t.schema=i.data;var n=e.parent.planPolicies.findIndex((function(e){return null!=e[t.id]}));if(-1!==n){var a=e.parent.planPolicies.splice(n,1)[0];t.enabled=!0,t.model=a[t.id]}else t.model={}}))}))},e.prototype.validate=function(){return!n.find(this.policies,(function(e){return e.enabled&&e.form&&e.form.$invalid}))},e.prototype.gotoNextStep=function(){var e=this;this.parent.restrictionsPolicies=[],n(this.policies).filter((function(e){return e.enabled})).map((function(t){var i={methods:e.methods,enabled:!0};return i[t.id]=t.model,i})).each((function(t){return e.parent.restrictionsPolicies.push(t)})),this.parent.vm.stepData[2].data=this.parent.plan,this.parent.moveToNextStep(this.parent.vm.stepData[2])},e}()};t.default=a},function(e,t){e.exports=' <md-step label=Restrictions md-complete=$ctrl.parent.vm.stepData[2].completed> <md-step-body> <md-content layout-padding class="gv-creation-general-content gv-creation-content"> <section ng-repeat="policy in $ctrl.policies"> <md-subheader> <md-checkbox ng-model=policy.enabled aria-label="Enable policy" flex> <div>{{policy.title}}</div> <div class=hints>{{policy.description}}</div> </md-checkbox> </md-subheader> <div layout-gt-sm=row ng-if=policy.enabled> <form name=policy.form flex sf-schema=policy.schema sf-form="[\'*\']" sf-model=policy.model sf-options="{ validateOnRender: true, formDefaults: { startEmpty: true } }"> </form> </div> </section> <br/> <md-step-actions layout=row> <div flex> <md-button ng-click=$ctrl.parent.moveToPreviousStep()>PREVIOUS</md-button> <md-button class="md-raised md-warn" ui-sref=management.apis.detail.portal.plans.list>CANCEL</md-button> </div> <div flex layout=row layout-align="end top"> <md-button ng-disabled="! $ctrl.validate()" ng-click=$ctrl.gotoNextStep()>NEXT</md-button> </div> </md-step-actions> </md-content> </md-step-body> </md-step> '},function(e,t,i){"use strict";t.__esModule=!0;var n={require:{parent:"^editPlan"},template:i(720),controller:function(){function e(e,t){this.$mdDialog=e,this.PolicyService=t}return e.$inject=["$mdDialog","PolicyService"],e.prototype.addPolicy=function(){var e=this;this.editablePolicy=null;var t=this.parent.policies.find((function(t){return t.id===e.selectedPolicy})),i={id:t.id,name:t.name,enabled:!0,description:t.description},n=this.parent.planPolicies.push(i);this.selectedPolicy=null,this.editPolicy(n-1)},e.prototype.getPolicyClass=function(e){var t=[],i=this.editablePolicy&&this.editablePolicy.$$hashKey===e.$$hashKey;return i&&t.push("gravitee-policy-card-selected"),i||e.enabled||t.push("gravitee-policy-card-disabled"),e.name||t.push("gravitee-policy-card-missed"),t.join(" ")},e.prototype.editPolicy=function(e,t){var i=this;if(t&&t.stopPropagation(),this.editablePolicy===this.parent.planPolicies[e])this.editablePolicy=null;else{this.editablePolicy=this.parent.planPolicies[e];var n=this.editablePolicy&&this.editablePolicy[this.editablePolicy.id];this.policyDefinition=n||{},this.editablePolicy[this.editablePolicy.id]=this.policyDefinition,this.PolicyService.getSchema(this.editablePolicy.id).then((function(e){i.policySchema=e.data,i.policySchema&&0!==Object.keys(i.policySchema).length||(i.policySchema={type:"object",id:"empty",properties:{"":{}}})}))}},e.prototype.editPolicyDescription=function(e,t,n){n.stopPropagation(),this.editablePolicy=null;var a=this.parent.planPolicies[e];this.$mdDialog.show({controller:"DialogEditPolicyController",controllerAs:"editPolicyDialogCtrl",template:i(246),clickOutsideToClose:!0,locals:{description:a.description}}).then((function(e){return a.description=e}))},e.prototype.removePolicy=function(e,t,n){n.stopPropagation();var a=this;this.$mdDialog.show({controller:"DialogConfirmController",controllerAs:"ctrl",template:i(5),clickOutsideToClose:!0,locals:{title:"Are you sure you want to remove this policy ?",confirmButton:"Remove"}}).then((function(t){t&&(a.editablePolicy=null,a.parent.planPolicies.splice(e,1))}))},e.prototype.switchPolicyEnabled=function(e,t,i){i.stopPropagation(),this.editablePolicy=null;var n=this.parent.planPolicies[e];n.enabled=!n.enabled},e.prototype.gotoNextStep=function(){var e=JSON.parse(JSON.stringify(this.parent.planPolicies));e.forEach((function(e){delete e.$$hashKey,delete e.id,delete e.name})),this.parent.plan.paths["/"]=this.parent.restrictionsPolicies.concat(e),this.parent.saveOrUpdate()},e}()};t.default=n},function(e,t){e.exports=' <md-step label=Policies md-complete=$ctrl.parent.vm.stepData[3].completed> <md-step-body> <md-content layout-padding class="gv-creation-general-content gv-creation-content"> <section> <form name=$ctrl.planPolicyForm> <div layout-gt-sm=row> <md-input-container class=md-block flex-gt-sm> <label>Select policy</label> <md-select ng-model=$ctrl.selectedPolicy placeholder="Choose a policy"> <md-option ng-repeat="policy in $ctrl.parent.policies" ng-value=policy.id>{{policy.name}}</md-option> </md-select> <div class=hint>Select a policy to add at the end of the policy chain.</div> </md-input-container> <md-button ng-disabled="! $ctrl.selectedPolicy" ng-click=$ctrl.addPolicy()>ADD</md-button> </div> </form> </section> <section ng-if="$ctrl.parent.planPolicies && $ctrl.parent.planPolicies.length > 0"> <md-subheader>Policy Chain</md-subheader> <md-card ng-repeat="policy in $ctrl.parent.planPolicies" ng-click="$ctrl.editPolicy($index, $event)" class="gravitee-card gravitee-policy-card" ng-class=$ctrl.getPolicyClass(policy) layout=row layout-align="space-between start"> <md-card-content layout=column layout-align="start start" layout-fill> <div ng-if=!policy.name layout=column layout-align="start start"> <span class=md-subhead>Unknown policy</span> <i>Please check that the policy \'{{policy.id}}\' is installed in plugins</i> </div> <span class=md-subhead>{{policy.name}}</span> <span class=gravitee-policy-card-description>{{policy.description}}</span> </md-card-content> <div layout=column permission permission-only="\'api-definition-u\'"> <ng-md-icon icon=close style=fill:#757575 size=18px class=gravitee-card-close ng-click="$ctrl.removePolicy($index, path, $event)"> <md-tooltip md-direction=right> Remove policy </md-tooltip> </ng-md-icon> <ng-md-icon ng-if=policy.name icon=mode_edit style=fill:#757575 size=18px class=gravitee-card-close ng-click="$ctrl.editPolicyDescription($index, path, $event)"> <md-tooltip md-direction=right> Edit policy description </md-tooltip> </ng-md-icon> <ng-md-icon icon=done ng-if=policy.enabled style=fill:#437536 size=18px class=gravitee-card-close ng-click="$ctrl.switchPolicyEnabled($index, path, $event)"> <md-tooltip md-direction=right> Policy is enabled. Click to disable it. </md-tooltip> </ng-md-icon> <ng-md-icon icon=pause_circle_outline ng-if=!policy.enabled style=fill:#751c16 size=18px class=gravitee-card-close ng-click="$ctrl.switchPolicyEnabled($index, path, $event)"> <md-tooltip md-direction=right> Policy is disabled. Click to enable it. </md-tooltip> </ng-md-icon> </div> </md-card> </section> <section ng-if=$ctrl.editablePolicy> <md-subheader>Edit policy Configuration</md-subheader> <form name=$ctrl.policyConfigurationForm sf-schema=$ctrl.policySchema sf-form="[\'*\']" sf-model=$ctrl.policyDefinition sf-options="{ validateOnRender: true, formDefaults: { startEmpty: true } }" novalidate></form>  </section> <br/> <md-step-actions layout=row> <div flex> <md-button ng-click=$ctrl.parent.moveToPreviousStep()>PREVIOUS</md-button> <md-button class="md-raised md-warn" ui-sref=management.apis.detail.portal.plans.list>CANCEL</md-button> </div> <div flex layout=row layout-align="end top"> <md-button ng-disabled=$ctrl.policyConfigurationForm.$invalid ng-click=$ctrl.gotoNextStep() class="md-primary md-raised">SAVE</md-button> </div> </md-step-actions> </md-content> </md-step-body> </md-step> '},function(e,t,i){"use strict";t.__esModule=!0;var n=i(3),a=i(1),o=["ACCEPTED","PENDING","PAUSED"],r=function(){this.status=o,this.page=1,this.size=10};t.SubscriptionQuery=r;var s={bindings:{api:"<",plans:"<",subscriptions:"<",subscribers:"<"},template:i(722),controller:function(){function e(e,t,i,n,a,o){this.ApiService=e,this.NotificationService=t,this.$mdDialog=i,this.$state=n,this.$rootScope=a,this.$timeout=o,this.query=new r,this.status={ACCEPTED:"Accepted",CLOSED:"Closed",PAUSED:"Paused",PENDING:"Pending",REJECTED:"Rejected"},this.onPaginate=this.onPaginate.bind(this),this.$state.params.status&&(Array.isArray(this.$state.params.status)?this.query.status=this.$state.params.status:this.query.status=this.$state.params.status.split(",")),this.$state.params.application&&(Array.isArray(this.$state.params.application)?this.query.applications=this.$state.params.application:this.query.applications=this.$state.params.application.split(",")),this.$state.params.plan&&(Array.isArray(this.$state.params.plan)?this.query.plans=this.$state.params.plan:this.query.plans=this.$state.params.plan.split(",")),this.$state.params.api_key&&(this.query.api_key=this.$state.params.api_key)}return e.$inject=["ApiService","NotificationService","$mdDialog","$state","$rootScope","$timeout"],e.prototype.$onInit=function(){this.getSubscriptionAnalytics()},e.prototype.onPaginate=function(e){this.query.page=e,this.doSearch()},e.prototype.clearFilters=function(){this.subscriptionsFiltersForm.$setPristine(),this.query=new r,this.doSearch()},e.prototype.search=function(){this.query.page=1,this.query.size=10,this.doSearch()},e.prototype.buildQuery=function(){var e="?page="+this.query.page+"&size="+this.query.size+"&",t={};return void 0!==this.query.status&&(t.status=this.query.status.join(",")),void 0!==this.query.applications&&(t.application=this.query.applications.join(",")),void 0!==this.query.plans&&(t.plan=this.query.plans.join(",")),void 0!==this.query.api_key&&(t.api_key=this.query.api_key),n.mapKeys(t,(function(t,i){return e+=i+"="+t+"&"})),e},e.prototype.doSearch=function(){var e=this,t=this.buildQuery();this.$state.transitionTo(this.$state.current,n.merge(this.$state.params,{status:this.query.status?this.query.status.join(","):"",application:this.query.applications?this.query.applications.join(","):"",plan:this.query.plans?this.query.plans.join(","):"",page:this.query.page,size:this.query.size,api_key:this.query.api_key}),{notify:!1}),this.ApiService.getSubscriptions(this.api.id,t).then((function(t){e.subscriptions=t.data,e.getSubscriptionAnalytics()}))},e.prototype.getSubscriptionAnalytics=function(){var e=this;this.subscriptions.data&&this.subscriptions.data.length&&this.ApiService.analytics(this.api.id,{type:"date_histo",aggs:"field:subscription",interval:864e5,from:a().endOf("day").subtract(1,"months"),to:a().endOf("day")}).then((function(t){t.data.values&&t.data.values.length&&n.forEach(e.subscriptions.data,(function(e){var i,a=n.find(t.data.values[0].buckets,(function(t){return t.name===e.id}));i=a?a.data:t.data.values[0].buckets[0]&&t.data.values[0].buckets[0].data&&t.data.values[0].buckets[0].data.length?n.fill(Array(t.data.values[0].buckets[0].data.length),0):[0],e.chartData={series:[{data:i}]}}))}))},e.prototype.showAddSubscriptionModal=function(){var e=this;this.ApiService.getPublishedApiPlans(this.api.id).then((function(t){var a=n.filter(t.data,(function(e){return"key_less"!==e.security}));e.$mdDialog.show({controller:"DialogSubscriptionCreateController",controllerAs:"dialogSubscriptionCreateController",template:i(723),clickOutsideToClose:!0,locals:{api:e.api,plans:a}}).then((function(t){t&&t.applicationId&&t.planId&&e.ApiService.subscribe(e.api.id,t.applicationId,t.planId).then((function(t){var i=t.data;e.NotificationService.show("A new subscription has been created."),e.$state.go("management.apis.detail.portal.subscriptions.subscription",{subscriptionId:i.id},{reload:!0})}))}))}))},e.prototype.exportAsCSV=function(){var e=this;this.ApiService.exportSubscriptionsAsCSV(this.api.id,this.buildQuery()).then((function(t){var i=document.createElement("a");i.href="data:attachment/csv,"+encodeURIComponent(t.data),i.target="_self";var a="subscriptions-"+e.api.name+"-"+e.api.version+"-"+n.now();a=(a=a.replace(/[\s]/gi,"-")).replace(/[^\w]/gi,"-"),i.download=a+".csv",document.getElementById("hidden-export-container").appendChild(i),e.$timeout((function(){i.click()})),document.getElementById("hidden-export-container").removeChild(i)}))},e.prototype.hasFilter=function(){return n.difference(o,this.query.status).length>0||n.difference(this.query.status,o).length>0||this.query.applications&&this.query.applications.length||this.query.plans&&this.query.plans.length||this.query.api_key},e}()};t.default=s},function(e,t){e.exports=' <div class="gv-forms gv-forms-fluid" layout=column> <h1>Subscriptions</h1> <div class=gv-form> <h2></h2> <div class=gv-form-content layout=column> <div class=gv-filters flex> <form ng-submit=$ctrl.search() name=$ctrl.subscriptionsFiltersForm> <div layout-gt-sm=row> <md-input-container class=md-block flex-gt-sm flex=20> <label>Plan</label> <md-select ng-model=$ctrl.query.plans placeholder=Plans multiple=multiple> <md-option ng-value=plan.id ng-repeat="plan in $ctrl.plans track by plan.id">{{ plan.name }}</md-option> </md-select> </md-input-container> <md-input-container class=md-block flex-gt-sm flex=20> <label>Application</label> <md-select ng-model=$ctrl.query.applications placeholder=Applications multiple=multiple> <md-option ng-value=subscriber.id ng-repeat="subscriber in $ctrl.subscribers track by subscriber.id">{{ subscriber.name }}</md-option> </md-select> </md-input-container> <md-input-container class=md-block flex-gt-sm flex=20> <label>Status</label> <md-select ng-model=$ctrl.query.status placeholder=Status multiple=multiple> <md-option ng-value=key ng-repeat="(key, value) in $ctrl.status">{{ value }}</md-option> </md-select> </md-input-container> <md-input-container class=md-block flex-gt-sm flex=20> <label>API key</label> <input ng-model=$ctrl.query.api_key> </md-input-container> <div> <md-button type=submit class="md-raised md-primary"> Search </md-button> <md-button type=button class=md-raised ng-click=$ctrl.clearFilters() ng-disabled=!$ctrl.hasFilter()> Clear </md-button> <md-button type=button class=md-raised ng-click=$ctrl.exportAsCSV() ng-disabled="!$ctrl.subscriptions.data || $ctrl.subscriptions.data.length === 0"> Export as CSV <div id=hidden-export-container style=display:none></div> </md-button> </div> </div> </form></div>  </div> <md-table-container ng-if="$ctrl.subscriptions.data.length > 0"> <table md-table class=gv-table-dense> <thead md-head> <tr md-row> <th md-column>Plan</th> <th md-column>Application</th> <th md-column>Created at</th> <th md-column>Processed at</th> <th md-column>Start at</th> <th md-column>End at</th> <th md-column>Status</th> <th md-column></th> </tr> </thead> <tbody md-body> <tr md-row ng-repeat="subscription in $ctrl.subscriptions.data track by subscription.id"> <td md-cell> <a style=font-weight:700 ui-sref="management.apis.detail.portal.subscriptions.subscription({\n              subscriptionId: subscription.id,\n              page: $ctrl.query.page,\n              size: $ctrl.query.size,\n              status: $ctrl.query.status,\n              application: $ctrl.query.applications,\n              plan: $ctrl.query.plans,\n              api_key: $ctrl.query.api_key\n            })"> {{$ctrl.subscriptions.metadata[subscription.plan].name}} </a> </td> <td md-cell>{{$ctrl.subscriptions.metadata[subscription.application].name}}</td> <td md-cell>{{subscription.created_at | date:\'yyyy-MM-dd HH:mm:ss\'}}</td> <td md-cell>{{subscription.processed_at | date:\'yyyy-MM-dd HH:mm:ss\'}}</td> <td md-cell>{{subscription.starting_at || \'-\' | date:\'yyyy-MM-dd HH:mm:ss\'}}</td> <td md-cell>{{subscription.ending_at || \'-\' | date:\'yyyy-MM-dd HH:mm:ss\'}}</td> <td md-cell style=text-transform:capitalize> <md-tooltip ng-if=subscription.reason md-direction=left>{{subscription.reason}}</md-tooltip> {{subscription.status}} </td> <td md-cell> <gravitee-chart options=subscription.chartData type=sparkline height=20 width=120></gravitee-chart> </td> </tr> </tbody> </table> </md-table-container> <md-table-pagination ng-if="$ctrl.subscriptions.data.length > 0" md-limit=$ctrl.query.size md-limit-options="[10, 25, 50, 75, 100]" md-page=$ctrl.subscriptions.page.current md-total={{$ctrl.subscriptions.page.total_elements}} md-on-paginate=$ctrl.onPaginate md-page-select class=gv-table-dense> </md-table-pagination> <gravitee-empty-state ng-if="$ctrl.subscriptions.data.length === 0" icon=vpn_key model=Subscription message="Your API Subscriptions will appear here" create-mode=true></gravitee-empty-state> <md-button permission permission-only="\'api-subscription-c\'" class="md-fab md-fab-bottom-right" ng-class="{\'md-fab-bottom-right md-fab-scrollable\' : $ctrl.subscriptions.data.length > 0, \'gv-help-displayed\': $ctrl.$rootScope.helpDisplayed}" aria-label=Add ng-click=$ctrl.showAddSubscriptionModal()> <ng-md-icon icon=add></ng-md-icon> </md-button> </div> </div> '},function(e,t){e.exports=' <md-dialog aria-label="Create a subscription"> <md-dialog-content layout-padding> <h4>Create a subscription</h4> <h5>Choose an application</h5> <form name=CreateSubscriptionForm ng-submit=$event.preventDefault() novalidate> <md-autocomplete md-selected-item=dialogSubscriptionCreateController.selectedApp md-selected-item-change=dialogSubscriptionCreateController.selectedItemChange() md-search-text=searchText md-items="app in dialogSubscriptionCreateController.searchApplication(searchText)" md-item-text=app.name md-min-length=1 placeholder="Search application ..." md-autofocus=true md-menu-class=autocomplete-create-subscription required style=width:400px> <md-item-template> <span class=item-title> <span> {{app.name}} </span><span ng-if=app.type>({{app.type}}) </span> </span> <span class=item-metadata> By {{app.owner.displayName}} on {{app.created_at | humanDateFilter}} </span> </md-item-template> <md-not-found> No application matching "{{searchText}}" were found. </md-not-found> </md-autocomplete> </form> <h5>Select a plan</h5> <div layout=column layout-align="start start" ng-cloak> <md-radio-group ng-model=dialogSubscriptionCreateController.selectedPlan> <md-radio-button ng-repeat="plan in dialogSubscriptionCreateController.plans | orderBy: \'order\'" value={{plan.id}} ng-disabled=dialogSubscriptionCreateController.planAlreadyHaveSubscriptions(plan.id)> {{plan.name}} <md-tooltip md-direction=right> {{plan.description}} </md-tooltip> <div ng-if=dialogSubscriptionCreateController.planAlreadyHaveSubscriptions(plan.id) style=color:rgba(0,0,0,.54);font-size:smaller> There is already a <i>pending</i> or <i>accepted</i> subscription for this plan. </div> </md-radio-button> </md-radio-group> </div> </md-dialog-content> <md-dialog-actions layout=row> <md-button ng-click=dialogSubscriptionCreateController.hide()> Cancel </md-button> <md-button class="md-raised md-primary" ng-click=dialogSubscriptionCreateController.save() ng-disabled="!dialogSubscriptionCreateController.selectedApp || !dialogSubscriptionCreateController.selectedPlan"> Create </md-button> </md-dialog-actions> </md-dialog> '},function(e,t,i){"use strict";t.__esModule=!0;var n=i(3),a={bindings:{api:"<",subscription:"<"},template:i(725),controller:function(){function e(e,t,i,n,a){this.$rootScope=e,this.$mdDialog=t,this.NotificationService=i,this.ApiService=n,this.$state=a,this.backStateParams={application:a.params.application,plan:a.params.plan,status:a.params.status,page:a.params.page,size:a.params.size,api_key:a.params.api_key}}return e.$inject=["$rootScope","$mdDialog","NotificationService","ApiService","$state"],e.prototype.$onInit=function(){this.listApiKeys(),this.getApiPlans()},e.prototype.listApiKeys=function(){var e=this;"api_key"===this.subscription.plan.security&&this.ApiService.listApiKeys(this.api.id,this.subscription.id).then((function(t){e.keys=t.data}))},e.prototype.close=function(){var e=this,t="<code>"+this.subscription.application.name+"</code> will not be able to consume <code>"+this.api.name+"</code> anymore.";"api_key"===this.subscription.plan.security&&(t+="<br/>All Api-keys associated to this subscription will be closed and could not be used."),this.$mdDialog.show({controller:"DialogConfirmController",controllerAs:"ctrl",template:i(5),clickOutsideToClose:!0,locals:{title:"Are you sure you want to close this subscription to "+this.subscription.plan.name+"?",msg:t,confirmButton:"Close the subscription"}}).then((function(t){t&&e.ApiService.closeSubscription(e.api.id,e.subscription.id).then((function(t){e.NotificationService.show("The subscription has been closed"),e.subscription=t.data,e.listApiKeys()}))}))},e.prototype.pause=function(){var e=this,t="The application will not be able to consume this API anymore.";"api_key"===this.subscription.plan.security&&(t+="<br/>All Api-keys associated to this subscription will be paused and could not be used."),this.$mdDialog.show({controller:"DialogConfirmController",controllerAs:"ctrl",template:i(5),clickOutsideToClose:!0,locals:{title:"Are you sure you want to pause this subscription?",msg:t,confirmButton:"Pause"}}).then((function(t){t&&e.ApiService.pauseSubscription(e.api.id,e.subscription.id).then((function(t){e.NotificationService.show("The subscription has been paused"),e.subscription=t.data,e.listApiKeys()}))}))},e.prototype.resume=function(){var e=this;this.$mdDialog.show({controller:"DialogConfirmController",controllerAs:"ctrl",template:i(5),clickOutsideToClose:!0,locals:{title:"Are you sure you want to resume this subscription?",msg:"The application will again be able to consume your API.",confirmButton:"Resume"}}).then((function(t){t&&e.ApiService.resumeSubscription(e.api.id,e.subscription.id).then((function(t){e.NotificationService.show("The subscription has been resumed"),e.subscription=t.data,e.listApiKeys()}))}))},e.prototype.reject=function(){var e=this;this.$mdDialog.show({controller:"DialogSubscriptionRejectController",controllerAs:"dialogSubscriptionRejectController",template:i(726),clickOutsideToClose:!0}).then((function(t){e.process({accepted:!1,reason:t})}))},e.prototype.accept=function(){var e=this;this.$mdDialog.show({controller:"DialogSubscriptionAcceptController",controllerAs:"dialogSubscriptionAcceptController",template:i(727),clickOutsideToClose:!0}).then((function(t){t.accepted=!0,e.process(t)}))},e.prototype.process=function(e){var t=this;this.ApiService.processSubscription(this.api.id,this.subscription.id,e).then((function(i){t.NotificationService.show("The subscription has been "+(e.accepted?"accepted":"rejected")),t.subscription=i.data,t.$rootScope.$broadcast("graviteeUserTaskRefresh"),e.accepted&&t.listApiKeys()}))},e.prototype.transferSubscription=function(e){var t=this;this.ApiService.transferSubscription(this.api.id,this.subscription.id,e).then((function(e){t.NotificationService.show("The subscription has been successfully transferred"),t.subscription=e.data,t.getApiPlans()}))},e.prototype.renewApiKey=function(){var e=this;this.$mdDialog.show({controller:"DialogConfirmController",controllerAs:"ctrl",template:i(5),clickOutsideToClose:!0,locals:{title:"Are you sure you want to renew your API Key?",msg:"Your previous API Key will be no longer valid in 2 hours!",confirmButton:"Renew"}}).then((function(t){t&&e.ApiService.renewApiKey(e.api.id,e.subscription.id).then((function(){e.NotificationService.show("A new API Key has been generated"),e.listApiKeys()}))}))},e.prototype.revokeApiKey=function(e){var t=this;this.$mdDialog.show({controller:"DialogConfirmController",controllerAs:"ctrl",template:i(5),clickOutsideToClose:!0,locals:{title:"Are you sure you want to revoke API Key '"+e+"' ?",confirmButton:"Revoke"}}).then((function(i){i&&t.ApiService.revokeApiKey(t.api.id,t.subscription.id,e).then((function(){t.NotificationService.show("API Key "+e+" has been revoked!"),t.listApiKeys()}))}))},e.prototype.expireApiKey=function(e){var t=this;this.$mdDialog.show({controller:"DialogApiKeyExpirationController",controllerAs:"dialogApiKeyExpirationController",template:i(250),clickOutsideToClose:!0,locals:{maxEndDate:this.subscription.ending_at}}).then((function(i){e.expire_at=i,t.ApiService.updateApiKey(t.api.id,e).then((function(){t.NotificationService.show("An expiration date has been defined for API Key."),t.listApiKeys()}))}))},e.prototype.onCopyApiKeySuccess=function(e){this.NotificationService.show("API Key has been copied to clipboard"),e.clearSelection()},e.prototype.transfer=function(){var e=this;this.$mdDialog.show({controller:"DialogSubscriptionTransferController",controllerAs:"$ctrl",template:i(728),clickOutsideToClose:!0,locals:{plans:this.plans}}).then((function(t){e.subscription.plan=t,e.transferSubscription(e.subscription)}))},e.prototype.changeEndDate=function(){var e=this;this.$mdDialog.show({controller:"DialogSubscriptionChangeEndDateController",controllerAs:"$ctrl",template:i(729),clickOutsideToClose:!0,locals:{subscription:this.subscription}}).then((function(t){e.subscription.ending_at=t,e.ApiService.updateSubscription(e.api.id,e.subscription).then((function(){e.NotificationService.show("The end date has been modified."),e.listApiKeys()}))}))},e.prototype.isValid=function(e){return!e.revoked&&!e.expired},e.prototype.getApiPlans=function(){var e=this;this.ApiService.getApiPlans(this.api.id,"published",this.subscription.plan.security).then((function(t){e.plans=n.filter(t.data,(function(t){return t.id!==e.subscription.plan.id}))}))},e}()};t.default=a},function(e,t){e.exports=" <div class=gv-forms layout=column> <div class=gv-forms-header> <h1>Subscription</h1> <a ui-sref=management.apis.detail.portal.subscriptions.list($ctrl.backStateParams)>Back to subscriptions</a> </div> <div class=gv-form> <h2>Details</h2> <div class=gv-form-content layout=column> <md-table-container> <table md-table> <tbody md-body> <tr md-row style=height:30px> <td md-cell><span style=font-weight:700>ID</span></td> <td md-cell>{{$ctrl.subscription.id}}</td> <td md-cell><span style=font-weight:700>Created at</span></td> <td md-cell>{{$ctrl.subscription.created_at | date:'MMM d, y h:mm:ss.sss a'}}</td> </tr> <tr md-row style=height:30px> <td md-cell><span style=font-weight:700>Plan</span></td> <td md-cell><span style=font-weight:700>{{$ctrl.subscription.plan.name}}</span> ({{$ctrl.subscription.plan.security}})</td> <td md-cell><span style=font-weight:700>Processed at</span></td> <td md-cell>{{$ctrl.subscription.processed_at || '-' | date:'MMM d, y h:mm:ss.sss a'}}</td> </tr> <tr md-row style=height:30px ng-if=\"'rejected' !== $ctrl.subscription.status\"> <td md-cell><span style=font-weight:700>Application</span></td> <td md-cell><span style=font-weight:700>{{$ctrl.subscription.application.name}}</span> ({{$ctrl.subscription.application.owner.displayName}})</td> <td md-cell><span style=font-weight:700>Starting at</span></td> <td md-cell>{{$ctrl.subscription.starting_at || '-' | date:'MMM d, y h:mm:ss.sss a'}}</td> </tr> <tr md-row style=height:30px ng-if=\"'rejected' === $ctrl.subscription.status\"> <td md-cell><span style=font-weight:700>Application</span></td> <td md-cell colspan=3><span style=font-weight:700>{{$ctrl.subscription.application.name}}</span> ({{$ctrl.subscription.application.owner.displayName}})</td> </tr> <tr md-row style=height:30px ng-if=\"'rejected' !== $ctrl.subscription.status\"> <td md-cell><span style=font-weight:700>Status</span></td> <td md-cell>{{$ctrl.subscription.status|uppercase}}</td> <td md-cell><span style=font-weight:700>Ending at</span></td> <td md-cell>{{$ctrl.subscription.ending_at || '-' | date:'MMM d, y h:mm:ss.sss a'}}</td> </tr> <tr md-row style=height:30px ng-if=\"'rejected' === $ctrl.subscription.status\"> <td md-cell><span style=font-weight:700>Status</span></td> <td md-cell>{{$ctrl.subscription.status|uppercase}}</td> <td md-cell><span style=font-weight:700>Closed at</span></td> <td md-cell>{{$ctrl.subscription.closed_at | date:'MMM d, y h:mm:ss.sss a'}}</td> </tr> <tr md-row style=height:30px ng-if=$ctrl.subscription.request> <td md-cell><span style=font-weight:700>Message from subscriber</span></td> <td md-cell colspan=3>{{$ctrl.subscription.request}}</td> </tr> <tr md-row style=height:30px ng-if=$ctrl.subscription.reason> <td md-cell><span style=font-weight:700>Message to subscriber</span></td> <td md-cell colspan=3>{{$ctrl.subscription.reason}}</td> </tr> <tr md-row style=height:30px ng-if=\"'rejected' !== $ctrl.subscription.status && $ctrl.subscription.paused_at\"> <td md-cell><span style=font-weight:700>Paused at</span></td> <td md-cell colspan=3>{{$ctrl.subscription.paused_at | date:'MMM d, y h:mm:ss.sss a'}}</td> </tr> <tr md-row style=height:30px ng-if=\"'rejected' !== $ctrl.subscription.status && $ctrl.subscription.closed_at\"> <td md-cell><span style=font-weight:700>Closed at</span></td> <td md-cell colspan=3>{{$ctrl.subscription.closed_at | date:'MMM d, y h:mm:ss.sss a'}}</td> </tr> <tr md-row style=height:30px> <td md-cell><span style=font-weight:700>Subscribed by</span></td> <td md-cell colspan=3>{{$ctrl.subscription.subscribed_by.displayName}}</td> </tr> </tbody> </table> </md-table-container> <div class=\"md-actions gravitee-api-save-button\" layout=row ng-if=\"$ctrl.subscription.status === 'pending'\"> <div permission permission-only=\"'api-subscription-u'\"> <md-button class=md-raised ng-click=$ctrl.accept()> <ng-md-icon icon=done style=fill:green></ng-md-icon> Accept </md-button> <md-button class=\"md-raised md-warn\" ng-click=$ctrl.reject()> <ng-md-icon icon=block style=fill:#fff></ng-md-icon> Reject </md-button> </div> </div> <div class=\"md-actions gravitee-api-save-button\" layout=row ng-if=\"$ctrl.subscription.status === 'accepted' || $ctrl.subscription.status === 'paused'\"> <md-button class=\"md-raised md-primary\" ng-click=$ctrl.transfer() permission permission-only=\"'api-subscription-u'\" ng-disabled=\"$ctrl.plans.length === 0\"> <ng-md-icon icon=compare_arrows style=fill:#fff></ng-md-icon> Transfer </md-button> <md-button class=\"md-raised md-primary\" ng-click=$ctrl.pause() permission permission-only=\"'api-subscription-u'\" ng-if=\"$ctrl.subscription.status === 'accepted'\"> <ng-md-icon icon=pause style=fill:#fff></ng-md-icon> Pause </md-button> <md-button class=\"md-raised md-primary\" ng-click=$ctrl.resume() permission permission-only=\"'api-subscription-u'\" ng-if=\"$ctrl.subscription.status === 'paused'\"> <ng-md-icon icon=play_arrow style=fill:#fff></ng-md-icon> Resume </md-button> <md-button class=\"md-raised md-primary\" ng-click=$ctrl.changeEndDate() permission permission-only=\"'api-subscription-u'\"> <ng-md-icon icon=play_arrow style=fill:#fff></ng-md-icon> Change End Date </md-button> <md-button class=\"md-raised md-warn\" ng-click=$ctrl.close() permission permission-only=\"'api-subscription-u'\"> <ng-md-icon icon=not_interested style=fill:#fff></ng-md-icon> Close </md-button> </div> </div> </div> <div class=gv-form ng-if=\"$ctrl.subscription.status !== 'pending' && $ctrl.subscription.status !== 'rejected' && $ctrl.subscription.plan.security === 'api_key'\"> <h2>Api Keys</h2> <div class=gv-form-content layout=column> <md-table-container> <table md-table> <thead md-head> <tr md-row> <th md-column>Key</th> <th md-column>Created at</th> <th md-column>Revoked / Expire at</th> <th md-column></th> </tr> </thead> <tbody md-body> <tr md-row ng-repeat=\"key in $ctrl.keys track by key.key\"> <td md-cell style=line-height:30px> <ng-md-icon icon=\"{{$ctrl.isValid(key)?'done':'clear'}}\" ng-style=\"{'fill': $ctrl.isValid(key)?'#107F20':'#BE2628'}\"></ng-md-icon> <code>{{key.key}}</code> <span ng-if=\"$ctrl.isValid(key) && $ctrl.subscription.status === 'accepted'\"> <md-tooltip md-direction=right>Copy to clipboard</md-tooltip> <ng-md-icon icon=content_copy ngclipboard data-clipboard-text={{key.key}} ngclipboard-success=$ctrl.onCopyApiKeySuccess(e); role=button></ng-md-icon> </span> </td> <td md-cell>{{key.created_at | date:'yyyy-MM-dd HH:mm:ss'}}</td> <td md-cell>{{key.revoked_at || key.expire_at | date:'yyyy-MM-dd HH:mm:ss'}}</td> <td md-cell> <span ng-if=\"$ctrl.isValid(key) && $ctrl.subscription.status === 'accepted'\"> <md-tooltip md-direction=left>Revoke</md-tooltip> <ng-md-icon permission permission-only=\"'api-subscription-u'\" style=top:0 icon=not_interested ng-click=$ctrl.revokeApiKey(key.key)></ng-md-icon> </span> <span ng-if=\"$ctrl.isValid(key) && $ctrl.subscription.status === 'accepted'\"> <md-tooltip md-direction=left>Set expiration date</md-tooltip> <ng-md-icon permission permission-only=\"'api-subscription-u'\" style=top:0 icon=schedule ng-click=$ctrl.expireApiKey(key)></ng-md-icon> </span> </td> </tr> </tbody> </table> </md-table-container> <div class=\"md-actions gravitee-api-save-button\" layout=row permission permission-only=\"'api-subscription-u'\" ng-if=\"$ctrl.subscription.status === 'accepted'\"> <md-button class=\"md-raised md-primary\" ng-click=$ctrl.renewApiKey()> <ng-md-icon icon=autorenew style=fill:#fff></ng-md-icon> Renew </md-button> </div> </div> </div> </div> "},function(e,t){e.exports=' <md-dialog aria-label="Give a reason for the reject of subscription"> <md-dialog-content layout-padding> <h4>Reject subscription</h4> <div layout=column ng-cloak class=md-inline-form> <h5>Explain the reason of the reject</h5> <textarea ng-model=reason></textarea> </div> </md-dialog-content> <md-dialog-actions layout=row> <md-button ng-click=dialogSubscriptionRejectController.hide() md-autofocus> Cancel </md-button> <md-button class="md-raised md-warn" ng-click=dialogSubscriptionRejectController.save()> Reject Subscription </md-button> </md-dialog-actions> </md-dialog> '},function(e,t){e.exports=' <md-dialog aria-label="Define dates for the subscription"> <md-dialog-content layout-padding> <h4>Accept subscription</h4> <div ng-cloak layout=column> <div class=md-inline-form> <md-input-container> <label>Start date</label> <md-datepicker ng-model=starting_at md-min-date=now></md-datepicker> </md-input-container> <md-input-container> <label>End date</label> <md-datepicker ng-model=ending_at md-min-date=starting_at></md-datepicker> </md-input-container> </div> <md-input-container> <div layout=column ng-cloak class=md-inline-form> <h5>If needed, add a message:</h5> <textarea ng-model=reason aria-label=Reason></textarea> </div> </md-input-container> </div> </md-dialog-content> <md-dialog-actions layout=row> <md-button ng-click=dialogSubscriptionAcceptController.hide()>Cancel</md-button> <md-button class="md-raised md-primary" ng-click=dialogSubscriptionAcceptController.save()>Accept</md-button> </md-dialog-actions> </md-dialog> '},function(e,t){e.exports=' <md-dialog aria-label="Transfer subscription"> <md-dialog-content layout-padding> <h4>Transfer subscription</h4> <div ng-cloak layout=column> <md-radio-group ng-model=$ctrl.plan> <md-radio-button ng-repeat="plan in $ctrl.plans | orderBy: \'order\'" ng-value=plan.id> {{plan.name}} <md-tooltip md-direction=right> {{plan.description}} </md-tooltip> </md-radio-button> </md-radio-group> </div> </md-dialog-content> <md-dialog-actions layout=row> <md-button ng-click=$ctrl.hide()>Cancel</md-button> <md-button class="md-raised md-primary" ng-click=$ctrl.save() ng-disabled=!$ctrl.plan>Transfer</md-button> </md-dialog-actions> </md-dialog> '},function(e,t){e.exports=' <md-dialog aria-label="Transfer subscription"> <md-dialog-content layout-padding> <h4>Change the end date of the subscription</h4> <div ng-cloak layout=column> <p style=color:#d73a49>Be careful, by changing the end date <code>{{ $ctrl.subscription.application.name }}</code> could be no longer have access to this API.</p> <p ng-if="\'api_key\'===$ctrl.subscription.plan.security"><br>All API keys after the new end date will be revoked.</p> <md-input-container style=margin-bottom:0> <label>New End Date</label> <input moment-picker=$ctrl.endDateFormated locale=en-gb format="YYYY-MM-DD HH:mm" min-date=$ctrl.now ng-model=$ctrl.endDate ng-model-options="{ updateOn: \'blur\' }"> </md-input-container> </div> </md-dialog-content> <md-dialog-actions layout=row> <md-button ng-click=$ctrl.hide()>Cancel</md-button> <md-button class="md-raised md-warn" ng-click=$ctrl.save()>Yes, Change the end date.</md-button> </md-dialog-actions> </md-dialog> '},function(e,t,i){"use strict";t.__esModule=!0;var n=function(){function e(e,t){this.$http=e,this.URL=t.baseURL+"configuration/applications/types"}return e.$inject=["$http","Constants"],e.prototype.getEnabledApplicationTypes=function(){return this.$http.get(this.URL)},e}();t.default=n},function(e,t,i){"use strict";t.__esModule=!0;var n={bindings:{applications:"<"},controller:"ApplicationsController",template:i(732)};t.default=n},function(e,t){e.exports=' <div class=gv-sub-content> <div class="gv-forms gv-forms-fluid" layout=column> <div class=gv-form ng-show="!isLoading && $ctrl.applications.length > 0"> <div class=apis-header-filter> <form flex layout=row layout-align="center center" name=formSearch autocomplete=off ng-submit="$ctrl.loadMore(query.order, searchApplications, false)"> <input class="form-control apis-filter" type=text style=max-width:960px ng-model=searchApplications placeholder="Search Applications" autofocus/> <md-button class="md-primary gv-search-button" type=submit aria-label=Search> <ng-md-icon icon=search></ng-md-icon> </md-button> </form> </div> <div class=gv-form-content id=applications-container style="height:calc(100vh - 200px);overflow-y:auto"> <div layout=row layout-wrap class=inset infinite-scroll="$ctrl.loadMore(query.order, searchApplications, true)" infinite-scroll-distance=1 infinite-scroll-container="\'#applications-container\'"> <md-table-container style=width:100%> <table md-table ng-model=$ctrl.selectedApplications ng-init="query.order = \'name\'"> <thead md-head md-order=query.order> <tr md-row> <th md-column width=1%></th> <th md-column md-order-by=name ng-click="$ctrl.loadMore(query.order, searchApplications, false)"><span>Name</span></th> <th md-column width=1% md-order-by=type ng-click="$ctrl.loadMore(query.order, searchApplications, false)">Type</th> <th md-column width=1% md-order-by=owner.displayName ng-click="$ctrl.loadMore(query.order, searchApplications, false)">Owner</th> </tr> </thead> <tbody md-body> <tr md-row ng-repeat="application in $ctrl.applicationsToDisplay track by application.id"> <td md-cell nowrap=nowrap> <gravitee-identity-picture image-id=application.id image-url=::application.picture_url image-name="application.name + \'  \' + application.type + \'  \' + application.owner.displayName" image-width=40></gravitee-identity-picture> </td> <td md-cell> <a ui-sref="management.applications.application.general({applicationId: application.id})"> {{application.name}} </a> </td> <td md-cell nowrap=nowrap>{{application.type | lowercase}}</td> <td md-cell nowrap=nowrap> <span> {{application.owner.displayName}} <md-tooltip> <span ng-if=application.owner.email>{{::application.owner.email}}</span> </md-tooltip> </span> </td> </tr> </tbody> </table> </md-table-container> </div> </div> </div> <gravitee-empty-state ng-if="$ctrl.applications.length == 0" icon=list model=Application message="There is no application (yet)." sub-message={{$ctrl.subMessage}} create-mode=true></gravitee-empty-state> <div permission permission-only="\'environment-application-c\'" ng-style="$ctrl.applications.length == 0 && {\'text-align\':\'center\'}"> <md-button ng-class="{\'md-fab-bottom-right\': $ctrl.applications.length > 0}" class=md-fab aria-label="Create New Application" ui-sref=management.applications.create> <ng-md-icon icon=add></ng-md-icon> </md-button> </div> </div></div>'},function(e,t,i){"use strict";t.__esModule=!0;var n=i(3),a=function(){function e(e,t){this.UserService=e,this.$filter=t,this.loadMore=function(e,t,i){if(!(i&&(this.applications&&this.applications.length)===(this.applicationsToDisplay&&this.applicationsToDisplay.length))&&this.applications&&this.applications.length){var a=n.clone(this.applications);t&&(a=this.$filter("filter")(a,t)),a=n.sortBy(a,n.replace(e,"-","")),n.startsWith(e,"-")&&a.reverse();var o=this.applicationsToDisplay?this.applicationsToDisplay.length:0;this.applicationsToDisplay=n.take(a,20+o)}},this.selectedApplications=[];var i=this;e.current().then((function(t){t.username?e.isUserHasPermissions(["environment-application-c"])?i.subMessage="Start creating an application":i.subMessage="":i.subMessage="Login to get access to your applications"}))}return e.$inject=["UserService","$filter"],e}();t.default=a},function(e,t,i){"use strict";t.__esModule=!0;var n={bindings:{apis:"<",enabledApplicationTypes:"<"},template:i(735),controller:"ApplicationCreationController"};t.default=n},function(e,t){e.exports=' <section layout=column flex> <div layout=row> <div class=gv-creation-steppers flex="{{$ctrl.selectedStep !== $ctrl.steps.length ? 70: 100}}"> <md-steppers md-dynamic-height md-disable-tabs-behavior=true md-stretch-steppers=always md-selected=$ctrl.selectedStep> <application-creation-step1></application-creation-step1> <application-creation-step2></application-creation-step2> <application-creation-step3></application-creation-step3> <application-creation-step4></application-creation-step4> </md-steppers> </div> <div class=gv-creation-timeline-wrapper layout-padding flex ng-show="$ctrl.selectedStep !== $ctrl.steps.length"> <div> <h4>Prepare your application</h4> <md-divider></md-divider> </div> <div class=gv-creation-timeline> <timeline> <timeline-event ng-repeat="step in $ctrl.steps" side=right ng-show="$ctrl.selectedStep == $index || step.completed"> <timeline-badge class={{step.badgeClass}}> <i class="glyphicon {{step.badgeIconClass}}"></i> </timeline-badge> <timeline-panel class={{step.badgeClass}}> <timeline-heading> <div style=font-weight:600;text-overflow:ellipsis;white-space:nowrap;overflow:hidden ng-bind-html=step.title></div> </timeline-heading> <p>{{step.content}}</p> </timeline-panel> </timeline-event> </timeline> </div> </div> </div> </section> '},function(e,t,i){"use strict";t.__esModule=!0;var n=i(3),a=function(){function e(e,t,i,n,a,o){this.Constants=e,this.$state=t,this.$mdDialog=i,this.ApplicationService=n,this.NotificationService=a,this.$q=o,this.selectedStep=0,this.selectedAPIs=[],this.selectedPlans=[],this.messageByPlan={},this.steps=[{badgeClass:"disable",badgeIconClass:"glyphicon-refresh",title:"General",content:"Name and description",completed:!1},{badgeClass:"disable",badgeIconClass:"glyphicon-refresh",title:"Security",content:this.clientRegistrationEnabled()?"OIDC configuration":"Type and client id",completed:!1},{badgeClass:"disable",badgeIconClass:"glyphicon-refresh",title:"Subscriptions",content:"Subscribe to APIs",completed:!1}]}return e.$inject=["Constants","$state","$mdDialog","ApplicationService","NotificationService","$q"],e.prototype.next=function(){this.steps[this.selectedStep].completed=!0,this.steps[this.selectedStep].badgeClass="info",this.steps[this.selectedStep].badgeIconClass="glyphicon-ok-circle",this.steps[0].title=this.application.name,this.selectedStep>0&&(this.applicationType=this.ApplicationService.getType(this.application),this.steps[1].title=this.applicationType),this.goToStep(this.selectedStep+1)},e.prototype.previous=function(){0===this.selectedStep?this.$state.go("management.applications.list"):this.goToStep(this.selectedStep-1)},e.prototype.goToStep=function(e){this.selectedStep=e,this.steps[2].title=this.getReadableApiSubscriptions()},e.prototype.create=function(){var e=this,t=this.$mdDialog.confirm({title:"Create application?",content:"The application "+this.application.name+(this.applicationType?" of type "+this.applicationType:"")+" will be created.",ok:"CREATE",cancel:"CANCEL"});this.$mdDialog.show(t).then((function(){e.ApplicationService.create(e.application).then((function(t){var i=t.data,a=n.map(e.selectedPlans,(function(t){return e.ApplicationService.subscribe(i.id,t.id,e.messageByPlan[t.id])}));e.$q.all(a).then((function(){e.NotificationService.show("Application "+e.application.name+" has been created"),e.$state.go("management.applications.application.general",{applicationId:i.id},{reload:!0})}))}))}))},e.prototype.clientRegistrationEnabled=function(){return this.Constants.application&&this.Constants.application.registration&&this.Constants.application.registration.enabled},e.prototype.isOAuthClient=function(){return this.application&&this.application.settings&&this.application.settings.oauth},e.prototype.onSubscribe=function(e,t){var i=this;if(t.comment_required){var n=this.$mdDialog.prompt().title("Subscription message").placeholder(t.comment_message?t.comment_message:"Fill a message to the API owner").ariaLabel("Subscription message").required(!0).ok("Confirm").cancel("Cancel");this.$mdDialog.show(n).then((function(n){i.messageByPlan[t.id]=n,i.confirmSubscription(e,t)}),(function(){}))}else this.confirmSubscription(e,t)},e.prototype.confirmSubscription=function(e,t){this.selectedAPIs.push(e),t.alreadySubscribed=!0,this.selectedPlans.push(t),this.steps[2].title=this.getReadableApiSubscriptions()},e.prototype.onUnsubscribe=function(e,t){t.alreadySubscribed=!1,n.remove(this.selectedPlans,{id:t.id});var i=n.findIndex(this.selectedAPIs,{id:e.id});this.selectedAPIs.splice(i,1),this.steps[2].title=this.getReadableApiSubscriptions()},e.prototype.getReadableApiSubscriptions=function(){var e=this,t=n.groupBy(this.selectedPlans,"apis"),i=n.keys(t).length>1;return"Subscribed to API"+(i?"s:":"")+" "+n.map(t,(function(t,a){return(i?"</br>- <code>":"<code>")+" "+n.find(e.selectedAPIs,{id:a}).name+"</code> with plan <code>"+n.join(n.map(t,"name"),"</code>, ")+"</code>"}))+"."},e}();t.default=a},function(e,t,i){"use strict";t.__esModule=!0;var n={require:{parent:"^createApplication"},template:i(738)};t.default=n},function(e,t){e.exports=' <md-step label=General md-complete=$ctrl.parent.steps[0].completed> <md-step-body> <md-content layout-padding class="gv-creation-general-content gv-creation-content"> <form name=applicationForm ng-submit=$ctrl.parent.next()> <div class=gv-form> <div class=gv-form-content layout=column> <md-input-container class=md-block> <label>Name</label> <input ng-model=$ctrl.parent.application.name type=text name=name md-maxlength=512 required> <div class=hint ng-if="applicationForm.name.$valid || applicationForm.name.$pristine">Application name</div> <div ng-messages=applicationForm.name.$error> <div ng-message=required>Application name is required.</div> <div ng-message=md-maxlength>The name has to be less than 50 characters long.</div> </div> </md-input-container> <md-input-container class=md-block> <label>Description</label> <input ng-model=$ctrl.parent.application.description type=text name=description required> <div class=hint ng-if="applicationForm.description.$valid || applicationForm.description.$pristine"> Provide a description to your application, what it does, ... </div> <div ng-messages=applicationForm.description.$error> <div ng-message=required>Application description is required.</div> </div> </md-input-container> </div> </div> <md-step-actions layout=row> <div flex> <md-button ng-click=$ctrl.parent.previous()>CANCEL</md-button> </div> <div layout=row flex layout-align="end top"> <md-button type=submit ng-disabled=applicationForm.$invalid>NEXT</md-button> </div> </md-step-actions> </form> </md-content> </md-step-body> </md-step> '},function(e,t,i){"use strict";t.__esModule=!0;var n={require:{parent:"^createApplication"},template:i(740),controller:"ApplicationCreationStep2Controller"};t.default=n},function(e,t){e.exports=' <md-step label=Security md-complete=$ctrl.parent.steps[1].completed> <md-step-body> <md-content layout-padding class=gv-creation-content> <form name=applicationForm ng-submit=$ctrl.parent.next()> <div class=gv-form ng-if=$ctrl.parent.clientRegistrationEnabled()> <div class=gv-form-content layout=column> <div layout=row layout-margin layout-align="center center"> <div flex=20 layout=column class=application-type-box ng-class="{\'application-type-box-selected\' : type.id === $ctrl.selectedType.id, \'application-type-box-unselected\' : type.id !== $ctrl.selectedType.id}" ng-click=$ctrl.selectType(type) ng-repeat="type in $ctrl.parent.enabledApplicationTypes"> <ng-md-icon class=icon size=48 icon={{::type.icon}}></ng-md-icon> <span class=title>{{::type.name}}</span> <span class=description>{{::type.description}}</span> </div> </div> </div> <div ng-if=$ctrl.selectedType.isOauth()> <div class=gv-form-content layout=column ng-if=$ctrl.selectedType.allowed_grant_types> <md-input-container class=md-block> <label>Allowed grant types</label> <md-select ng-model=$ctrl.parent.application.settings.oauth.grant_types ng-change=$ctrl.updateGrantTypes() multiple=multiple required> <md-option ng-value=grantType.type ng-repeat="grantType in $ctrl.selectedType.allowed_grant_types" ng-disabled=$ctrl.selectedType.isGrantTypeMandatory(grantType)> {{::grantType.name}} </md-option> </md-select> <div class=hint> Grant types allowed for the client. Please set only grant types you need for security reasons. </div> </md-input-container> <md-input-container class=md-block ng-if=$ctrl.displayRedirectUris()> <label>Redirect URIs *</label> <md-chips required md-add-on-blur=true ng-model=$ctrl.parent.application.settings.oauth.redirect_uris placeholder="Enter a redirect URI" md-on-remove=$ctrl.applicationForm.$setDirty() ng-click=applicationForm.$setDirty()></md-chips> <div class=hint> URIs where the authorization server will send OAuth responses </div> </md-input-container> </div> </div> </div> <div class=gv-form ng-if=$ctrl.displaySimpleAppConfig()> <div class=gv-form-content layout=column> <md-input-container class=md-block> <label>Type</label> <input ng-model=$ctrl.parent.application.settings.app.type type=text name=type> <div class=hint ng-if="applicationForm.type.$valid || applicationForm.type.$pristine"> Type of the application (mobile, web, ...). </div> </md-input-container> <md-input-container class=md-block flex=50> <label>Client ID</label> <input ng-model=$ctrl.parent.application.settings.app.client_id type=text name=clientId minlength=1 md-maxlength=300> <div class=hint ng-if="applicationForm.clientId.$valid || applicationForm.clientId.$pristine"> The <code>Client_id</code> of the application. This field is required to subscribe to certain type of API Plan (OAuth2, JWT). </div> <div ng-messages=applicationForm.clientId.$error> <div ng-message=minlength>The name has to be more than 1 characters long.</div> <div ng-message=md-maxlength>The name has to be less than 300 characters long.</div> </div> </md-input-container> </div> </div> <md-step-actions layout=row> <div flex> <md-button ng-click=$ctrl.parent.previous()>PREVIOUS</md-button> </div> <div flex layout=row layout-align="end top"> <md-button ng-click=$ctrl.parent.next() ng-disabled=applicationForm.$dirty ng-if=!$ctrl.parent.clientRegistrationEnabled()>SKIP</md-button> <md-button type=submit ng-disabled=applicationForm.$invalid>NEXT</md-button> </div> </md-step-actions> </form> </md-content> </md-step-body> </md-step> '},function(e,t,i){"use strict";t.__esModule=!0;var n=function(){function e(e){this.Constants=e}return e.$inject=["Constants"],e.prototype.$onInit=function(){this.selectedType=this.parent.enabledApplicationTypes[0]},e.prototype.selectType=function(e){this.selectedType=e,this.selectedType.isOauth()?this.parent.application.settings={oauth:{application_type:this.selectedType.id,grant_types:this.selectedType.default_grant_types.map((function(e){return e.type})),redirect_uris:[]}}:this.parent.application.settings={app:{}}},e.prototype.displaySimpleAppConfig=function(){return!this.selectedType.isOauth()},e.prototype.displayRedirectUris=function(){return this.selectedType.isOauth()&&this.selectedType.requires_redirect_uris},e}();t.default=n},function(e,t,i){"use strict";t.__esModule=!0;var n=i(3),a={require:{parent:"^createApplication"},template:i(743),controller:["ApiService","$scope",function(e,t){var i=this;this.onSelectAPI=function(t){if(t){var a=i.getAuthorizedSecurity();e.getApiPlans(t.id,"published").then((function(e){var o=n.filter(e.data,(function(e){return n.includes(a,e.security)}));i.plans=n.map(o,(function(e){var t=n.find(i.parent.selectedPlans,{id:e.id});return t||e})),i.selectedAPI=t}))}else delete i.plans,delete i.selectedAPI},this.getAuthorizedSecurity=function(){var e=["api_key"];return i.parent.application.settings&&(i.parent.application.settings.oauth||i.parent.application.settings.app&&i.parent.application.settings.app.client_id)&&e.push("jwt","oauth2"),e},this.getSelectedAPIs=function(){var e=n.uniqBy(i.parent.selectedAPIs,"id");return n.map(e,(function(e){var t=n.filter(i.parent.selectedPlans,(function(t){return-1!==t.apis.indexOf(e.id)}));e.plans=n.join(n.map(t,"name"),", ")})),e},t.$watch("$ctrl.parent.application.settings",(function(){i.parent.selectedAPIs=[],i.parent.selectedPlans=[],delete i.plans,delete i.selectedAPI,delete i.filterAPI}),!0)}]};t.default=a},function(e,t){e.exports=' <md-step label=Subscriptions md-complete=$ctrl.parent.steps[2].completed> <md-step-body> <div layout=column layout-align="space-around center" class=layout-padding> <div layout=row layout-align="space-around center" class=layout-padding style=width:100%> <md-autocomplete md-input-id=new-view-apis-autocomplete-id flex=70 md-search-text=$ctrl.filterAPI md-selected-item-change=$ctrl.onSelectAPI(api) md-items="api in $ctrl.parent.apis | filter:$ctrl.filterAPI" md-item-text=api.name placeholder="Select an API to subscribe" md-autofocus=false md-min-length=0 md-no-cache=true md-menu-class=autocomplete-custom-template> <md-item-template> <md-list-item class="md-2-line contact-item"> <div class=md-list-item-text style="margin:15px 0"> <h3>{{api.name}} <small>{{api.version}}</small></h3> </div> </md-list-item> </md-item-template> <md-not-found> No API matching "{{$ctrl.filterAPI}}" were found. </md-not-found> </md-autocomplete> </div> <div class=gv-forms style=width:100%> <div class=gv-form> <div class=gv-form-content> <gravitee-empty-state ng-if="$ctrl.parent.selectedAPIs.length === 0 && !$ctrl.selectedAPI" icon=dashboard model=API message="No API selected for your application"></gravitee-empty-state> <div layout=row layout-wrap class=inset ng-if="$ctrl.parent.selectedAPIs.length > 0 && !$ctrl.selectedAPI"> <md-table-container style=width:100%;min-height:200px;text-align:center> <table md-table> <thead md-head md-order=query.order> <tr md-row> <th md-column width=1% md-order-by=name><span>Name</span></th> <th md-column width=1%>Plans</th> <th md-column width=1%></th> </tr> </thead> <tbody md-body> <tr md-row ng-repeat="api in $ctrl.getSelectedAPIs() track by api.id"> <td md-cell nowrap=nowrap> <gravitee-identity-picture image-id=api.id image-url=::api.picture_url image-name="api.name + \'  \' + api.version" image-width=40></gravitee-identity-picture> {{api.name}} ({{api.version}}) </td> <td md-cell>{{api.plans}}</td> <td md-cell> <md-button class=md-icon-button aria-label="Edit Plans" ng-click=$ctrl.onSelectAPI(api);> <ng-md-icon icon=settings></ng-md-icon> <md-tooltip md-direction=left>Edit Plans</md-tooltip> </md-button> </td> </tr> </tbody> </table> </md-table-container> </div> <div ng-if="$ctrl.plans && $ctrl.selectedAPI" layout=column flex layout-align=center class=layout-padding style=overflow:auto;align-items:center> <div style=width:100%> <div flex layout=row> <h4>Choose <b>Echo</b> plans that suit your business</h4> <md-tooltip>Close the API</md-tooltip> <span flex></span> <md-button class=md-icon-button aria-label=Finish> <ng-md-icon icon=close ng-click="$ctrl.selectedAPI = null; $ctrl.filterAPI = \'\';"></ng-md-icon> </md-button> </div> <md-divider></md-divider> <div layout=row layout-align=center class=layout-padding flex layout-wrap> <api-plan ng-repeat="plan in $ctrl.plans" plan=plan subscribable=true unsubscribable=true on-subscribe="$ctrl.parent.onSubscribe($ctrl.selectedAPI, plan)" on-unsubscribe="$ctrl.parent.onUnsubscribe($ctrl.selectedAPI, plan)"></api-plan> <h3 ng-if="$ctrl.plans.length === 0">There is no published plan for this API that you can subscribe with this type of application</h3> </div> </div> </div> </div> </div> </div> </div> <md-step-actions layout=row> <div flex> <md-button ng-click=$ctrl.parent.previous()>PREVIOUS</md-button> </div> <div flex layout=row layout-align="end top"> <md-button ng-click=$ctrl.parent.next() ng-disabled=$ctrl.parent.selectedPlans.length>SKIP</md-button> <md-button ng-click=$ctrl.parent.next() ng-disabled=!$ctrl.parent.selectedPlans.length>NEXT</md-button> </div> </md-step-actions> </md-step-body> </md-step> '},function(e,t,i){"use strict";t.__esModule=!0;var n={require:{parent:"^createApplication"},template:i(745),controller:["Constants",function(e){e.documentation&&e.documentation.url?this.url=e.documentation.url:this.url="https://docs.gravitee.io"}]};t.default=n},function(e,t){e.exports=' <md-step label=Validation md-complete=$ctrl.parent.steps[3].completed> <md-step-body> <md-content flex layout-padding class="gv-abstract-content gv-creation-content"> <h5>Application <a ng-click=$ctrl.parent.goToStep(0)> <md-tooltip>Jump to general edition</md-tooltip> <ng-md-icon icon=mode_edit size=20></ng-md-icon> </a> </h5> <p> You are about to create the application <code>{{$ctrl.parent.application.name}}</code>. </p> <h5>Security <a ng-click=$ctrl.parent.goToStep(1)> <md-tooltip>Jump to security edition</md-tooltip> <ng-md-icon icon=mode_edit size=20></ng-md-icon> </a> </h5> <p>The application type is <code>{{$ctrl.parent.applicationType}}</code>.</p> <p ng-if=$ctrl.parent.application.settings.app.client_id>The client id will be <code>{{$ctrl.parent.application.settings.app.client_id}}</code>.</p> <h5>Subscriptions <a ng-click=$ctrl.parent.goToStep(2)> <md-tooltip>Jump to subscriptions edition</md-tooltip> <ng-md-icon icon=mode_edit size=20></ng-md-icon> </a> </h5> <p ng-bind-html=$ctrl.parent.getReadableApiSubscriptions()></p> <h5>Confirmation</h5> <p style=padding-top:0> You can now <strong><md-button class=md-raised ng-click=$ctrl.parent.create()>create the APPLICATION</md-button></strong> and start to consume APIs. </p> <div layout=row> <a ng-href={{$ctrl.url}} target=_blank class=gv-abstract-documentation-link flex>To go further on APPLICATION configuration, please consult <strong>APPLICATION Management documentation</strong></a> </div> </md-content> </md-step-body> </md-step> '},function(e,t,i){"use strict";t.__esModule=!0;var n={bindings:{application:"<"},controller:["SidenavService",function(e){this.$onInit=function(){e.setCurrentResource(this.application.name)}}],template:i(747)};t.default=n},function(e,t){e.exports=" <div class=gv-sub-content ui-view flex></div> "},function(e,t,i){"use strict";t.__esModule=!0;var n={bindings:{application:"<"},controller:["SidenavService",function(e){this.$onInit=function(){this.hideSubscribeLink="ARCHIVED"===this.application.status}}],template:i(749)};t.default=n},function(e,t){e.exports=' <div layout=column flex> <div layout=row layout-align="start center"> <div class=gravitee-application-header-image layout=column layout-align="center center"></div> <div flex=70> <h1>{{$ctrl.application.name}} <small ng-if=$ctrl.application.type style=color:grey>( {{$ctrl.application.type}} )</small> <md-button ng-if=!$ctrl.hideSubscribeLink class=md-primary ui-sref=management.applications.application.subscriptions.subscribe>Subscribe to APIs</md-button> </h1> <md-content flex class=gravitee-api-header-description> <div class=gravitee-api-header-read-more read-more ng-model=$ctrl.application.description words=false length=150></div> </md-content> </div> <div flex=30 style=text-align:right> <p style=padding:0;margin:0> <span>{{$ctrl.application.owner.displayName}}<md-tooltip md-direction=left>Owner</md-tooltip></span> <span><ng-md-icon icon=person></ng-md-icon></span> </p> <p style=padding:0;margin:0> <span>{{$ctrl.application.created_at | humanDateFilter}}<md-tooltip md-direction=left>Created at</md-tooltip></span> <span><ng-md-icon icon=timer></ng-md-icon></span> </p> </div> </div> </div> '},function(e,t,i){"use strict";t.__esModule=!0;var n=i(3),a=function(){function e(e,t,i,n,a,o){this.ApplicationService=e,this.NotificationService=t,this.$state=i,this.$scope=n,this.$mdDialog=a,this.SidenavService=o}return e.$inject=["ApplicationService","NotificationService","$state","$scope","$mdDialog","SidenavService"],e.prototype.$onInit=function(){this.application.groups||(this.application.groups=[]);var e=this;this.$scope.$on("apiPictureChangeSuccess",(function(t,i){e.application.picture=i.image,e.$scope.formApplication.$setDirty()})),this.initialApplication=n.cloneDeep(this.application)},e.prototype.update=function(){var e=this;this.ApplicationService.update(this.application).then((function(){e.initialApplication=n.cloneDeep(e.application),e.$scope.formApplication.$setPristine(),e.NotificationService.show(e.application.name+" has been updated"),e.SidenavService.setCurrentResource(e.application.name)}))},e.prototype.delete=function(){var e=this;this.ApplicationService.delete(this.application.id).then((function(){e.NotificationService.show(e.application.name+" has been deleted"),e.$state.go("management.applications.list",{},{reload:!0})}))},e.prototype.reset=function(){n.assign(this.application,this.initialApplication),this.$scope.formApplication.$setPristine()},e.prototype.isOAuthClient=function(){return"simple"!==this.application.type.toLowerCase()},e.prototype.showDeleteApplicationConfirm=function(e){e.stopPropagation();var t=this;this.$mdDialog.show({controller:"DialogConfirmAndValidateController",controllerAs:"ctrl",template:i(181),clickOutsideToClose:!0,locals:{title:"Would you like to delete your application?",warning:"This operation is irreversible.",msg:"You will no longer be able to access this application.",validationMessage:"Please, type in the name of the application <code>"+this.application.name+"</code> to confirm.",validationValue:this.application.name,confirmButton:"Yes, delete this application."}}).then((function(e){e&&t.delete()}))},e.prototype.renewClientSecret=function(e){var t=this;e.stopPropagation(),this.$mdDialog.show({controller:"DialogConfirmController",controllerAs:"ctrl",template:i(5),clickOutsideToClose:!0,locals:{msg:"By renewing the client secret, you will no longer be able to generate new access tokens and call APIs.",title:"Are you sure to renew the client secret?",confirmButton:"Renew"}}).then((function(e){e&&t.ApplicationService.renewClientSecret(t.application.id).then((function(e){t.NotificationService.show("Client secret has been renew"),t.application=e.data,t.initialApplication=n.cloneDeep(t.application),t.$scope.formApplication.$setPristine()}))}))},e.prototype.onCopyClientIdSuccess=function(e){this.NotificationService.show("ClientId has been copied to clipboard"),e.clearSelection()},e.prototype.onCopyClientSecretSuccess=function(e){this.NotificationService.show("ClientSecret has been copied to clipboard"),e.clearSelection()},e}();t.default=a},function(e,t,i){"use strict";t.__esModule=!0;var n={bindings:{application:"<",groups:"<",applicationType:"<"},controller:"ApplicationGeneralController",template:i(752)};t.default=n},function(e,t){e.exports=' <form name=formApplication ng-submit=$ctrl.update() novalidate> <div class=gv-forms layout=column permission permission-only="\'application-definition-r\'"> <application-header application=$ctrl.application></application-header> <div class=gv-form> <h2>General</h2> <div class=gv-form-content layout=column> <div layout-gt-sm=row> <div layout=column flex> <div layout-gt-sm=row> <md-input-container flex> <label>Name</label> <input ng-model=$ctrl.application.name type=text name=name md-maxlength=512 required> <div class=hint ng-if="formApplication.name.$valid || formApplication.name.$pristine">Application name</div> <div ng-messages=formApplication.name.$error> <div ng-message=required>Application name is required.</div> <div ng-message=md-maxlength>The name has to be less than 50 characters long.</div> </div> </md-input-container> <md-input-container ng-if=!$ctrl.isOAuthClient()> <label>Type</label> <input ng-model=$ctrl.application.settings.app.type type=text name=type> <div class=hint ng-if="formApplication.type.$valid || formApplication.type.$pristine"> Type of the application (mobile, web, ...). </div> </md-input-container> </div> <md-input-container> <label>Description</label> <input ng-model=$ctrl.application.description type=text name=description required> <div class=hint ng-if="formApplication.description.$valid || formApplication.description.$pristine"> Provide a description of your application, what it does, ... </div> <div ng-messages=formApplication.description.$error> <div ng-message=required>Application description is required.</div> </div> </md-input-container> </div> <gravitee-image image-id=$ctrl.application.id image=$ctrl.application.picture image-url=$ctrl.application.picture_url image-name="$ctrl.application.name + \'  \' + $ctrl.application.type + \'  \' + $ctrl.application.owner.displayName"></gravitee-image> </div> <div layout=row> <md-input-container class=md-block flex> <label>Owner</label> <input type=text disabled=disabled value={{$ctrl.application.owner.displayName}}> </md-input-container> <md-input-container class=md-block flex> <label>Created at</label> <input type=text disabled=disabled value="{{$ctrl.application.created_at | humanDateFilter}}"> </md-input-container> </div> </div> </div> <div ng-if=!$ctrl.isOAuthClient()> <h2>OAuth2 Integration</h2> <div class=gv-form-content layout=column> <md-input-container> <label>Client ID</label> <input ng-model=$ctrl.application.settings.app.client_id type=text name=clientId minlength=1 md-maxlength=300> <div class=hint ng-if="formApplication.clientId.$valid || formApplication.clientId.$pristine"> The <code>Client_id</code> of the application. This field is required to subscribe to certain type of API Plan (OAuth2, JWT). </div> <div ng-messages=formApplication.clientId.$error> <div ng-message=minlength>The name has to be more than 1 character long.</div> <div ng-message=md-maxlength>The name has to be less than 300 characters long.</div> </div> </md-input-container> </div> </div> <div ng-if=$ctrl.isOAuthClient()> <h2>OpenID Connect Integration</h2> <div class=gv-form-content layout=column> <div layout=row> <md-input-container flex=40> <label>Client ID</label> <input ng-model=$ctrl.application.settings.oauth.client_id type=text readonly=readonly> </md-input-container> <span flex> <md-tooltip md-direction=right>Copy to clipboard</md-tooltip> <ng-md-icon icon=content_copy ngclipboard data-clipboard-text={{$ctrl.application.settings.oauth.client_id}} ngclipboard-success=$ctrl.onCopyClientIdSuccess(e); role=button> </ng-md-icon> </span> <md-input-container flex=40> <label>Client Secret</label> <input ng-model=$ctrl.application.settings.oauth.client_secret type=text readonly=readonly> </md-input-container> <span flex> <md-tooltip md-direction=right>Copy to clipboard</md-tooltip> <ng-md-icon icon=content_copy ngclipboard data-clipboard-text={{$ctrl.application.settings.oauth.client_secret}} ngclipboard-success=$ctrl.onCopyClientSecretSuccess(e); role=button> </ng-md-icon> </span> <md-button class="md-raised md-primary" type=button style=height:36px ng-if=$ctrl.application.settings.oauth.renew_client_secret_supported ng-click=$ctrl.renewClientSecret($event) permission permission-only="\'application-definition-u\'"> Renew secret </md-button> </div> <md-input-container class=md-block> <label>Allowed grant types</label> <md-select ng-model=$ctrl.application.settings.oauth.grant_types ng-change=$ctrl.updateGrantTypes() multiple=multiple required> <md-option ng-value=grantType.type ng-repeat="grantType in $ctrl.applicationType.allowed_grant_types" ng-disabled=$ctrl.applicationType.isGrantTypeMandatory(grantType)> {{::grantType.name}} </md-option> </md-select> <div class=hint> Grant types allowed for the client. Please set only grant types you need for security reasons. </div> </md-input-container> <md-input-container class=md-block ng-if=$ctrl.applicationType.requires_redirect_uris> <label>Redirect URIs</label> <md-chips required ng-model=$ctrl.application.settings.oauth.redirect_uris placeholder="Enter a redirect URI" ng-click=$ctrl.formApplication.$setDirty() md-add-on-blur=true md-on-remove=$ctrl.formApplication.$setDirty()></md-chips> <div class=hint> URIs where the authorization server will send OAuth responses </div> </md-input-container> </div> </div> <div class=gv-form> <h2>Access-Control</h2> <div class=gv-form-content layout=column> <md-input-container> <label>Groups</label> <md-select aria-label=group ng-model=$ctrl.application.groups multiple=multiple> <md-option ng-value=group.id ng-repeat="group in $ctrl.groups">{{group.name}}</md-option> </md-select> </md-input-container> </div> </div> <div class="md-actions gravitee-api-save-button" layout=row ng-if="$ctrl.application.status !==\'ARCHIVED\'"> <md-button class="md-raised md-primary" type=submit ng-disabled="formApplication.$invalid || formApplication.$pristine" permission permission-only="\'application-definition-u\'"> Save </md-button> <md-button class=md-raised type=button ng-click=$ctrl.reset() ng-disabled="formApplication.$invalid || formApplication.$pristine" permission permission-only="\'application-definition-u\'"> Reset </md-button> <md-button class="md-raised md-warn" type=button ng-click=$ctrl.showDeleteApplicationConfirm($event) permission permission-only="\'application-definition-d\'"> Delete </md-button> </div> </div> </form> '},function(e,t,i){"use strict";t.__esModule=!0;var n=i(7),a=i(3),o=function(){function e(e,t,i,n,o,r,s){this.ApplicationService=e,this.NotificationService=t,this.$mdDialog=i,this.$state=n,this.RoleService=o,this.GroupService=r,this.UserService=s;var l=this;this.newPrimaryOwner=null,o.list("APPLICATION").then((function(e){l.roles=e,l.newPORoles=a.filter(e,(function(e){return"PRIMARY_OWNER"!==e.name})),l.newPORole=a.find(e,(function(e){return e.default}))}))}return e.$inject=["ApplicationService","NotificationService","$mdDialog","$state","RoleService","GroupService","UserService"],e.prototype.$onInit=function(){var e=this;if(this.groupById=a.keyBy(this.resolvedGroups,"id"),this.displayGroups={},a.forEach(this.resolvedGroups,(function(t){e.displayGroups[t.id]=!1})),this.groupMembers={},this.groupIdsWithMembers=[],this.application.groups){var t=this;a.forEach(this.application.groups,(function(i){e.GroupService.getMembers(i).then((function(e){var n=a.filter(e.data,(function(e){return e.roles.APPLICATION}));n.length>0&&(t.groupMembers[i]=n,t.groupIdsWithMembers.push(i))}))}))}},e.prototype.updateMember=function(e){var t=this;e.role&&this.ApplicationService.addOrUpdateMember(this.application.id,a.pick(e,["id","reference","role"])).then((function(){t.NotificationService.show("Member "+e.displayName+" has been updated with role "+e.role)}))},e.prototype.deleteMember=function(e){var t=this,i=this.members.indexOf(e);this.ApplicationService.deleteMember(this.application.id,e.id).then((function(){t.members.splice(i,1),t.NotificationService.show(e.displayName+" has been removed")}))},e.prototype.showDeleteMemberConfirm=function(e,t){e.stopPropagation();var n=this;this.$mdDialog.show({controller:"DialogConfirmController",controllerAs:"ctrl",template:i(162),clickOutsideToClose:!0,locals:{title:"Would you like to remove the member ?",msg:"",confirmButton:"Remove"}}).then((function(e){e&&n.deleteMember(t)}))},e.prototype.showAddMemberModal=function(e){var t=this;this.$mdDialog.show({controller:"DialogAddMemberController",template:i(754),parent:n.element(document.body),targetEvent:e,clickOutsideToClose:!0,locals:{application:t.application,members:t.members}}).then((function(e){e&&t.$state.go("management.applications.application.members",{applicationId:t.application.id},{reload:!0})}),(function(){}))},e.prototype.searchUser=function(e){var t=this;return e?this.UserService.search(e).then((function(e){return a.filter(e.data,(function(e){return void 0===e.id||-1===a.findIndex(t.members,(function(t){return t.id===e.id&&"PRIMARY_OWNER"===t.role}))}))})):a.filter(this.members,(function(e){return"PRIMARY_OWNER"!==e.role}))},e.prototype.getMembershipDisplay=function(e){return e.displayName?e.username?e.displayName+" ("+e.username+")":e.displayName:e.username},e.prototype.getMembershipAvatar=function(e){return e.id?this.UserService.getUserAvatar(e.id):"assets/default_photo.png"},e.prototype.selectedUserChange=function(e){e?this.newPrimaryOwner=e:null!==this.newPrimaryOwner&&(this.newPrimaryOwner=null)},e.prototype.showTransferOwnershipConfirm=function(e){var t=this;this.$mdDialog.show({controller:"DialogTransferApplicationController",controllerAs:"$ctrl",template:i(755),parent:n.element(document.body),targetEvent:e,clickOutsideToClose:!0,locals:{newRole:this.newPORole}}).then((function(e){e&&t.transferOwnership(t.newPORole.name)}),(function(){}))},e.prototype.isAllowedToTransferOwnership=function(){return this.UserService.currentUser.isAdmin()||this.isPrimaryOwner()},e.prototype.isPrimaryOwner=function(){return this.UserService.currentUser.id===this.application.owner.id},e.prototype.transferOwnership=function(e){var t=this,i={id:this.newPrimaryOwner.id,reference:this.newPrimaryOwner.reference,role:e};this.ApplicationService.transferOwnership(this.application.id,i).then((function(){t.NotificationService.show("API ownership changed !"),t.$state.go("management.applications.list")}))},e}();t.default=o},function(e,t){e.exports=' <md-dialog aria-label="Add member" layout-padding flex=30> <md-dialog-content class=searchMembers> <form name=formMember ng-submit=$event.preventDefault()> <md-autocomplete md-selected-item=selectedItem md-search-text=searchText md-selected-item-change=selectUser(user) md-items="user in searchUser(searchText)" md-item-text=user.reference md-min-length=1 md-delay=500 placeholder="Search user..." md-autofocus=true md-menu-class=autocomplete-search-user flex> <md-item-template> <md-list-item class="md-2-line contact-item"> <gravitee-identity-picture image-id=user.id image-url=getUserAvatar(user.id) image-name=user.displayName image-width=40 image-border-radius=true class=md-avatar></gravitee-identity-picture> <div class="md-list-item-text compact"> <h3>{{user.displayName}}</h3> <span ng-if=user.email>{{user.email}}</span> </div> </md-list-item> </md-item-template> <md-not-found> No user matching "{{searchText}}" were found, or users already selected. </md-not-found> </md-autocomplete> <br/> <md-list class=fixedRows ng-show="usersSelected.length > 0"> <md-subheader class=md-no-sticky>Selected users</md-subheader> <md-list-item class="md-2-line contact-item" ng-repeat="(index, user) in usersSelected"> <gravitee-identity-picture image-id=user.id image-url=getUserAvatar(user.id) image-name=user.displayName image-width=40 image-border-radius=true class=md-avatar></gravitee-identity-picture> <div class="md-list-item-text compact"> <h3>{{user.displayName}}</h3> </div> </md-list-item> </md-list> <div ng-show="usersSelected.length > 0"> <md-subheader class=md-no-sticky>Select role</md-subheader> <md-input-container class=md-block> <label>Role</label> <md-select ng-model=role required> <md-option ng-repeat="role in roles" ng-value=role ng-disabled=role.system> {{role.name}} </md-option> </md-select> </md-input-container> </div> </form> </md-dialog-content> <md-dialog-actions layout=row> <md-button ng-click=hide()> Cancel </md-button> <md-button type=submit class="md-raised md-primary" ng-click=addMembers() ng-disabled="formMember.$invalid || usersSelected.length === 0"> Add </md-button> </md-dialog-actions> </md-dialog> '},function(e,t){e.exports=' <md-dialog aria-label="Transfer Application"> <md-dialog-content layout-padding> <h4>Transfer Application</h4> <p> This action cannot be undone. If you are the primary owner of this Application, your role will be set to <code>{{$ctrl.newRole.name}}</code>. </p> </md-dialog-content> <md-dialog-actions layout=row> <md-button ng-click=cancel()> Cancel </md-button> <md-button ng-click=transferOwnership() class="md-raised md-warn"> I understand, transfer this Application </md-button> </md-dialog-actions> </md-dialog> '},function(e,t,i){"use strict";t.__esModule=!0;var n={bindings:{application:"<",members:"<",resolvedGroups:"<"},controller:"ApplicationMembersController",template:i(757)};t.default=n},function(e,t){e.exports=' <div class=gv-forms layout=column> <application-header application=$ctrl.application></application-header> <div class=gv-form> <h2>Members</h2> <div class=gv-form-content layout=column> <md-table-container ng-show=$ctrl.members.length> <table md-table class=gv-table-dense> <thead md-head md-order=order> <tr md-row> <th md-column width=1% nowrap=nowrap></th> <th md-column order-by=lastname>Member</th> <th md-column order-by=type>Role</th> <th md-column></th> </tr> </thead> <tbody md-body> <tr md-row ng-repeat="member in $ctrl.members | orderBy: order"> <td md-cell> <gravitee-identity-picture image-id=member.id image-url=$ctrl.getMembershipAvatar(member) image-name=$ctrl.getMembershipDisplay(member) image-width=40 image-border-radius=true class=md-avatar></gravitee-identity-picture> </td> <td md-cell> <md-list-item class="md-2-line contact-item"> <div class="md-list-item-text compact"> <span ng-if="member.role == \'PRIMARY_OWNER\'"><b>{{$ctrl.getMembershipDisplay(member)}}</b></span> <span ng-if="member.role != \'PRIMARY_OWNER\'">{{$ctrl.getMembershipDisplay(member)}}</span> </div> </md-list-item> </td> <td md-cell permission permission-only="\'application-member-u\'"> <md-select ng-model=member.role ng-change=$ctrl.updateMember(member) ng-disabled="member.role == \'PRIMARY_OWNER\'" aria-label="Update member role"> <md-option ng-value=role.name ng-repeat="role in $ctrl.roles" ng-disabled=role.system>{{role.name}}</md-option> </md-select> </td> <td md-cell permission permission-except="\'application-member-u\'"> <span>{{member.role}}</span> </td> <td md-cell> <div> <ng-md-icon ng-if="member.role != \'PRIMARY_OWNER\'" ng-click="$ctrl.showDeleteMemberConfirm($event, member)" icon=delete size=24 style=cursor:pointer permission permission-only="\'application-member-d\'"></ng-md-icon> </div> </td> </tr> </tbody> </table> </md-table-container> <gravitee-empty-state ng-if=!$ctrl.members.length icon=group model=Member message="Members will appear here" sub-message="Start attaching a member" create-mode=true></gravitee-empty-state> <div ng-style="!$ctrl.members.length && {\'text-align\':\'center\'}"> <md-button permission permission-only="\'application-member-c\'" ng-class="{\'md-fab-bottom-right\': $ctrl.members.length}" class=md-fab aria-label=Add ng-click=$ctrl.showAddMemberModal($event)> <ng-md-icon icon=add></ng-md-icon> </md-button> </div> </div> </div> <div class=gv-form ng-if=$ctrl.isAllowedToTransferOwnership() permission permission-only="\'application-member-u\'"> <h2>Transfer ownership</h2> <div class=gv-form-content layout=column> <p> Give full access to this application to an other user. </p> <md-autocomplete md-selected-item=selectedItem md-search-text=searchText md-search-text-change=searchTextChange(searchText) md-selected-item-change=$ctrl.selectedUserChange(user) md-items="user in $ctrl.searchUser(searchText)" md-item-text=user.displayName placeholder="Select a user" md-autofocus=false md-min-length=0 md-menu-class=autocomplete-custom-template> <md-item-template> <md-list-item class="md-2-line contact-item"> <div class="md-list-item-text compact"> <span style=font-size:medium>{{user.displayName}}</span> <span style=padding-left:24px;font-size:small ng-if=user.email>{{user.email}}</span> </div> </md-list-item> </md-item-template> <md-not-found> No user matching "{{searchText}}" were found. </md-not-found> </md-autocomplete> <md-input-container> <label>New Role for the current Primary Owner</label> <md-select ng-model=$ctrl.newPORole> <md-option ng-value=role ng-repeat="role in $ctrl.newPORoles">{{role.name}}</md-option> </md-select> </md-input-container> <div class="md-actions gravitee-api-save-button" layout=row> <md-button ng-disabled="$ctrl.newPrimaryOwner == null" class="md-raised md-primary" ng-click=$ctrl.showTransferOwnershipConfirm($event)>Transfer</md-button> </div> </div> </div> <div class=gv-form ng-repeat="grp in $ctrl.groupIdsWithMembers"> <h2>{{$ctrl.groupMembers[grp].length}} members inherited from "{{$ctrl.groupById[grp].name}}"</h2> <div class=gv-form-content layout=column> <div layout=row layout-align="start end"> <div style=margin-bottom:5px ng-model=$ctrl.displayGroups[grp] ng-if=!$ctrl.displayGroups[grp] ng-click="$ctrl.displayGroups[grp]=true"> <a>Show</a> </div> <div style=margin-bottom:5px ng-model=$ctrl.displayGroups[grp] ng-if=$ctrl.displayGroups[grp] ng-click="$ctrl.displayGroups[grp]=false"> <a>Hide</a> </div> </div> <md-content style="background:0 0" ng-if=$ctrl.displayGroups[grp]> <md-table-container ng-show=$ctrl.groupMembers[grp].length> <table md-table class=gv-table-dense> <thead md-head md-order=order> <tr md-row> <th md-column order-by=username>Member</th> <th md-column order-by=type>Role</th> </tr> </thead> <tbody md-body> <tr md-row ng-repeat="member in $ctrl.groupMembers[grp] | orderBy: order"> <td md-cell>{{$ctrl.getMembershipDisplay(member)}}</td> <td md-cell>{{member.roles["APPLICATION"]}}</td> </tr> </tbody> </table> </md-table-container> </md-content> </div> </div> </div> '},function(e,t,i){"use strict";t.__esModule=!0;var n=i(3),a=["ACCEPTED","PENDING","PAUSED"],o=function(){this.status=a,this.page=1,this.size=10};t.SubscriptionQuery=o;var r=function(){function e(e,t,i,n,a){this.ApplicationService=e,this.NotificationService=t,this.$mdDialog=i,this.ApiService=n,this.$state=a,this.query=new o,this.status={ACCEPTED:"Accepted",CLOSED:"Closed",PAUSED:"Paused",PENDING:"Pending",REJECTED:"Rejected"},this.onPaginate=this.onPaginate.bind(this),this.$state.params.status&&(Array.isArray(this.$state.params.status)?this.query.status=this.$state.params.status:this.query.status=this.$state.params.status.split(",")),this.$state.params.api&&(Array.isArray(this.$state.params.api)?this.query.apis=this.$state.params.api:this.query.apis=this.$state.params.api.split(",")),this.$state.params.api_key&&(this.query.api_key=this.$state.params.api_key)}return e.$inject=["ApplicationService","NotificationService","$mdDialog","ApiService","$state"],e.prototype.onPaginate=function(e){this.query.page=e,this.doSearch()},e.prototype.clearFilters=function(){this.subscriptionsFiltersForm.$setPristine(),this.query=new o,this.doSearch()},e.prototype.search=function(){this.query.page=1,this.query.size=10,this.doSearch()},e.prototype.buildQuery=function(){var e="?page="+this.query.page+"&size="+this.query.size+"&",t={};return void 0!==this.query.status&&(t.status=this.query.status.join(",")),void 0!==this.query.apis&&(t.api=this.query.apis.join(",")),void 0!==this.query.api_key&&(t.api_key=this.query.api_key),n.mapKeys(t,(function(t,i){return e+=i+"="+t+"&"})),e},e.prototype.doSearch=function(){var e=this,t=this.buildQuery();this.$state.transitionTo(this.$state.current,n.merge(this.$state.params,{status:this.query.status?this.query.status.join(","):"",api:this.query.apis?this.query.apis.join(","):"",page:this.query.page,size:this.query.size,api_key:this.query.api_key}),{notify:!1}),this.ApplicationService.listSubscriptions(this.application.id,t).then((function(t){e.subscriptions=t.data}))},e.prototype.toggleSubscription=function(e,t){e.toggle(),t.apiKeys||this.listApiKeys(t)},e.prototype.listApiKeys=function(e){this.ApplicationService.listApiKeys(this.application.id,e.id).then((function(t){e.apiKeys=t.data}))},e.prototype.hasKeysDefined=function(){return null!==this.subscriptions&&Object.keys(this.subscriptions).length>0},e.prototype.generateAPIKey=function(e,t){var n=this;this.$mdDialog.show({controller:"DialogConfirmController",controllerAs:"ctrl",template:i(5),clickOutsideToClose:!0,locals:{title:"Are you sure you want to renew your API Key ?",msg:"Your previous API Key will be no longer valid in 1 hour !",confirmButton:"Renew"}}).then((function(i){i&&n.ApplicationService.renewApiKey(e,t.id).then((function(){n.NotificationService.show("A new API Key has been generated"),n.listApiKeys(t)}))}))},e.prototype.revoke=function(e,t){var n=this;this.$mdDialog.show({controller:"DialogConfirmController",controllerAs:"ctrl",template:i(5),clickOutsideToClose:!0,locals:{title:"Are you sure you want to revoke API Key '"+t+"'?",confirmButton:"Revoke"}}).then((function(i){i&&n.ApplicationService.revokeApiKey(n.application.id,e.id,t).then((function(){n.NotificationService.show("API Key "+t+" has been revoked !"),n.listApiKeys(e)}))}))},e.prototype.onClipboardSuccess=function(e){this.NotificationService.show("API Key has been copied to clipboard"),e.clearSelection()},e.prototype.showExpirationModal=function(e,t){var n=this;this.$mdDialog.show({controller:"DialogApiKeyExpirationController",controllerAs:"dialogApiKeyExpirationController",template:i(250),clickOutsideToClose:!0}).then((function(i){t.expire_at=i,n.ApiService.updateApiKey(e,t).then((function(){n.NotificationService.show("An expiration date has been settled for API Key")}))}))},e.prototype.hasFilter=function(){return n.difference(a,this.query.status).length>0||n.difference(this.query.status,a).length>0||this.query.applications&&this.query.applications.length||this.query.plans&&this.query.plans.length||this.query.api_key},e}();t.default=r},function(e,t,i){"use strict";t.__esModule=!0;var n={bindings:{application:"<",subscribers:"<",subscriptions:"<"},controller:"ApplicationSubscriptionsController",template:i(760)};t.default=n},function(e,t){e.exports=' <div class="gv-forms gv-forms-fluid" layout=column> <application-header application=$ctrl.application></application-header> <div class=gv-form> <h2>Subscriptions</h2> <div class=gv-form-content layout=column> <form ng-submit=$ctrl.search() name=$ctrl.subscriptionsFiltersForm> <div layout-gt-sm=row> <md-input-container class=md-block flex-gt-sm flex=40> <label>Api</label> <md-select ng-model=$ctrl.query.apis placeholder=Apis multiple=multiple> <md-option ng-value=subscriber.id ng-repeat="subscriber in $ctrl.subscribers track by subscriber.id">{{ subscriber.name }} () </md-option> </md-select> </md-input-container> <md-input-container class=md-block flex-gt-sm flex=40> <label>Status</label> <md-select ng-model=$ctrl.query.status placeholder=Status multiple=multiple> <md-option ng-value=key ng-repeat="(key, value) in $ctrl.status">{{ value }}</md-option> </md-select> </md-input-container> <md-input-container class=md-block flex-gt-sm flex=20> <label>API key</label> <input ng-model=$ctrl.query.api_key> </md-input-container> <div> <md-button type=submit class="md-raised md-primary"> Search </md-button> <md-button type=button class=md-raised ng-click=$ctrl.clearFilters() ng-disabled=!$ctrl.hasFilter()> Clear </md-button> </div> </div> </form> <md-table-container ng-if="$ctrl.subscriptions.data.length > 0"> <table md-table class=gv-table-dense> <thead md-head> <tr md-row> <th md-column>API</th> <th md-column>Plan</th> <th md-column>Created at</th> <th md-column>Processed at</th> <th md-column>Start at</th> <th md-column>End at</th> <th md-column>Status</th> </tr> </thead> <tbody md-body> <tr md-row ng-repeat="subscription in $ctrl.subscriptions.data track by subscription.id"> <td md-cell> <a style=font-weight:700 ui-sref="management.applications.application.subscriptions.subscription({subscriptionId: subscription.id,\n            page: $ctrl.query.page,\n            size: $ctrl.query.size,\n            status: $ctrl.query.status,\n            api: $ctrl.query.apis,\n            api_key: $ctrl.query.api_key})"> {{$ctrl.subscriptions.metadata[subscription.api].name}} </a> </td> <td md-cell>{{$ctrl.subscriptions.metadata[subscription.plan].name}}</td> <td md-cell>{{subscription.created_at | date:\'yyyy-MM-dd HH:mm:ss\'}}</td> <td md-cell>{{subscription.processed_at | date:\'yyyy-MM-dd HH:mm:ss\'}}</td> <td md-cell>{{subscription.starting_at || \'-\' | date:\'yyyy-MM-dd HH:mm:ss\'}}</td> <td md-cell>{{subscription.ending_at || \'-\' | date:\'yyyy-MM-dd HH:mm:ss\'}}</td> <td md-cell style=text-transform:capitalize> <md-tooltip ng-if=subscription.reason md-direction=left>{{subscription.reason}}</md-tooltip> {{subscription.status}} </td> </tr> </tbody> </table> </md-table-container> <md-table-pagination ng-if="$ctrl.subscriptions.data.length > 0" md-limit=$ctrl.subscriptions.page.per_page md-limit-options="[10, 25, 50, 75, 100]" md-page=$ctrl.subscriptions.page.current md-total={{$ctrl.subscriptions.page.total_elements}} md-on-paginate=$ctrl.onPaginate md-page-select> </md-table-pagination> <gravitee-empty-state ng-if="$ctrl.subscriptions.data.length === 0" icon=vpn_key model=Subscription message="Application\'s subscriptions will appear here"></gravitee-empty-state> <md-button ng-if="$ctrl.subscriptions.data.length === 0" class=md-raised style="width:200px;margin:0 auto" ui-sref=management.applications.application.subscriptions.subscribe>Start playing with APIs</md-button> </div> </div> </div> '},function(e,t,i){"use strict";t.__esModule=!0;var n={bindings:{application:"<",subscription:"<"},template:i(762),controller:function(){function e(e,t,i,n){this.$mdDialog=e,this.NotificationService=t,this.ApplicationService=i,this.$state=n,this.backStateParams={api:n.params.api,status:n.params.status,page:n.params.page,size:n.params.size,api_key:n.params.api_key}}return e.$inject=["$mdDialog","NotificationService","ApplicationService","$state"],e.prototype.$onInit=function(){this.listApiKeys()},e.prototype.listApiKeys=function(){var e=this;"api_key"===this.subscription.plan.security&&this.ApplicationService.listApiKeys(this.application.id,this.subscription.id).then((function(t){e.keys=t.data}))},e.prototype.renewApiKey=function(){var e=this;this.$mdDialog.show({controller:"DialogConfirmController",controllerAs:"ctrl",template:i(5),clickOutsideToClose:!0,locals:{title:"Are you sure you want to renew your API Key?",msg:"Your previous API Key will be no longer valid in 2 hours!",confirmButton:"Renew"}}).then((function(t){t&&e.ApplicationService.renewApiKey(e.application.id,e.subscription.id).then((function(){e.NotificationService.show("A new API Key has been generated"),e.listApiKeys()}))}))},e.prototype.revokeApiKey=function(e){var t=this;this.$mdDialog.show({controller:"DialogConfirmController",controllerAs:"ctrl",template:i(5),clickOutsideToClose:!0,locals:{title:"Are you sure you want to revoke API Key '"+e+"' ?",confirmButton:"Revoke"}}).then((function(i){i&&t.ApplicationService.revokeApiKey(t.application.id,t.subscription.id,e).then((function(){t.NotificationService.show("API Key "+e+" has been revoked!"),t.listApiKeys()}))}))},e.prototype.onCopyApiKeySuccess=function(e){this.NotificationService.show("API Key has been copied to clipboard"),e.clearSelection()},e.prototype.close=function(){var e=this,t="The application will not be able to consume this API anymore.";"api_key"===this.subscription.plan.security&&(t+="<br/>All Api-keys associated to this subscription will be closed and could not be used."),this.$mdDialog.show({controller:"DialogConfirmController",controllerAs:"ctrl",template:i(5),clickOutsideToClose:!0,locals:{title:"Are you sure you want to close this subscription?",msg:t,confirmButton:"Close"}}).then((function(t){t&&e.ApplicationService.closeSubscription(e.application.id,e.subscription.id).then((function(t){e.NotificationService.show("The subscription has been closed"),e.subscription=t.data,e.listApiKeys()}))}))},e}()};t.default=n},function(e,t){e.exports=" <div class=gv-forms layout=column> <application-header application=$ctrl.application></application-header> <div class=gv-forms-header> <a ui-sref=management.applications.application.subscriptions.list($ctrl.backStateParams)>Back to subscriptions</a> </div> <div class=gv-form> <h2>Subscription</h2> <div class=gv-form-content layout=column> <md-table-container> <table md-table> <tbody md-body> <tr md-row style=height:30px> <td md-cell><span style=font-weight:700>ID</span></td> <td md-cell>{{$ctrl.subscription.id}}</td> <td md-cell><span style=font-weight:700>Created at</span></td> <td md-cell>{{$ctrl.subscription.created_at | date:'MMM d, y h:mm:ss.sss a'}}</td> </tr> <tr md-row style=height:30px> <td md-cell><span style=font-weight:700>API</span></td> <td md-cell><span style=font-weight:700>{{$ctrl.subscription.api.name}}</span></td> <td md-cell><span style=font-weight:700>Processed at</span></td> <td md-cell>{{$ctrl.subscription.processed_at || '-' | date:'MMM d, y h:mm:ss.sss a'}}</td> </tr> <tr md-row style=height:30px ng-if=\"'rejected' !== $ctrl.subscription.status\"> <td md-cell><span style=font-weight:700>Plan</span></td> <td md-cell><span style=font-weight:700>{{$ctrl.subscription.plan.name}}</span> ({{$ctrl.subscription.plan.security}})</td> <td md-cell><span style=font-weight:700>Starting at</span></td> <td md-cell>{{$ctrl.subscription.starting_at || '-' | date:'MMM d, y h:mm:ss.sss a'}}</td> </tr> <tr md-row style=height:30px ng-if=\"'rejected' !== $ctrl.subscription.status\"> <td md-cell><span style=font-weight:700>Status</span></td> <td md-cell>{{$ctrl.subscription.status|uppercase}}</td> <td md-cell><span style=font-weight:700>Ending at</span></td> <td md-cell>{{$ctrl.subscription.ending_at || '-' | date:'MMM d, y h:mm:ss.sss a'}}</td> </tr> <tr md-row style=height:30px ng-if=\"'rejected' === $ctrl.subscription.status\"> <td md-cell><span style=font-weight:700>Status</span></td> <td md-cell>{{$ctrl.subscription.status|uppercase}}</td> <td md-cell><span style=font-weight:700>Closed at</span></td> <td md-cell>{{$ctrl.subscription.closed_at | date:'MMM d, y h:mm:ss.sss a'}}</td> </tr> <tr md-row style=height:30px ng-if=$ctrl.subscription.request> <td md-cell><span style=font-weight:700>Message from subscriber</span></td> <td md-cell colspan=3>{{$ctrl.subscription.request}}</td> </tr> <tr md-row style=height:30px ng-if=$ctrl.subscription.reason> <td md-cell><span style=font-weight:700>Message to subscriber</span></td> <td md-cell colspan=3>{{$ctrl.subscription.reason}}</td> </tr> <tr md-row style=height:30px ng-if=\"'rejected' !== $ctrl.subscription.status && $ctrl.subscription.closed_at\"> <td md-cell><span style=font-weight:700>Closed at</span></td> <td md-cell colspan=3>{{$ctrl.subscription.closed_at | date:'MMM d, y h:mm:ss.sss a'}}</td> </tr> <tr md-row style=height:30px ng-if=\"'rejected' !== $ctrl.subscription.status && $ctrl.subscription.paused_at\"> <td md-cell><span style=font-weight:700>Paused at</span></td> <td md-cell colspan=3>{{$ctrl.subscription.paused_at | date:'MMM d, y h:mm:ss.sss a'}}</td> </tr> <tr md-row style=height:30px> <td md-cell><span style=font-weight:700>Subscribed by</span></td> <td md-cell colspan=3>{{$ctrl.subscription.subscribed_by.displayName}}</td> </tr> </tbody> </table> </md-table-container> <div class=\"md-actions gravitee-api-save-button\" layout=row ng-if=\"$ctrl.subscription.status === 'accepted' || $ctrl.subscription.status === 'pending' || $ctrl.subscription.status === 'paused'\"> <md-button class=\"md-raised md-warn\" ng-click=$ctrl.close() permission permission-only=\"'application-subscription-d'\"> <ng-md-icon icon=not_interested style=fill:#fff></ng-md-icon> Close </md-button> </div> </div> </div> <div class=gv-form ng-if=\"$ctrl.subscription.status !== 'pending' && $ctrl.subscription.status !== 'rejected' && $ctrl.subscription.plan.security === 'api_key'\"> <h2>Api Keys</h2> <div class=gv-form-content layout=column> <md-table-container> <table md-table> <thead md-head> <tr md-row> <th md-column>Key</th> <th md-column>Created at</th> <th md-column>Revoked / Expire at</th> <th md-column></th> </tr> </thead> <tbody md-body> <tr md-row ng-repeat=\"key in $ctrl.keys track by key.key\"> <td md-cell style=line-height:30px> <ng-md-icon icon=\"{{key.revoked?'clear':'done'}}\" ng-style=\"{'fill': key.revoked ? '#BE2628':'#107F20'}\"></ng-md-icon> <code>{{key.key}}</code> <span ng-if=\"!key.revoked && $ctrl.subscription.status === 'accepted'\"> <md-tooltip md-direction=right>Copy to clipboard</md-tooltip> <ng-md-icon icon=content_copy ngclipboard data-clipboard-text={{key.key}} ngclipboard-success=$ctrl.onCopyApiKeySuccess(e); role=button></ng-md-icon> </span> </td> <td md-cell>{{key.created_at | date:'yyyy-MM-dd HH:mm:ss'}}</td> <td md-cell>{{key.revoked_at || key.expire_at | date:'yyyy-MM-dd HH:mm:ss'}}</td> <td md-cell> <span ng-if=\"!key.revoked && $ctrl.subscription.status === 'accepted'\"> <md-tooltip md-direction=left>Revoke</md-tooltip> <ng-md-icon permission permission-only=\"'api-subscription-u'\" style=top:0 icon=not_interested ng-click=$ctrl.revokeApiKey(key.key)></ng-md-icon> </span> </td> </tr> </tbody> </table> </md-table-container> <div class=\"md-actions gravitee-api-save-button\" layout=row permission permission-only=\"'api-subscription-u'\" ng-if=\"$ctrl.subscription.status === 'accepted'\"> <md-button class=\"md-raised md-primary\" ng-click=$ctrl.renewApiKey()> <ng-md-icon icon=autorenew style=fill:#fff></ng-md-icon> Renew API Key </md-button> </div> </div> </div> </div> "},function(e,t,i){"use strict";t.__esModule=!0;var n=i(3),a=function(){function e(e,t){this.ApplicationService=e,this.$state=t}return e.$inject=["ApplicationService","$state"],e.prototype.$onInit=function(){var e=this;this.dashboards=n.filter(this.dashboards,"enabled");var t=this.$state.params.dashboard;t?(this.dashboard=n.find(this.dashboards,{id:t}),this.dashboard||(delete this.$state.params.dashboard,this.$state.go(this.$state.current))):this.dashboard=this.dashboards[0],n.forEach(this.dashboards,(function(t){t.definition&&(t.definition=JSON.parse(t.definition)),n.forEach(t.definition,(function(t){n.merge(t,{root:e.application.id,chart:{service:{caller:e.ApplicationService,function:e.ApplicationService.analytics}}})}))}))},e.prototype.onDashboardChanged=function(){this.$state.transitionTo(this.$state.current,n.merge(this.$state.params,{dashboard:this.dashboard.id}),{reload:!0})},e.prototype.viewLogs=function(){this.$state.transitionTo("management.applications.application.logs",this.$state.params)},e}();t.default=a},function(e,t,i){"use strict";t.__esModule=!0;var n={bindings:{application:"<",dashboards:"<"},controller:"ApplicationAnalyticsController",template:i(765)};t.default=n},function(e,t){e.exports=' <div class="gv-forms gv-forms-fluid" layout=column> <application-header application=$ctrl.application></application-header> <div layout=row> <h1 flex>Overview</h1> <div layout=row ng-if=$ctrl.dashboards.length> <label style=padding:27px>Select a dashboard</label> <md-input-container> <md-select ng-model=$ctrl.dashboard ng-change=$ctrl.onDashboardChanged() aria-label="Dashboard selection"> <md-option ng-repeat="dashboard in $ctrl.dashboards" ng-value=dashboard> {{dashboard.name}} </md-option> </md-select> </md-input-container> </div> </div> <div class=gv-form> <gv-dashboard model=$ctrl.dashboard on-view-log-click=$ctrl.viewLogs() access-logs=true></gv-dashboard> </div> </div> '},function(e,t,i){"use strict";t.__esModule=!0;var n=i(251),a=i(3),o=function(){function e(e,t,i){this.ApplicationService=e,this.$state=t,this.$scope=i,this.ApplicationService=e,this.onPaginate=this.onPaginate.bind(this),this.query=new n.LogsQuery,this.query.page=this.$state.params.page||1,this.query.size=this.$state.params.size||15}return e.$inject=["ApplicationService","$state","$scope"],e.prototype.$onInit=function(){var e=this;this.query.from=this.$state.params.from,this.query.to=this.$state.params.to,this.query.query=this.$state.params.q,this.query.field="-@timestamp",this.$scope.$watch("$ctrl.query.field",(function(t){t&&e.init&&e.refresh()})),this.metadata={apis:this.apis.data}},e.prototype.timeframeChange=function(e){this.init=!0,this.query.from=e.from,this.query.to=e.to,this.query.page=this.$state.params.page||1,this.refresh()},e.prototype.onPaginate=function(e){this.query.page=e,this.refresh()},e.prototype.refresh=function(){var e=this;this.$state.transitionTo(this.$state.current,{applicationId:this.application.id,page:this.query.page,size:this.query.size,from:this.query.from,to:this.query.to,q:this.query.query},{notify:!1}),this.ApplicationService.findLogs(this.application.id,this.query).then((function(t){e.logs=t.data}))},e.prototype.filtersChange=function(e){this.query.page=this.$state.params.page||1,this.query.query=e,this.refresh()},e.prototype.exportAsCSV=function(){var e=this;this.ApplicationService.exportLogsAsCSV(this.application.id,this.query).then((function(t){var i=document.createElement("a");i.href="data:attachment/csv,"+t.data,i.target="_self";var n="logs-"+e.application.name+"-"+a.now();n=(n=n.replace(/[\s]/gi,"-")).replace(/[^\w]/gi,"-"),i.download=n+".csv",i.click(),document.body.removeChild(i)}))},e}();t.default=o},function(e,t,i){"use strict";t.__esModule=!0;var n={bindings:{application:"<",apis:"<"},controller:"ApplicationLogsController",template:i(768)};t.default=n},function(e,t){e.exports=' <div class="gv-forms gv-forms-fluid" layout=column> <application-header application=$ctrl.application></application-header> <div class=gv-form> <h2>Logs</h2> <div class=gv-form-content layout=column> <div layout=row> <gv-logs-timeframe on-timeframe-change=$ctrl.timeframeChange(timeframe) flex></gv-logs-timeframe> <div style=margin:auto> <md-button type=button class=md-raised ng-click=$ctrl.exportAsCSV() ng-disabled="!$ctrl.logs.logs || $ctrl.logs.logs.length === 0"> Export as CSV </md-button> </div> </div> <gv-logs-filters context=application on-filters-change=$ctrl.filtersChange(filters) metadata=$ctrl.metadata></gv-logs-filters> <md-table-container layout-padding> <table md-table class="gravitee-analytics-top-hits-table gv-table-dense"> <thead md-head md-order=$ctrl.query.field> <tr md-row> <th md-column width=1% md-order-by=@timestamp nowrap=nowrap>Date</th> <th md-column width=1% md-order-by=status nowrap=nowrap>Status</th> <th md-column width=1% nowrap=nowrap>API</th> <th ng-if=$ctrl.Constants.logging.user.displayed md-column width=1% md-order-by=user nowrap=nowrap>User</th> <th md-column width=1% nowrap=nowrap>Plan</th> <th md-column width=1% md-order-by=method nowrap=nowrap>Method</th> <th md-column md-order-by=path>Path</th> <th md-column width=1% md-numeric nowrap=nowrap>Response time</th> </tr> </thead> <tbody md-body> <tr ng-if="$ctrl.logs.logs.length > 0" md-row ng-repeat="log in $ctrl.logs.logs | limitTo: $ctrl.query.size" md-auto-select md-select=log md-select-id=key ng-class="{\'log-error\': log.status >= 400}"> <td md-cell nowrap=nowrap> <a ui-sref="management.applications.application.log({\n          logId: log.id,\n          timestamp: log.timestamp,\n          from: $ctrl.query.from,\n          to: $ctrl.query.to,\n          q: $ctrl.query.query,\n          page: $ctrl.query.page,\n          size: $ctrl.query.size\n          })"> {{log.timestamp | date:\'yyyy-MM-dd HH:mm:ss.sss\'}} </a> </td> <td md-cell nowrap=nowrap><span class="gv-statuscode-{{log.status / 100 | number:0}}xx">{{log.status}}</span></td> <td md-cell nowrap=nowrap>{{$ctrl.logs.metadata[log.api].name}}</td> <td ng-if=$ctrl.Constants.logging.user.displayed md-cell nowrap=nowrap>{{log.user}}</td> <td md-cell nowrap=nowrap>{{$ctrl.logs.metadata[log.plan].name}}</td> <td md-cell nowrap=nowrap style=text-align:center> <span class="badge gravitee-policy-method-badge-info ng-binding ng-scope gravitee-policy-method-badge-{{log.method | uppercase}}-selected"> {{log.method | uppercase}} </span> </td> <td md-cell>{{log.path}}</td> <td md-cell nowrap=nowrap>{{log.responseTime}} ms</td> </tr> <tr ng-if="$ctrl.logs.total === 0"> <td md-cell colspan=8>No log</td> </tr> </tbody> </table> </md-table-container> <md-table-pagination md-limit=$ctrl.query.size md-limit-options="[5, 10, 15, 20, 30, 50, 100]" md-page=$ctrl.query.page md-total={{$ctrl.logs.total}} md-on-paginate=$ctrl.onPaginate> </md-table-pagination> </div> </div> </div> '},function(e,t,i){"use strict";t.__esModule=!0;var n={bindings:{log:"<"},controller:["$state","NotificationService","Constants",function(e,t,i){this.Constants=i,this.NotificationService=t,this.backStateParams={from:e.params.from,to:e.params.to,q:e.params.q,page:e.params.page,size:e.params.size},this.getMimeType=function(e){return void 0!==e.headers["Content-Type"]?e.headers["Content-Type"][0].split(";",1)[0]:null},this.onCopyBodySuccess=function(e){this.NotificationService.show("Body has been copied to clipboard"),e.clearSelection()}}],template:i(770)};t.default=n},function(e,t){e.exports=' <div class=md-actions layout=row> <md-button ui-sref=management.applications.application.logs($ctrl.backStateParams)> <ng-md-icon icon=reply></ng-md-icon> <span style=color:rgba(0,0,0,.54)>Back to logs</span> </md-button> </div> <div class=log-table layout=row flex layout-padding layout-align="space-around center"> <div layout=column flex=33> <span class=log-header style=text-align:center>Request</span> <md-table-container class=gv-log-request-header> <table md-table class=gv-table-dense> <tbody md-body> <tr md-row style=height:30px> <td md-cell><span style=font-weight:700>Date</span></td> <td md-cell>{{$ctrl.log.timestamp | date:\'MMM d, y h:mm:ss.sss a\'}}</td> </tr> <tr md-row style=height:30px> <td md-cell><span style=font-weight:700>Request ID</span></td> <td md-cell>{{$ctrl.log.id}}</td> </tr> <tr md-row style=height:30px> <td md-cell><span style=font-weight:700>Transaction ID</span></td> <td md-cell>{{$ctrl.log.transactionId}}</td> </tr> </tbody> </table> </md-table-container> </div> <div layout=column flex=33> <span class=log-header style=text-align:center>Context</span> <md-table-container ng-class="{\'gv-log-response-header-{{$ctrl.log.status / 100 | number:0}}\': true}"> <table md-table class=gv-table-dense> <tbody md-body> <tr md-row style=height:30px ng-if=$ctrl.log.apiKey> <td md-cell><span style=font-weight:700>API Key</span></td> <td md-cell>{{$ctrl.log.apiKey}}</td> </tr> <tr md-row style=height:30px ng-if=$ctrl.log.api> <td md-cell><span style=font-weight:700>API</span></td> <td md-cell>{{$ctrl.log.metadata[$ctrl.log.api].name}}</td> </tr> <tr md-row style=height:30px ng-if=$ctrl.log.plan> <td md-cell><span style=font-weight:700>Plan</span></td> <td md-cell>{{$ctrl.log.metadata[$ctrl.log.plan].name}}</td> </tr> <tr md-row style=height:30px ng-if="$ctrl.log.user && $ctrl.Constants.logging.user.displayed"> <td md-cell><span style=font-weight:700>User</span></td> <td md-cell>{{$ctrl.log.user}}</td> </tr> </tbody> </table> </md-table-container> </div> </div> <hr> <div class=log-table layout=row flex layout-padding layout-align=center> <div layout=column layout-padding style="background-color:#e1f5fe;border:1px solid #b3e5fc" flex=50> <div flex=5 layout=row style=background-color:#b3e5fc layout-align="center center"> <span class=log-header style=text-align:center>REQUEST</span> </div> <md-table-container> <table md-table class=gv-table-dense> <tbody md-body> <tr md-row style=height:30px> <td md-cell><span style=font-weight:700>Method</span></td> <td md-cell> <span class="badge gravitee-policy-method-badge-info ng-binding ng-scope gravitee-policy-method-badge-{{$ctrl.log.method | uppercase}}-selected"> {{$ctrl.log.method | uppercase}} </span> </td> </tr> <tr md-row style=height:30px> <td md-cell><span style=font-weight:700>URI</span></td> <td md-cell>{{$ctrl.log.uri}}</td> </tr> <tr md-row style=height:30px> <td md-cell><span style=font-weight:700>Content-length</span></td> <td md-cell>{{$ctrl.log.requestContentLength | number}}</td> </tr> </tbody> </table> </md-table-container> <md-table-container> <table md-table class=gv-table-dense> <tbody md-body> <tr md-row ng-repeat="(key, value) in $ctrl.log.request.headers" style=height:30px> <td md-cell><span style=font-weight:700>{{key}}</span></td> <td md-cell>{{value[0]}}</td> </tr> </tbody> </table> </md-table-container> <br> <div ng-if=$ctrl.log.request.body class=log-body> <div ui-codemirror ui-codemirror-opts="{lineNumbers: true, lineWrapping: true, readOnly: true, mode: $ctrl.getMimeType($ctrl.log.request)}" ng-model=$ctrl.log.request.body> </div> <button class=copy> <md-tooltip md-direction=top>Copy to clipboard</md-tooltip> <ng-md-icon icon=content_copy ngclipboard data-clipboard-text={{$ctrl.log.request.body}} ngclipboard-success=$ctrl.onCopyBodySuccess(e); role=button></ng-md-icon> </button> </div> </div> <div flex=5 layout=column layout-align="center center"></div> <div layout=column layout-padding ng-class="{\'gv-log-response-panel-{{$ctrl.log.status / 100 | number:0}}\': true}" style=margin-top:3px flex=50> <div flex=5 layout=row layout-align="center center"> <span class=log-header style=text-align:center>RESPONSE</span> </div> <md-table-container> <table md-table class=gv-table-dense> <tbody md-body> <tr md-row style=height:30px> <td md-cell><span style=font-weight:700>Status</span></td> <td md-cell><span class="gv-statuscode-{{$ctrl.log.status / 100 | number:0}}xx">{{$ctrl.log.status | number}}</span></td> </tr> <tr md-row style=height:30px> <td md-cell><span style=font-weight:700>Content-length</span></td> <td md-cell>{{$ctrl.log.responseContentLength | number}}</td> </tr> <tr md-row style=height:30px> <td md-cell><span style=font-weight:700>Response time</span></td> <td md-cell>{{$ctrl.log.responseTime | number}} ms</td> </tr> </tbody> </table> </md-table-container> <md-table-container> <table md-table class=gv-table-dense> <tbody md-body> <tr md-row ng-repeat="(key, value) in $ctrl.log.response.headers" style=height:30px> <td md-cell><span style=font-weight:700>{{key}}</span></td> <td md-cell>{{value[0]}}</td> </tr> </tbody> </table> </md-table-container> <div ng-if=$ctrl.log.response.body class=log-body> <div ui-codemirror ui-codemirror-opts="{lineNumbers: true, lineWrapping: true, readOnly: true, mode: $ctrl.getMimeType($ctrl.log.response)}" ng-model=$ctrl.log.response.body> </div> <button class=copy> <md-tooltip md-direction=top>Copy to clipboard</md-tooltip> <ng-md-icon icon=content_copy ngclipboard data-clipboard-text={{$ctrl.log.response.body}} ngclipboard-success=$ctrl.onCopyBodySuccess(e); role=button></ng-md-icon> </button> </div> </div> </div> '},function(e,t,i){"use strict";a.$inject=["$scope","$mdDialog","application","members","ApplicationService","UserService","NotificationService","RoleService"],t.__esModule=!0;var n=i(3);function a(e,t,i,a,o,r,s,l){l.list("APPLICATION").then((function(t){e.roles=t})),e.application=i,e.members=a,e.usersSelected=[],e.searchText="",e.hide=function(){t.cancel()},e.searchUser=function(t){if(t)return r.search(t).then((function(t){return n.filter(t.data,(function(t){return-1===n.findIndex(e.members,{id:t.id})}))}))},e.getUserAvatar=function(e){return e?r.getUserAvatar(e):"assets/default_photo.png"},e.selectUser=function(t){t&&t.reference&&(n.find(e.usersSelected,{reference:t.reference})||e.usersSelected.push(t),e.searchText="")},e.addMembers=function(){for(var i=function(){var t=e.usersSelected[n],i={id:t.id,reference:t.reference,role:e.role.name};o.addOrUpdateMember(e.application.id,i).then((function(){s.show("User "+t.displayName+" has been added as a member.")})).catch((function(t){e.error=t}))},n=0;n<e.usersSelected.length;n++)i();t.hide(e.application)}}t.default=a},function(e,t,i){"use strict";function n(e,t,i){this.newRole=i,e.cancel=function(){t.cancel()},e.transferOwnership=function(){t.hide(!0)}}n.$inject=["$scope","$mdDialog","newRole"],t.__esModule=!0,t.default=n},function(e,t,i){"use strict";t.__esModule=!0;var n=function(){function e(e,t){this.$http=e,this.instancesURL=t.baseURL+"instances/"}return e.$inject=["$http","Constants"],e.prototype.search=function(e,t,i,n,a){return void 0===e&&(e=!1),void 0===t&&(t=0),void 0===i&&(i=0),void 0===n&&(n=0),void 0===a&&(a=100),this.$http.get(this.instancesURL+"?includeStopped="+e+"&from="+t+"&to="+i+"&page="+n+"&size="+a)},e.prototype.get=function(e){return this.$http.get(this.instancesURL+e)},e.prototype.getMonitoringData=function(e,t){return this.$http.get(this.instancesURL+e+"/monitoring/"+t)},e}();t.default=n},function(e,t,i){"use strict";t.__esModule=!0;var n=function(){function e(e,t,i){this.$scope=e,this.InstancesService=t,this.$state=i}return e.$inject=["$scope","InstancesService","$state"],e.prototype.$onInit=function(){var e=this;this.query={limit:10,page:1},this.searchInstances=this.searchInstances.bind(this),this.searchGatewayInstances="",this._displayEmptyMode=0===this.instances.content.length,this.$scope.showHistory=!1,this.$scope.switchDisplayInstances=function(){if(e.instances.content=[],e.$scope.showHistory=!e.$scope.showHistory,e.$scope.showHistory){var t=Date.now();e.$state.params.from=t-864e5,e.$state.params.to=t+6e4}else e.searchInstances()}},e.prototype.getOSIcon=function(e){if(e){var t=e.toLowerCase();if(t.indexOf("mac")>=0)return"apple";if(t.indexOf("nix")>=0||t.indexOf("nux")>=0||t.indexOf("aix")>=0)return"desktop_windows";if(t.indexOf("win")>=0)return"windows"}return"desktop_windows"},e.prototype.onTimeframeChange=function(e){this.lastFrom=e.from,this.lastTo=e.to,this.searchInstances()},e.prototype.displayEmptyMode=function(){return 0===this.instances.length},e.prototype.searchInstances=function(){var e=this;this.InstancesService.search(this.$scope.showHistory,this.$scope.showHistory?this.lastFrom:0,this.$scope.showHistory?this.lastTo:0,this.$scope.showHistory?this.query.page-1:0,this.$scope.showHistory?this.query.limit:100).then((function(t){e.instances=t.data,e._displayEmptyMode=0===e.instances.content.length}))},e}();t.default=n},function(e,t,i){"use strict";t.__esModule=!0;var n={bindings:{instance:"<"},template:i(776)};t.default=n},function(e,t){e.exports=' <div layout=column layout-align=end-start layout-padding class=gravitee-detail-header flex> <div class="gravitee-api-header-content inset"> <div layout=row layout-align="start center"> <div flex=70> <h3>{{$ctrl.instance.hostname}} <small>( {{$ctrl.instance.ip}}:{{$ctrl.instance.port}} )</small> </h3> <md-content flex class=gravitee-api-header-description> <div class=gravitee-api-header-read-more ng-bind=$ctrl.instance.version></div> </md-content> <div ng-if="$ctrl.instance.tags && $ctrl.instance.tags.length > 0">Tags: {{$ctrl.instance.tags}}</div> <div ng-if="!$ctrl.instance.tags || $ctrl.instance.tags.length === 0">No tag configured</div> </div> </div> </div> </div> '},function(e,t,i){"use strict";t.__esModule=!0;var n=i(3),a=function(){function e(){}return e.prototype.$onInit=function(){this.systemPropertiesProvider=this.sort(this.instance.systemProperties),this.instance.systemProperties=this.systemPropertiesProvider},e.prototype.sort=function(e){var t={};return n.forEach(n.sortBy(n.keys(e)),(function(i){t[i]=e[i]})),t},e.prototype.filter=function(){var e=this;this.instance.systemProperties={};var t=this.filterSystemProperty.toLowerCase();n.forEach(this.systemPropertiesProvider,(function(i,a){(n.includes(a.toLowerCase(),t)||n.includes(i.toLowerCase(),t))&&(e.instance.systemProperties[a]=i)}))},e.prototype.hasSystemProperties=function(){return Object.keys(this.systemPropertiesProvider).length>0},e}();t.default=a},function(e,t,i){"use strict";t.__esModule=!0;var n={bindings:{instance:"<"},controller:"InstanceEnvironmentController",template:i(779)};t.default=n},function(e,t){e.exports=" <div class=gravitee-instances-container> <div class=gravitee-instances-content> <div class=gravitee-instances-table-title><ng-md-icon icon=info_outline></ng-md-icon> Informations</div> <md-table-container> <table md-table> <tbody md-body> <tr md-row> <td md-cell><ng-md-icon icon=computer></ng-md-icon></td> <td md-cell>Hostname</td> <td md-cell>{{$ctrl.instance.hostname}}</td> </tr> <tr md-row> <td md-cell><ng-md-icon icon=network_wifi></ng-md-icon></td> <td md-cell>IP</td> <td md-cell>{{$ctrl.instance.ip}}</td> </tr> <tr md-row> <td md-cell><ng-md-icon icon=network_wifi></ng-md-icon></td> <td md-cell>Port</td> <td md-cell>{{$ctrl.instance.port}}</td> </tr> <tr md-row> <td md-cell><ng-md-icon icon=traffic></ng-md-icon></td> <td md-cell>State</td> <td md-cell ng-class=\"{'gravitee-instances-started':$ctrl.instance.state === 'started',\n           'gravitee-instances-stopped':$ctrl.instance.state === 'stopped'}\">{{$ctrl.instance.state}}</td> </tr> <tr md-row> <td md-cell><ng-md-icon icon=flag></ng-md-icon></td> <td md-cell>Version</td> <td md-cell>{{$ctrl.instance.version}}</td> </tr> <tr md-row ng-if=$ctrl.instance.tags> <td md-cell><ng-md-icon icon=label></ng-md-icon></td> <td md-cell>Sharding tags</td> <td md-cell>{{$ctrl.instance.tags}}</td> </tr> <tr md-row ng-if=$ctrl.instance.tenant> <td md-cell><ng-md-icon icon=shuffle></ng-md-icon></td> <td md-cell>Tenant</td> <td md-cell>{{$ctrl.instance.tenant}}</td> </tr> <tr md-row> <td md-cell><ng-md-icon icon=timer></ng-md-icon></td> <td md-cell>Started at</td> <td md-cell>{{$ctrl.instance.started_at | date:'medium'}}</td> </tr> <tr md-row> <td md-cell><ng-md-icon icon=favorite></ng-md-icon></td> <td md-cell>Last heartbeat at</td> <td md-cell>{{$ctrl.instance.last_heartbeat_at | date:'medium'}}</td> </tr> <tr md-row ng-if=$ctrl.instance.stopped_at> <td md-cell><ng-md-icon icon=power_settings_new></ng-md-icon></td> <td md-cell>Stopped at</td> <td md-cell>{{$ctrl.instance.stopped_at | date:'medium'}}</td> </tr> </tbody> </table> </md-table-container> </div> <div class=gravitee-instances-content> <div class=gravitee-instances-table-title><ng-md-icon icon=extension></ng-md-icon> Plugins</div> <md-table-container> <table md-table> <thead md-head md-order=order> <tr md-row> <th md-column></th> <th md-column md-desc md-order-by=id>ID</th> <th md-column md-order-by=name>Name</th> <th md-column md-order-by=version>Version</th> </tr> </thead> <tbody md-body> <tr md-row ng-repeat=\"plugin in $ctrl.instance.plugins | orderBy: order\" title={{plugin.name}}> <td md-cell ng-switch on=plugin.type> <ng-md-icon ng-switch-when=policy icon=shuffle></ng-md-icon> <ng-md-icon ng-switch-when=service icon=layers></ng-md-icon> <ng-md-icon ng-switch-when=repository icon=folder_open></ng-md-icon> <ng-md-icon ng-switch-when=reporter icon=dashboard></ng-md-icon> <ng-md-icon ng-switch-when=resource icon=style></ng-md-icon> </td> <td md-cell>{{plugin.id}}</td> <td md-cell>{{plugin.name}}</td> <td md-cell>{{plugin.version}}</td> </tr> </tbody> </table> </md-table-container> </div> <div class=gravitee-instances-content ng-if=$ctrl.hasSystemProperties()> <div class=gravitee-instances-table-title layout=row> <div flex=50> <ng-md-icon icon=assignment></ng-md-icon> System properties </div> <div flex=50 layout=row> <input class=\"form-control gravitee-instances-table-search\" type=text ng-model=$ctrl.filterSystemProperty ng-change=$ctrl.filter() placeholder=\"Filter by name/value...\"/> <ng-md-icon icon=search></ng-md-icon> </div> </div> <md-table-container> <table md-table> <thead md-head> <tr md-row> <th md-column>Name</th> <th md-column>Value</th> </tr> </thead> <tbody md-body> <tr md-row ng-repeat=\"(systemPropertyKey, systemPropertyValue) in $ctrl.instance.systemProperties\"> <td md-cell>{{systemPropertyKey}}</td> <td md-cell>{{systemPropertyValue}}</td> </tr> </tbody> </table> </md-table-container> </div> </div> "},function(e,t,i){"use strict";t.__esModule=!0;var n={bindings:{monitoringData:"<",instance:"<"},controller:"InstanceMonitoringController",template:i(781)};t.default=n},function(e,t){e.exports=' <div ng-if=!$ctrl.instanceStarted style=text-align:center;color:#424e5a;fill:#424e5a> <h1><ng-md-icon size=48 icon=error></ng-md-icon> There is no data for stopped gateway instance</h1> </div> <div layout=column ng-if=$ctrl.instanceStarted> <div layout=row> <md-card flex=25> <md-card-content> <div class=gravitee-pie-chart-container> <gravitee-chart height=160 width=160 options=$ctrl.monitoringCpuChartData type=solidgauge></gravitee-chart> </div> </md-card-content> </md-card> <md-card flex=25> <md-card-content> <div class=gravitee-pie-chart-container> <gravitee-chart height=160 width=160 options=$ctrl.monitoringHeapChartData type=solidgauge></gravitee-chart> </div> </md-card-content> </md-card> <md-card flex=25> <md-card-content> <div class=gravitee-pie-chart-container> <div class=gravitee-pie-chart-title>GC collections</div> <div class=gravitee-monitoring-indicator-value ng-bind=$ctrl.monitoringData.gc.old_collection_count></div> </div> </md-card-content> </md-card> <md-card flex=25> <md-card-content> <div class=gravitee-pie-chart-container> <div class=gravitee-pie-chart-title>File Descriptors</div> <div class=gravitee-monitoring-indicator-value ng-bind=$ctrl.monitoringData.process.open_file_descriptors></div> </div> </md-card-content> </md-card> </div> <md-card> <md-card-content> <div layout=row> <ng-md-icon class=gravitee-monitoring-icon-title icon=memory></ng-md-icon> <h3>JVM</h3> </div> <div layout=row> <div flex=75> <div layout=row> <b flex=50>Date</b> <div flex=50 ng-bind="$ctrl.monitoringData.jvm.timestamp | date:\'medium\'"></div> </div> <div layout=row> <b flex=50>Uptime</b> <div flex=50 ng-bind=$ctrl.humanizeDuration($ctrl.monitoringData.jvm.uptime_in_millis)></div> </div> <div layout=row> <b flex=50>Heap used</b> <div flex=50 ng-bind=$ctrl.humanizeSize($ctrl.monitoringData.jvm.heap_used_in_bytes)></div> </div> <div layout=row> <b flex=50>Percent of heap used</b> <div flex=50 ng-bind="$ctrl.monitoringData.jvm.heap_used_percent + \'%\'"></div> </div> <div layout=row> <b flex=50>Heap committed</b> <div flex=50 ng-bind=$ctrl.humanizeSize($ctrl.monitoringData.jvm.heap_committed_in_bytes)></div> </div> <div layout=row> <b flex=50>Heap max</b> <div flex=50 ng-bind=$ctrl.humanizeSize($ctrl.monitoringData.jvm.heap_max_in_bytes)></div> </div> <div layout=row> <b flex=50>Non heap used</b> <div flex=50 ng-bind=$ctrl.humanizeSize($ctrl.monitoringData.jvm.non_heap_used_in_bytes)></div> </div> <div layout=row> <b flex=50>Non heap committed</b> <div flex=50 ng-bind=$ctrl.humanizeSize($ctrl.monitoringData.jvm.non_heap_committed_in_bytes)></div> </div> </div> </div> <br/> <div layout=row> <md-card layout=column flex=33> <md-card-content> <div layout=row> <b flex=50>Young pool used</b> <div flex=50 ng-bind=$ctrl.humanizeSize($ctrl.monitoringData.jvm.young_pool_used_in_bytes)></div> </div> <div layout=row> <b flex=50>Young pool max</b> <div flex=50 ng-bind=$ctrl.humanizeSize($ctrl.monitoringData.jvm.young_pool_max_in_bytes)></div> </div> <div layout=column layout-align="center center"> <b flex=50 ng-bind="$ctrl.ratio($ctrl.monitoringData.jvm.young_pool_used_in_bytes, $ctrl.monitoringData.jvm.young_pool_max_in_bytes) + \'%\'"></b> <md-progress-linear class=gravitee-monitoring-gauge md-mode=determinate value="{{$ctrl.ratio($ctrl.monitoringData.jvm.young_pool_used_in_bytes, $ctrl.monitoringData.jvm.young_pool_max_in_bytes)}}"></md-progress-linear> </div> <div layout=row> <b flex=50>Young pool peak used</b> <div flex=50 ng-bind=$ctrl.humanizeSize($ctrl.monitoringData.jvm.young_pool_peak_used_in_bytes)></div> </div> <div layout=row> <b flex=50>Young pool peak max</b> <div flex=50 ng-bind=$ctrl.humanizeSize($ctrl.monitoringData.jvm.young_pool_peak_max_in_bytes)></div> </div> <div layout=column layout-align="center center"> <b flex=50 ng-bind="$ctrl.ratio($ctrl.monitoringData.jvm.young_pool_peak_used_in_bytes, $ctrl.monitoringData.jvm.young_pool_peak_max_in_bytes) + \'%\'"></b> <md-progress-linear class=gravitee-monitoring-gauge md-mode=determinate value="{{$ctrl.ratio($ctrl.monitoringData.jvm.young_pool_peak_used_in_bytes, $ctrl.monitoringData.jvm.young_pool_peak_max_in_bytes)}}"></md-progress-linear> </div> </md-card-content> </md-card> <md-card layout=column flex=33> <md-card-content> <div layout=row> <b flex=50>Survivor pool used</b> <div flex=50 ng-bind=$ctrl.humanizeSize($ctrl.monitoringData.jvm.survivor_pool_used_in_bytes)></div> </div> <div layout=row> <b flex=50>Survivor pool max</b> <div flex=50 ng-bind=$ctrl.humanizeSize($ctrl.monitoringData.jvm.survivor_pool_max_in_bytes)></div> </div> <div layout=column layout-align="center center"> <b flex=50 ng-bind="$ctrl.ratio($ctrl.monitoringData.jvm.survivor_pool_used_in_bytes, $ctrl.monitoringData.jvm.survivor_pool_max_in_bytes) + \'%\'"></b> <md-progress-linear class=gravitee-monitoring-gauge md-mode=determinate value="{{$ctrl.ratio($ctrl.monitoringData.jvm.survivor_pool_used_in_bytes, $ctrl.monitoringData.jvm.survivor_pool_max_in_bytes)}}"></md-progress-linear> </div> <div layout=row> <b flex=50>Survivor pool peak used</b> <div flex=50 ng-bind=$ctrl.humanizeSize($ctrl.monitoringData.jvm.survivor_pool_peak_used_in_bytes)></div> </div> <div layout=row> <b flex=50>Survivor pool peak max</b> <div flex=50 ng-bind=$ctrl.humanizeSize($ctrl.monitoringData.jvm.survivor_pool_peak_max_in_bytes)></div> </div> <div layout=column layout-align="center center"> <b flex=50 ng-bind="$ctrl.ratio($ctrl.monitoringData.jvm.survivor_pool_peak_used_in_bytes, $ctrl.monitoringData.jvm.survivor_pool_peak_max_in_bytes) + \'%\'"></b> <md-progress-linear class=gravitee-monitoring-gauge md-mode=determinate value="{{$ctrl.ratio($ctrl.monitoringData.jvm.survivor_pool_peak_used_in_bytes, $ctrl.monitoringData.jvm.survivor_pool_peak_max_in_bytes)}}"></md-progress-linear> </div> </md-card-content> </md-card> <md-card layout=column flex=33> <md-card-content> <div layout=row> <b flex=50>Old pool used</b> <div flex=50 ng-bind=$ctrl.humanizeSize($ctrl.monitoringData.jvm.old_pool_used_in_bytes)></div> </div> <div layout=row> <b flex=50>Old pool max</b> <div flex=50 ng-bind=$ctrl.humanizeSize($ctrl.monitoringData.jvm.old_pool_max_in_bytes)></div> </div> <div layout=column layout-align="center center"> <b flex=50 ng-bind="$ctrl.ratio($ctrl.monitoringData.jvm.old_pool_used_in_bytes, $ctrl.monitoringData.jvm.old_pool_max_in_bytes) + \'%\'"></b> <md-progress-linear class=gravitee-monitoring-gauge md-mode=determinate value="{{$ctrl.ratio($ctrl.monitoringData.jvm.old_pool_used_in_bytes, $ctrl.monitoringData.jvm.old_pool_max_in_bytes)}}"></md-progress-linear> </div> <div layout=row> <b flex=50>Old pool peak used</b> <div flex=50 ng-bind=$ctrl.humanizeSize($ctrl.monitoringData.jvm.old_pool_peak_used_in_bytes)></div> </div> <div layout=row> <b flex=50>Old pool peak max</b> <div flex=50 ng-bind=$ctrl.humanizeSize($ctrl.monitoringData.jvm.old_pool_peak_max_in_bytes)></div> </div> <div layout=column layout-align="center center"> <b flex=50 ng-bind="$ctrl.ratio($ctrl.monitoringData.jvm.old_pool_peak_used_in_bytes, $ctrl.monitoringData.jvm.old_pool_peak_max_in_bytes) + \'%\'"></b> <md-progress-linear class=gravitee-monitoring-gauge md-mode=determinate value="{{$ctrl.ratio($ctrl.monitoringData.jvm.old_pool_peak_used_in_bytes, $ctrl.monitoringData.jvm.old_pool_peak_max_in_bytes)}}"></md-progress-linear> </div> </md-card-content> </md-card> </div> </md-card-content> </md-card> <div layout=row> <md-card flex=50> <md-card-content layout=column> <div layout=row> <ng-md-icon class=gravitee-monitoring-icon-title icon=memory></ng-md-icon> <h3>CPU</h3> </div> <div layout=row> <div flex=75> <div layout=row> <b flex=50>Percent of use</b> <div flex=50 ng-bind="$ctrl.monitoringData.cpu.percent_use + \'%\'"></div> </div> <b>Load average</b> <div layout=row ng-repeat="(loadAverageTime, loadAverageValue) in $ctrl.monitoringData.cpu.load_average"> <b style=padding-left:10px flex=50 ng-bind=loadAverageTime></b> <div flex=50 ng-bind=loadAverageValue></div> </div> </div> </div> </md-card-content> </md-card> <md-card flex=50> <md-card-content layout=column> <div layout=row> <ng-md-icon class=gravitee-monitoring-icon-title icon=memory></ng-md-icon> <h3>Process</h3> </div> <div layout=row> <b flex=33>Open file descriptors</b> <div flex=33 ng-bind=$ctrl.monitoringData.process.open_file_descriptors></div> </div> <div layout=row> <b flex=33>Max file descriptors</b> <div flex=33 ng-bind=$ctrl.monitoringData.process.max_file_descriptors></div> </div> </md-card-content> </md-card> </div> <div layout=row> <md-card flex=50> <md-card-content layout=column> <div layout=row> <ng-md-icon class=gravitee-monitoring-icon-title icon=memory></ng-md-icon> <h3>Thread</h3> </div> <div layout=row> <b flex=33>Count</b> <div flex=33 ng-bind=$ctrl.monitoringData.thread.count></div> </div> <div layout=row> <b flex=33>Peak count</b> <div flex=33 ng-bind=$ctrl.monitoringData.thread.peak_count></div> </div> </md-card-content> </md-card> <md-card flex=50> <md-card-content layout=column> <div layout=row> <ng-md-icon class=gravitee-monitoring-icon-title icon=memory></ng-md-icon> <h3>Garbage collector</h3> </div> <div layout=row> <b flex=33>Young collection count</b> <div flex=33 ng-bind=$ctrl.monitoringData.gc.young_collection_count></div> </div> <div layout=row> <b flex=33>Young collection time</b> <div flex=33 ng-bind="$ctrl.monitoringData.gc.young_collection_time_in_millis + \' ms\'"></div> </div> <div layout=row> <b flex=33>Old collection count</b> <div flex=33 ng-bind=$ctrl.monitoringData.gc.old_collection_count></div> </div> <div layout=row> <b flex=33>Old collection time</b> <div flex=33 ng-bind="$ctrl.monitoringData.gc.old_collection_time_in_millis + \' ms\'"></div> </div> </md-card-content> </md-card> </div> </div> '},function(e,t,i){"use strict";t.__esModule=!0;var n=i(3),a=i(1),o=function(){function e(e,t){this.$stateParams=e,this.InstancesService=t}return e.$inject=["$stateParams","InstancesService"],e.prototype.$onInit=function(){if(this.buildChartData(),this.instanceStarted="started"===this.instance.state,this.instanceStarted){var e=this;this.interval=setInterval((function(){e.InstancesService.getMonitoringData(e.$stateParams.instanceId,e.instance.id).then((function(t){e.monitoringData=t.data,e.buildChartData()}))}),5e3)}},e.prototype.$onDestroy=function(){clearInterval(this.interval)},e.prototype.humanizeDuration=function(e){return a.duration(-e).humanize(!0)},e.prototype.humanizeSize=function(e,t){if(isNaN(parseFloat(e))||!isFinite(e))return"-";void 0===t&&(t=1);var i=Math.floor(Math.log(e)/Math.log(1024));return(e/Math.pow(1024,Math.floor(i))).toFixed(t)+" "+["bytes","kB","MB","GB","TB","PB"][i]},e.prototype.ratio=function(e,t){return n.round(e/t*100)},e.prototype.getPieChartPercentColor=function(e){return e>80?"#d62728":"#2ca02c"},e.prototype.buildChartData=function(){this.monitoringCpuChartData={series:[{name:"CPU",data:[this.monitoringData.process&&this.monitoringData.process.cpu_percent]}]},this.monitoringHeapChartData={series:[{name:"Heap",data:[this.monitoringData.jvm&&this.monitoringData.jvm.heap_used_percent]}]}},e}();t.default=o},function(e,t,i){"use strict";t.__esModule=!0;var n={bindings:{instances:"<"},controller:"InstancesController",template:i(784)};t.default=n},function(e,t){e.exports=' <div class=gv-sub-content ng-if=!$ctrl._displayEmptyMode> <div class="gv-forms gv-forms-fluid" layout=column> <div> <h1>API Gateway</h1> <md-switch style="margin:0 auto" ng-model=$ctrl.showHistory ng-change=switchDisplayInstances()> Show history </md-switch> </div> <div class=gv-form-content> <div layout=column ng-if=!$ctrl.showHistory> <md-card class=no-box-shadow ng-if="$ctrl.instances.content.length > 0"> <md-card-header> <md-card-header-text layout=row layout-align=center> <div class="input-group apis-header-filter" flex=60> <input class=form-control type=text ng-model=$ctrl.searchGatewayInstances placeholder="Search Gateway instances..." autofocus/> </div> </md-card-header-text> </md-card-header> <md-card-content ng-if=!$ctrl._displayEmptyMode style=padding:0;overflow-y:auto> <div layout=row layout-wrap class=inset> <div class=gravitee-instances-box ng-repeat="instance in $ctrl.instances.content | filter:$ctrl.searchGatewayInstances | orderBy:\'-started_at\'"> <a ui-sref="management.instances.detail.environment({instanceId: instance.event})"> <md-card class="gravitee-instances-box gravitee-card gravitee-api-card"> <md-card-header layout=row layout-align="end start"> </md-card-header> <md-card-content> <div class=api-box-description> <ng-md-icon icon={{$ctrl.getOSIcon(instance.operating_system_name)}} size=60></ng-md-icon> <div class=api-box-name-version> <div>{{instance.hostname}}</div> <div>{{instance.ip}}:{{instance.port}}</div> <span style=font-size:10px>v.{{instance.version | limitTo:instance.version.indexOf("(")}}</span> <span ng-if=instance.tenant style=font-size:10px> - {{instance.tenant}}</span> <div ng-if=instance.tags style=font-size:10px>Tags: {{instance.tags.join(\', \')}}</div> </div> <div class=api-box-state layout-padding> <span ng-class="{\'gravitee-instances-started\':instance.state === \'started\',\n                                \'gravitee-instances-stopped\':instance.state === \'stopped\'}">{{instance.state}}</span> </div> </div> </md-card-content> </md-card> </a> </div> </div> </md-card-content> </md-card> </div> <div layout=column ng-if=$ctrl.showHistory> <div class=gv-form> <div style=height:200px> <gv-dashboard on-timeframe-change=$ctrl.onTimeframeChange(timeframe)></gv-dashboard> </div> <div class=gv-form-content layout=column> <md-table-container> <table md-table class=gv-table-dense> <thead md-head> <tr md-row> <th md-column>Host</th> <th md-column>Status</th> <th md-column>Tags</th> <th md-column>Tenant</th> <th md-column>Started at</th> <th md-column>Last heartbeat</th> <th md-column>Stopped at</th> </tr> </thead> <tbody md-body> <tr md-row ng-repeat="instance in $ctrl.instances.content | orderBy:\'-started_at\'" style=height:25px> <td md-cell> <ng-md-icon icon={{$ctrl.getOSIcon(instance.operating_system_name)}} size=24></ng-md-icon> <a ui-sref="management.instances.detail.environment({instanceId: instance.event})"> <span>{{instance.hostname}} ({{instance.ip}}:{{instance.port}}) - </span> <span style=font-size:10px>v.{{instance.version | limitTo:instance.version.indexOf("(")}}</span> </a> </td> <td md-cell> <span ng-class="{\'gravitee-instances-started\':instance.state === \'started\',\n                                    \'gravitee-instances-stopped\':instance.state === \'stopped\'}">{{instance.state}}</span> </td> <td md-cell> <div ng-if=instance.tags style=font-size:10px>{{instance.tags.join(\', \')}}</div> </td> <td md-cell> <span ng-if=instance.tenant style=font-size:10px>{{instance.tenant}}</span> </td> <td md-cell>{{instance.started_at | datetimeFilter }}</td> <td md-cell> <span ng-if=instance.last_heartbeat_at>{{instance.last_heartbeat_at | datetimeFilter }}</span> <span ng-if=!instance.last_heartbeat_at>-</span> </td> <td md-cell> <span ng-if=instance.stopped_at>{{instance.stopped_at | datetimeFilter }}</span> <span ng-if=!instance.stopped_at>-</span> </td> </tr> <tr ng-if="$ctrl.instances.content.length === 0"> <td md-cell colspan=7>No instance</td> </tr> </tbody> </table> </md-table-container> <md-table-pagination md-limit=$ctrl.query.limit md-limit-options="[10, 25, 50, 75, 100]" md-page=$ctrl.query.page md-total={{$ctrl.instances.totalElements}} md-on-limit=$ctrl.searchInstances md-on-paginate=$ctrl.searchInstances md-page-select></md-table-pagination> </div> </div> </div> </div> </div> </div> <gravitee-empty-state ng-if=$ctrl._displayEmptyMode icon=developer_dashboard model=Instance message="There is no API gateway instance running"></gravitee-empty-state> '},function(e,t,i){"use strict";t.__esModule=!0;var n={bindings:{instance:"<"},controller:["$rootScope","SidenavService",function(e,t){this.$onInit=function(){t.setCurrentResource(this.instance.hostname)}}],template:i(786)};t.default=n},function(e,t){e.exports=" <instance-header instance=$ctrl.instance></instance-header> <div ui-view flex class=inset></div> "},function(e,t,i){"use strict";t.__esModule=!0;var n=i(3),a={template:i(788),bindings:{widget:"<",updateMode:"<",globalQuery:"<"},controller:["$scope","$state","AnalyticsService",function(e,t,i){var a=this;this.$state=t,this.AnalyticsService=i,e.$on("gridster-resized",(function(){e.$broadcast("onWidgetResize")})),e.$on("onTimeframeChange",(function(e,t){if(a.widget.chart&&a.widget.chart.request){var i=void 0;a.widget.chart.request.query&&(i=a.widget.chart.request.query),n.assignIn(a.widget.chart.request,{interval:t.interval,from:t.from,to:t.to,query:i}),a.reload()}}));var o=e.$on("onQueryFilterChange",(function(e,t){a.widget.chart&&a.widget.chart.request&&(a.widget.chart.request.query=t.query,a.reload())}));e.$on("$destroy",o),this.reload=function(){a.fetchData=!0;var e=n.cloneDeep(a.widget.chart.request),t=a.widget.chart.request.field;a.widget.chart.request.aggs&&a.widget.chart.request.aggs.includes("field:")&&(t=a.widget.chart.request.aggs.replace("field:",""));var i=a.AnalyticsService.getQueryFilters();if(i){var o=void 0;o=Object.keys(i).find((function(e){return e===t}))?Object.keys(i).filter((function(i){return e.ranges||i!==t})):Object.keys(i),e.query=o.map((function(e){return"("+e+":"+i[e].map((function(t){return a.AnalyticsService.buildQueryParam(t,e)})).join(" OR ")+")"})).join(" AND ")}a.globalQuery&&(e.query?n.includes(e.query,a.globalQuery)||(e.query+=" AND "+a.globalQuery):e.query=a.globalQuery);var r=[a.widget.root,e];a.widget.root||r.splice(0,1),a.widget.chart.service.function.apply(a.widget.chart.service.caller,r).then((function(t){a.results=t.data,a.widget.chart.percent?(delete e.query,e.type="count",a.widget.chart.service.function.apply(a.widget.chart.service.caller,r).then((function(e){n.forEach(a.results.values,(function(t,i){a.results.values[i]=t+"/"+n.round(t/e.data.hits*100,2)}))})).finally((function(){return a.fetchData=!1}))):a.fetchData=!1}))},this.delete=function(){e.$emit("onWidgetDelete",a.widget)},this.getIconFromType=function(){switch(a.widget.chart.type){case"line":return"multiline_chart";case"map":return"map";case"pie":return"pie_chart";case"stats":return"bubble_chart";case"table":return"view_list";default:return"insert_chart"}}}]};t.default=a},function(e,t){e.exports=' <div class=widget-card flex> <md-card-title class=gravitee-widget-draggable> <md-card-title-text ng-if="!$ctrl.isModificationMode || ($ctrl.isModificationMode && !$ctrl.updateMode)"> <span class=md-title><strong>{{ $ctrl.widget.title }}</strong></span> <span class=md-subhead>{{ $ctrl.widget.subhead }}</span> </md-card-title-text> <md-card-title-text ng-if="$ctrl.isModificationMode && $ctrl.updateMode"> <md-input-container> <label>Title</label> <input type=text ng-model=$ctrl.widget.title required/> </md-input-container> <md-input-container> <label>Subtitle</label> <input type=text ng-model=$ctrl.widget.subhead /> </md-input-container> </md-card-title-text> <md-card-title-media> <a aria-label="Modify widget" ng-if=$ctrl.updateMode ng-click="$ctrl.isModificationMode=!$ctrl.isModificationMode" ng-switch=$ctrl.isModificationMode> <ng-md-icon ng-switch-when=true icon=border_color></ng-md-icon> <ng-md-icon ng-switch-default icon=edit></ng-md-icon> </a> <a title="Remove widget" ng-click=$ctrl.delete()><ng-md-icon icon=close></ng-md-icon></a> </md-card-title-media> </md-card-title> <md-card-content ng-if=$ctrl.updateMode> <gravitee-empty-state ng-if=!$ctrl.isModificationMode icon={{$ctrl.getIconFromType()}} model=Dashboard></gravitee-empty-state> <div class=gv-widget-content ng-if=!$ctrl.widget.chart.type layout=column> <md-input-container> <label>Widget type</label> <md-select ng-model=$ctrl.widget.chart.type ng-change="$ctrl.isModificationMode = true" required> <md-option ng-repeat="widgetType in [\'table\', \'line\', \'pie\', \'map\', \'stats\']" ng-value=widgetType>{{widgetType}}</md-option> </md-select> </md-input-container> </div> <div ng-if=$ctrl.isModificationMode ng-switch=$ctrl.widget.chart.type> <gv-widget-data-table-configuration ng-switch-when=table chart=$ctrl.widget.chart></gv-widget-data-table-configuration> <gv-widget-data-line-configuration ng-switch-when=line chart=$ctrl.widget.chart></gv-widget-data-line-configuration> <gv-widget-data-pie-configuration ng-switch-when=pie chart=$ctrl.widget.chart></gv-widget-data-pie-configuration> <gv-widget-data-map-configuration ng-switch-when=map chart=$ctrl.widget.chart></gv-widget-data-map-configuration> <gv-widget-data-stats-configuration ng-switch-when=stats chart=$ctrl.widget.chart></gv-widget-data-stats-configuration> </div> </md-card-content> <md-card-content ng-if=!$ctrl.updateMode> <div ng-if=$ctrl.fetchData layout=column layout-align="center center" flex> <md-progress-circular md-mode=indeterminate class="md-accent md-hue-1" md-diameter=50></md-progress-circular> </div> <div style=height:100% ng-if="!$ctrl.fetchData && $ctrl.results" ng-switch on=$ctrl.widget.chart.type> <gv-widget-data-table class=test ng-switch-when=table data=$ctrl.results></gv-widget-data-table> <gv-widget-chart-line ng-switch-when=line data=$ctrl.results></gv-widget-chart-line> <gv-widget-chart-pie ng-switch-when=pie data=$ctrl.results></gv-widget-chart-pie> <gv-widget-chart-map ng-switch-when=map data=$ctrl.results></gv-widget-chart-map> <gv-widget-data-stats ng-switch-when=stats data=$ctrl.results></gv-widget-data-stats> </div> <div ng-if="!$ctrl.fetchData && !$ctrl.results" layout=column layout-align="center center" flex> <p><ng-md-icon icon=block style=fill:grey></ng-md-icon></p> <p>No data</p> </div> </md-card-content> </div> '},function(e,t,i){"use strict";t.__esModule=!0;var n=i(3),a={template:i(790),bindings:{data:"<"},require:{parent:"^gvWidget"},controller:["$scope","$state","AnalyticsService",function(e,t,i){var a=this;this.AnalyticsService=i,this.$scope=e,this.$state=t,this.selected=[],this.$onInit=function(){this.widget=this.parent.widget},this.$onChanges=function(e){if(e.data){var t=e.data.currentValue;a.paging=1,a.results=n.map(t.values,(function(e,i){var o;if(n.includes(e,"/")){var r=e.split("/");e=parseInt(r[0],10),o=parseFloat(r[1])}var s={key:i,value:e,percent:o,metadata:t&&t.metadata?t.metadata[i]:void 0},l=a.widget||a.parent.widget;if(l){var c=a.AnalyticsService.getQueryFilters();if(c){var d=c[l.chart.request.field];d&&d.includes(i)&&setTimeout((function(){a.selected.push(s)}))}}return s}))}};var o=this;this.selectItem=function(e){o.updateQuery(e,!0)},this.deselectItem=function(e){o.updateQuery(e,!1)},this.updateQuery=function(e,t){o.$scope.$emit("filterItemChange",{widget:o.widget.$uid,field:o.widget.chart.request.field,fieldLabel:o.widget.chart.request.fieldLabel,key:e.key,name:e.metadata.name,mode:t?"add":"remove"})},this.isClickable=function(e){return"management.platform"===t.current.name&&!e.metadata.unknown&&("api"===this.widget.chart.request.field||"application"===this.widget.chart.request.field)},this.goto=function(e){"management.platform"===t.current.name&&("api"===this.widget.chart.request.field?this.$state.go("management.apis.detail.analytics.overview",{apiId:e,from:this.widget.chart.request.from,to:this.widget.chart.request.to,q:this.widget.chart.request.query}):"application"===this.widget.chart.request.field&&this.$state.go("management.applications.application.analytics",{applicationId:e,from:this.widget.chart.request.from,to:this.widget.chart.request.to,q:this.widget.chart.request.query}))}}]};t.default=a},function(e,t){e.exports=' <md-table-container style=height:100% class=gravitee-widget-table> <table md-table class="gravitee-analytics-top-hits-table gv-table-dense" multiple=multiple md-row-select=$ctrl.widget.chart.selectable data-ng-model=$ctrl.selected> <thead md-head> <tr md-row style=height:30px> <th md-column ng-repeat="column in $ctrl.widget.chart.columns" ng-attr-md-numeric=$last>{{column}}</th> <th md-column ng-if=$ctrl.widget.chart.percent ng-attr-md-numeric>Percent</th> </tr> </thead> <tbody md-body> <tr ng-if="$ctrl.results.length > 0" md-row ng-repeat="result in $ctrl.results | limitTo: $ctrl.widget.chart.paging: ($ctrl.paging - 1) * $ctrl.widget.chart.paging | orderBy:\'metadata.order\'" md-select=result md-select-id=key style=height:25px md-on-select=$ctrl.selectItem md-on-deselect=$ctrl.deselectItem> <td md-cell> <a ng-if="!result.metadata.deleted && !result.metadata.unknown && $ctrl.isClickable(result)" ng-click=$ctrl.goto(result.key)> {{result.metadata.name}} <small ng-if=result.metadata.version>({{result.metadata.version}})</small> </a> <span ng-if="!result.metadata.deleted && !$ctrl.isClickable(result)"> {{result.metadata.name}} <small ng-if=result.metadata.version>({{result.metadata.version}})</small> </span> <span ng-if=result.metadata.deleted style=color:grey> {{result.metadata.name}} </span> </td> <td md-cell>{{result.value | number}}</td> <td md-cell ng-if=$ctrl.widget.chart.percent>{{result.percent | number}}%</td> </tr> <tr ng-if="$ctrl.results.length === 0"> <td md-cell colspan="{{($ctrl.widget.chart.percent ? 3 : 2) + (($ctrl.widget.chart.selectable) ? ($ctrl.widget.chart.percent ? 2 : 1) : ($ctrl.widget.chart.percent ? 1 : 0))}}">No result</td> </tr> </tbody> </table> </md-table-container> <md-table-pagination class=gravitee-widget-pagination md-limit=$ctrl.widget.chart.paging md-page=$ctrl.paging md-total={{$ctrl.results.length}}></md-table-pagination> '},function(e,t,i){"use strict";t.__esModule=!0;var n=i(3),a={template:i(792),bindings:{data:"<"},require:{parent:"^gvWidget"},controller:["$scope","$rootScope","ChartService","AnalyticsService",function(e,t,i,a){var o=this;this.AnalyticsService=a,this.$scope=e,this.$onInit=function(){o.widget=o.parent.widget},this.$onChanges=function(e){if(e.data){var a,r=e.data.currentValue,s=[];if(o.result={title:{text:o.parent.widget.chart.title},xAxis:{type:"datetime",dateTimeLabelFormats:{month:"%e. %b",year:"%b"}},chart:{events:{selection:function(e){e.resetSelection||t.$broadcast("timeframeZoom",{from:Math.floor(e.xAxis[0].min),to:Math.round(e.xAxis[0].max)})}}}},r.values&&r.values.length>0){n.forEach(r.values,(function(e,t){n.forEach(e.buckets,(function(r){if(r){a++;var l=i.colorByBucket[a%i.colorByBucket.length],c=i.bgColorByBucket[a%i.bgColorByBucket.length],d=n.includes(o.parent.widget.chart.request.aggs.split("%3B")[t],"field:");("1"===r.name||r.name.match("^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$"))&&(d=!1);var p=o.parent.widget.chart.labels?o.parent.widget.chart.labels[t]:"";(!p||e.metadata&&e.metadata[r.name])&&(p=e.metadata[r.name].name),s.push({name:d?r.name:p,data:r.data,color:l,fillColor:c,labelPrefix:d?p:"",id:r.name})}}))}));var l=r.timestamp,c={series:{pointStart:l.from,pointInterval:l.interval,stacking:o.parent.widget.chart.stacked?"normal":null}};o.parent.widget.chart.selectable&&(c.series.events={legendItemClick:function(e){var t=e.target.chart.series[e.target.index],i=n.filter(e.target.chart.series,{visible:!0});i.length===o.result.series.length?(e.preventDefault(),n(i).filter((function(t){return t.name!==e.target.name})).forEach((function(e){return e.hide()})),o.updateQuery(t,t.visible)):o.updateQuery(t,!t.visible)},hide:function(e){var t=n.filter(e.target.chart.series,{visible:!1});if(t.length===o.result.series.length)e.preventDefault(),n(t).forEach((function(e){return e.show()}));else{var i=e.target.chart.series[e.target.index];o.updateQuery(i,!1)}}}),o.result=n.assign(o.result,{series:s,plotOptions:c}),o.result.series.forEach((function(e){var t=o.widget||o.parent.widget;if(t){var i=o.AnalyticsService.getQueryFilters();if(i){var n=i[t.chart.request.aggs.split("field:")[1]];e.visible=n&&n.includes(e.id)}}})),n.filter(o.result.series,{visible:!1}).forEach((function(e){o.updateQuery(e,!1)}))}else o.result.series=[]}},this.updateQuery=function(e,t){o.widget&&e.userOptions&&o.$scope.$emit("filterItemChange",{widget:o.widget.$uid,field:o.widget.chart.request.aggs.split(":")[1],key:e.userOptions.id,name:e.name,mode:t?"add":"remove",events:{remove:function(){o.visible&&o.hide()}.bind(e)}})}}]};t.default=a},function(e,t){e.exports=" <gravitee-chart options=$ctrl.result zoom=true type=areaspline height=230></gravitee-chart> "},function(e,t,i){"use strict";t.__esModule=!0;var n=i(3),a={template:i(794),bindings:{data:"<"},require:{parent:"^gvWidget"},controller:function(){this.$onChanges=function(e){if(e.data){var t=e.data.currentValue,i=[],a="";if(t.values["400.0-499.0"])a+='<br><span style="color:'+this.parent.widget.chart.colors[3]+'">4xx errors: '+t.values["400.0-499.0"]+"</span>";if(t.values["500.0-599.0"])a+='<br><span style="color:'+this.parent.widget.chart.colors[4]+'">5xx errors: '+t.values["500.0-599.0"]+"</span>";var o=n.reduce(t.values,(function(e,t){return e+t}),0),r=0,s=this;n.forEach(t.values,(function(e){var t=n.round(e/o*100,2);i.push({name:s.parent.widget.chart.labels[r],y:t,color:s.parent.widget.chart.colors[r],hits:e}),r++})),this.results={chart:{plotBackgroundColor:null,plotBorderWidth:0,plotShadow:!1},plotOptions:{pie:{dataLabels:{enabled:!0,distance:-50,style:{fontWeight:"bold",color:"white"}},startAngle:-90,endAngle:90,center:["50%","75%"]}},tooltip:{pointFormat:"{series.name}: <b>{point.percentage:.2f}%</b><br>Nb hits: <b>{point.hits}</b>"},title:{text:"Total: "+o+a,align:"center",useHTML:!0,verticalAlign:"middle",y:60},series:[{name:"Percent hits",innerSize:"50%",data:i}]}}}}};t.default=a},function(e,t){e.exports=" <gravitee-chart options=$ctrl.results type=pie height=218></gravitee-chart> "},function(e,t,i){"use strict";t.__esModule=!0;var n=i(3),a=i(16),o={template:i(796),bindings:{data:"<"},require:{parent:"^gvWidget"},controller:function(){this.$onChanges=function(e){if(e.data){var t=n.map(e.data.currentValue.values,(function(e,t){return{key:t,value:e}}));this.results={title:{text:null},mapNavigation:{enabled:!0,enableMouseWheelZoom:!1},legend:{layout:"vertical",align:"left",verticalAlign:"bottom"},colorAxis:{min:0,stops:[[0,"#dfe7fb"],[.5,a.getOptions().colors[0]],[1,a.Color(a.getOptions().colors[0]).brighten(-.5).get()]]},tooltip:{headerFormat:"",pointFormat:"<b>{point.name}:</b> {point.value} hits"},series:[{data:t,mapData:a.maps["custom/world"],joinBy:["hc-a2","key"],name:"Number of API requests",states:{hover:{color:a.getOptions().colors[2]}},states:{hover:{color:"#a4edba",borderColor:"gray"}},nullColor:"#eaecfd"}]}}}}};t.default=o},function(e,t){e.exports=" <gravitee-chart options=$ctrl.results type=map height=550></gravitee-chart> "},function(e,t,i){"use strict";t.__esModule=!0;var n=i(3),a={template:i(798),bindings:{data:"<"},require:{parent:"^gvWidget"},controller:["$scope","$window","$filter",function(e,t,i){var a=this;this.$onInit=function(){a.chartData=n.cloneDeep(a.parent.widget.chart.data),o(),r(),e.$on("onWidgetResize",(function(){r()}))};var o=function(){n.forEach(a.chartData,(function(e){var t=!1,o=a.data[e.key];"0"===i("number")(o,0)&&e.fallback&&e.fallback.length&&n.forEach(e.fallback,(function(n){var o=a.data[n.key];t||"0"===i("number")(o,0)||(e.key=n.key,e.label=n.label,t=!0)}))}))},r=function(){a.lowResolution=t.innerWidth<1400}}]};t.default=a},function(e,t){e.exports=' <div ng-if="$ctrl.data[$ctrl.chartData[0].key] !== undefined"> <div layout=row layout-align="center center" layout-wrap=""> <div layout=column class=gv-widget-stats ng-class="{\'gv-widget-stats-sm\': $ctrl.lowResolution}" ng-repeat="data in $ctrl.chartData" ng-style="{color: data.color}"> <div class=gv-widget-stats-value ng-class="{\'gv-widget-stats-value-sm\': $ctrl.lowResolution}">{{$ctrl.data[data.key] | number:0}}{{data.unit}}</div> <div class=gv-widget-stats-label>{{data.label}}</div> </div> </div> </div> <div ng-if="$ctrl.data[$ctrl.chartData[0].key] === undefined">No result</div> '},function(e,t,i){"use strict";t.__esModule=!0;var n=i(3),a={template:i(800),bindings:{chart:"<"},controller:["DashboardService",function(e){var t=this;this.fields=e.getIndexedFields(),this.projections=n.concat({label:"Hits",value:"_count"},e.getAverageableFields()),this.projectionOrders=[{label:"Desc",value:"-"},{label:"Asc",value:""}],this.$onInit=function(){if(t.chart.request||n.merge(t.chart,{request:{type:"group_by",field:t.fields[0].value},columns:[],paging:5}),t.field=t.chart.request.field,t.chart.request.order){var e=t.chart.request.order.split(":"),i=e[0],a=e[1];"-"===i.charAt(0)?(t.order="-",t.aggregate=i.substring(1)):(t.order="",t.aggregate=i),t.projection=a||"_count"}else t.order="-",t.aggregate="avg",t.projection="_count";t.onFieldChanged(),t.onProjectionChanged()},this.onFieldChanged=function(){t.chart.request.field=t.field,t.chart.columns[0]=n.find(t.fields,{value:t.field}).label},this.onProjectionChanged=function(){t.chart.columns[1]=n.find(t.projections,{value:t.projection}).label,t.projection?(t.chart.request.order=t.order+t.aggregate+":"+t.projection,t.chart.percent=!1):delete t.chart.request.order}}]};t.default=a},function(e,t){e.exports=' <div layout=row> <md-input-container> <label>Field</label> <md-select ng-model=$ctrl.field ng-change=$ctrl.onFieldChanged()> <md-option ng-repeat="field in $ctrl.fields" ng-value=field.value>{{field.label}}</md-option> </md-select> </md-input-container> </div> <div layout=row> <md-input-container> <label>Projection</label> <md-select ng-model=$ctrl.projection ng-change=$ctrl.onProjectionChanged()> <md-option ng-repeat="projection in $ctrl.projections" ng-value=projection.value>{{projection.label}}</md-option> </md-select> </md-input-container> <md-input-container> <label>Order</label> <md-select ng-model=$ctrl.order ng-change=$ctrl.onProjectionChanged()> <md-option ng-repeat="order in $ctrl.projectionOrders" ng-value=order.value>{{order.label}}</md-option> </md-select> </md-input-container> </div> <div layout=column> <md-input-container> <md-checkbox ng-model=$ctrl.chart.percent ng-disabled="$ctrl.projection !== \'_count\'"> Display percentage </md-checkbox> </md-input-container> <md-input-container> <md-checkbox ng-model=$ctrl.chart.selectable> Allows to check a row to filter </md-checkbox> </md-input-container> <md-input-container> <label>Paging</label> <input type=number ng-model=$ctrl.chart.paging min=5 max=100 required> </md-input-container> </div> '},function(e,t,i){"use strict";t.__esModule=!0;var n=i(3),a={template:i(802),bindings:{chart:"<"},controller:["DashboardService",function(e){var t=this;this.fields=e.getAggregateFields(),this.$onInit=function(){t.data=[],t.chart.request?t.chart.request.aggs&&(t.data=t.chart.request.aggs.split("%3B")):n.merge(t.chart,{request:{type:"date_histo",aggs:""},labels:[]})},this.onDataChanged=function(){t.chart.request.aggs="",t.chart.labels=[];var e=n.last(t.data);n.forEach(t.data,(function(i){t.chart.request.aggs+=i+(e===i?"":"%3B"),t.chart.labels.push(n.find(t.fields,{aggValue:i}).label)}))}}]};t.default=a},function(e,t){e.exports=' <div layout=column> <md-input-container> <label>Field</label> <md-select ng-model=$ctrl.data ng-change=$ctrl.onDataChanged() multiple=true> <md-option ng-repeat="field in $ctrl.fields" ng-value=field.aggValue>{{field.aggLabel}}</md-option> </md-select> </md-input-container> <md-input-container> <md-checkbox ng-model=$ctrl.chart.stacked> Display stacked </md-checkbox> </md-input-container> <md-input-container> <md-checkbox ng-model=$ctrl.chart.selectable> Allows to check a field to filter </md-checkbox> </md-input-container> </div> '},function(e,t,i){"use strict";t.__esModule=!0;var n=i(3),a={template:i(804),bindings:{chart:"<"},controller:function(){var e=this;this.$onInit=function(){e.chart.request||n.merge(e.chart,{request:{type:"group_by",field:"geoip.city_name"}})}}};t.default=a},function(e,t){e.exports=" "},function(e,t,i){"use strict";t.__esModule=!0;var n=i(3),a={template:i(806),bindings:{chart:"<"},controller:["DashboardService",function(e){var t=this;this.fields=e.getNumericFields(),this.$onInit=function(){if(t.data=[],t.chart.request){if(t.chart.request.ranges){var e=t.chart.request.ranges.split("%3B"),i=0;n.forEach(e,(function(e){e&&t.data.push({min:parseInt(e.split(":")[0],10),max:parseInt(e.split(":")[1],10),label:t.chart.labels[i],color:t.chart.colors[i++]})}))}}else n.merge(t.chart,{request:{type:"group_by",field:t.fields[0].value,ranges:""},labels:[],colors:[]})},this.onDataChanged=function(){t.chart.request.ranges="",t.chart.labels=[],t.chart.colors=[];var e=n.last(t.data);n.forEach(t.data,(function(i){t.chart.request.ranges+=i.min+":"+i.max+(e===i?"":"%3B"),t.chart.labels.push(i.label),t.chart.colors.push(i.color)}))},this.addData=function(){t.data.push({}),t.onDataChanged()},this.removeData=function(e){n.remove(t.data,e),t.onDataChanged()}}]};t.default=a},function(e,t){e.exports=' <div layout=column> <md-input-container> <label>Field</label> <md-select ng-model=$ctrl.chart.request.field> <md-option ng-repeat="field in $ctrl.fields" ng-value=field.value>{{field.label}}</md-option> </md-select> </md-input-container> </div> <div layout=row ng-repeat="data in $ctrl.data"> <ng-md-icon icon=clear aria-label="Remove data" ng-click=$ctrl.removeData(data)></ng-md-icon> <md-input-container> <label>Min</label> <input type=number ng-model=data.min min=0 required ng-change=$ctrl.onDataChanged()> </md-input-container> <md-input-container> <label>Max</label> <input type=number ng-model=data.max min=0 required ng-change=$ctrl.onDataChanged()> </md-input-container> <md-input-container> <label>Label</label> <input type=text ng-model=data.label required ng-change=$ctrl.onDataChanged()> </md-input-container> <div type=text ng-model=data.color ng-change=$ctrl.onDataChanged() md-color-picker=$ctrl.buttonConfig md-color-clear-button=false required></div> </div> <ng-md-icon icon=add aria-label="Add data" ng-click=$ctrl.addData()></ng-md-icon> '},function(e,t,i){"use strict";t.__esModule=!0;var n=i(3),a={template:i(808),bindings:{chart:"<"},controller:["DashboardService",function(e){var t=this;this.fields=e.getAverageableFields(),this.stats=[{key:"min",label:"min",unit:"ms",color:"#66bb6a"},{key:"max",label:"max",unit:"ms",color:"#ef5350"},{key:"avg",label:"avg",unit:"ms",color:"#42a5f5"},{key:"rps",label:"requests per second",color:"#ff8f2d",fallback:[{key:"rpm",label:"requests per minute"},{key:"rph",label:"requests per hour"}]},{key:"count",label:"total",color:"black"}],this.statKeys=n.map(this.stats,"key"),this.$onInit=function(){t.chart.data||n.merge(t.chart,{request:{type:"stats",field:t.fields[0].value},data:t.stats}),t.selectedStats=n.map(t.chart.data,"key")},this.onStatsChanged=function(){t.chart.data=n.filter(t.stats,(function(e){return n.includes(t.selectedStats,e.key)}))}}]};t.default=a},function(e,t){e.exports=' <div layout=column> <md-input-container> <label>Field</label> <md-select ng-model=$ctrl.chart.request.field> <md-option ng-repeat="field in $ctrl.fields" ng-value=field.value>{{field.label}}</md-option> </md-select> </md-input-container> <md-input-container> <label>Stats</label> <md-select ng-model=$ctrl.selectedStats multiple=true ng-change=$ctrl.onStatsChanged() required> <md-option ng-repeat="stat in $ctrl.statKeys" ng-value=stat>{{stat}}</md-option> </md-select> </md-input-container> </div> '},function(e,t,i){"use strict";t.__esModule=!0;var n=i(3),a={template:i(810),bindings:{model:"<",accessLogs:"<",onFilterChange:"&",onTimeframeChange:"&",onViewLogClick:"&",updateMode:"<"},controller:["$scope",function(e){var t=this;this.initialEventCounter=2,this.initialTimeFrame,this.initialQuery,this.dashboardOptions={margins:[10,10],columns:6,swapping:!1,draggable:{enable:!0,handle:"md-card-title"},resizable:{enabled:!0,stop:function(){e.$broadcast("onWidgetResize")}},rowHeight:330},this.timeframeChange=function(t){this.initialEventCounter>0&&this.initialEventCounter--,0===this.initialEventCounter?(e.$broadcast("onTimeframeChange",t),this.onTimeframeChange&&this.onTimeframeChange({timeframe:t}),this.initialQuery&&(e.$broadcast("onQueryFilterChange",{query:this.initialQuery,source:void 0}),this.onFilterChange&&this.onFilterChange({query:this.initialQuery}),delete this.initialQuery)):this.initialTimeFrame=t},this.queryFilterChange=function(t,i){this.initialEventCounter>0&&this.initialEventCounter--,0===this.initialEventCounter?(e.$broadcast("onQueryFilterChange",{query:t,source:i}),this.onFilterChange&&this.onFilterChange({query:t}),this.initialTimeFrame&&(e.$broadcast("onTimeframeChange",this.initialTimeFrame),this.onTimeframeChange&&this.onTimeframeChange({timeframe:this.initialTimeFrame}),delete this.initialTimeFrame)):this.initialQuery=t},this.viewLogs=function(){this.onViewLogClick&&this.onViewLogClick()},this.$onInit=function(){t.model&&n.each(t.model.definition,(function(e){e.$uid=t.guid()}))},this.guid=function(){function e(){return Math.floor(65536*(1+Math.random())).toString(16).substring(1)}return e()+e()+"-"+e()+"-"+e()+"-"+e()+"-"+e()+e()+e()},e.$on("onWidgetDelete",(function(e,i){n.remove(t.model.definition,i)}))}]};t.default=a},function(e,t){e.exports=' <div class=gv-form-content layout=column ng-if="$ctrl.model.definition && $ctrl.model.definition.length"> <div ng-if=!$ctrl.updateMode> <gv-dashboard-timeframe on-timeframe-change=$ctrl.timeframeChange(timeframe)></gv-dashboard-timeframe> <gv-dashboard-filter on-filter-change="$ctrl.queryFilterChange(query, widget)"></gv-dashboard-filter> <div layout=row flex=100 layout-align="end center" ng-if=$ctrl.accessLogs> <md-button md-no-ink class=md-primary ng-click=$ctrl.viewLogs()>View logs</md-button> </div> </div> <div gridster=$ctrl.dashboardOptions layout=row style=width:100%> <md-card gridster-item=widget ng-repeat="widget in $ctrl.model.definition"> <gv-widget widget=widget update-mode=$ctrl.updateMode global-query=$ctrl.model.query_filter></gv-widget> </md-card> </div> </div> <gravitee-empty-state ng-if="!$ctrl.model.definition || !$ctrl.model.definition.length" icon=insert_chart model=Dashboard message="{{$ctrl.updateMode?\'Start adding widgets\': \'No widget defined\'}}"></gravitee-empty-state> '},function(e,t,i){"use strict";t.__esModule=!0;var n={bindings:{onFilterChange:"&"},template:i(812),controller:"DashboardFilterController",require:{parent:"^gvDashboard"}};t.default=n},function(e,t){e.exports=' <div class="widget-card chipsdemoBasicUsage" flex ng-if="$ctrl.filters.length > 0"> <md-card-title> <md-card-title-text> <span class=md-title><strong>Filters</strong></span> </md-card-title-text> </md-card-title> <md-card-content> <md-chips class=custom-chips md-add-on-blur=true md-removable=true readonly=true ng-model=$ctrl.filters md-on-remove=$ctrl.deleteChips($chip)> <md-chip-template> <span> <strong>{{$chip.label}}</strong> </span> </md-chip-template> <button md-chip-remove class="md-primary vegetablechip"> <ng-md-icon icon=close></ng-md-icon> </button> </md-chips> </md-card-content> </div> '},function(e,t,i){"use strict";t.__esModule=!0;var n=i(3),a=function(){function e(e,t,i){this.$rootScope=e,this.$state=t,this.AnalyticsService=i,this.fields={},this.filters=[];var n=this;e.$on("filterItemChange",(function(e,t){"add"===t.mode?n.addFieldFilter(t):"remove"===t.mode&&n.removeFieldFilter(t)}))}return e.$inject=["$rootScope","$state","AnalyticsService"],e.prototype.$onInit=function(){var e=this.AnalyticsService.getQueryFilters();e?this.decodeQueryFilters(e):this.onFilterChange({query:void 0,widget:this.lastSource})},e.prototype.addFieldFilter=function(e,t){void 0===t&&(t=!0);var i=this.fields[e.field]||{filters:{}};i.filters[e.key]={value:e.name,onRemove:void 0!==e.events&&e.events.remove};var a=(e.fieldLabel?e.fieldLabel:e.field)+" = '"+e.name+"'",o="("+n.map(n.keys(i.filters),(function(t){return e.field.includes("path")?e.field+':\\"'+t+'\\"':e.field+":"+t})).join(" OR ")+")";this.filters.push({source:e.widget,key:e.field+"_"+e.key,label:a}),this.filters=n.uniqBy(this.filters,"key"),i.query=o,this.fields[e.field]=i,this.lastSource=e.widget,t&&this.createAndSendQuery(e.silent)},e.prototype.removeFieldFilter=function(e){this.removeFilter(e.field,e.key,e.silent)},e.prototype.deleteChips=function(e){var t=e.key.lastIndexOf("_");this.lastSource=e.source,this.removeFilter(e.key.substring(0,t),e.key.substring(t+1),!1)},e.prototype.removeFilter=function(e,t,i){var a=n.remove(this.filters,(function(i){return i.key===e+"_"+t}));a.length>0&&(this.lastSource=a[0].source);var o=this.fields[e]||{filters:{}},r=o.filters[t];r&&(delete o.filters[t],r.onRemove&&!i&&r.onRemove(t)),(0===Object.keys(o.filters).length||n.isEmpty(o.filters))&&delete o.filters,n.isEmpty(o.filters)?delete this.fields[e]:(o.query="("+n.map(n.keys(o.filters),(function(t){return e.includes("path")?e+':\\"'+t+'\\"':e+":"+t})).join(" OR ")+")",this.fields[e]=o),this.createAndSendQuery(i)},e.prototype.createAndSendQuery=function(e){var t=this,i=Object.keys(this.fields).map((function(e){return t.fields[e].query})).join(" AND ");e||(this.$state.transitionTo(this.$state.current,n.merge(this.$state.params,{q:i}),{notify:!1}),this.onFilterChange({query:i,widget:this.lastSource}))},e.prototype.decodeQueryFilters=function(e){var t,i=this;Object.keys(e).forEach((function(n){var a=n;e[n].forEach((function(e){var n={};n.key=e,n.name=e,n.field=a,n.fieldLabel=a,i.addFieldFilter(n,!1),t=n}))})),this.createAndSendQuery(t.silent)},e}();t.default=a},function(e,t,i){"use strict";t.__esModule=!0;var n={template:i(815),controller:"DashboardTimeframeController",bindings:{onTimeframeChange:"&"},require:{parent:"^gvDashboard"}};t.default=n},function(e,t){e.exports=' <div class=widget-card flex> <md-card-title> <md-card-title-text> <span class=md-title> <div layout=row layout-align="start center"> <div flex layout=row layout-align="end center"> <div style=text-align:center;width:34%> <md-input-container ng-if="$ctrl.$state.params[\'apiId\']"> <md-select ng-model=$ctrl.displayMode ng-change=$ctrl.updateDisplayMode() aria-label="Display mode"> <md-option ng-repeat="displayMode in $ctrl.displayModes" ng-value=displayMode> {{displayMode.label}} </md-option> </md-select> </md-input-container> </div> <md-button class=md-primary ng-click=$ctrl.refresh()> <ng-md-icon icon=refresh size=20></ng-md-icon> Refresh </md-button> <div> <ng-md-icon icon=autorenew size=20></ng-md-icon> <md-input-container> <md-select ng-model=$ctrl.autoRefreshInterval ng-change=$ctrl.autoRefreshChange() aria-label="Auto refresh"> <md-option ng-repeat="interval in $ctrl.arIntervals" ng-value=interval.interval> {{interval.label}} </md-option> </md-select> </md-input-container> </div> </div> </div> </span> </md-card-title-text> </md-card-title> <md-card-content> <div layout=row layout-align="space-around center" style=margin-bottom:10px> <div class="btn-group float-right"> <button class="btn btn-default" type=button ng-repeat="timeframe in $ctrl.timeframes track by timeframe.id" ng-click=$ctrl.updateTimeframe(timeframe.id) ng-class="{\'gravitee-analytics-timeframe-active\' : timeframe === $ctrl.timeframe}"> {{timeframe.title}} </button> </div> <div class=gv-log-filter-dates> <md-input-container style=margin-bottom:0> <label>from</label> <input moment-picker=$ctrl.pickerStartDateFormated locale=en-gb format="YYYY-MM-DD HH:mm" max-date=$ctrl.pickerEndDate ng-model=$ctrl.pickerStartDate ng-model-options="{ updateOn: \'blur\' }"> </md-input-container> <md-input-container style=margin-bottom:0> <label>to</label> <input moment-picker=$ctrl.pickerEndDateFormated locale=en-gb format="YYYY-MM-DD HH:mm" min-date=$ctrl.pickerStartDate ng-model=$ctrl.pickerEndDate ng-model-options="{ updateOn: \'blur\' }"> </md-input-container> <md-button type=button class=md-raised ng-click=$ctrl.updateRangeDate()>Apply</md-button> </div> </div> </md-card-content> </div> '},function(e,t,i){"use strict";t.__esModule=!0;var n=i(3),a=i(7),o=i(1),r=function(){function e(e,t,i,a,o){this.$scope=e,this.$rootScope=t,this.$state=i,this.$timeout=a,this.$interval=o;var r=this;this.displayModes=[{field:"",key:"",label:"All"},{key:"endpoint",field:"_exists_",label:"Only hits to the backend endpoint"},{key:"endpoint",field:"!_exists_",label:"Without hits to the backend endpoint"}],this.displayMode=this.displayModes[0],this.arIntervals=[{interval:-1,label:"Auto-refresh disabled"},{interval:5e3,label:"Each 5 seconds"},{interval:1e4,label:"Each 10 seconds"},{interval:3e4,label:"Each 30 seconds"}],this.autoRefreshInterval=this.arIntervals[0].interval,this.timeframes=[{id:"5m",title:"Last 5m",range:3e5,interval:1e4},{id:"30m",title:" 30m",range:18e5,interval:15e3},{id:"1h",title:" 1h",range:36e5,interval:3e4},{id:"3h",title:" 3h",range:108e5,interval:6e4},{id:"6h",title:" 6h",range:216e5,interval:12e4},{id:"12h",title:" 12h",range:432e5,interval:3e5},{id:"1d",title:"1d",range:864e5,interval:6e5},{id:"3d",title:"3d",range:2592e5,interval:18e5},{id:"7d",title:"7d",range:6048e5,interval:36e5},{id:"14d",title:"14d",range:12096e5,interval:108e5},{id:"30d",title:"30d",range:2592e6,interval:216e5},{id:"90d",title:"90d",range:7776e6,interval:432e5}],this.$rootScope.$on("timeframeZoom",(function(e,t){var i=t.to-t.from,a=n.findLast(r.timeframes,(function(e){return e.range<i}));a||(a=r.timeframes[0]),r.update({interval:a.interval,from:t.from,to:t.to})})),this.$scope.$on("$destroy",(function(){r.stopAutoRefresh()}))}return e.$inject=["$scope","$rootScope","$state","$timeout","$interval"],e.prototype.$onInit=function(){this.$state.params.from&&this.$state.params.to?this.update({from:this.$state.params.from,to:this.$state.params.to}):this.setTimeframe(this.$state.params.timeframe||"1d",!0)},e.prototype.updateTimeframe=function(e){e&&(this.$state.transitionTo(this.$state.current,n.merge(this.$state.params,{timestamp:"",timeframe:e}),{notify:!1}),this.setTimeframe(e,!0))},e.prototype.setTimestamp=function(e){var t=o.unix(e),i=Math.floor(t.startOf("day").valueOf()/1e3),n=Math.floor(t.endOf("day").valueOf()/1e3);this.update({interval:3e5,from:1e3*i,to:1e3*n})},e.prototype.setTimeframe=function(e,t){if(this.timeframe=n.find(this.timeframes,(function(t){return t.id===e})),t){var i=Date.now();this.update({interval:this.timeframe.interval,from:i-this.timeframe.range,to:i})}},e.prototype.refresh=function(){var e=Date.now();this.update({interval:this.timeframe.interval,from:e-this.timeframe.range,to:e})},e.prototype.autoRefreshChange=function(){var e=this;this.stopAutoRefresh(),-1!==this.autoRefreshInterval&&(this.currentInterval=this.$interval((function(){return e.refresh()}),this.autoRefreshInterval))},e.prototype.stopAutoRefresh=function(){a.isDefined(this.currentInterval)&&(this.$interval.cancel(this.currentInterval),this.currentInterval=void 0)},e.prototype.update=function(e){var t=this,i={interval:parseInt(e.interval,10),from:parseInt(e.from,10),to:parseInt(e.to,10)},a=i.to-i.from,r=n.findLast(t.timeframes,(function(e){return e.range<=a}));this.timeframe=r||t.timeframes[0],this.$timeout((function(){var e={interval:t.timeframe.interval,from:i.from,to:i.to};t.onTimeframeChange({timeframe:e})}),200),this.current={interval:this.timeframe.interval,intervalLabel:o.duration(this.timeframe.interval).humanize(),from:i.from,to:i.to},this.$state.transitionTo(this.$state.current,n.merge(this.$state.params,this.current)),this.pickerStartDate=o(i.from),this.pickerEndDate=o(i.to)},e.prototype.updateRangeDate=function(){var e=1e3*this.pickerStartDate.startOf("minute").unix(),t=1e3*this.pickerEndDate.endOf("minute").unix(),i=t-e,a=n.findLast(this.timeframes,(function(e){return e.range<i}));a||(a=this.timeframes[0]),this.update({interval:a.interval,from:e,to:t})},e.prototype.updateDisplayMode=function(){var e=this;n.forEach(this.displayModes,(function(t){e.$scope.$emit("filterItemChange",{field:t.field,key:t.key,mode:"remove",silent:!(!e.displayMode.field&&n.last(e.displayModes)===t)})})),this.displayMode.field&&this.$scope.$emit("filterItemChange",{field:this.displayMode.field,fieldLabel:"Display mode",key:this.displayMode.key,name:this.displayMode.label,mode:"add",events:{remove:function(){e.displayMode=e.displayModes[0]}}})},e}();t.default=r},function(e,t,i){"use strict";t.__esModule=!0;var n={template:i(818),controller:"ContextualDocController"};t.default=n},function(e,t){e.exports=" <div class=contextual-doc-container ng-class=\"{'open' : $ctrl.isOpen}\" ng-if=\"$ctrl.$state.current.name !== 'user'\"> <div style=position:fixed> <div class=contextual-doc-header> <div class=contextual-doc-header-title> <h3>Documentation</h3> </div> <div> <a ng-click=$ctrl.openDocumentation()><ng-md-icon icon=close style=fill:rgba(0,0,0,.54) size=20 style=top:0></ng-md-icon></a> </div> </div> <div class=contextual-doc-content markdown-to-html=$ctrl.page.content class=markdown-page></div> </div> </div> "},function(e,t,i){"use strict";t.__esModule=!0;var n=function(){function e(e,t,i,n,a){var o=this;this.$transitions=e,this.$http=t,this.$state=i,this.$window=n,this.$rootScope=a,this.isOpen=!0,this.page={},this.contextualDocVisibilityKey="gv-contextual-doc-visibility",null!==n.localStorage.getItem(this.contextualDocVisibilityKey)?(this.isOpen=JSON.parse(n.localStorage.getItem(this.contextualDocVisibilityKey)),this.$rootScope.helpDisplayed=this.isOpen):this.setDocumentationVisibility(),this.changeDocumentationPage(i.current);var r=this;e.onFinish({},(function(e){r.changeDocumentationPage(e.to())})),a.$on("openContextualDocumentation",(function(){r.openDocumentation(),o.changeDocumentationPage(i.current)}))}return e.$inject=["$transitions","$http","$state","$window","$rootScope"],e.prototype.openDocumentation=function(){this.isOpen=!this.isOpen,this.setDocumentationVisibility(),this.$rootScope.$broadcast("onWidgetResize")},e.prototype.changeDocumentationPage=function(e){var t=this;this.isOpen&&e.data&&e.data.docs&&this.$http.get("./docs/"+e.data.docs.page+".md").then((function(e){t.page.content=e.data}))},e.prototype.setDocumentationVisibility=function(){this.$window.localStorage.setItem(this.contextualDocVisibilityKey,this.isOpen),this.$rootScope.helpDisplayed=this.isOpen},e}();t.default=n},function(e,t,i){"use strict";t.__esModule=!0;var n=i(180),a=i(3),o=function(){function e(e,t,i,o,r,s,l,c,d){var p=this;this.ApiService=e,this.resolvedApi=t,this.plans=i,this.applications=o,this.tenants=r,this.$scope=s,this.Constants=l,this.$state=c,this.$timeout=d,this.ApiService=e,this.$scope=s,this.$state=c,this.api=t.data,this.metadata={applications:o.data,plans:i.data},void 0!==a.chain(this.api.proxy.groups).map((function(e){return e.endpoints})).find((function(e){return a.has(e,"tenants")}))&&(this.metadata.tenants=r.data),this.onPaginate=this.onPaginate.bind(this),this.query=new n.LogsQuery,this.query.page=this.$state.params.page||1,this.query.size=this.$state.params.size||15,this.query.from=this.$state.params.from,this.query.to=this.$state.params.to,this.query.query=this.$state.params.q,this.query.field="-@timestamp",this.$scope.$watch("logsCtrl.query.field",(function(e){e&&p.init&&p.refresh()}))}return e.$inject=["ApiService","resolvedApi","plans","applications","tenants","$scope","Constants","$state","$timeout"],e.prototype.timeframeChange=function(e){this.init=!0,this.query.from=e.from,this.query.to=e.to,this.query.page=this.$state.params.page||1,this.refresh()},e.prototype.onPaginate=function(e){this.query.page=e,this.refresh()},e.prototype.refresh=function(){var e=this;this.$state.transitionTo(this.$state.current,{apiId:this.api.id,page:this.query.page,size:this.query.size,from:this.query.from,to:this.query.to,q:this.query.query},{notify:!1}),this.ApiService.findLogs(this.api.id,this.query).then((function(t){e.logs=t.data}))},e.prototype.getMetadata=function(e){return this.logs.metadata[e]},e.prototype.filtersChange=function(e){this.query.page=this.$state.params.page||1,this.query.query=e,this.refresh()},e.prototype.exportAsCSV=function(){var e=this;this.ApiService.exportLogsAsCSV(this.api.id,this.query).then((function(t){var i=document.createElement("a");i.href="data:attachment/csv,"+encodeURIComponent(t.data),i.target="_self";var n="logs-"+e.api.name+"-"+e.api.version+"-"+a.now();n=(n=n.replace(/[\s]/gi,"-")).replace(/[^\w]/gi,"-"),i.download=n+".csv",document.getElementById("hidden-export-container").appendChild(i),e.$timeout((function(){i.click()})),document.getElementById("hidden-export-container").removeChild(i)}))},e}();t.default=o},function(e,t,i){"use strict";t.__esModule=!0;var n={template:i(822),controller:"LogsTimeframeController",bindings:{onTimeframeChange:"&"}};t.default=n},function(e,t){e.exports=' <div layout=row layout-align="space-around center" style="margin:24px 0"> <div class="btn-group float-right"> <button class="btn btn-default" ng-repeat="timeframe in $ctrl.timeframes track by timeframe.id" ng-click=$ctrl.updateTimeframe(timeframe.id) ng-class="{\'gravitee-analytics-timeframe-active\' : timeframe === $ctrl.timeframe}"> {{timeframe.title}} </button> </div> <div class=gv-log-filter-dates> <md-input-container style=margin-bottom:0> <label>from</label> <input moment-picker=$ctrl.pickerStartDateFormated locale=en-gb format="YYYY-MM-DD HH:mm" max-date=$ctrl.pickerEndDate ng-model=$ctrl.pickerStartDate ng-model-options="{ updateOn: \'blur\' }"> </md-input-container> <md-input-container style=margin-bottom:0> <label>to</label> <input moment-picker=$ctrl.pickerEndDateFormated locale=en-gb format="YYYY-MM-DD HH:mm" min-date=$ctrl.pickerStartDate ng-model=$ctrl.pickerEndDate ng-model-options="{ updateOn: \'blur\' }"> </md-input-container> <md-button class=md-raised ng-click=$ctrl.updateRangeDate()>Apply</md-button> </div> </div> '},function(e,t,i){"use strict";t.__esModule=!0;var n=i(3),a=i(1),o=function(){function e(e,t,i,a){this.$scope=e,this.$rootScope=t,this.$state=i,this.$timeout=a;var o=this;this.timeframes=[{id:"5m",title:"Last 5m",range:3e5,interval:1e4},{id:"30m",title:" 30m",range:18e5,interval:15e3},{id:"1h",title:" 1h",range:36e5,interval:3e4},{id:"3h",title:" 3h",range:108e5,interval:6e4},{id:"6h",title:" 6h",range:216e5,interval:12e4},{id:"12h",title:" 12h",range:432e5,interval:3e5},{id:"1d",title:"1d",range:864e5,interval:6e5},{id:"3d",title:"3d",range:2592e5,interval:18e5},{id:"7d",title:"7d",range:6048e5,interval:36e5},{id:"14d",title:"14d",range:12096e5,interval:108e5},{id:"30d",title:"30d",range:2592e6,interval:216e5},{id:"90d",title:"90d",range:7776e6,interval:432e5}],this.$rootScope.$on("timeframeZoom",(function(e,t){var i=t.to-t.from,a=n.findLast(o.timeframes,(function(e){return e.range<i}));a||(a=o.timeframes[0]),o.update({interval:a.interval,from:t.from,to:t.to})}))}return e.$inject=["$scope","$rootScope","$state","$timeout"],e.prototype.$onInit=function(){this.$state.params.from&&this.$state.params.to?this.update({from:this.$state.params.from,to:this.$state.params.to}):this.setTimeframe(this.$state.params.timeframe||"1d",!0)},e.prototype.updateTimeframe=function(e){e&&(this.$state.transitionTo(this.$state.current,n.merge(this.$state.params,{timestamp:"",timeframe:e}),{notify:!1}),this.setTimeframe(e,!0))},e.prototype.setTimestamp=function(e){var t=a.unix(e),i=Math.floor(t.startOf("day").valueOf()/1e3),n=Math.floor(t.endOf("day").valueOf()/1e3);this.update({interval:3e5,from:1e3*i,to:1e3*n})},e.prototype.setTimeframe=function(e,t){if(this.timeframe=n.find(this.timeframes,(function(t){return t.id===e})),t){var i=Date.now();this.update({interval:this.timeframe.interval,from:i-this.timeframe.range,to:i})}},e.prototype.update=function(e){var t=this,i={interval:parseInt(e.interval,10),from:parseInt(e.from,10),to:parseInt(e.to,10)},o=i.to-i.from,r=n.findLast(t.timeframes,(function(e){return e.range<=o}));this.timeframe=r||t.timeframes[0],this.$timeout((function(){var e={interval:t.timeframe.interval,from:i.from,to:i.to};t.onTimeframeChange({timeframe:e})}),200),this.current={interval:this.timeframe.interval,intervalLabel:a.duration(this.timeframe.interval).humanize(),from:i.from,to:i.to},this.$state.transitionTo(this.$state.current,n.merge(this.$state.params,this.current),{notify:!1}),this.pickerStartDate=a(i.from),this.pickerEndDate=a(i.to)},e.prototype.updateRangeDate=function(){var e=1e3*this.pickerStartDate.startOf("minute").unix(),t=1e3*this.pickerEndDate.endOf("minute").unix(),i=t-e,a=n.findLast(this.timeframes,(function(e){return e.range<i}));a||(a=this.timeframes[0]),this.update({interval:a.interval,from:e,to:t})},e}();t.default=o},function(e,t,i){"use strict";t.__esModule=!0;var n={template:i(825),controller:"LogsFiltersController",bindings:{onFiltersChange:"&",metadata:"<",context:"@",api:"<"}};t.default=n},function(e,t){e.exports=' <form ng-submit=$ctrl.search() name=logsFiltersForm> <div layout-gt-sm=row> <md-input-container class=md-block flex-gt-sm flex=20> <label>Request ID</label> <input ng-model=$ctrl.filters.id> </md-input-container> <md-input-container class=md-block flex-gt-sm flex=20> <label>Transaction ID</label> <input ng-model=$ctrl.filters.transaction> </md-input-container> <md-input-container class=md-block flex-gt-sm flex=20> <label>Methods</label> <md-select ng-model=$ctrl.filters.method placeholder=Methods multiple=multiple> <md-option ng-value=key ng-repeat="(key, value) in $ctrl.methods">{{ value }}</md-option> </md-select> </md-input-container> <md-input-container class=md-block flex-gt-sm flex=20> <label>Path</label> <input ng-model=$ctrl.filters.uri> </md-input-container> <md-input-container class=md-block flex-gt-sm flex=20> <label>Response times</label> <md-select ng-model=$ctrl.filters.responseTime placeholder="Response times" multiple=multiple> <md-option ng-value=key ng-repeat="(key, value) in $ctrl.responseTimes">{{ value }}</md-option> </md-select> </md-input-container> <md-input-container class=md-block flex-gt-sm flex=20> <label>HTTP Status</label> <md-select ng-model=$ctrl.filters.status placeholder="HTTP Status" multiple=multiple> <md-option ng-value=key ng-repeat="(key, value) in $ctrl.httpStatus">{{key}} - {{ value }}</md-option> </md-select> </md-input-container> </div> <div layout-gt-sm=row> <md-input-container class=md-block flex-gt-sm flex=20 ng-if="$ctrl.context === \'api\' || $ctrl.context === \'platform\'"> <label>Applications</label> <md-select ng-model=$ctrl.filters.application placeholder=Application multiple=multiple> <md-option ng-value=app.id ng-repeat="app in $ctrl.metadata.applications">{{app.name}}</md-option> </md-select> </md-input-container> <md-input-container class=md-block flex-gt-sm flex=20 ng-if="$ctrl.context === \'application\' || $ctrl.context === \'platform\'"> <label>Apis</label> <md-select ng-model=$ctrl.filters.api placeholder=API multiple=multiple> <md-option ng-value=api.id ng-repeat="api in $ctrl.metadata.apis">{{api.name}}</md-option> </md-select> </md-input-container> <md-input-container class=md-block flex-gt-sm flex=20 ng-if="$ctrl.context === \'api\'"> <label>Plans</label> <md-select ng-model=$ctrl.filters.plan placeholder=Plan multiple=multiple> <md-option ng-value=plan.id ng-repeat="plan in $ctrl.metadata.plans">{{plan.name}}</md-option> </md-select> </md-input-container> <md-input-container class=md-block flex-gt-sm flex=20 ng-if="$ctrl.metadata.tenants.length > 0"> <label>Tenants</label> <md-select ng-model=$ctrl.filters.tenant placeholder=Tenant multiple=multiple> <md-option ng-value=tenant.id ng-repeat="tenant in $ctrl.metadata.tenants">{{tenant.name}}</md-option> </md-select> </md-input-container> <md-input-container ng-if="$ctrl.$state.params[\'apiId\']"> <md-select ng-model=$ctrl.displayMode ng-change=$ctrl.updateDisplayMode() placeholder="Display mode"> <md-option ng-repeat="displayMode in $ctrl.displayModes" ng-value=displayMode> {{displayMode.label}} </md-option> </md-select> </md-input-container> <md-input-container class=md-block flex-gt-sm> <label>Search in payloads</label> <input ng-model=$ctrl.filters.body> </md-input-container> <md-input-container class=md-block flex-gt-sm ng-if="$ctrl.context != \'platform\'"> <label>Endpoint</label> <input ng-model=$ctrl.filters.endpoint> </md-input-container> <div> <md-button type=submit class="md-raised md-primary"> Search </md-button> <md-button type=button class=md-flat ng-click=$ctrl.clearFilters() ng-disabled=!$ctrl.hasFilters()> Clear filters </md-button> </div> </div> </form> '},function(e,t,i){"use strict";t.__esModule=!0;var n=i(3),a=function(){function e(e,t,i){this.$scope=e,this.$state=t,this.$timeout=i,this.filters={},this.methods={0:"OTHER",1:"CONNECT",2:"DELETE",3:"GET",4:"HEAD",5:"OPTIONS",6:"PATCH",7:"POST",8:"PUT",9:"TRACE"},this.responseTimes={"[0 TO 100]":"0 to 100ms","[100 TO 200]":"100 to 200ms","[200 TO 300]":"200 to 300ms","[300 TO 400]":"300 to 400ms","[400 TO 500]":"400 to 500ms","[500 TO 1000]":"500 to 1000ms","[1000 TO 2000]":"1000 to 2000ms","[2000 TO 5000]":"2000 to 5000ms","[5000 TO *]":"> 5000ms"},this.httpStatus={100:"CONTINUE",101:"SWITCHING PROTOCOLS",102:"PROCESSING",200:"OK",201:"CREATED",202:"ACCEPTED",203:"NON AUTHORITATIVE INFORMATION",204:"NO CONTENT",205:"RESET CONTENT",206:"PARTIAL CONTENT",207:"MULTI STATUS",300:"MULTIPLE CHOICES",301:"MOVED PERMANENTLY",302:"FOUND",303:"SEE OTHER",304:"NOT MODIFIED",305:"USE PROXY",307:"TEMPORARY REDIRECT",400:"BAD REQUEST",401:"UNAUTHORIZED",402:"PAYMENT REQUIRED",403:"FORBIDDEN",404:"NOT FOUND",405:"METHOD NOT ALLOWED",406:"NOT ACCEPTABLE",407:"PROXY AUTHENTICATION REQUIRED",408:"REQUEST TIMEOUT",409:"CONFLICT",410:"GONE",411:"LENGTH REQUIRED",412:"PRECONDITION FAILED",413:"REQUEST ENTITY TOO LARGE",414:"REQUEST URI TOO LONG",415:"UNSUPPORTED MEDIA TYPE",416:"REQUESTED RANGE NOT SATISFIABLE",417:"EXPECTATION FAILED",422:"UNPROCESSABLE ENTITY",423:"LOCKED",424:"FAILED DEPENDENCY",429:"TOO MANY REQUESTS",500:"INTERNAL SERVER ERROR",501:"NOT IMPLEMENTED",502:"BAD GATEWAY",503:"SERVICE UNAVAILABLE",504:"GATEWAY TIMEOUT",505:"HTTP VERSION NOT SUPPORTED",507:"INSUFFICIENT STORAGE"},this.fields={responseTime:"response-time",id:"_id"},this.displayModes=[{field:"",key:"",label:"All"},{key:"endpoint",field:"_exists_",label:"Only hits to the backend endpoint"},{key:"endpoint",field:"!_exists_",label:"Without hits to the backend endpoint"}],this.$scope=e}return e.$inject=["$scope","$state","$timeout"],e.convert=function(e){return"("+e.join(" OR ")+")"},e.prototype.$onInit=function(){var e=this,t=this.$state.params.q;t&&(this.decodeQueryFilters(t),n.forEach(this.displayModes,(function(t){e.filters[t.field]&&(e.displayMode=t)})),this.displayMode||(this.displayMode=this.displayModes[0])),"platform"!==this.context&&"api"!==this.context||this.metadata.applications.push({id:"1",name:"Unknown application"}),"platform"!==this.context&&"application"!==this.context||this.metadata.apis.push({id:"1",name:"Unknown API"})},e.prototype.search=function(){var e=this,t=this.buildQuery(this.filters);this.$state.transitionTo(this.$state.current,n.merge(this.$state.params,{q:t}),{notify:!1}),this.$timeout((function(){e.onFiltersChange({filters:t})}))},e.prototype.clearFilters=function(){this.$scope.logsFiltersForm.$setPristine(),this.filters={},this.search()},e.prototype.hasFilters=function(){return!n.isEmpty(this.filters)&&!this.isEmpty(this.filters)},e.prototype.updateDisplayMode=function(){var e=this;n.forEach(this.displayModes,(function(t){delete e.filters[t.field]})),delete this.filters[this.displayMode.field],this.displayMode.field&&(this.filters[this.displayMode.field]=this.displayMode.key)},e.prototype.decodeQueryFilters=function(e){for(var t=e.split("AND"),i=0;i<t.length;i++){var n=t[i].replace(/[()]/g,""),a=n.split(":")[0].trim(),o=n.substring(n.indexOf(":")+1).split("OR").map((function(e){return e.trim()}));switch(a){case"api":this.filters.api=o;break;case"application":this.filters.application=o;break;case"path":var r=o[0].replace(/\\"/g,"");this.api?this.filters.uri=this.api.proxy.virtual_hosts[0].path+r:this.filters.uri=r;break;case"uri":this.filters.uri=o[0].replace(/\*|\\\\/g,"");break;case"plan":this.filters.plan=o;break;case"response-time":this.filters.responseTime=o;break;case"method":this.filters.method=o;break;case"status":this.filters.status=o;break;case"_id":this.filters.id=o[0];break;case"transaction":this.filters.transaction=o[0];break;case"tenant":this.filters.tenant=o;break;case"_exists_":this.filters._exists_=o;break;case"!_exists_":this.filters["!_exists_"]=o;break;case"body":this.filters.body=o[0].replace(/\*/g,"");break;case"endpoint":this.filters.endpoint=o[0].replace(/\*|\\\\/g,"");break;default:console.error("unknown filter: ",a)}}},e.prototype.isEmpty=function(e){for(var t in e){var i=e[t];if(void 0!==i&&i.length>0)return!1}return!0},e.prototype.buildQuery=function(t){var i="",a=n.filter(Object.keys(t),(function(e){return void 0!==t[e]&&t[e].length>0})),o=0,r=this;return n.forEach(a,(function(n){var s=t[n];"uri"!==n||s.startsWith("/")||(s="/"+s),("string"==typeof s||s instanceof String)&&(s=s.replace(/(\+|\-|\=|\&{2}|\|{2}|\>|\<|\!|\(|\)|\{|\}|\[|\]|\^|\"|\~|\?|\:|\\|\/)/g,"\\\\$1")),"uri"!==n||s.endsWith("*")||(s+="*"),"body"===n&&(s="*"+s+"*");var l=s.constructor===Array&&s.length>1?e.convert(s):s;i+=r.map(n,r.fields,!0)+":"+l,o+1<a.length&&(i+=" AND "),o++})),i},e.prototype.map=function(e,t,i){return(i?t[e]:t[n.filter(Object.keys(t),(function(t){return t.toLowerCase().includes(e.toLowerCase())})).pop()])||e},e}();t.default=a},function(e,t,i){"use strict";t.__esModule=!0;var n={bindings:{log:"<"},controller:["$state","NotificationService","Constants",function(e,t,i){var n=this;this.Constants=i,this.NotificationService=t,this.backStateParams={from:e.params.from,to:e.params.to,q:e.params.q,page:e.params.page,size:e.params.size},this.$onInit=function(){n.headersAsList(n.log.clientRequest),n.headersAsList(n.log.proxyRequest),n.headersAsList(n.log.clientResponse),n.headersAsList(n.log.proxyResponse)},this.headersAsList=function(e){if(e)for(var t in e.headersAsList=[],e.headers)if(e.headers.hasOwnProperty(t))for(var i in e.headers[t])e.headers[t].hasOwnProperty(i)&&e.headersAsList.push([t,e.headers[t][i]])},this.getMimeType=function(e){return void 0!==e.headers["Content-Type"]?e.headers["Content-Type"][0].split(";",1)[0]:null},this.onCopyBodySuccess=function(e){this.NotificationService.show("Body has been copied to clipboard"),e.clearSelection()}}],template:i(828)};t.default=n},function(e,t){e.exports=' <div class="gv-forms gv-forms-fluid" layout=column> <div class=gv-forms-header> <h1>Log</h1> <a ui-sref=management.apis.detail.analytics.logs($ctrl.backStateParams)>Back to Logs</a> </div> <div class=gv-form> <h2>Details</h2> <div class=gv-form-content layout=column> <div ng-model=$ctrl.displayContext ng-if=!$ctrl.displayContext ng-click="$ctrl.displayContext=true"> <a>Show context</a> </div> <div ng-model=$ctrl.displayContext ng-if=$ctrl.displayContext ng-click="$ctrl.displayContext=false"> <a>Hide context</a> </div> <div ng-if=$ctrl.displayContext layout=row class=log-table flex layout-padding layout-align="space-around start"> <div layout=column flex=50> <span class=log-header style=text-align:center>Context</span> <md-table-container> <table md-table class=gv-table-dense> <tbody md-body> <tr md-row ng-if=$ctrl.log.securityToken> <td md-cell style=width:1%;font-weight:700 nowrap=nowrap>{{$ctrl.log.securityType.toLowerCase() === \'api_key\'?\'API key\': \'Client id\'}}</td> <td md-cell>{{$ctrl.log.securityToken}}</td> </tr> <tr md-row ng-if=$ctrl.log.application> <td md-cell style=width:1%;font-weight:700 nowrap=nowrap>Application</td> <td md-cell>{{$ctrl.log.metadata[$ctrl.log.application].name}}</td> </tr> <tr md-row ng-if=$ctrl.log.plan> <td md-cell style=width:1%;font-weight:700 nowrap=nowrap>Plan</td> <td md-cell>{{$ctrl.log.metadata[$ctrl.log.plan].name}}</td> </tr> <tr md-row ng-if="$ctrl.log.user && $ctrl.Constants.logging.user.displayed"> <td md-cell style=width:1%;font-weight:700 nowrap=nowrap>User</td> <td md-cell>{{$ctrl.log.user}}</td> </tr> <tr md-row> <td md-cell style=width:1%;font-weight:700 nowrap=nowrap>Endpoint</td> <td md-cell>{{$ctrl.log.endpoint}}</td> </tr> <tr md-row ng-if=$ctrl.log.subscription> <td md-cell></td> <td md-cell><a ui-sref="management.apis.detail.portal.subscriptions.subscription({subscriptionId: $ctrl.log.subscription})">Go to subscription</a></td> </tr> </tbody> </table> </md-table-container> </div> <div layout=column flex=50> <span class=log-header style=text-align:center>Gateway</span> <md-table-container> <table md-table class=gv-table-dense> <tbody md-body> <tr md-row> <td md-cell style=width:1%;font-weight:700 nowrap=nowrap>Host</td> <td md-cell>{{$ctrl.log.metadata[$ctrl.log.gateway].hostname}}</td> </tr> <tr md-row> <td md-cell style=width:1%;font-weight:700 nowrap=nowrap>IP</td> <td md-cell>{{$ctrl.log.metadata[$ctrl.log.gateway].ip}}</td> </tr> <tr md-row ng-if=$ctrl.log.tenant> <td md-cell style=width:1%;font-weight:700 nowrap=nowrap>Tenant</td> <td md-cell>{{$ctrl.log.tenant}}</td> </tr> </tbody> </table> </md-table-container> </div> </div> <div layout=row class="log-table gv-request-response-table" flex layout-padding layout-align="space-around start"> <div layout=column flex=50> <span class=log-header style=text-align:center>Request</span> <md-table-container class=gv-log-request-header> <table md-table class=gv-table-dense> <tbody md-body> <tr md-row style=height:30px> <td md-cell style=width:1%;font-weight:700 nowrap=nowrap>Date</td> <td md-cell>{{$ctrl.log.timestamp | date:\'MMM d, y h:mm:ss.sss a\'}}</td> </tr> <tr md-row style=height:30px ng-if=$ctrl.log.host> <td md-cell style=width:1%;font-weight:700 nowrap=nowrap>Host</td> <td md-cell>{{$ctrl.log.host}}</td> </tr> <tr md-row> <td md-cell style=width:1%;font-weight:700 nowrap=nowrap>Request</td> <td md-cell> <span class="badge gravitee-policy-method-badge-info ng-binding ng-scope gravitee-policy-method-badge-{{$ctrl.log.method | uppercase}}-selected"> {{$ctrl.log.method | uppercase}} </span> <span>{{$ctrl.log.uri}}</span> </td> </tr> <tr md-row> <td md-cell style=width:1%;font-weight:700 nowrap=nowrap>Content-length</td> <td md-cell>{{$ctrl.log.requestContentLength}}</td> </tr> <tr md-row> <td md-cell style=width:1%;font-weight:700 nowrap=nowrap>Request ID</td> <td md-cell>{{$ctrl.log.id}}</td> </tr> <tr md-row> <td md-cell style=width:1%;font-weight:700 nowrap=nowrap>Transaction ID</td> <td md-cell>{{$ctrl.log.transactionId}}</td> </tr> <tr md-row> <td md-cell style=width:1%;font-weight:700 nowrap=nowrap>Remote IP</td> <td md-cell>{{$ctrl.log.remoteAddress}}</td> </tr> </tbody> </table> </md-table-container> </div> <div layout=column flex=50> <span class=log-header style=text-align:center>Response</span> <md-table-container ng-class="{\'gv-log-response-header-{{$ctrl.log.status / 100 | number:0}}\': true}"> <table md-table class=gv-table-dense> <tbody md-body> <tr md-row> <td md-cell style=width:1%;font-weight:700 nowrap=nowrap>Status</td> <td md-cell><span class="gv-statuscode-{{$ctrl.log.status / 100 | number:0}}xx">{{$ctrl.log.status}}</span></td> </tr> <tr md-row> <td md-cell style=width:1%;font-weight:700 nowrap=nowrap>Global response time</td> <td md-cell>{{$ctrl.log.responseTime | number}} ms</td> </tr> <tr md-row> <td md-cell style=width:1%;font-weight:700 nowrap=nowrap>API response time</td> <td md-cell>{{$ctrl.log.apiResponseTime | number}} ms</td> </tr> <tr md-row> <td md-cell style=width:1%;font-weight:700 nowrap=nowrap>Latency</td> <td md-cell>{{$ctrl.log.responseTime - $ctrl.log.apiResponseTime | number}} ms</td> </tr> <tr md-row> <td md-cell style=width:1%;font-weight:700 nowrap=nowrap>Content-length</td> <td md-cell>{{$ctrl.log.responseContentLength}}</td> </tr> </tbody> </table> </md-table-container> </div> </div> </div> </div> <div class="gv-form gv-form-danger" ng-if=$ctrl.log.message> <h2>Error</h2> <div class=gv-form-content layout=column> <div flex ui-codemirror ui-codemirror-opts="{lineNumbers: true, readOnly: true, mode: \'text/x-java\'}" ng-model=$ctrl.log.message> </div> </div> </div> <div class=gv-form> <h2></h2> <div class=gv-form-content layout=column> <div class=log-table layout=column layout-padding> <div layout=row layout-padding> <span class=log-header flex=5></span> <div flex=45 layout=row layout-align="center center"> <span class=log-header>CONSUMER</span> </div> <span class=log-header flex=5 ng-if=$ctrl.log.endpoint></span> <div flex=45 layout=row layout-align="center center"> <span class=log-header>GATEWAY</span> </div> </div> <div layout=row layout-padding style="background-color:#e1f5fe;border:1px solid #b3e5fc"> <div flex=5 layout=row layout-align="center center" style=background-color:#b3e5fc> <span class="vertical-text log-header" style=text-align:center>REQUEST</span> </div> <div layout=column flex=45 ng-if=$ctrl.log.clientRequest> <md-table-container> <table md-table class=gv-table-dense> <tbody md-body> <tr md-row> <td md-cell> <span class="badge gravitee-policy-method-badge-info ng-binding ng-scope gravitee-policy-method-badge-{{$ctrl.log.method | uppercase}}-selected"> {{$ctrl.log.clientRequest.method | uppercase}} </span> </td> <td md-cell>{{$ctrl.log.clientRequest.uri}}</td> </tr> </tbody> </table> </md-table-container> <br> <md-table-container> <table md-table class=gv-table-dense> <tbody md-body> <tr md-row ng-repeat="header in $ctrl.log.clientRequest.headersAsList" style=height:30px> <td md-cell><span style=font-weight:700>{{header[0]}}</span></td> <td md-cell>{{header[1]}}</td> </tr> </tbody> </table> </md-table-container> <br> <div ng-if=$ctrl.log.clientRequest.body class=log-body> <div ui-codemirror ui-codemirror-opts="{lineNumbers: true, lineWrapping: true, readOnly: true, mode: $ctrl.getMimeType($ctrl.log.clientRequest)}" ng-model=$ctrl.log.clientRequest.body> </div> <button class=copy> <md-tooltip md-direction=top>Copy to clipboard</md-tooltip> <ng-md-icon icon=content_copy ngclipboard data-clipboard-text={{$ctrl.log.clientRequest.body}} ngclipboard-success=$ctrl.onCopyBodySuccess(e); role=button></ng-md-icon> </button> </div> </div> <div layout=column flex=45 layout-align="center center" ng-if=!$ctrl.log.clientRequest> <p>No log for this request.</p> <p permission permission-only="\'api-log-u\'">Please check or <a ui-sref=management.apis.detail.analytics.loggingconfigure>configure logging mode</a> (client).</p> <p permission permission-except="\'api-log-u\'">Please check or configure logging mode (client).</p> </div> <div flex=5 layout=column layout-align="center center"> <span> <ng-md-icon icon=arrow_forward size=30px></ng-md-icon> </span> </div> <div layout=column flex=45 ng-if=$ctrl.log.proxyRequest> <md-table-container> <table md-table class=gv-table-dense> <tbody md-body> <tr md-row> <td md-cell> <span class="badge gravitee-policy-method-badge-info ng-binding ng-scope gravitee-policy-method-badge-{{$ctrl.log.proxyRequest.method | uppercase}}-selected"> {{$ctrl.log.proxyRequest.method | uppercase}} </span> </td> <td md-cell>{{$ctrl.log.proxyRequest.uri}}</td> </tr> </tbody> </table> </md-table-container> <br> <md-table-container ng-if=$ctrl.log.endpoint> <table md-table class=gv-table-dense> <tbody md-body> <tr md-row ng-repeat="header in $ctrl.log.proxyRequest.headersAsList" style=height:30px> <td md-cell><span style=font-weight:700>{{header[0]}}</span></td> <td md-cell>{{header[1]}}</td> </tr> </tbody> </table> </md-table-container> <br> <div ng-if=$ctrl.log.proxyRequest.body class=log-body> <div ui-codemirror ui-codemirror-opts="{lineNumbers: true, lineWrapping: true, readOnly: true, mode: $ctrl.getMimeType($ctrl.log.proxyRequest)}" ng-model=$ctrl.log.proxyRequest.body> </div> <button class=copy> <md-tooltip md-direction=top>Copy to clipboard</md-tooltip> <ng-md-icon icon=content_copy ngclipboard data-clipboard-text={{$ctrl.log.proxyRequest.body}} ngclipboard-success=$ctrl.onCopyBodySuccess(e); role=button></ng-md-icon> </button> </div> </div> <div layout=column flex=45 layout-align="center center" ng-if=!$ctrl.log.proxyRequest> <p>No log for this request.</p> <p permission permission-only="\'api-log-u\'">Please check or <a ui-sref=management.apis.detail.analytics.loggingconfigure>configure logging mode</a> (proxy).</p> <p permission permission-except="\'api-log-u\'">Please check or configure logging mode (proxy).</p> </div> </div> <div layout=row layout-padding ng-class="{\'gv-log-response-panel-{{$ctrl.log.status / 100 | number:0}}\': true}" style=margin-top:3px> <div flex=5 layout=row layout-align="center center"> <span class="vertical-text log-header" style=text-align:center>RESPONSE</span> </div> <div layout=column flex=45 ng-if=$ctrl.log.clientResponse> <md-table-container> <table md-table class=gv-table-dense> <tbody md-body> <tr md-row> <td md-cell><span style=font-weight:700>Status</span></td> <td md-cell><span class="gv-statuscode-{{$ctrl.log.clientResponse.status / 100 | number:0}}xx">{{$ctrl.log.clientResponse.status | number}}</span></td> </tr> </tbody> </table> </md-table-container> <br> <md-table-container> <table md-table class=gv-table-dense> <tbody md-body> <tr md-row ng-repeat="header in $ctrl.log.clientResponse.headersAsList" style=height:30px> <td md-cell><span style=font-weight:700>{{header[0]}}</span></td> <td md-cell>{{header[1]}}</td> </tr> </tbody> </table> </md-table-container> <br> <div ng-if=$ctrl.log.clientResponse.body class=log-body> <div ui-codemirror ui-codemirror-opts="{lineNumbers: true, readOnly: true, lineWrapping: true, mode: $ctrl.getMimeType($ctrl.log.clientResponse)}" ng-model=$ctrl.log.clientResponse.body> </div> <button class=copy> <md-tooltip md-direction=top>Copy to clipboard</md-tooltip> <ng-md-icon icon=content_copy ngclipboard data-clipboard-text={{$ctrl.log.clientResponse.body}} ngclipboard-success=$ctrl.onCopyBodySuccess(e); role=button></ng-md-icon> </button> </div> </div> <div layout=column flex=45 layout-align="center center" ng-if=!$ctrl.log.clientResponse> <p>No log for this response.</p> <p permission permission-only="\'api-log-u\'">Please check or <a ui-sref=management.apis.detail.analytics.loggingconfigure>configure logging mode</a> (client).</p> <p permission permission-except="\'api-log-u\'">Please check or configure logging mode (client).</p> </div> <div flex=5 layout=column layout-align="center center"> <span> <ng-md-icon icon=arrow_back size=30px></ng-md-icon> </span> </div> <div layout=column flex=45 ng-if=$ctrl.log.proxyResponse> <md-table-container> <table md-table class=gv-table-dense> <tbody md-body> <tr md-row> <td md-cell><span style=font-weight:700>Status</span></td> <td md-cell><span class="gv-statuscode-{{$ctrl.log.proxyResponse.status / 100 | number:0}}xx">{{$ctrl.log.proxyResponse.status | number}}</span></td> </tr> </tbody> </table> </md-table-container> <br> <md-table-container ng-if=$ctrl.log.endpoint> <table md-table class=gv-table-dense> <tbody md-body> <tr md-row ng-repeat="header in $ctrl.log.proxyResponse.headersAsList" style=height:30px> <td md-cell><span style=font-weight:700>{{header[0]}}</span></td> <td md-cell>{{header[1]}}</td> </tr> </tbody> </table> </md-table-container> <br> <div ng-if=$ctrl.log.proxyResponse.body class=log-body> <div ui-codemirror ui-codemirror-opts="{lineNumbers: true, lineWrapping: true, readOnly: true, mode: $ctrl.getMimeType($ctrl.log.proxyResponse)}" ng-model=$ctrl.log.proxyResponse.body> </div> <button class=copy> <md-tooltip md-direction=top>Copy to clipboard</md-tooltip> <ng-md-icon icon=content_copy ngclipboard data-clipboard-text={{$ctrl.log.proxyResponse.body}} ngclipboard-success=$ctrl.onCopyBodySuccess(e); role=button></ng-md-icon> </button> </div> </div> <div layout=column flex=45 layout-align="center center" ng-if=!$ctrl.log.proxyResponse> <p>No log for this response.</p> <p permission permission-only="\'api-log-u\'">Please check or <a ui-sref=management.apis.detail.analytics.loggingconfigure>configure logging mode</a> (proxy).</p> <p permission permission-except="\'api-log-u\'">Please check or configure logging mode (proxy).</p> </div> </div> </div> </div> </div> </div> '},function(e,t,i){"use strict";t.__esModule=!0;var n=i(3),a=i(252),o=function(){function e(e,t,i,a,o,r,s){var l=this;this.ApiService=e,this.NotificationService=t,this.$mdDialog=i,this.$stateParams=a,this.$rootScope=o,this.$scope=r,this.Constants=s,this.initialApi=n.cloneDeep(this.$scope.$parent.apiCtrl.api),this.api=n.cloneDeep(this.$scope.$parent.apiCtrl.api),this.maxDuration=s.logging.maxDurationMillis,this.$scope.loggingModes=[{name:"None",value:"NONE"},{name:"Client only",value:"CLIENT"},{name:"Proxy only",value:"PROXY"},{name:"Client and proxy",value:"CLIENT_PROXY"}],this.$scope.$on("apiChangeSuccess",(function(e,t){l.api=t.api}))}return e.$inject=["ApiService","NotificationService","$mdDialog","$stateParams","$rootScope","$scope","Constants"],e.prototype.update=function(){var e=this;this.ApiService.update(this.api).then((function(t){e.NotificationService.show("Logging configuration has been updated"),e.api=t.data,e.api.etag=t.headers("etag"),e.initialApi=n.cloneDeep(t.data),e.$scope.formLogging.$setPristine(),e.$rootScope.$broadcast("apiChangeSuccess",{api:e.api})}))},e.prototype.reset=function(){this.api=n.cloneDeep(this.initialApi),this.$scope.formLogging&&(this.$scope.formLogging.$setPristine(),this.$scope.formLogging.$setUntouched())},e.prototype.showConditionEditor=function(e){var t=this;this.$mdDialog.show({controller:a.default,controllerAs:"$ctrl",template:i(830),clickOutsideToClose:!0,resolve:{subscribers:["$stateParams","ApiService",function(e,t){return t.getSubscribers(e.apiId).then((function(e){return e.data}))}],plans:["$stateParams","ApiService",function(e,t){return t.getApiPlans(e.apiId,"published,deprecated").then((function(e){return e.data}))}]}}).then((function(e){e&&(t.api.proxy.logging.condition=e,t.$scope.formLogging.$setDirty())}),(function(){}))},e}();t.default=o},function(e,t){e.exports=' <md-dialog aria-label="New path mapping" style=min-width:600px> <form name=formLoggingConfiguration ng-submit=$ctrl.save() novalidate> <md-dialog-content layout-padding layout=column> <h4>Logging condition editor</h4> <label style=color:#5a646d>When multiple conditions are defined, a logical AND is applied.</label> <div layout=column> <div layout=row> <md-input-container class=md-block flex-gt-sm> <label>Condition type</label> <md-select ng-model=selectedType md-auto-focus> <md-option ng-repeat="type in types" value={{type.id}}> {{type.title}} </md-option> </md-select> </md-input-container> <md-button md-no-ink class=md-primary ng-click=$ctrl.addCondition() ng-disabled=!selectedType> Add </md-button> </div> <hr/> <div layout=row ng-repeat="condition in conditions" ng-switch on=condition.type.id> <div ng-switch-when=plan layout=row layout-align="center center" flex> <div flex=10> <ng-md-icon icon=close size=24px ng-click=$ctrl.removeCondition($index)></ng-md-icon> </div> <md-input-container flex> <label>Plan is </label> <md-select ng-model=condition.value> <md-option ng-repeat="plan in plans" value={{plan.id}}> {{plan.name}} </md-option> </md-select> </md-input-container> </div> <div ng-switch-when=application layout=row layout-align="center center" flex> <div flex=10> <ng-md-icon icon=close size=24px ng-click=$ctrl.removeCondition($index)></ng-md-icon> </div> <md-input-container flex> <label>Application is </label> <md-select ng-model=condition.value> <md-option ng-repeat="application in subscribers" value={{application.id}}> {{application.name}} </md-option> </md-select> </md-input-container> </div> <div ng-switch-when=request-header layout=row layout-align="center center" flex> <div flex=10> <ng-md-icon icon=close size=24px ng-click=$ctrl.removeCondition($index)></ng-md-icon> </div> <div layout=row layout-align="space-between center" flex> <md-input-container> <label>Header name</label> <input aria-label="Header name" ng-model=condition.param1 type=text required> </md-input-container> <span> is equals to </span> <md-input-container> <label>value</label> <input aria-label="Header value" ng-model=condition.value type=text required> </md-input-container> </div> </div> <div ng-switch-when=request-param layout=row layout-align="center center" flex> <div flex=10> <ng-md-icon icon=close size=24px ng-click=$ctrl.removeCondition($index)></ng-md-icon> </div> <div layout=row layout-align="space-between center" flex> <md-input-container> <label>Query parameter name</label> <input aria-label="Param name" ng-model=condition.param1 type=text required> </md-input-container> <span> is equals to </span> <md-input-container> <label>value</label> <input aria-label="Param value" ng-model=condition.value type=text required> </md-input-container> </div> </div> <div ng-switch-when=request-method layout=row layout-align="center center" flex> <div flex=10> <ng-md-icon icon=close size=24px ng-click=$ctrl.removeCondition($index)></ng-md-icon> </div> <md-input-container flex> <label>HTTP Method is</label> <md-select ng-model=condition.value> <md-option ng-repeat="method in methods" value={{method}}> {{method}} </md-option> </md-select> </md-input-container> </div> <div ng-switch-when=request-remote-address layout=row layout-align="center center" flex> <div flex=10> <ng-md-icon icon=close size=24px ng-click=$ctrl.removeCondition($index)></ng-md-icon> </div> <md-input-container style=margin-bottom:0;padding-bottom:0 flex> <label>Request remote address is</label> <input ng-model=condition.value type=text required> </md-input-container> </div> <div ng-switch-when=logging-duration layout=row layout-align="center center" flex> <div flex=10> <ng-md-icon icon=close size=24px ng-click=$ctrl.removeCondition($index)></ng-md-icon> </div> <div layout=row layout-align="space-between center" flex> <span>Logging is ended in </span> <md-input-container style=margin-bottom:0;padding-bottom:0> <label>Duration Time</label> <input ng-model=condition.param1 type=number min=1 required> </md-input-container> <md-input-container> <label>Time Unit</label> <md-select ng-model=condition.param2 required> <md-option ng-value=timeUnit ng-repeat="timeUnit in timeUnits">{{timeUnit}}</md-option> </md-select> </md-input-container> </div> </div> <div ng-switch-when=logging-end-date layout=row layout-align="center center" flex> <div flex=10> <ng-md-icon icon=close size=24px ng-click=$ctrl.removeCondition($index)></ng-md-icon> </div> <md-input-container flex> <label>Logging is ended at </label> <input moment-picker=pickerStartDateFormated locale=en-gb format="YYYY-MM-DD HH:mm" ng-model=condition.param1 ng-model-options="{ updateOn: \'blur\' }"> </md-input-container> </div> </div> </div> </md-dialog-content> <md-dialog-actions layout=row> <md-button ng-click=$ctrl.hide()>Cancel</md-button> <md-button type=submit class="md-raised md-primary" ng-disabled=formLoggingConfiguration.$invalid>Save</md-button> </md-dialog-actions> </form> </md-dialog> '},function(e,t,i){"use strict";t.__esModule=!0;var n={restrict:"A",link:function(e,t,i,n){if(i.gvThemeElement){var a=i.gvThemeElement.split("."),o=n.Theme;a.forEach((function(e){o=o[e]})),t.css(o)}},controller:function(){function e(e){this.Theme=e}return e.$inject=["Theme"],e}()};t.default=n},function(e,t,i){"use strict";t.__esModule=!0;var n=i(206),a=function(){return{restrict:"E",require:"gvThemeElement",scope:{image:"<",imageDefault:"=",imageUrl:"<",imageBorderRadius:"@",imageName:"=",imageWidth:"=",imageId:"=",imageTheme:"<",noDefaultImage:"="},template:i(833),controller:o,controllerAs:"identityPictureCtrl"}},o=function(){function e(e){this.$scope=e,e.imgError=function(){document.querySelector("#avatar_"+e.imageId).classList.remove("show");var t=document.querySelector("#jdenticon_"+e.imageId);t.classList.add("show"),e.noDefaultImage?(t.title="No image defined",t.innerHTML="No image defined"):(t.title=e.imageName,t.innerHTML=n.toSvg(e.imageName,e.imageWidth?e.imageWidth:110,{backColor:"#FFF"}))},e.imgLoad=function(){document.querySelector("#avatar_"+e.imageId).classList.add("show"),document.querySelector("#jdenticon_"+e.imageId).classList.remove("show")}}return e.$inject=["$scope"],e.prototype.getSource=function(){return this.$scope.image?this.$scope.image:this.$scope.imageUrl||this.$scope.imageDefault||""},e}();t.default=a},function(e,t){e.exports=" <div class=gravitee-identity-picture> <img id=avatar_{{imageId}} class=\"avatar show\" ng-class=\"imageBorderRadius?'rounded':''\" ng-style=\"imageWidth?{'width':imageWidth+'px'}:''\" ngf-no-object-url=true ngf-src=identityPictureCtrl.getSource() onerror=angular.element(this).scope()&&angular.element(this).scope().imgError() onload=angular.element(this).scope()&&angular.element(this).scope().imgLoad() gv-theme-element={{imageTheme}} /> <div id=jdenticon_{{imageId}} class=jdenticon ng-class=\"imageBorderRadius?'rounded':''\" gv-theme-element={{imageTheme}}></div> </div> "},function(e,t,i){"use strict";t.__esModule=!0;var n=function(){return{restrict:"E",require:"graviteeIdentityPicture",scope:{image:"=",imageId:"=",imageClass:"@",imageDefault:"=",imageOriginal:"=?",imageForm:"=",imageUrl:"=",imageBorderRadius:"@",imageName:"=",noDefaultImage:"=",changeLabel:"@",deleteLabel:"@",canDelete:"="},template:i(835),controller:a,controllerAs:"imgCtrl"}},a=function(){function e(e,t,i,n){this.$rootScope=e,this.$scope=t,this.Upload=i,this.NotificationService=n,t.maxSize="1MB",null==t.changeLabel&&(t.changeLabel="Change picture"),null==t.deleteLabel&&(t.deleteLabel="Delete")}return e.$inject=["$rootScope","$scope","Upload","NotificationService"],e.prototype.selectImage=function(e,t){var i=this;if(e&&this.Upload.base64DataUrl(e).then((function(e){e&&(i.$scope.imageOriginal||(i.$scope.imageOriginal=i.$scope.image),i.$scope.image=e,i.$scope.imageForm&&i.$scope.imageForm.$setDirty(),i.$rootScope.$broadcast("apiPictureChangeSuccess",{image:e}))})),t&&t.length>0){var n=t[0];"maxSize"===n.$error?this.NotificationService.showError('Image "'+n.name+'" exceeds the maximum authorized size ('+this.$scope.maxSize+")"):this.NotificationService.showError("File is not valid (error: "+n.$error+")")}},e.prototype.onDelete=function(){this.$scope.image=null,this.$rootScope.$broadcast("apiPictureChangeSuccess",{image:this.$scope.image}),this.$scope.imageForm&&this.$scope.imageForm.$setDirty()},e}();t.default=n},function(e,t){e.exports=" <div class=gravitee-upload-image> <gravitee-identity-picture image-id=imageId image=image image-url=imageUrl image-name=imageName image-width=110 no-default-image=noDefaultImage> </gravitee-identity-picture> </div> <div class=gravitee-upload-image-button> <a ngf-select=imgCtrl.selectImage($file,$invalidFiles) ngf-pattern=\"'image/*'\" ngf-accept=\"'image/*'\" ngf-max-size=maxSize>{{ changeLabel }}</a> <a ng-if=canDelete ng-click=imgCtrl.onDelete($event)>{{ deleteLabel }}</a> </div> "},function(e,t,i){"use strict";t.__esModule=!0;var n=function(){function e(e,t){this.$http=e,this.eventsURL=t.baseURL+"platform/events"}return e.$inject=["$http","Constants"],e.prototype.search=function(e,t,i,n,a,o){return this.$http.get(this.eventsURL+"?type="+e+"&api_ids="+t+"&from="+i+"&to="+n+"&page="+a+"&size="+o)},e}();t.default=n},function(e,t,i){"use strict";t.__esModule=!0;var n=i(3),a=function(){function e(e,t,i,a,o,r,s,l){var c=this;this.EventsService=e,this.AnalyticsService=t,this.ApiService=i,this.ApplicationService=a,this.$scope=o,this.Constants=r,this.$state=s,this.dashboards=l,this.eventLabels={},this.eventTypes=[],this.selectedAPIs=[],this.selectedApplications=[],this.selectedEventTypes=[],this.dashboards=n.filter(this.dashboards,"enabled");var d=this.$state.params.dashboard;d?(this.dashboard=n.find(this.dashboards,{id:d}),this.dashboard||(delete this.$state.params.dashboard,this.$state.go(this.$state.current))):this.dashboard=this.dashboards[0],n.forEach(this.dashboards,(function(e){e.definition&&(e.definition=JSON.parse(e.definition)),n.forEach(e.definition,(function(e){n.merge(e,{chart:{service:{caller:c.AnalyticsService,function:c.AnalyticsService.analytics}}})}))})),this.eventLabels.start_api="Start",this.eventLabels.stop_api="Stop",this.eventLabels.publish_api="Deploy",this.eventLabels.unpublish_api="Undeploy",this.eventTypes=["START_API","STOP_API","PUBLISH_API","UNPUBLISH_API"],this.initPagination(),this.searchEvents=this.searchEvents.bind(this)}return e.$inject=["EventsService","AnalyticsService","ApiService","ApplicationService","$scope","Constants","$state","dashboards"],e.prototype.onDashboardChanged=function(e){this.$state.transitionTo(this.$state.current,n.merge(this.$state.params,{dashboard:e}),{reload:!0})},e.prototype.onTimeframeChange=function(e){this.lastFrom=e.from,this.lastTo=e.to,this.dashboard===this.dashboards[0]&&this.searchEvents()},e.prototype.selectEvent=function(e){var t=this.selectedEventTypes.indexOf(e);t>-1?this.selectedEventTypes.splice(t,1):this.selectedEventTypes.push(e),this.searchEvents()},e.prototype.searchEvents=function(){var e=this,t=this.selectedAPIs.map((function(e){return e.id})).join(","),i=this.eventTypes;this.selectedEventTypes.length>0&&(i=this.selectedEventTypes.join(",")),this.$scope.eventsFetchData=!0,this.EventsService.search(i,t,this.lastFrom,this.lastTo,this.query.page-1,this.query.limit).then((function(t){e.events=t.data,e.$scope.eventsFetchData=!1}))},e.prototype.initPagination=function(){this.query={limit:10,page:1}},e.prototype.getEventLabel=function(e){return this.eventLabels[e]},e.prototype.viewLogs=function(){this.$state.transitionTo("management.logs",this.$state.params)},e}();t.default=a},function(e,t,i){"use strict";t.__esModule=!0;var n=i(253),a=function(){function e(e,t,i,a){this.AnalyticsService=e,this.Constants=t,this.$state=i,this.$scope=a,this.onPaginate=this.onPaginate.bind(this),this.query=new n.LogsQuery,this.query.page=this.$state.params.page||1,this.query.size=this.$state.params.size||15}return e.$inject=["AnalyticsService","Constants","$state","$scope"],e.prototype.$onInit=function(){var e=this;this.query.from=this.$state.params.from,this.query.to=this.$state.params.to,this.query.query=this.$state.params.q,this.query.field="-@timestamp",this.$scope.$watch("$ctrl.query.field",(function(t){t&&e.init&&e.refresh()})),this.metadata={apis:this.apis.data,applications:this.applications.data}},e.prototype.timeframeChange=function(e){this.init=!0,this.query.from=e.from,this.query.to=e.to,this.query.page=this.$state.params.page||1,this.refresh()},e.prototype.onPaginate=function(e){this.query.page=e,this.refresh()},e.prototype.refresh=function(){var e=this;this.$state.transitionTo(this.$state.current,{page:this.query.page,size:this.query.size,from:this.query.from,to:this.query.to,q:this.query.query},{notify:!1}),this.AnalyticsService.findLogs(this.query).then((function(t){e.logs=t.data}))},e.prototype.filtersChange=function(e){this.query.page=this.$state.params.page||1,this.query.query=e,this.refresh()},e.prototype.exportAsCSV=function(){this.AnalyticsService.exportLogsAsCSV(this.query).then((function(e){var t=document.createElement("a");t.href="data:attachment/csv,"+e.data,t.target="_self";var i="logs-platform-"+_.now();i=(i=i.replace(/[\s]/gi,"-")).replace(/[^\w]/gi,"-"),t.download=i+".csv",t.click(),document.body.removeChild(t)}))},e}();t.default=a},function(e,t,i){"use strict";t.__esModule=!0;var n={bindings:{applications:"<",apis:"<"},controller:"PlatformLogsController",template:i(840)};t.default=n},function(e,t){e.exports=' <div class=gv-sub-content> <div class="gv-forms gv-forms-fluid" layout=column> <div class=gv-form> <h1 flex>Platform Logs</h1> <div class=gv-form-content layout=column> <div layout=row> <gv-logs-timeframe on-timeframe-change=$ctrl.timeframeChange(timeframe) flex></gv-logs-timeframe> <div style=margin:auto> <md-button type=button class=md-raised ng-click=$ctrl.exportAsCSV() ng-disabled="!$ctrl.logs.logs || $ctrl.logs.logs.length === 0"> Export as CSV </md-button> </div> </div> <gv-logs-filters context=platform on-filters-change=$ctrl.filtersChange(filters) metadata=$ctrl.metadata></gv-logs-filters> <md-table-container layout-padding> <table md-table class="gravitee-analytics-top-hits-table gv-table-dense"> <thead md-head md-order=$ctrl.query.field> <tr md-row> <th md-column width=1% md-order-by=@timestamp nowrap=nowrap>Date</th> <th md-column width=1% md-order-by=status nowrap=nowrap>Status</th> <th md-column width=1% nowrap=nowrap>API</th> <th md-column width=1% nowrap=nowrap>Application</th> <th ng-if=$ctrl.Constants.logging.user.displayed md-column width=1% md-order-by=user nowrap=nowrap>User</th> <th md-column width=1% nowrap=nowrap>Plan</th> <th md-column width=1% md-order-by=method nowrap=nowrap>Method</th> <th md-column md-order-by=path>Path</th> <th md-column width=1% md-numeric nowrap=nowrap>Response time</th> </tr> </thead> <tbody md-body> <tr ng-if="$ctrl.logs.logs.length > 0" md-row ng-repeat="log in $ctrl.logs.logs | limitTo: $ctrl.query.size" md-auto-select md-select=log md-select-id=key ng-class="{\'log-error\': log.status >= 400}"> <td md-cell nowrap=nowrap> <a ui-sref="management.log({\n          logId: log.id,\n          timestamp: log.timestamp,\n          from: $ctrl.query.from,\n          to: $ctrl.query.to,\n          q: $ctrl.query.query,\n          page: $ctrl.query.page,\n          size: $ctrl.query.size\n          })"> {{log.timestamp | date:\'yyyy-MM-dd HH:mm:ss.sss\'}} </a> </td> <td md-cell nowrap=nowrap><span class="gv-statuscode-{{log.status / 100 | number:0}}xx">{{log.status}}</span></td> <td md-cell nowrap=nowrap>{{$ctrl.logs.metadata[log.api].name}}</td> <td md-cell nowrap=nowrap>{{$ctrl.logs.metadata[log.application].name}}</td> <td ng-if=$ctrl.Constants.logging.user.displayed md-cell nowrap=nowrap>{{log.user}}</td> <td md-cell nowrap=nowrap>{{$ctrl.logs.metadata[log.plan].name}}</td> <td md-cell nowrap=nowrap style=text-align:center> <span class="badge gravitee-policy-method-badge-info ng-binding ng-scope gravitee-policy-method-badge-{{log.method | uppercase}}-selected"> {{log.method | uppercase}} </span> </td> <td md-cell>{{log.path}}</td> <td md-cell nowrap=nowrap>{{log.responseTime}} ms</td> </tr> <tr ng-if="$ctrl.logs.total === 0"> <td md-cell colspan=8>No log</td> </tr> </tbody> </table> </md-table-container> <md-table-pagination md-limit=$ctrl.query.size md-limit-options="[5, 10, 15, 20, 30, 50, 100]" md-page=$ctrl.query.page md-total={{$ctrl.logs.total}} md-on-paginate=$ctrl.onPaginate> </md-table-pagination> </div> </div> </div> </div> '},function(e,t,i){"use strict";t.__esModule=!0;var n={bindings:{log:"<"},controller:["$state","NotificationService","Constants",function(e,t,i){var n=this;this.Constants=i,this.NotificationService=t,this.$onInit=function(){n.headersAsList(n.log.clientRequest),n.headersAsList(n.log.proxyRequest),n.headersAsList(n.log.clientResponse),n.headersAsList(n.log.proxyResponse)},this.headersAsList=function(e){if(e)for(var t in e.headersAsList=[],e.headers)if(e.headers.hasOwnProperty(t))for(var i in e.headers[t])e.headers[t].hasOwnProperty(i)&&e.headersAsList.push([t,e.headers[t][i]])},this.backStateParams={from:e.params.from,to:e.params.to,q:e.params.q,page:e.params.page,size:e.params.size},this.getMimeType=function(e){return void 0!==e.headers["Content-Type"]?e.headers["Content-Type"][0].split(";",1)[0]:null},this.onCopyBodySuccess=function(e){this.NotificationService.show("Body has been copied to clipboard"),e.clearSelection()}}],template:i(842)};t.default=n},function(e,t){e.exports=' <div class=gv-sub-content> <div class="gv-forms gv-forms-fluid" layout=column> <div class=gv-forms-header> <h1>Platform Log</h1> <a ui-sref=management.logs($ctrl.backStateParams)>Back to Logs</a> </div> <div class=gv-form> <h2>Details</h2> <div class=gv-form-content layout=column> <div ng-model=$ctrl.displayContext ng-if=!$ctrl.displayContext ng-click="$ctrl.displayContext=true"> <a>Show context</a> </div> <div ng-model=$ctrl.displayContext ng-if=$ctrl.displayContext ng-click="$ctrl.displayContext=false"> <a>Hide context</a> </div> <div ng-if=$ctrl.displayContext layout=row class=log-table flex layout-padding layout-align="space-around start"> <div layout=column flex=50> <span class=log-header style=text-align:center>Context</span> <md-table-container> <table md-table class=gv-table-dense> <tbody md-body> <tr md-row ng-if=$ctrl.log.securityToken> <td md-cell style=width:1%;font-weight:700 nowrap=nowrap>{{$ctrl.log.securityType.toLowerCase() === \'api_key\'?\'API key\': \'Client id\'}}</td> <td md-cell>{{$ctrl.log.securityToken}}</td> </tr> <tr md-row ng-if=$ctrl.log.application> <td md-cell style=width:1%;font-weight:700 nowrap=nowrap>Application</td> <td md-cell>{{$ctrl.log.metadata[$ctrl.log.application].name}}</td> </tr> <tr md-row ng-if=$ctrl.log.plan> <td md-cell style=width:1%;font-weight:700 nowrap=nowrap>Plan</td> <td md-cell>{{$ctrl.log.metadata[$ctrl.log.plan].name}}</td> </tr> <tr md-row ng-if="$ctrl.log.user && $ctrl.Constants.logging.user.displayed"> <td md-cell style=width:1%;font-weight:700 nowrap=nowrap>User</td> <td md-cell>{{$ctrl.log.user}}</td> </tr> <tr md-row> <td md-cell style=width:1%;font-weight:700 nowrap=nowrap>Endpoint</td> <td md-cell>{{$ctrl.log.endpoint}}</td> </tr> <tr md-row ng-if=$ctrl.log.subscription> <td md-cell></td> <td md-cell><a ui-sref="management.apis.detail.portal.subscriptions.subscription({apiId: $ctrl.log.api, subscriptionId: $ctrl.log.subscription})">Go to subscription</a></td> </tr> </tbody> </table> </md-table-container> </div> <div layout=column flex=50> <span class=log-header style=text-align:center>Gateway</span> <md-table-container> <table md-table class=gv-table-dense> <tbody md-body> <tr md-row> <td md-cell style=width:1%;font-weight:700 nowrap=nowrap>Host</td> <td md-cell>{{$ctrl.log.metadata[$ctrl.log.gateway].hostname}}</td> </tr> <tr md-row> <td md-cell style=width:1%;font-weight:700 nowrap=nowrap>IP</td> <td md-cell>{{$ctrl.log.metadata[$ctrl.log.gateway].ip}}</td> </tr> <tr md-row ng-if=$ctrl.log.tenant> <td md-cell style=width:1%;font-weight:700 nowrap=nowrap>Tenant</td> <td md-cell>{{$ctrl.log.tenant}}</td> </tr> </tbody> </table> </md-table-container> </div> </div> <div layout=row class="log-table gv-request-response-table" flex layout-padding layout-align="space-around start"> <div layout=column flex=50> <span class=log-header style=text-align:center>Request</span> <md-table-container class=gv-log-request-header> <table md-table class=gv-table-dense> <tbody md-body> <tr md-row style=height:30px> <td md-cell style=width:1%;font-weight:700 nowrap=nowrap>Date</td> <td md-cell>{{$ctrl.log.timestamp | date:\'MMM d, y h:mm:ss.sss a\'}}</td> </tr> <tr md-row style=height:30px ng-if=$ctrl.log.host> <td md-cell style=width:1%;font-weight:700 nowrap=nowrap>Host</td> <td md-cell>{{$ctrl.log.host}}</td> </tr> <tr md-row> <td md-cell style=width:1%;font-weight:700 nowrap=nowrap>Request</td> <td md-cell> <span class="badge gravitee-policy-method-badge-info ng-binding ng-scope gravitee-policy-method-badge-{{$ctrl.log.method | uppercase}}-selected"> {{$ctrl.log.method | uppercase}} </span> <span>{{$ctrl.log.uri}}</span> </td> </tr> <tr md-row> <td md-cell style=width:1%;font-weight:700 nowrap=nowrap>Content-length</td> <td md-cell>{{$ctrl.log.requestContentLength}}</td> </tr> <tr md-row> <td md-cell style=width:1%;font-weight:700 nowrap=nowrap>Request ID</td> <td md-cell>{{$ctrl.log.id}}</td> </tr> <tr md-row> <td md-cell style=width:1%;font-weight:700 nowrap=nowrap>Transaction ID</td> <td md-cell>{{$ctrl.log.transactionId}}</td> </tr> <tr md-row> <td md-cell style=width:1%;font-weight:700 nowrap=nowrap>Remote IP</td> <td md-cell>{{$ctrl.log.remoteAddress}}</td> </tr> </tbody> </table> </md-table-container> </div> <div layout=column flex=50> <span class=log-header style=text-align:center>Response</span> <md-table-container ng-class="{\'gv-log-response-header-{{$ctrl.log.status / 100 | number:0}}\': true}"> <table md-table class=gv-table-dense> <tbody md-body> <tr md-row> <td md-cell style=width:1%;font-weight:700 nowrap=nowrap>Status</td> <td md-cell><span class="gv-statuscode-{{$ctrl.log.status / 100 | number:0}}xx">{{$ctrl.log.status}}</span></td> </tr> <tr md-row> <td md-cell style=width:1%;font-weight:700 nowrap=nowrap>Global response time</td> <td md-cell>{{$ctrl.log.responseTime | number}} ms</td> </tr> <tr md-row> <td md-cell style=width:1%;font-weight:700 nowrap=nowrap>API response time</td> <td md-cell>{{$ctrl.log.apiResponseTime | number}} ms</td> </tr> <tr md-row> <td md-cell style=width:1%;font-weight:700 nowrap=nowrap>Latency</td> <td md-cell>{{$ctrl.log.responseTime - $ctrl.log.apiResponseTime | number}} ms</td> </tr> <tr md-row> <td md-cell style=width:1%;font-weight:700 nowrap=nowrap>Content-length</td> <td md-cell>{{$ctrl.log.responseContentLength}}</td> </tr> </tbody> </table> </md-table-container> </div> </div> </div> </div> <div class="gv-form gv-form-danger" ng-if=$ctrl.log.message> <h2>Error</h2> <div class=gv-form-content layout=column> <div flex ui-codemirror ui-codemirror-opts="{lineNumbers: true, readOnly: true, mode: \'text/x-java\'}" ng-model=$ctrl.log.message> </div> </div> </div> <div class=gv-form> <h2></h2> <div class=gv-form-content layout=column> <div class=log-table layout=column layout-padding> <div layout=row layout-padding> <span class=log-header flex=5></span> <div flex=45 layout=row layout-align="center center"> <span class=log-header>CONSUMER</span> </div> <span class=log-header flex=5 ng-if=$ctrl.log.endpoint></span> <div flex=45 layout=row layout-align="center center"> <span class=log-header>GATEWAY</span> </div> </div> <div layout=row layout-padding style="background-color:#e1f5fe;border:1px solid #b3e5fc"> <div flex=5 layout=row layout-align="center center" style=background-color:#b3e5fc> <span class="vertical-text log-header" style=text-align:center>REQUEST</span> </div> <div layout=column flex=45 ng-if=$ctrl.log.clientRequest> <md-table-container> <table md-table class=gv-table-dense> <tbody md-body> <tr md-row> <td md-cell> <span class="badge gravitee-policy-method-badge-info ng-binding ng-scope gravitee-policy-method-badge-{{$ctrl.log.method | uppercase}}-selected"> {{$ctrl.log.clientRequest.method | uppercase}} </span> </td> <td md-cell>{{$ctrl.log.clientRequest.uri}}</td> </tr> </tbody> </table> </md-table-container> <br> <md-table-container> <table md-table class=gv-table-dense> <tbody md-body> <tr md-row ng-repeat="header in $ctrl.log.clientRequest.headersAsList" style=height:30px> <td md-cell><span style=font-weight:700>{{header[0]}}</span></td> <td md-cell>{{header[1]}}</td> </tr> </tbody> </table> </md-table-container> <br> <div ng-if=$ctrl.log.clientRequest.body class=log-body> <div ui-codemirror ui-codemirror-opts="{lineNumbers: true, lineWrapping: true, readOnly: true, mode: $ctrl.getMimeType($ctrl.log.clientRequest)}" ng-model=$ctrl.log.clientRequest.body> </div> <button class=copy> <md-tooltip md-direction=top>Copy to clipboard</md-tooltip> <ng-md-icon icon=content_copy ngclipboard data-clipboard-text={{$ctrl.log.clientRequest.body}} ngclipboard-success=$ctrl.onCopyBodySuccess(e); role=button></ng-md-icon> </button> </div> </div> <div layout=column flex=45 layout-align="center center" ng-if=!$ctrl.log.clientRequest> <p>No log for this request.</p> <p>Please check or configure logging mode (client).</p> </div> <div flex=5 layout=column layout-align="center center"> <span> <ng-md-icon icon=arrow_forward size=30px></ng-md-icon> </span> </div> <div layout=column flex=45 ng-if=$ctrl.log.proxyRequest> <md-table-container> <table md-table class=gv-table-dense> <tbody md-body> <tr md-row> <td md-cell> <span class="badge gravitee-policy-method-badge-info ng-binding ng-scope gravitee-policy-method-badge-{{$ctrl.log.proxyRequest.method | uppercase}}-selected"> {{$ctrl.log.proxyRequest.method | uppercase}} </span> </td> <td md-cell>{{$ctrl.log.proxyRequest.uri}}</td> </tr> </tbody> </table> </md-table-container> <br> <md-table-container ng-if=$ctrl.log.endpoint> <table md-table class=gv-table-dense> <tbody md-body> <tr md-row ng-repeat="header in $ctrl.log.proxyRequest.headersAsList" style=height:30px> <td md-cell><span style=font-weight:700>{{header[0]}}</span></td> <td md-cell>{{header[1]}}</td> </tr> </tbody> </table> </md-table-container> <br> <div ng-if=$ctrl.log.proxyRequest.body class=log-body> <div ui-codemirror ui-codemirror-opts="{lineNumbers: true, lineWrapping: true, readOnly: true, mode: $ctrl.getMimeType($ctrl.log.proxyRequest)}" ng-model=$ctrl.log.proxyRequest.body> </div> <button class=copy> <md-tooltip md-direction=top>Copy to clipboard</md-tooltip> <ng-md-icon icon=content_copy ngclipboard data-clipboard-text={{$ctrl.log.proxyRequest.body}} ngclipboard-success=$ctrl.onCopyBodySuccess(e); role=button></ng-md-icon> </button> </div> </div> <div layout=column flex=45 layout-align="center center" ng-if=!$ctrl.log.proxyRequest> <p>No log for this request.</p> <p>Please check or configure logging mode (proxy).</p> </div> </div> <div layout=row layout-padding ng-class="{\'gv-log-response-panel-{{$ctrl.log.status / 100 | number:0}}\': true}" style=margin-top:3px> <div flex=5 layout=row layout-align="center center"> <span class="vertical-text log-header" style=text-align:center>RESPONSE</span> </div> <div layout=column flex=45 ng-if=$ctrl.log.clientResponse> <md-table-container> <table md-table class=gv-table-dense> <tbody md-body> <tr md-row> <td md-cell><span style=font-weight:700>Status</span></td> <td md-cell><span class="gv-statuscode-{{$ctrl.log.clientResponse.status / 100 | number:0}}xx">{{$ctrl.log.clientResponse.status | number}}</span></td> </tr> </tbody> </table> </md-table-container> <br> <md-table-container> <table md-table class=gv-table-dense> <tbody md-body> <tr md-row ng-repeat="header in $ctrl.log.clientResponse.headersAsList" style=height:30px> <td md-cell><span style=font-weight:700>{{header[0]}}</span></td> <td md-cell>{{header[1]}}</td> </tr> </tbody> </table> </md-table-container> <br> <div ng-if=$ctrl.log.clientResponse.body class=log-body> <div ui-codemirror ui-codemirror-opts="{lineNumbers: true, readOnly: true, lineWrapping: true, mode: $ctrl.getMimeType($ctrl.log.clientResponse)}" ng-model=$ctrl.log.clientResponse.body> </div> <button class=copy> <md-tooltip md-direction=top>Copy to clipboard</md-tooltip> <ng-md-icon icon=content_copy ngclipboard data-clipboard-text={{$ctrl.log.clientResponse.body}} ngclipboard-success=$ctrl.onCopyBodySuccess(e); role=button></ng-md-icon> </button> </div> </div> <div layout=column flex=45 layout-align="center center" ng-if=!$ctrl.log.clientResponse> <p>No log for this response.</p> <p>Please check or configure logging mode (client).</p> </div> <div flex=5 layout=column layout-align="center center"> <span> <ng-md-icon icon=arrow_back size=30px></ng-md-icon> </span> </div> <div layout=column flex=45 ng-if=$ctrl.log.proxyResponse> <md-table-container> <table md-table class=gv-table-dense> <tbody md-body> <tr md-row> <td md-cell><span style=font-weight:700>Status</span></td> <td md-cell><span class="gv-statuscode-{{$ctrl.log.proxyResponse.status / 100 | number:0}}xx">{{$ctrl.log.proxyResponse.status | number}}</span></td> </tr> </tbody> </table> </md-table-container> <br> <md-table-container ng-if=$ctrl.log.endpoint> <table md-table class=gv-table-dense> <tbody md-body> <tr md-row ng-repeat="header in $ctrl.log.proxyResponse.headersAsList" style=height:30px> <td md-cell><span style=font-weight:700>{{header[0]}}</span></td> <td md-cell>{{header[1]}}</td> </tr> </tbody> </table> </md-table-container> <br> <div ng-if=$ctrl.log.proxyResponse.body class=log-body> <div ui-codemirror ui-codemirror-opts="{lineNumbers: true, lineWrapping: true, readOnly: true, mode: $ctrl.getMimeType($ctrl.log.proxyResponse)}" ng-model=$ctrl.log.proxyResponse.body> </div> <button class=copy> <md-tooltip md-direction=top>Copy to clipboard</md-tooltip> <ng-md-icon icon=content_copy ngclipboard data-clipboard-text={{$ctrl.log.proxyResponse.body}} ngclipboard-success=$ctrl.onCopyBodySuccess(e); role=button></ng-md-icon> </button> </div> </div> <div layout=column flex=45 layout-align="center center" ng-if=!$ctrl.log.proxyResponse> <p>No log for this response.</p> <p>Please check or configure logging mode (proxy).</p> </div> </div> </div> </div> </div> </div> </div> '},function(e,t,i){"use strict";t.__esModule=!0;var n=i(3),a=function(){function e(e,t,i,a,o,r,s,l){this.CategoryService=e,this.NotificationService=t,this.$q=i,this.$mdDialog=a,this.$state=o,this.PortalConfigService=r,this.$rootScope=l,this.$rootScope=l,this.settings=n.cloneDeep(s),this.Constants=s,this.categoriesToUpdate=[]}return e.$inject=["CategoryService","NotificationService","$q","$mdDialog","$state","PortalConfigService","Constants","$rootScope"],e.prototype.$onInit=function(){this.categories=n.sortBy(this.categories,"order"),n.forEach(this.categories,(function(e,t){e.order=t}))},e.prototype.toggleVisibility=function(e){var t=this;e.hidden=!e.hidden,this.CategoryService.update(e).then((function(){t.NotificationService.show("Category "+e.name+" has been saved.")}))},e.prototype.upward=function(e){e>0&&this.reorder(e,e-1)},e.prototype.downward=function(e){e<n.size(this.categories)-1&&this.reorder(e,e+1)},e.prototype.toggleDisplayMode=function(){var e=this;this.PortalConfigService.save(this.settings).then((function(t){n.merge(e.Constants,t.data),e.NotificationService.show("Display mode saved!")}))},e.prototype.deleteCategory=function(e){var t=this;this.$mdDialog.show({controller:"DeleteCategoryDialogController",template:i(844),locals:{category:e}}).then((function(i){i&&t.CategoryService.delete(e).then((function(){t.NotificationService.show("Category '"+e.name+"' deleted with success"),n.remove(t.categories,e)}))}))},e.prototype.reorder=function(e,t){this.categories[e].order=t,this.categories[t].order=e,this.categories=n.sortBy(this.categories,"order"),this.categoriesToUpdate.push(this.categories[e]),this.categoriesToUpdate.push(this.categories[t]),this.save()},e.prototype.save=function(){var e=this;this.CategoryService.updateCategories(e.categoriesToUpdate).then((function(){e.NotificationService.show("Categories saved with success"),e.categoriesToUpdate=[]}))},e}();t.default=a},function(e,t){e.exports=" <md-dialog aria-label=\"Delete category '{{category}}'\"> <md-dialog-content layout-padding> <p>Are you sure you want to delete the category '{{category}}'?</p> </md-dialog-content> <md-dialog-actions layout=row> <md-button ng-click=cancel() md-auto-focus> Cancel </md-button> <md-button ng-click=ok() class=\"md-raised md-warn\"> Delete category </md-button> </md-dialog-actions> </md-dialog> "},function(e,t,i){"use strict";t.__esModule=!0;var n=i(3),a=function(){function e(e,t,i,n,a,o,r,s,l){this.ApiService=e,this.CategoryService=t,this.NotificationService=i,this.$q=n,this.$filter=a,this.$state=o,this.$location=r,this.$mdDialog=s,this.$scope=l,this.searchText="",this.createMode=!1,this.formChanged=!1,this.createMode=r.path().endsWith("new")}return e.$inject=["ApiService","CategoryService","NotificationService","$q","$filter","$state","$location","$mdDialog","$scope"],e.prototype.$onInit=function(){this.addedAPIs=[],this.selectedAPIs=this.categoryApis?this.categoryApis.slice(0):[];var e=this;this.$scope.$on("apiPictureChangeSuccess",(function(t,i){e.category.picture=i.image,e.formChanged=!0}))},e.prototype.save=function(){var e=this,t=this;(this.createMode?this.CategoryService.create(this.category):this.CategoryService.update(this.category)).then((function(i){var n=i.data,a=e.addedAPIs.map((function(e){var i=e.categories||[];return i.push(n.id),e.categories=i,t.ApiService.update(e)}));t.$q.all(a).then((function(){t.NotificationService.show("Category "+n.name+" has been saved."),t.$state.go("management.settings.category",{categoryId:n.key},{reload:!0})}))}))},e.prototype.searchAPI=function(e){var t=this;if(t.allApis){var i=n.filter(t.allApis,(function(e){return!t.selectedAPIs.some((function(t){return t.id===e.id}))}));return t.$filter("filter")(i,e)}return this.ApiService.list().then((function(i){var a=i.data;t.allApis=a;var o=n.filter(a,(function(e){return!t.selectedAPIs.some((function(t){return t.id===e.id}))}));return t.$filter("filter")(o,e)}))},e.prototype.selectedApiChange=function(e){var t=this;e&&this.ApiService.get(e.id).then((function(e){t.addedAPIs.push(e.data),t.selectedAPIs.push(e.data)})),this.searchText="",this.formChanged=!0,setTimeout((function(){document.getElementById("new-category-apis-autocomplete-id").blur()}),0)},e.prototype.removeApi=function(e){var t=this;this.$mdDialog.show({controller:"DeleteAPICategoryDialogController",template:i(846),locals:{api:e}}).then((function(i){i&&(t.categoryApis&&t.categoryApis.some((function(t){return t.id===e.id}))?t.ApiService.get(e.id).then((function(i){var a=i.data;n.remove(a.categories,(function(e){return e===t.category.key})),t.ApiService.update(a).then((function(){t.NotificationService.show("API '"+e.name+"' detached with success"),n.remove(t.selectedAPIs,e),n.remove(t.categoryApis,e)}))})):n.remove(t.selectedAPIs,e))}))},e.prototype.toggleHighlightAPI=function(e){this.category.highlightApi=e.id,this.categoryForm.$setDirty()},e.prototype.toggleVisibility=function(){this.category.hidden=!this.category.hidden,this.formChanged=!0},e.prototype.isHighlightApi=function(e){return this.category&&this.category.highlightApi===e.id},e.prototype.getApis=function(){return this.selectedAPIs},e}();t.default=a},function(e,t){e.exports=' <md-dialog aria-label="Detach api \'{{api}}\'"> <md-dialog-content layout-padding> <p>Are you sure you want to detach the API {{api}} ?</p> </md-dialog-content> <md-dialog-actions layout=row> <md-button ng-click=cancel() md-auto-focus> Cancel </md-button> <md-button ng-click=ok() class="md-raised md-warn"> Detach API </md-button> </md-dialog-actions> </md-dialog> '},function(e,t,i){"use strict";t.__esModule=!0;var n=function(){function e(e,t){this.$http=e,this.categoriesURL=t.baseURL+"configuration/categories/"}return e.$inject=["$http","Constants"],e.prototype.list=function(){return this.$http.get(this.categoriesURL)},e.prototype.get=function(e){return this.$http.get(this.categoriesURL+e)},e.prototype.create=function(e){return this.$http.post(this.categoriesURL,e)},e.prototype.update=function(e){return this.$http.put(this.categoriesURL+e.id,e)},e.prototype.updateCategories=function(e){if(e&&e.length)return this.$http.put(this.categoriesURL,e)},e.prototype.delete=function(e){return this.$http.delete(this.categoriesURL+e.id)},e}();t.default=n},function(e,t,i){"use strict";function n(e,t,i){e.category=i.name,e.cancel=function(){t.cancel()},e.ok=function(){t.hide(!0)}}n.$inject=["$scope","$mdDialog","category"],t.__esModule=!0,t.default=n},function(e,t,i){"use strict";function n(e,t,i){e.api=i.name,e.cancel=function(){t.cancel()},e.ok=function(){t.hide(!0)}}n.$inject=["$scope","$mdDialog","api"],t.__esModule=!0,t.default=n},function(e,t,i){"use strict";o.$inject=["$mdDialog","UserService","group","defaultApiRole","defaultApplicationRole","apiRoles","applicationRoles","canChangeDefaultApiRole","canChangeDefaultApplicationRole"],t.__esModule=!0;var n=i(3),a=function(){};function o(e,t,i,a,o,r,s,l,c){var d=this;this.group=i,this.apiRoles=r,this.applicationRoles=s,this.defaultApiRole=a,this.defaultApplicationRole=o,this.usersSelected=[],this.searchText="",this.defaultApiRole=a||n.find(r,{default:!0}).name,this.defaultApplicationRole=o||n.find(s,{default:!0}).name,this.canChangeDefaultApiRole=l,this.canChangeDefaultApplicationRole=c,this.hide=function(){e.cancel()},this.searchUser=function(e){if(e)return t.search(e).then((function(e){return e.data}))},this.getUserAvatar=function(e){return e?t.getUserAvatar(e):"assets/default_photo.png"},this.selectUser=function(e){e&&e.reference&&(n.find(d.usersSelected,{reference:e.reference})||d.usersSelected.push(e),d.searchText="")},this.addMembers=function(){for(var t=[],i=0;i<d.usersSelected.length;i++){var n=d.usersSelected[i],a={id:n.id,reference:n.reference,displayName:n.firstname&&n.lastname?n.firstname+" "+n.lastname:n.username,roles:{API:d.defaultApiRole,APPLICATION:d.defaultApplicationRole}};t.push(a)}e.hide(t)},this.invalid=function(){return!d.defaultApiRole&&!d.defaultApplicationRole||0===d.usersSelected.length}}t.Role=a,t.default=o},function(e,t,i){"use strict";t.__esModule=!0;var n=function(){function e(e,t,i,n){this.UserService=e,this.$scope=t,this.NotificationService=i,this.ReCaptchaService=n,this.user={},this.UserService=e,this.$scope=t,this.NotificationService=i,this.ReCaptchaService=n}return e.$inject=["UserService","$scope","NotificationService","ReCaptchaService"],e.prototype.$onInit=function(){this.ReCaptchaService.displayBadge()},e.prototype.register=function(){var e=this,t=this.$scope,i=this.NotificationService;this.ReCaptchaService.execute("register").then((function(){return e.UserService.register(e.user).then((function(){t.formRegistration.$setPristine(),i.show("Thank you for registering, you will receive an e-mail confirmation in few minutes")}),(function(e){i.showError(e)}))}))},e}();t.default=n},function(e,t,i){"use strict";t.__esModule=!0;var n=function(){function e(e,t,i,n,a,o){o.displayBadge(),t.params.token||t.go("management");try{e.isTokenExpired(t.params.token)?i.error="Your registration is expired!":(i.user=e.decodeToken(t.params.token),i.user.firstname&&(i.registrationMode=!0))}catch(e){i.error=e.toString()}i.confirmRegistration=function(){o.execute("finalizeRegistration").then((function(){n.finalizeRegistration({token:t.params.token,password:i.confirmPassword,firstname:i.user.firstname,lastname:i.user.lastname}).then((function(){i.formConfirm.$setPristine(),a.show("Your account has been created successfully, you can now login..."),t.go("login")}))}))},i.isInvalidPassword=function(){return i.confirmPassword&&i.user.password&&i.confirmPassword!==i.user.password}}return e.$inject=["jwtHelper","$state","$scope","UserService","NotificationService","ReCaptchaService"],e}();t.default=n},function(e,t,i){"use strict";t.__esModule=!0;var n=function(){function e(e,t,i,n,a,o){o.displayBadge(),t.params.token||t.go("management");try{e.isTokenExpired(t.params.token)?i.error="Your token is expired!":i.user=e.decodeToken(t.params.token)}catch(e){i.error=e.toString()}i.changePassword=function(){o.execute("finalizeRegistration").then((function(){n.finalizeRegistration({token:t.params.token,password:i.confirmPassword,firstname:i.user.firstname,lastname:i.user.lastname}).then((function(){i.formConfirm.$setPristine(),a.show("Your password has been initialized successfully, you can now login..."),t.go("login")}))}))},i.isInvalidPassword=function(){return i.confirmPassword&&i.user.password&&i.confirmPassword!==i.user.password}}return e.$inject=["jwtHelper","$state","$scope","UserService","NotificationService","ReCaptchaService"],e}();t.default=n},function(e,t,i){"use strict";t.__esModule=!0;var n=function(){function e(e,t){this.$http=e,this.subscriptionsURL=t.baseURL+"subscriptions/"}return e.$inject=["$http","Constants"],e.prototype.list=function(e,t){var i=this.subscriptionsURL;return e&&(i+="?plan="+e),t&&(i+=(e?"&":"?")+"application="+t),this.$http.get(i)},e}();t.default=n},function(e,t,i){"use strict";function n(e,t){this.hide=function(){t.cancel()},this.save=function(){t.hide(e.reason)}}n.$inject=["$scope","$mdDialog"],t.__esModule=!0,t.default=n},function(e,t,i){"use strict";a.$inject=["$scope","$mdDialog"],t.__esModule=!0;var n=i(1);function a(e,t){e.now=n().toDate(),this.hide=function(){t.cancel()},this.save=function(){t.hide({starting_at:e.starting_at,ending_at:e.ending_at,reason:e.reason})}}t.default=a},function(e,t,i){"use strict";a.$inject=["$mdDialog","plans","api","ApplicationService","ApiService"],t.__esModule=!0;var n=i(3);function a(e,t,i,a,o){this.api=i,this.plans=t,this.selectedApp=null,this.selectedPlan=null,this.plansWithSubscriptions=[],this.hide=function(){e.cancel()},this.save=function(){this.selectedApp&&this.selectedPlan&&e.hide({applicationId:this.selectedApp.id,planId:this.selectedPlan})},this.planAlreadyHaveSubscriptions=function(e){return n.indexOf(this.plansWithSubscriptions,e)>-1},this.selectedItemChange=function(){var e=this;this.plansWithSubscriptions=[],this.selectedApp&&o.getSubscriptions(this.api.id,"?application="+this.selectedApp.id+"&status=pending,accepted").then((function(t){e.plansWithSubscriptions=n.map(t.data.data,(function(e){return e.plan})),e.selectedPlan&&e.planAlreadyHaveSubscriptions(e.selectedPlan)&&(e.selectedPlan=null)}))},this.searchApplication=function(e){return a.search(e).then((function(e){return e.data}))}}t.default=a},function(e,t,i){"use strict";function n(e,t,i){this.plans=i,this.hide=function(){t.cancel()},this.save=function(){t.hide(this.plan)}}n.$inject=["$scope","$mdDialog","plans"],t.__esModule=!0,t.default=n},function(e,t,i){"use strict";function n(e,t,i){this.subscription=i,this.endDate=i.endingAt,this.now=new Date,this.hide=function(){t.cancel()},this.save=function(){t.hide(this.endDate?this.endDate.toDate():null)}}n.$inject=["$scope","$mdDialog","subscription"],t.__esModule=!0,t.default=n},function(e,t,i){"use strict";t.__esModule=!0;var n=function(){return{restrict:"E",scope:{icon:"@icon",model:"@model",message:"@message",subMessage:"@subMessage",createMode:"=",fill:"@fill"},template:i(861)}};t.default=n},function(e,t){e.exports=" <div layout=column flex layout-align=\"center center\" style=color:#424e5a> <ng-md-icon icon={{icon}} ng-style=\"{'fill':fill?fill:'#cdcccc'}\" size=120></ng-md-icon> <h2>{{message}}</h2> <div> <h5>{{subMessage}}</h5> </div> </div> "},function(e,t,i){"use strict";function n(e,t,i){e.plan=i,e.hide=function(){t.cancel()},e.publish=function(){t.hide(e.plan)}}n.$inject=["$scope","$mdDialog","plan"],t.__esModule=!0,t.default=n},function(e,t,i){"use strict";t.__esModule=!0;var n=i(3),a=function(){function e(e,t,i,a,o,r,s,l,c){var d=this;this.TagService=e,this.NotificationService=t,this.$q=i,this.$mdEditDialog=a,this.$mdDialog=o,this.EntrypointService=r,this.Constants=s,this.PortalConfigService=l,this.$rootScope=c,this.saveSettings=function(){d.PortalConfigService.save().then((function(){d.NotificationService.show("Configuration saved!"),d.formSettings.$setPristine()}))},this.resetSettings=function(){d.PortalConfigService.get().then((function(e){d.Constants=e.data,d.formSettings.$setPristine()}))},this.groupNames=function(e){return n.join(n.map(e,(function(e){return n.find(d.groups,{id:e}).name})),", ")},this.$rootScope=c}return e.$inject=["TagService","NotificationService","$q","$mdEditDialog","$mdDialog","EntrypointService","Constants","PortalConfigService","$rootScope"],e.prototype.deleteTag=function(e){var t=this,a=this;this.$mdDialog.show({controller:"DeleteTagDialogController",template:i(864),locals:{tag:e}}).then((function(i){i&&(e.id?a.TagService.delete(e).then((function(){t.deleteEntrypointsByTag(e).then((function(){a.NotificationService.show("Tag '"+e.name+"' deleted with success"),n.remove(a.tags,e)}))})):n.remove(a.tags,e))}))},e.prototype.onClipboardSuccess=function(e){this.NotificationService.show("Sharding Tag ID has been copied to clipboard"),e.clearSelection()},e.prototype.deleteEntrypoint=function(e){var t=this;this.$mdDialog.show({controller:"DeleteEntrypointDialogController",template:i(865),locals:{entrypoint:e}}).then((function(e){e&&e.id&&t.EntrypointService.delete(e).then((function(){t.NotificationService.show("Entrypoint '"+e.value+"' deleted with success"),n.remove(t.entrypoints,e)}))}))},e.prototype.deleteEntrypointsByTag=function(e){var t=this,i=[];return n.forEach(this.entrypoints,(function(a){n.includes(a.tags,e.id)&&i.push(t.EntrypointService.delete(a).then((function(){n.remove(t.entrypoints,a)})))})),this.$q.all(i)},e}();t.default=a},function(e,t){e.exports=" <md-dialog aria-label=\"Delete tag '{{tag}}'\"> <md-dialog-content layout-padding> <p>Are you sure you want to delete the tag '{{tag}}'?</p> <b>Entrypoints configured with this tag will be also deleted!</b> </md-dialog-content> <md-dialog-actions layout=row> <md-button ng-click=cancel() md-auto-focus> Cancel </md-button> <md-button ng-click=ok() class=\"md-raised md-warn\"> Delete tag </md-button> </md-dialog-actions> </md-dialog> "},function(e,t){e.exports=" <md-dialog aria-label=\"Delete entrypoint '{{entrypoint}}'\"> <md-dialog-content layout-padding> <p>Are you sure you want to delete the entrypoint '{{entrypoint}}'?</p> </md-dialog-content> <md-dialog-actions layout=row> <md-button ng-click=cancel() md-auto-focus> Cancel </md-button> <md-button ng-click=ok() class=\"md-raised md-warn\"> Delete entrypoint </md-button> </md-dialog-actions> </md-dialog> "},function(e,t,i){"use strict";t.__esModule=!0;var n=function(){function e(e,t){this.$http=e,this.tagsURL=t.baseURL+"configuration/tags/"}return e.$inject=["$http","Constants"],e.prototype.list=function(){return this.$http.get(this.tagsURL)},e.prototype.get=function(e){return this.$http.get(this.tagsURL+e)},e.prototype.create=function(e){if(e)return this.$http.post(this.tagsURL,e)},e.prototype.update=function(e){if(e&&e.id)return this.$http.put(this.tagsURL+e.id,e)},e.prototype.delete=function(e){if(e)return this.$http.delete(this.tagsURL+e.id)},e}();t.default=n},function(e,t,i){"use strict";t.__esModule=!0;var n=i(3),a=function(){function e(e,t,i,n,a){this.MetadataService=e,this.NotificationService=t,this.$mdDialog=i,this.UserService=n,this.$rootScope=a,this.$rootScope=a}return e.$inject=["MetadataService","NotificationService","$mdDialog","UserService","$rootScope"],e.prototype.newMetadata=function(){var e=this;this.$mdDialog.show({controller:"NewMetadataDialogController",controllerAs:"$ctrl",template:i(254),locals:{metadataFormats:this.metadataFormats}}).then((function(t){e.metadata.push(t),e.NotificationService.show("Metadata '"+t.name+"' created with success")})).catch((function(){}))},e.prototype.updateMetadata=function(e){if(this.UserService.isUserHasPermissions(["environment-metadata-u"])){var t=this;this.$mdDialog.show({controller:"UpdateMetadataDialogController",controllerAs:"$ctrl",template:i(254),locals:{metadata:n.clone(e),metadataFormats:this.metadataFormats}}).then((function(i){n.remove(t.metadata,e),t.metadata.push(i),t.NotificationService.show("Metadata '"+i.name+"' updated with success")})).catch((function(){}))}},e.prototype.deleteMetadata=function(e){var t=this;this.$mdDialog.show({controller:"DeleteMetadataDialogController",controllerAs:"$ctrl",template:i(868),locals:{metadata:e}}).then((function(i){i&&t.MetadataService.delete(e).then((function(){t.NotificationService.show("Metadata '"+e.name+"' deleted with success"),n.remove(t.metadata,e)}))}))},e}();t.default=a},function(e,t){e.exports=" <md-dialog aria-label=\"Delete metadata '{{$ctrl.metadata}}'\"> <md-dialog-content layout-padding> <p>Are you sure you want to delete the metadata '{{$ctrl.metadataName}}'?</p> </md-dialog-content> <md-dialog-actions layout=row> <md-button ng-click=$ctrl.cancel()> Cancel </md-button> <md-button ng-click=$ctrl.ok() class=\"md-raised md-warn\"> Delete metadata </md-button> </md-dialog-actions> </md-dialog> "},function(e,t,i){"use strict";t.__esModule=!0;var n=function(){function e(e,t){this.$http=e,this.metadataURL=t.baseURL+"configuration/metadata/"}return e.$inject=["$http","Constants"],e.prototype.listFormats=function(){return["string","numeric","boolean","date","mail","url"]},e.prototype.list=function(){return this.$http.get(this.metadataURL)},e.prototype.create=function(e){return this.$http.post(this.metadataURL,e)},e.prototype.update=function(e){return this.$http.put(this.metadataURL,e)},e.prototype.delete=function(e){return this.$http.delete(this.metadataURL+e.key)},e}();t.default=n},function(e,t,i){"use strict";function n(e,t,i){e.tag=i.name,e.cancel=function(){t.cancel()},e.ok=function(){t.hide(!0)}}n.$inject=["$scope","$mdDialog","tag"],t.__esModule=!0,t.default=n},function(e,t,i){"use strict";function n(e,t){this.metadataName=t.name,this.cancel=function(){e.cancel()},this.ok=function(){e.hide(!0)}}n.$inject=["$mdDialog","metadata"],t.__esModule=!0,t.default=n},function(e,t,i){"use strict";function n(e,t,i){this.metadata={},this.metadataFormats=i,this.metadataFormats&&this.metadataFormats.length&&(this.metadata.format=this.metadataFormats[0]),this.cancel=function(){t.cancel()},this.save=function(){e.create(this.metadata).then((function(e){t.hide(e.data)}))}}n.$inject=["MetadataService","$mdDialog","metadataFormats"],t.__esModule=!0,t.default=n},function(e,t,i){"use strict";function n(e,t,i,n){this.metadata=i,"date"===this.metadata.format&&(this.metadata.value=new Date(this.metadata.value)),this.metadataFormats=n,this.cancel=function(){t.cancel()},this.save=function(){e.update(this.metadata).then((function(e){t.hide(e.data)}))}}n.$inject=["MetadataService","$mdDialog","metadata","metadataFormats"],t.__esModule=!0,t.default=n},function(e,t,i){"use strict";t.__esModule=!0;var n=i(3),a=i(16),o=i(7),r=function(){return{restrict:"E",template:"<div></div>",scope:{options:"=",type:"@",zoom:"=",height:"=",width:"="},controller:s,link:function(e,t,i,r){a.setOptions({global:{useUTC:!1}});var s,l=t[0];function c(){setTimeout((function(){d(s,l)}),100)}function d(i,o){if(i){(i=n.merge(i,{lang:{noData:"<code>No data to display</code>"},noData:{useHTML:!0}})).title?(i.title.style={fontWeight:"bold",fontSize:"12px",fontFamily:'"Helvetica Neue",Helvetica,Arial,sans-serif'},i.title.align="left"):i.title={text:""},i.yAxis=n.merge(i.yAxis,{title:{text:""}});var r=t.parent().parent()[0],s=t.parent()[0];if(i.chart=n.merge(i.chart,{type:e.type,height:e.height||s.height||r.height,width:e.width||s.clientWidth||r.clientWidth}),e.zoom&&(i.chart.zoomType="x"),i.credits={enabled:!1},i.series=n.sortBy(i.series,"name"),n.forEach(i.series,(function(e){e.data=n.sortBy(e.data,"name")})),e.type&&e.type.startsWith("area"))i.tooltip={formatter:function(){var e=Math.trunc(this.points.filter((function(e){return e.y})).length/10),t=i.dateFormat||"%A, %b %d, %H:%M",o="<div><b>"+a.dateFormat(t,this.x)+"</b></div>";if(o+='<div class="'+(e>=2?"gv-tooltip gv-tooltip-"+(e>5?5:e):"")+'">',n.filter(this.points,(function(e){return 0!==e.y})).length){var r=0;n.forEach(this.points,(function(t){if(t.y){var i=" "+(t.series.options.labelPrefix?t.series.options.labelPrefix+" "+t.series.name:t.series.name);e<2&&r++>0&&(o+="<br />"),o+='<span style="margin: 1px 5px;"><span style="color:'+t.color+'">●</span>'+i+": <b>"+(t.series.options.decimalFormat?a.numberFormat(t.y,2):t.y)+(t.series.options.labelSuffix?t.series.options.labelSuffix:"")+"</b></span>"}}))}return o+="</div>"},shared:!0,useHTML:!0},i.plotOptions=n.merge(i.plotOptions,{series:{marker:{enabled:!1},fillOpacity:.1}}),e.type&&e.type.startsWith("area")&&(i.xAxis=n.merge(i.xAxis,{crosshair:!0}));else if(e.type&&"solidgauge"===e.type)i=n.merge(i,{pane:{background:{innerRadius:"80%",outerRadius:"100%"}},tooltip:{enabled:!1},yAxis:{showFirstLabel:!1,showLastLabel:!1,min:0,max:100,stops:[[.1,"#55BF3B"],[.5,"#DDDF0D"],[.9,"#DF5353"]],minorTickInterval:null,tickAmount:2},plotOptions:{solidgauge:{innerRadius:"80%",outerRadius:"100%",dataLabels:{y:30,borderWidth:0,useHTML:!0}}},series:[{dataLabels:{format:'<div style="text-align:center"><span style="font-size:25px;color:'+(a.theme&&a.theme.contrastTextColor||"black")+'">{y}%</span><br/><span style="font-size:12px;color:silver;">'+i.series[0].name+"</span></div>"}}]});else if(e.type&&"column"===e.type)e.stacked&&(i.plotOptions={column:{stacking:"normal"}});else if(e.type&&"sparkline"===e.type){var l=n.max(i.series[0].data);i=n.merge(i,{chart:{backgroundColor:null,borderWidth:0,type:"area",margin:[0,0,2,0],skipClone:!0},title:{text:""},credits:{enabled:!1},xAxis:{labels:{enabled:!1},title:{text:null},startOnTick:!1,endOnTick:!1,tickPositions:[]},yAxis:{max:0===l?1:l,endOnTick:!1,startOnTick:!1,labels:{enabled:!1},title:{text:null},tickPositions:[0]},legend:{enabled:!1},tooltip:{hideDelay:0,outside:!0,shared:!0,headerFormat:"",pointFormat:"<b>{point.y}</b> hits"},plotOptions:{series:{animation:!1,lineWidth:2,shadow:!1,states:{hover:{lineWidth:2}},marker:{enabled:!1,radius:1,states:{hover:{radius:2}}},fillOpacity:.25},column:{negativeColor:"#910000",borderColor:"silver"}}})}"map"===e.type?a.mapChart(o,n.cloneDeep(i)):a.chart(o,n.cloneDeep(i))}}e.type&&e.type.startsWith("area")&&(t.bind("mousemove touchmove touchstart",(function(e){var t,i,o,r;for(i=0;i<a.charts.length;i++)(t=a.charts[i])&&t.pointer&&(o=e.originalEvent?t.pointer.normalize(e.originalEvent):t.pointer.normalize(e),r=n.map(t.series,(function(e){return e.searchPoint(o,!0)})),r=n.filter(r,(function(e){return e})),e.points=r,r.length&&r[0]&&r[0].series.area&&r[0].highlight(e))})),a.Pointer.prototype.reset=function(){for(var e,t=0;t<a.charts.length;t++)(e=a.charts[t])&&(e.tooltip&&e.tooltip.hide(this),e.xAxis[0]&&e.xAxis[0].hideCrosshair())},a.Point.prototype.highlight=function(e){e.points.length&&(this.onMouseOver(),this.series.chart.tooltip.refresh(e.points),this.series.chart.xAxis[0].drawCrosshair(e,this))}),e.$watch("options",(function(e){setTimeout((function(){d(e,l),s=e}))})),o.element(r.$window).bind("resize",(function(){c()})),e.$on("onWidgetResize",(function(){c()}))}}},s=function(){function e(e){this.$window=e}return e.$inject=["$window"],e}();t.default=r},function(e,t,i){"use strict";t.__esModule=!0;var n=function(){return{restrict:"A",controller:a,link:function(e,t,i,n){i.$observe("ngSrc",(function(){if(i.graviteeUserAvatar){var e=n.$q.defer(),a=new Image;return a.onerror=function(){e.resolve(!1),t.attr("src","assets/default_photo.png")},a.onload=function(){e.resolve(!0)},a.src=n.Constants.baseURL+"users/"+i.graviteeUserAvatar+"/avatar",e.promise}t.attr("src","assets/default_photo.png")}))}}},a=function(){function e(e,t,i){this.$scope=e,this.$q=t,this.Constants=i}return e.$inject=["$scope","$q","Constants"],e}();t.default=n},function(e,t,i){"use strict";function n(e,t,i){e.title=i.title,e.msg=i.msg,e.confirmButton=i.confirmButton||"OK",e.cancelButton=i.cancelButton||"Cancel",this.cancel=function(){t.hide(!1)},this.confirm=function(){t.hide(!0)}}n.$inject=["$scope","$mdDialog","locals"],t.__esModule=!0,t.default=n},function(e,t,i){"use strict";function n(e,t,i){e.title=i.title,e.msg=i.msg,e.warning=i.warning,e.validationMessage=i.validationMessage,e.confirmButton=i.confirmButton,e.validationValue=i.validationValue,e.confirmValue="",this.cancel=function(){t.hide(!1)},this.confirm=function(){t.hide(!0)}}n.$inject=["$scope","$mdDialog","locals"],t.__esModule=!0,t.default=n},function(e,t,i){"use strict";function n(e){this.cancel=e.cancel,this.codeMirrorOptions={lineWrapping:!1,lineNumbers:!0,mode:"javascript",readOnly:!0,controller:this},this.codemirrorLoaded=function(e){this.controller.editor=e,this.controller.editor.getDoc().markClean()},this.specificationExample=JSON.stringify([{key:1,value:"https://north-europe.company.com/"},{key:2,value:"https://north-europe.company.com/"},{key:3,value:"https://south-asia.company.com/"}],null,2)}n.$inject=["$mdDialog"],t.__esModule=!0,t.default=n},function(e,t,i){"use strict";t.__esModule=!0;var n=i(3),a=function(){function e(e,t,i,n,a){this.TenantService=e,this.NotificationService=t,this.$q=i,this.$mdEditDialog=n,this.$mdDialog=a,this.tenantsToCreate=[],this.tenantsToUpdate=[]}return e.$inject=["TenantService","NotificationService","$q","$mdEditDialog","$mdDialog"],e.prototype.$onInit=function(){this.initialTenants=n.cloneDeep(this.tenants)},e.prototype.newTenant=function(e){var t=this;e.stopPropagation();var i=this;this.$mdEditDialog.small({placeholder:"Add a name",save:function(e){var i={name:e.$modelValue};t.tenants.push(i),t.tenantsToCreate.push(i)},targetEvent:e,validators:{"md-maxlength":30}}).then((function(e){var t=e.getInput();t.$viewChangeListeners.push((function(){t.$setValidity("empty",0!==t.$modelValue.length),t.$setValidity("duplicate",!n.includes(n.map(i.tenants,"name"),t.$modelValue))}))}))},e.prototype.editName=function(e,t){e.stopPropagation();var i=this;this.$mdEditDialog.small({modelValue:t.name,placeholder:"Add a name",save:function(e){t.name=e.$modelValue,n.includes(i.tenantsToCreate,t)||i.tenantsToUpdate.push(t)},targetEvent:e,validators:{"md-maxlength":30}}).then((function(e){var t=e.getInput();t.$viewChangeListeners.push((function(){t.$setValidity("empty",0!==t.$modelValue.length)}))}))},e.prototype.editDescription=function(e,t){e.stopPropagation();var i=this;this.$mdEditDialog.small({modelValue:t.description,placeholder:"Add a description",save:function(e){t.description=e.$modelValue,n.includes(i.tenantsToCreate,t)||i.tenantsToUpdate.push(t)},targetEvent:e,validators:{"md-maxlength":160}})},e.prototype.saveTenants=function(){var e=this;this.$q.all([this.TenantService.create(e.tenantsToCreate),this.TenantService.update(e.tenantsToUpdate)]).then((function(t){e.NotificationService.show("Tenants saved with success"),e.tenantsToCreate=[],e.tenantsToUpdate=[];var i=t[0];i&&(e.tenants=n.unionBy(i.data,e.tenants,"name"))}))},e.prototype.deleteTenant=function(e){var t=this;this.$mdDialog.show({controller:"DeleteTenantDialogController",template:i(880),locals:{tenant:e}}).then((function(i){i&&(e.id?t.TenantService.delete(e).then((function(){t.NotificationService.show("Tenant '"+e.name+"' deleted with success"),n.remove(t.tenants,e)})):(n.remove(t.tenantsToCreate,e),n.remove(t.tenants,e)))}))},e.prototype.reset=function(){this.tenants=n.cloneDeep(this.initialTenants),this.tenantsToCreate=[],this.tenantsToUpdate=[]},e.prototype.onClipboardSuccess=function(e){this.NotificationService.show("Sharding Tag ID has been copied to clipboard"),e.clearSelection()},e}();t.default=a},function(e,t){e.exports=" <md-dialog aria-label=\"Delete tenant '{{tenant}}'\"> <md-dialog-content layout-padding> <p>Are you sure you want to delete the tenant '{{tenant}}'?</p> </md-dialog-content> <md-dialog-actions layout=row> <md-button ng-click=cancel() md-auto-focus> Cancel </md-button> <md-button ng-click=ok() class=\"md-raised md-warn\"> Delete tenant </md-button> </md-dialog-actions> </md-dialog> "},function(e,t,i){"use strict";t.__esModule=!0;var n=function(){function e(e,t){this.$http=e,this.tenantsURL=t.baseURL+"configuration/tenants/"}return e.$inject=["$http","Constants"],e.prototype.list=function(){return this.$http.get(this.tenantsURL)},e.prototype.create=function(e){if(e&&e.length)return this.$http.post(this.tenantsURL,e)},e.prototype.update=function(e){if(e&&e.length)return this.$http.put(this.tenantsURL,e)},e.prototype.delete=function(e){if(e)return this.$http.delete(this.tenantsURL+e.id)},e}();t.default=n},function(e,t,i){"use strict";function n(e,t,i){e.tenant=i.name,e.cancel=function(){t.cancel()},e.ok=function(){t.hide(!0)}}n.$inject=["$scope","$mdDialog","tenant"],t.__esModule=!0,t.default=n},function(e,t,i){"use strict";t.__esModule=!0;var n={bindings:{categories:"<"},controller:"CategoriesController",template:i(884)};t.default=n},function(e,t){e.exports=' <div class="gv-forms gv-forms-fluid" layout=column> <h1>Categories</h1> <div class=gv-form> <div class=gv-form-content layout=column> <md-input-container class=gv-input-container-dense> <md-switch ng-model=$ctrl.settings.portal.apis.categoryMode.enabled aria-label="Category Mode" ng-change=$ctrl.toggleDisplayMode();> Enable Category Mode </md-switch> <div class=hint> Switch on to enable Category mode and automatically replace API gallery by Category gallery. Switch off to disable this option. </div> </md-input-container> <md-table-container ng-if="$ctrl.categories && $ctrl.categories.length > 0"> <table md-table> <thead md-head> <tr md-row> <th md-column width=1%></th> <th md-column width=1% nowrap=nowrap>Name</th> <th md-column>Description</th> <th md-column width=1% nowrap=nowrap>Visibility</th> <th md-column width=1% nowrap=nowrap>APIs</th> <th md-column width=96px nowrap=nowrap></th> <th md-column width=48px nowrap=nowrap></th> </tr> </thead> <tbody md-body> <tr md-row ng-repeat="category in $ctrl.categories | orderBy:category.order"> <td md-cell nowrap=nowrap> <gravitee-identity-picture image-id=category.id image-url=::category.picture_url image-name=category.name image-width=40></gravitee-identity-picture> </td> <td md-cell width=1% nowrap=nowrap><a ui-sref="management.settings.category({categoryId: category.key})">{{category.name}}</a></td> <td md-cell>{{category.description}}</td> <td permission permission-only="\'environment-category-u\'" md-cell width=1% nowrap=nowrap> <ng-md-icon icon="visibility{{category.hidden?\'_off\':\'\'}}" ng-click=$ctrl.toggleVisibility(category)></ng-md-icon> </td> <td md-cell width=1% nowrap=nowrap>{{category.totalApis}}</td> <td md-cell width=96px nowrap=nowrap style=text-align:center> <ng-md-icon permission permission-only="\'environment-category-u\'" ng-if=!$first icon=arrow_upwards ng-click=$ctrl.upward($index)></ng-md-icon> <ng-md-icon permission permission-only="\'environment-category-u\'" ng-if=!$last icon=arrow_downward ng-click=$ctrl.downward($index)></ng-md-icon> </td> <td md-cell width=48px style="padding:0 12px!important"> <ng-md-icon permission permission-only="\'environment-category-d\'" icon=delete ng-click=$ctrl.deleteCategory(category)> <md-tooltip md-direction=top md-visible=false>Delete</md-tooltip> </ng-md-icon> </td> </tr> </tbody> </table> </md-table-container> </div> </div> <gravitee-empty-state ng-if="!$ctrl.categories || $ctrl.categories.length == 0" icon=category_module message="There is no category to manage"></gravitee-empty-state> </div> <md-button permission permission-only="\'environment-category-c\'" aria-label="Add category" class="md-fab md-fab-bottom-right md-fab-scrollable" ng-class="{\'gv-help-displayed\': $ctrl.$rootScope.helpDisplayed}" ui-sref=management.settings.categorynew> <md-tooltip md-direction=top md-visible=false>Add a new category</md-tooltip> <ng-md-icon icon=add></ng-md-icon> </md-button> '},function(e,t,i){"use strict";t.__esModule=!0;var n={bindings:{category:"<",categoryApis:"<"},controller:"CategoryController",template:i(886)};t.default=n},function(e,t){e.exports=' <div class=gv-forms layout=column> <div class=gv-forms-header> <h1>{{$ctrl.createMode ? \'New\' : \'Edit\'}} category</h1> <a ui-sref=management.settings.categories>Back to categories</a> </div> <div class=gv-form> <h2>General</h2> <div class=gv-form-content layout=column> <form name=$ctrl.categoryForm> <div layout=row> <div layout=column flex> <div layout-gt-sm=row> <md-input-container class=md-block flex-gt-sm> <label>Name</label> <input ng-model=$ctrl.category.name type=text required name=name maxlength=50> <div class=hint ng-if="$ctrl.categoryForm.name.$valid || $ctrl.categoryForm.name.$pristine">Category Name</div> <div ng-messages=$ctrl.categoryForm.name.$error> <div ng-message=required>Category name is required.</div> <div ng-message=md-maxlength>The name has to be less than 50 characters long.</div> </div> </md-input-container> </div> <div layout-gt-sm=row> <md-input-container class=md-block flex-gt-sm> <label>Description</label> <input ng-model=$ctrl.category.description type=text name=description> <div class=hint ng-if="$ctrl.categoryForm.description.$valid || $ctrl.categoryForm.description.$pristine"> Provide a description of your category </div> </md-input-container> </div> <div layout-gt-sm=row class=new-category-form-input-action> <md-input-container class=md-block flex-gt-sm> <label>Visibility</label> <ng-md-icon icon="visibility{{$ctrl.category.hidden?\'_off\':\'\'}}" ng-click=$ctrl.toggleVisibility()></ng-md-icon> <div class=hint ng-if="$ctrl.categoryForm.name.$valid || $ctrl.categoryForm.name.$pristine">Choose to display or hide the category</div> </md-input-container> </div> </div> <div> <gravitee-image image-id="\'category\'" image=$ctrl.category.picture image-url=$ctrl.category.picture_url image-name=$ctrl.category.name></gravitee-image> </div> </div> </form> </div> </div> <div class=gv-form> <h2>APIs</h2> <div class=gv-form-content layout=column> <blockquote style=border-left:none> <p style=font-size:12px> <ng-md-icon icon=info style=fill:grey></ng-md-icon> Choose among APIs which one will be attached to the category. </p> </blockquote> <div layout=row layout-align="space-around center"> <md-autocomplete md-input-id=new-category-apis-autocomplete-id flex=70 md-search-text=$ctrl.searchText md-selected-item-change=$ctrl.selectedApiChange(api) md-items="api in $ctrl.searchAPI($ctrl.searchText)" md-item-text=api.name placeholder="Select an API" md-autofocus=false md-delay=500 md-min-length=0 md-no-cache=true md-menu-class=autocomplete-custom-template> <md-item-template> <md-list-item class="md-2-line contact-item"> <div class="md-list-item-text compact"> <h3><ng-md-icon icon=collections_bookmark style=fill:grey></ng-md-icon> {{api.name}}</h3> <h4 ng-if=api.version><ng-md-icon icon=watch_later style=fill:grey size=14px></ng-md-icon> <small>{{api.version}}</small></h4> </div> </md-list-item> </md-item-template> <md-not-found> No API matching "{{$ctrl.searchText}}" were found. </md-not-found> </md-autocomplete> </div> <md-table-container style=margin-top:10px ng-if="$ctrl.getApis().length > 0"> <table md-table> <thead md-head> <tr md-row> <th md-column><span>Name</span></th> <th md-column>Version</th> <th md-column>Context path</th> <th md-column>Highlight API <md-tooltip md-direction=top>Highlight API will put your API in the spotlights</md-tooltip></th> <th></th> </tr> </thead> <tbody md-body> <tr md-row ng-repeat="api in $ctrl.getApis() track by api.id"> <td md-cell>{{api.name}}</td> <td md-cell>{{api.version}}</td> <td md-cell>{{api.context_path}}</td> <td md-cell> <md-checkbox ng-click=$ctrl.toggleHighlightAPI(api) aria-label="highlight API" ng-checked=$ctrl.isHighlightApi(api)></md-checkbox> </td> <td md-cell> <ng-md-icon permission permission-only="\'environment-category-u\'" icon=delete ng-click=$ctrl.removeApi(api)></ng-md-icon> </td> </tr> </tbody> </table> </md-table-container> <div layout=row> <md-button ng-disabled="$ctrl.categoryForm.$invalid || $ctrl.categoryForm.$pristine && !$ctrl.formChanged" ng-click=$ctrl.save() permission permission-only="[\'environment-category-c\', \'environment-category-u\']" class="md-raised md-primary"> Save </md-button> </div> </div> </div> </div> '},function(e,t,i){"use strict";t.__esModule=!0;var n={bindings:{tenants:"<"},controller:"TenantsController",template:i(888)};t.default=n},function(e,t){e.exports=' <div class=gv-forms layout=column> <h1>Tenants</h1> <blockquote> <p style=font-size:12px> <ng-md-icon icon=info style=fill:grey></ng-md-icon> Copy/paste the ID to the API gateway configuration file in order to resolve API endpoints according to the configured tenant. </p> </blockquote> <div class=gv-form> <h2>Details</h2> <div class=gv-form-content layout=column> <md-table-container> <table md-table ng-init="order = \'name\'"> <thead md-head md-order=order> <tr md-row> <th md-column md-order-by=id>ID </th> <th md-column md-order-by=name>Name</th> <th md-column md-order-by=description>Description</th> <th permission permission-only="\'environment-tenant-d\'"></th> </tr> </thead> <tbody md-body> <tr md-row ng-repeat="tenant in $ctrl.tenants | orderBy: order" ng-mouseover="hovered = true && tenant.id" ng-mouseout="hovered = false"> <td md-cell style=position:relative> {{tenant.id}} <span style=position:absolute;bottom:8px> <md-tooltip md-direction=right>Copy to clipboard</md-tooltip> <ng-md-icon ng-show=hovered icon=link ngclipboard data-clipboard-text={{tenant.id}} ngclipboard-success=$ctrl.onClipboardSuccess(e); role=button></ng-md-icon> </span> </td> <td permission permission-only="\'environment-tenant-u\'" md-cell ng-click="$ctrl.editName($event, tenant)" ng-class="{\'gravitee-placeholder\': !tenant.name}"> {{tenant.name || \'Add a name\'}} </td> <td permission permission-only="\'environment-tenant-u\'" md-cell ng-click="$ctrl.editDescription($event, tenant)" ng-class="{\'gravitee-placeholder\': !tenant.description}"> {{tenant.description || \'Add a description\'}} </td> <td permission permission-except="\'environment-tenant-u\'"> {{tenant.name}} </td> <td permission permission-except="\'environment-tenant-u\'"> {{tenant.description}} </td> <td md-cell permission permission-only="\'environment-tenant-d\'"><ng-md-icon icon=delete ng-click=$ctrl.deleteTenant(tenant)></ng-md-icon></td> </tr> <tr md-row permission permission-only="\'environment-tenant-c\'"> <td md-cell></td> <td md-cell ng-click=$ctrl.newTenant($event) class=gravitee-placeholder> New tenant </td> <td md-cell></td> <td md-cell></td> </tr> </tbody> </table> </md-table-container> <div permission permission-only="[\'environment-tenant-c\', \'environment-tenant-u\']"> <md-button ng-click=$ctrl.saveTenants() ng-disabled="!$ctrl.tenantsToCreate.length && !$ctrl.tenantsToUpdate.length" class="md-raised md-primary">Save</md-button> <md-button ng-click=$ctrl.reset() ng-disabled="!$ctrl.tenantsToCreate.length && !$ctrl.tenantsToUpdate.length" class=md-raised>Reset</md-button> </div> </div> </div> </div> '},function(e,t,i){"use strict";t.__esModule=!0;var n={bindings:{tags:"<",entrypoints:"<",groups:"<"},controller:"TagsController",template:i(890)};t.default=n},function(e,t){e.exports=' <div class=gv-forms layout=column> <h1>Sharding Tags</h1> <blockquote> <p style=font-size:12px> <ng-md-icon icon=info style=fill:grey></ng-md-icon> Copy/paste the ID to the API gateway configuration file in order to manage API deployments. </p> </blockquote> <div class=gv-form> <div class=gv-form-content layout=column ng-if="$ctrl.tags.length > 0"> <md-table-container> <table md-table ng-init="order = \'name\'"> <thead md-head md-order=order> <tr md-row> <th md-column md-order-by=id>ID</th> <th md-column md-order-by=name>Name</th> <th md-column md-order-by=description>Description</th> <th md-column md-order-by=description>Restricted groups</th> <th permission permission-only="\'environment-tag-d\'" width=10%></th> </tr> </thead> <tbody md-body> <tr md-row ng-repeat="tag in $ctrl.tags | orderBy: order" ng-mouseover="hovered = true && tag.id" ng-mouseout="hovered = false"> <td md-cell> <a ui-sref="management.settings.tag({tagId: tag.id})">{{tag.id}}</a> <span style=position:absolute> <md-tooltip md-direction=right>Copy to clipboard</md-tooltip> <ng-md-icon ng-show=hovered ng-hide=!hovered icon=link ngclipboard data-clipboard-text={{tag.id}} ngclipboard-success=$ctrl.onClipboardSuccess(e); role=button style=margin-left:3px;top:-6px></ng-md-icon> </span> </td> <td md-cell>{{tag.name}}</td> <td md-cell>{{tag.description}}</td> <td md-cell>{{$ctrl.groupNames(tag.restricted_groups)}}</td> <td md-cell permission permission-only="\'environment-tag-d\'" ng-click=$event.stopPropagation()> <ng-md-icon icon=delete ng-click=$ctrl.deleteTag(tag)></ng-md-icon> </td> </tr> </tbody> </table> </md-table-container> </div> <form name=$ctrl.formSettings class=gv-form ng-submit=$ctrl.saveSettings()> <h2>Default configuration</h2> <div class=gv-form-content layout=column> <md-input-container class=md-block flex-gt-xs> <label>Entrypoint</label> <input ng-model=$ctrl.Constants.portal.entrypoint> </md-input-container> <md-card-actions> <md-button type=submit class="md-raised md-primary" ng-disabled="$ctrl.formSettings.$invalid || $ctrl.formSettings.$pristine" permission permission-only="[\'environment-settings-c\', \'environment-settings-u\', \'environment-settings-d\']">Save</md-button> <md-button type=button class=md-raised ng-click=$ctrl.resetSettings() ng-disabled="$ctrl.formSettings.$invalid || $ctrl.formSettings.$pristine" permission permission-only="[\'environment-settings-c\', \'environment-settings-u\', \'environment-settings-d\']">Reset</md-button> </md-card-actions> </div> </form> <br/> <a ng-if="$ctrl.tags && $ctrl.tags.length" ui-sref=management.settings.newEntrypoint>Add a mapping configuration entrypoint / tags</a> <br/> <div class=gv-form-content layout=column ng-if="$ctrl.entrypoints && $ctrl.entrypoints.length"> <md-table-container> <table md-table> <thead md-head> <tr md-row> <th md-column>Entrypoint</th> <th md-column>Tags</th> <th permission permission-only="\'environment-entrypoint-u\'" width=64px nowrap=nowrap></th> <th permission permission-only="\'environment-entrypoint-d\'" width=64px nowrap=nowrap></th> </tr> </thead> <tbody md-body> <tr md-row ng-repeat="entrypoint in $ctrl.entrypoints | orderBy: order"> <td md-cell>{{entrypoint.value}}</td> <td md-cell>{{entrypoint.tags.join(\', \')}}</td> <td md-cell permission permission-only="\'environment-entrypoint-u\'"> <ng-md-icon icon=edit ui-sref="management.settings.entrypoint({entrypointId: entrypoint.id})"></ng-md-icon> </td> <td md-cell permission permission-only="\'environment-entrypoint-d\'"> <ng-md-icon icon=delete ng-click=$ctrl.deleteEntrypoint(entrypoint)></ng-md-icon> </td> </tr> </tbody> </table> </md-table-container> </div> </div> <gravitee-empty-state ng-if="$ctrl.tags.length == 0" icon=label message="There is no sharding tag to manage"></gravitee-empty-state> <div ng-style="{\'text-align\': $ctrl.tags.length == 0 ? \'center\' : \'none\' }"> <md-button permission permission-only="[\'environment-tag-c\']" ng-class="{\'md-fab-bottom-right md-fab-scrollable\': $ctrl.tags.length > 0, \'gv-help-displayed\': $ctrl.$rootScope.helpDisplayed}" class=md-fab aria-label=Add ng-click=$ctrl.showAddTagModal() ui-sref="management.settings.tag({tagId: \'new\'})"> <ng-md-icon icon=add></ng-md-icon> </md-button> </div> </div> '},function(e,t,i){"use strict";t.__esModule=!0;var n={bindings:{metadata:"<",metadataFormats:"<"},controller:"MetadataController",template:i(892)};t.default=n},function(e,t){e.exports=' <div class="gv-forms gv-forms-fluid" layout=column> <h1>Metadata</h1> <div class=gv-form> <h2></h2> <div class=gv-form-content layout=column> <md-table-container> <table md-table class=gv-table-dense ng-init="metadataOrder = \'key\'"> <thead md-head md-order=metadataOrder> <tr md-row> <th md-column md-order-by=key>Key</th> <th md-column md-order-by=name>Name</th> <th md-column md-order-by=format>Format</th> <th md-column md-order-by=value>Default value</th> <th md-column width=64px nowrap=nowrap>></th> </tr> </thead> <tbody md-body> <tr md-row ng-repeat="metadata in $ctrl.metadata | orderBy: metadataOrder"> <td md-cell><a ng-click=$ctrl.updateMetadata(metadata)>{{metadata.key}}</a></td> <td md-cell>{{metadata.name}}</td> <td md-cell>{{metadata.format}}</td> <td md-cell>{{metadata.value}}</td> <td md-cell width=64px nowrap=nowrap>> <ng-md-icon permission permission-only="\'environment-metadata-d\'" icon=delete ng-click=$ctrl.deleteMetadata(metadata) style=font-size:24px;height:24px> <md-tooltip md-direction=top md-visible=false>Delete metadata</md-tooltip> </ng-md-icon> </td> </tr> </tbody> </table> </md-table-container> </div> </div> </div> <md-button permission permission-only="\'environment-metadata-c\'" aria-label="Add metadata" class="md-fab md-fab-bottom-right md-fab-scrollable" ng-class="{\'gv-help-displayed\': $ctrl.$rootScope.helpDisplayed}" ng-click=$ctrl.newMetadata()> <md-tooltip md-direction=top md-visible=false>Add a new metadata</md-tooltip> <ng-md-icon icon=add></ng-md-icon> </md-button> '},function(e,t,i){"use strict";t.__esModule=!0;t.default={restrict:"A",require:"ngModel",scope:{format:"=gvMetadataFormat",ngPattern:"="},link:function(e){e.$watch("format",(function(t){switch(t){case"numeric":e.ngPattern=/^((\$\{.+\})|\d+(\.\d{1,2})?)$/;break;case"url":e.ngPattern=/^((\$\{.+\})|(https?:\/\/)?([\da-z\.-]+)\.([a-z\.]{2,6})([\/\w \.-]*)*\/?)$/;break;case"mail":e.ngPattern=/^((\$\{.+\})|(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,})))$/;break;case"string":delete e.ngPattern}}))}}},function(e,t,i){"use strict";t.__esModule=!0;var n=i(3),a=function(){function e(e,t,i,n,a,o,r,s,l){this.NotificationService=e,this.$mdDialog=t,this.resolvedApi=i,this.ApiService=n,this.UserService=a,this.metadataFormats=o,this.metadata=r,this.$state=s,this.$rootScope=l,this.api=i.data}return e.$inject=["NotificationService","$mdDialog","resolvedApi","ApiService","UserService","metadataFormats","metadata","$state","$rootScope"],e.prototype.newMetadata=function(){var e=this;this.$mdDialog.show({controller:"NewApiMetadataDialogController",controllerAs:"$ctrl",template:i(255),locals:{api:this.api,metadataFormats:this.metadataFormats}}).then((function(t){e.NotificationService.show("Metadata '"+t.name+"' created with success"),e.$state.reload()})).catch((function(){}))},e.prototype.updateMetadata=function(e){var t=this;this.UserService.isUserHasPermissions(["api-metadata-u"])&&this.$mdDialog.show({controller:"UpdateApiMetadataDialogController",controllerAs:"$ctrl",template:i(255),locals:{api:this.api,apiMetadata:n.clone(e),metadataFormats:this.metadataFormats}}).then((function(e){t.NotificationService.show("API's Metadata '"+e.name+"' updated with success"),t.$state.reload()})).catch((function(){}))},e.prototype.deleteMetadata=function(e){var t=this;this.$mdDialog.show({controller:"DeleteApiMetadataDialogController",controllerAs:"$ctrl",template:i(895),locals:{metadata:e}}).then((function(i){i&&t.ApiService.deleteMetadata(t.api.id,e.key).then((function(){t.NotificationService.show("Metadata '"+e.name+"' deleted with success"),t.$state.reload()}))}))},e}();t.default=a},function(e,t){e.exports=" <md-dialog aria-label=\"Delete API's metadata '{{$ctrl.metadata}}'\"> <md-dialog-content layout-padding> <p>Are you sure you want to delete the API's metadata '{{$ctrl.metadataName}}'?</p> </md-dialog-content> <md-dialog-actions layout=row> <md-button ng-click=$ctrl.cancel()> Cancel </md-button> <md-button ng-click=$ctrl.ok() class=\"md-raised md-warn\"> Delete API's metadata </md-button> </md-dialog-actions> </md-dialog> "},function(e,t,i){"use strict";t.__esModule=!0;var n={bindings:{metadata:"<"},controller:"ApiMetadataController",template:i(256)};t.default=n},function(e,t,i){"use strict";function n(e,t,i,n,a){this.api=n,this.metadata=i,"date"===this.metadata.format&&(this.metadata.value=this.metadata.value?new Date(this.metadata.value):null,this.metadata.defaultValue&&(this.metadata.defaultValue=new Date(this.metadata.defaultValue))),this.metadataFormats=a,this.cancel=function(){t.cancel()},this.save=function(){e.updateMetadata(this.api.id,this.metadata).then((function(e){t.hide(e.data)}))}}n.$inject=["ApiService","$mdDialog","apiMetadata","api","metadataFormats"],t.__esModule=!0,t.default=n},function(e,t,i){"use strict";function n(e,t){this.metadataName=t.name,this.cancel=function(){e.cancel()},this.ok=function(){e.hide(!0)}}n.$inject=["$mdDialog","metadata"],t.__esModule=!0,t.default=n},function(e,t,i){"use strict";function n(e,t,i,n){this.api=i,this.metadata={},this.metadataFormats=n,this.metadataFormats&&this.metadataFormats.length&&(this.metadata.format=this.metadataFormats[0]),this.cancel=function(){t.cancel()},this.save=function(){e.createMetadata(this.api.id,this.metadata).then((function(e){t.hide(e.data)}))}}n.$inject=["ApiService","$mdDialog","api","metadataFormats"],t.__esModule=!0,t.default=n},function(e,t,i){"use strict";t.__esModule=!0;var n=i(3),a={bindings:{roleScopes:"<"},template:i(901),controller:["RoleService","NotificationService","$state",function(e,t,i){var a=this;this.$onInit=function(){a.editMode=!!i.params.role,a.permissions=a.roleScopes[i.params.roleScope],i.params.role?e.get(i.params.roleScope,i.params.role).then((function(e){a.role=e,a._modelToView(),a.checkSelectAll()})):a.permissions?a.role={scope:i.params.roleScope,permissions:n.zipObject(a.permissions,n.map(a.permissions,(function(){return{}})))}:i.go("management.settings.roles")},this.save=function(){var i;i=a.editMode?e.update(a._viewToModel()):e.create(a._viewToModel());var n=a;i.then((function(e){n.role=e,n._modelToView(),n.formRole.$setPristine(),t.show("Role "+(n.editMode?"updated":"created")+" with success")}))},this._viewToModel=function(){var e=n.clone(a.role);return e.permissions=n(e.permissions).mapValues((function(e){return n(e).pickBy((function(e){return e})).keys()})).value(),e},this._modelToView=function(){a.role.permissions=n(a.role.permissions).mapValues((function(e){var t=n.values(e);return n.zipObject(t,n.map(t,(function(){return!0})))})).value()},this.selectAll=function(e,t){n.forEach(a.permissions,(function(i){a.role.permissions[i]||(a.role.permissions[i]={}),a.role.permissions[i][e]=t}))},this.checkSelectAll=function(){var e=this;this.createCheckedAll=n.every(this.permissions,(function(t){return e.role.permissions[t].C})),this.readCheckedAll=n.every(this.permissions,(function(t){return e.role.permissions[t].R})),this.updateCheckedAll=n.every(this.permissions,(function(t){return e.role.permissions[t].U})),this.deleteCheckedAll=n.every(this.permissions,(function(t){return e.role.permissions[t].D}))}}]};t.default=a},function(e,t){e.exports=' <div class=gv-forms layout=column> <div class=gv-forms-header> <h1 ng-if=!$ctrl.editMode>New role [{{$ctrl.role.scope}}]</h1> <h1 ng-if=$ctrl.editMode>Update [{{$ctrl.role.scope}}]: {{::$ctrl.role.name}}</h1> <a ui-sref=management.settings.roles>Back to roles</a> </div> <form name=$ctrl.formRole ng-submit=$ctrl.save() novalidate> <div class=gv-form> <h2>Details</h2> <div class=gv-form-content layout=column> <md-input-container ng-if=!$ctrl.editMode> <label>Role name</label> <input ng-model=$ctrl.role.name required autofocus> </md-input-container> <md-input-container> <label>Role description</label> <input ng-model=$ctrl.role.description> </md-input-container> <md-input-container> <md-checkbox ng-model=$ctrl.role.default> Default role </md-checkbox> </md-input-container> <md-table-container> <table md-table class=gv-table-dense> <thead md-head> <tr md-row> <th md-column></th> <th md-column>CREATE</th> <th md-column>READ</th> <th md-column>UPDATE</th> <th md-column>DELETE</th> </tr> <tr md-row> <th md-cell></th> <th md-cell> <md-checkbox aria-label="Select all create" ng-model=$ctrl.createCheckedAll ng-change="$ctrl.selectAll(\'C\', $ctrl.createCheckedAll)"></md-checkbox> </th> <th md-cell> <md-checkbox aria-label="Select all read" ng-model=$ctrl.readCheckedAll ng-change="$ctrl.selectAll(\'R\', $ctrl.readCheckedAll)"></md-checkbox> </th> <th md-cell> <md-checkbox aria-label="Select all update" ng-model=$ctrl.updateCheckedAll ng-change="$ctrl.selectAll(\'U\', $ctrl.updateCheckedAll)"></md-checkbox> </th> <th md-cell> <md-checkbox aria-label="Select all delete" ng-model=$ctrl.deleteCheckedAll ng-change="$ctrl.selectAll(\'D\', $ctrl.deleteCheckedAll)"></md-checkbox> </th> </tr> </thead> <tbody md-body> <tr md-row ng-repeat="permission in $ctrl.permissions"> <td md-cell><b>{{permission}}</b></td> <td md-cell> <md-checkbox aria-label="{{permission}} create" ng-model=$ctrl.role.permissions[permission].C ng-change=$ctrl.checkSelectAll()></md-checkbox> </td> <td md-cell> <md-checkbox aria-label="{{permission}} read" ng-model=$ctrl.role.permissions[permission].R ng-change=$ctrl.checkSelectAll()></md-checkbox> </td> <td md-cell> <md-checkbox aria-label="{{permission}} update" ng-model=$ctrl.role.permissions[permission].U ng-change=$ctrl.checkSelectAll()></md-checkbox> </td> <td md-cell> <md-checkbox aria-label="{{permission}} delete" ng-model=$ctrl.role.permissions[permission].D ng-change=$ctrl.checkSelectAll()></md-checkbox> </td> </tr> </tbody> </table> </md-table-container> <md-card-actions layout=row> <md-button type=submit ng-if=!$ctrl.role.system ng-disabled="$ctrl.formRole.$invalid || $ctrl.formRole.$pristine" class="md-raised md-primary"> Save</md-button> </md-card-actions> </div> </div> </form> </div> '},function(e,t,i){"use strict";t.__esModule=!0;var n=i(3),a={bindings:{members:"<"},template:i(903),controller:["RoleService","$mdDialog","NotificationService","$state","$stateParams","$rootScope",function(e,t,a,o,r,s){var l=this;this.$rootScope=s,this.loadedMembers=[],this.roleScope=r.roleScope,this.role=r.role,this.$onInit=function(){"ORGANIZATION"!==l.roleScope&&"ENVIRONMENT"!==l.roleScope&&o.go("management.settings")},this.loadMoreMembers=function(){var e=l.loadedMembers?l.loadedMembers.length:0;l.loadedMembers=n.take(l.members,20+e)},this.deleteUser=function(n,o){t.show({controller:"DialogConfirmController",controllerAs:"ctrl",template:i(5),clickOutsideToClose:!0,locals:{title:'Are you sure you want to delete the user "'+n.displayName+'" from role "'+l.role+'" ?',confirmButton:"Remove"}}).then((function(t){t&&e.deleteUser({scope:l.roleScope,name:l.role},n.id).then((function(){a.show("User "+n.displayName+" no longer has the role "+l.role),l.members.splice(o,1),l.loadedMembers.splice(o,1)}))}))},this.reloadMembers=function(){e.listUsers(l.roleScope,l.role).then((function(e){l.members=e,l.loadedMembers=[],l.loadMoreMembers()}))},this.addUserRole=function(){var e=l;t.show({controller:"DialogAddUserRoleController",controllerAs:"$ctrl",template:i(904),clickOutsideToClose:!0,locals:{roleScope:l.roleScope,role:l.role}}).then((function(t){t&&t.length>0&&e.reloadMembers()}))}}]};t.default=a},function(e,t){e.exports=' <div class=gv-forms layout=column> <div class=gv-forms-header> <h1>role [{{::$ctrl.roleScope}}]: {{::$ctrl.role}}</h1> <a ui-sref=management.settings.roles>Back to roles</a> </div> <div class=gv-form> <h2>Members</h2> <div class=gv-form-content layout=column infinite-scroll=$ctrl.loadMoreMembers() infinite-scroll-distance=1 infinite-scroll-container="\'.gv-sub-content\'"> <md-table-container> <table md-table> <thead md-head class=gv-table-dense> <tr md-row> <th md-column>Full name</th> <th md-column>Username</th> <th md-column></th> </tr> </thead> <tbody md-body> <tr md-row ng-repeat="user in $ctrl.loadedMembers"> <td md-cell>{{::user.displayName}}</td> <td md-cell>{{::user.username}}</td> <td md-cell ng-click=$event.stopPropagation()> <div layout=row layout-align="end center"> <span permission permission-only="[\'organization-role-u\']"> <md-tooltip md-direction=top>delete</md-tooltip> <ng-md-icon icon=delete ng-click="$ctrl.deleteUser(user, $index)" aria-label=delete-user></ng-md-icon> </span> </div> </td> </tr> </tbody> </table> </md-table-container> </div> </div> </div> <md-button permission permission-only="[\'organization-role-u\']" class="md-fab md-fab-bottom-right md-fab-scrollable" ng-class="{\'gv-help-displayed\': $ctrl.$rootScope.helpDisplayed}" aria-label=Add ng-click=$ctrl.addUserRole()> <ng-md-icon icon=add></ng-md-icon> </md-button>'},function(e,t){e.exports=' <md-dialog aria-label="Add member" layout-padding flex=30> <md-dialog-content class=searchMembers> <form name=formMember ng-submit=$event.preventDefault()> <md-autocomplete md-selected-item=$ctrl.selectedItem md-search-text=$ctrl.searchText md-selected-item-change=$ctrl.selectUser(user) md-items="user in $ctrl.searchUser($ctrl.searchText)" md-item-text=user.reference md-min-length=1 md-delay=500 placeholder="Search user..." md-autofocus=true md-menu-class=autocomplete-search-user flex> <md-item-template> <md-list-item class="md-2-line contact-item"> <gravitee-identity-picture image-id=user.id image-url=getUserAvatar(user.id) image-name=user.displayName image-width=40 image-border-radius=true class=md-avatar></gravitee-identity-picture> <div class="md-list-item-text compact"> <h3>{{user.displayName}}</h3> </div> </md-list-item> </md-item-template> <md-not-found> No user matching "{{searchText}}" were found, or users already selected. </md-not-found> </md-autocomplete> <br/> <md-list class=fixedRows ng-show="$ctrl.usersSelected.length > 0"> <md-subheader class=md-no-sticky>Selected users</md-subheader> <md-list-item class="md-2-line contact-item" ng-repeat="(index, user) in $ctrl.usersSelected"> <gravitee-identity-picture image-id=user.id image-url=getUserAvatar(user.id) image-name=user.displayName image-width=40 image-border-radius=true class=md-avatar></gravitee-identity-picture> <div class="md-list-item-text compact"> <h3>{{user.displayName}}</h3> </div> </md-list-item> </md-list> </form> </md-dialog-content> <md-dialog-actions layout=row> <md-button ng-click=$ctrl.hide()> Cancel </md-button> <md-button type=submit class="md-raised md-primary" ng-click=$ctrl.addUsers() ng-disabled="formMember.$invalid || $ctrl.usersSelected.length === 0"> Add </md-button> </md-dialog-actions> </md-dialog> '},function(e,t,i){"use strict";t.__esModule=!0;var n=i(3),a={bindings:{roleScopes:"<",organizationRoles:"<",environmentRoles:"<",apiRoles:"<",applicationRoles:"<"},template:i(906),controller:["RoleService","$mdDialog","NotificationService","$state",function(e,t,a,o){var r=this;this.rolesByScope={},this.$onInit=function(){r.rolesByScope.ORGANIZATION=r.organizationRoles,r.rolesByScope.ENVIRONMENT=r.environmentRoles,r.rolesByScope.API=r.apiRoles,r.rolesByScope.APPLICATION=r.applicationRoles},this.newRole=function(e){o.go("management.settings.rolenew",{roleScope:e})},this.deleteRole=function(o){var s=r;t.show({controller:"DialogConfirmController",controllerAs:"ctrl",template:i(5),clickOutsideToClose:!0,locals:{title:'Are you sure you want to delete the role "'+o.name+'" ?',confirmButton:"Remove"}}).then((function(t){t&&e.delete(o).then((function(){a.show("Role '"+o.name+"' deleted with success"),n.remove(s.rolesByScope[o.scope],o)}))}))},this.idUserManagementEnabled=function(t){return e.isUserRoleManagement(t.scope)},this.manageMembers=function(e){o.go("management.settings.rolemembers",{roleScope:e.scope,role:e.name})}}]};t.default=a},function(e,t){e.exports=' <div class=gv-forms layout=column> <h1>Roles</h1> <div class=gv-form ng-repeat="(scope, roles) in $ctrl.roleScopes"> <h2>scope: {{::scope}}</h2> <div class=gv-form-content layout=column> <md-table-container> <table md-table class=gv-table-dense> <thead md-head> <tr md-row> <th md-column width=20%>Name</th> <th md-column>Description</th> <th md-column width=48px></th> <th md-column width=48px></th> </tr> </thead> <tbody md-body> <tr md-row ng-repeat="role in $ctrl.rolesByScope[scope]"> <td md-cell> <a ui-sref="management.settings.roleedit({roleScope: role.scope, role: role.name})"> {{role.name}} </a> </td> <td md-cell> {{role.description}} <span ng-if=role.default flex class=badge style=background-color:#039be5>Default</span> <span ng-if=role.system flex class=badge>System</span> </td> <td md-cell ng-click=$event.stopPropagation() width=48px> <span style="padding:0 20px 0 0" ng-if=$ctrl.idUserManagementEnabled(role) permission permission-only="[\'organization-role-u\']"> <md-tooltip md-direction=top>members</md-tooltip> <ng-md-icon icon=group ng-click=$event.stopPropagation();$ctrl.manageMembers(role); aria-label=delete-user></ng-md-icon> </span> </td> <td md-cell ng-click=$event.stopPropagation() width=48px> <span permission permission-only="[\'organization-role-d\']"> <md-tooltip md-direction=top>delete</md-tooltip> <ng-md-icon ng-if="!role.system && !role.default" icon=delete ng-click=$event.stopPropagation();$ctrl.deleteRole(role); aria-label=delete-user></ng-md-icon> </span> </td> </tr> </tbody> </table> </md-table-container> <div class="md-actions gravitee-api-save-button" layout=row> <md-button permission permission-only="\'organization-role-c\'" aria-label="Add role" ng-click=$ctrl.newRole(scope) class="md-raised md-primary"> Add a new Role </md-button> </div> </div> </div> </div> '},function(e,t,i){"use strict";t.__esModule=!0;var n=i(3),a=function(){function e(e,t,i){this.$http=e,this.$q=i,this.roleURL=t.baseURL+"configuration/rolescopes/"}return e.$inject=["$http","Constants","$q"],e.prototype.listRights=function(){return["c","r","u","d"]},e.prototype.listScopes=function(){return this.fetchScopes().then((function(e){return e}))},e.prototype.listPermissionsByScope=function(e){return this.fetchScopes().then((function(t){return t[e]}))},e.prototype.isUserRoleManagement=function(e){return"ORGANIZATION"===e||"ENVIRONMENT"===e},e.prototype.get=function(e,t){return this.$http.get(this.roleURL+e+"/roles/"+t).then((function(e){var t=e.data;return t.scope=n.toUpper(t.scope),t}))},e.prototype.list=function(e){return this.$http.get(this.roleURL+e+"/roles").then((function(e){return n.map(e.data,(function(e){return e.scope=n.toUpper(e.scope),e}))}))},e.prototype.create=function(e){return this.$http.post(this.roleURL+e.scope+"/roles",e).then((function(e){var t=e.data;return t.scope=n.toUpper(t.scope),t}))},e.prototype.update=function(e){return this.$http.put(this.roleURL+e.scope+"/roles/"+e.name,e).then((function(e){var t=e.data;return t.scope=n.toUpper(t.scope),t}))},e.prototype.delete=function(e){return this.$http.delete(this.roleURL+e.scope+"/roles/"+e.name)},e.prototype.listUsers=function(e,t){return this.$http.get(this.roleURL+e+"/roles/"+t+"/users").then((function(e){return e.data}))},e.prototype.deleteUser=function(e,t){return this.$http.delete(this.roleURL+e.scope+"/roles/"+e.name+"/users/"+t)},e.prototype.addRole=function(e,t,i){return this.$http.post(""+this.roleURL+e+"/roles/"+t+"/users",i)},e.prototype.fetchScopes=function(){var e=this;return this.permissionsByScope?this.$q.resolve(this.permissionsByScope):this.$http.get(this.roleURL).then((function(t){return e.permissionsByScope=t.data,e.permissionsByScope}))},e}();t.default=a},function(e,t,i){"use strict";a.$inject=["$mdDialog","role","roleScope","$q","UserService","NotificationService","RoleService"],t.__esModule=!0;var n=i(3);function a(e,t,i,a,o,r,s){this.role=t,this.roleScope=i,this.roleUsers=[],this.usersSelected=[],this.searchText="";var l=this;s.listUsers(i,t).then((function(e){l.roleUsers=e})),this.hide=function(){e.cancel()},this.searchUser=function(e){if(e)return o.search(e).then((function(e){return e.data}))},this.getUserAvatar=function(e){return e?o.getUserAvatar(e):"assets/default_photo.png"},this.selectUser=function(e){e&&e.reference&&(n.find(this.usersSelected,{reference:e.reference})||this.usersSelected.push(e),this.searchText="")},this.addUsers=function(){for(var t=this,i=[],o=0;o<this.usersSelected.length;o++){var l=this.usersSelected[o],c={id:l.id,reference:l.reference};i.push(s.addRole(this.roleScope,this.role,c))}a.all(i).then((function(i){r.show("Users "+n.map(t.usersSelected,"displayName").join(",")+" has been added successfully to the role"),e.hide(i)}))}}t.default=a},function(e,t,i){"use strict";o.$inject=["$stateProvider"],t.__esModule=!0;var n=i(910),a=i(3);function o(e){e.state("management.applications",{abstract:!0,url:"/applications"}).state("management.applications.list",{url:"/",component:"applications",data:{menu:{label:"Applications",icon:"list",firstLevel:!0,order:20},perms:{only:["environment-application-r"]},docs:{page:"management-applications"}},resolve:{applications:["ApplicationService",function(e){return e.list().then((function(e){return e.data}))}]}}).state("management.applications.create",{url:"/create",component:"createApplication",resolve:{apis:["ApiService",function(e){return e.list(null,!0).then((function(e){return e.data}))}],enabledApplicationTypes:["ApplicationTypesService",function(e){return e.getEnabledApplicationTypes().then((function(e){return e.data.map((function(e){return new n.ApplicationType(e)}))}))}]},data:{perms:{only:["environment-application-c"]},docs:{page:"management-create-application"}}}).state("management.applications.application",{abstract:!0,url:"/:applicationId",component:"application",resolve:{application:["$stateParams","ApplicationService",function(e,t){return t.get(e.applicationId).then((function(e){return e.data}))}],applicationType:["$stateParams","ApplicationService",function(e,t){return t.getApplicationType(e.applicationId).then((function(e){return e.data}))}],resolvedApplicationPermissions:["ApplicationService","$stateParams",function(e,t){return e.getPermissions(t.applicationId)}],onEnter:["UserService","resolvedApplicationPermissions",function(e,t){e.currentUser.userApplicationPermissions=[],a.forEach(a.keys(t.data),(function(i){a.forEach(t.data[i],(function(t){var n="APPLICATION-"+i+"-"+t;e.currentUser.userApplicationPermissions.push(a.toLower(n))}))})),e.reloadPermissions()}]}}).state("management.applications.application.general",{url:"/",component:"applicationGeneral",data:{menu:{label:"Global settings",icon:"blur_on"},perms:{only:["application-definition-r"]},docs:{page:"management-application"}},resolve:{groups:["UserService","GroupService",function(e,t){return t.list().then((function(e){return a.filter(e.data,"manageable")}))}]}}).state("management.applications.application.subscriptions",{abstract:!0,url:"/subscriptions",template:"<div ui-view></div>"}).state("management.applications.application.subscriptions.list",{url:"?page&size&:api&:status&:api_key",component:"applicationSubscriptions",resolve:{subscriptions:["$stateParams","ApplicationService",function(e,t){var i="?page="+e.page+"&size="+e.size;return e.status&&(i+="&status="+e.status),e.api&&(i+="&api="+e.api),e.api_key&&(i+="&api_key="+e.api_key),t.listSubscriptions(e.applicationId,i).then((function(e){return e.data}))}],subscribers:["$stateParams","ApplicationService",function(e,t){return t.getSubscribedAPI(e.applicationId).then((function(e){return e.data}))}]},data:{menu:{label:"Subscriptions",icon:"vpn_key"},perms:{only:["application-subscription-r"]},docs:{page:"management-application-subscriptions"}},params:{status:{type:"string",dynamic:!0},api:{type:"string",dynamic:!0},page:{type:"int",value:1,dynamic:!0},size:{type:"int",value:10,dynamic:!0},api_key:{type:"string",dynamic:!0}}}).state("management.applications.application.subscriptions.subscription",{url:"/:subscriptionId?page&size&:api&:status&:api_key",component:"applicationSubscription",resolve:{subscription:["$stateParams","ApplicationService",function(e,t){return t.getSubscription(e.applicationId,e.subscriptionId).then((function(e){return e.data}))}]},data:{perms:{only:["application-subscription-r"]},docs:{page:"management-application-subscriptions"}},params:{status:{type:"string",dynamic:!0},api:{type:"string",dynamic:!0},page:{type:"int",value:1,dynamic:!0},size:{type:"int",value:10,dynamic:!0},api_key:{type:"string",dynamic:!0}}}).state("management.applications.application.subscriptions.subscribe",{url:"/subscribe",component:"applicationSubscribe",resolve:{apis:["ApiService",function(e){return e.list(null,!0).then((function(e){return e.data}))}],subscriptions:["$stateParams","ApplicationService",function(e,t){return t.listSubscriptions(e.applicationId).then((function(e){return e.data}))}]},data:{perms:{only:["application-subscription-r"]}}}).state("management.applications.application.members",{url:"/members",component:"applicationMembers",resolve:{members:["$stateParams","ApplicationService",function(e,t){return t.getMembers(e.applicationId).then((function(e){return e.data}))}],resolvedGroups:["GroupService",function(e){return e.list().then((function(e){return e.data}))}]},data:{menu:{label:"Members",icon:"group"},perms:{only:["application-member-r"]},docs:{page:"management-application-members"}}}).state("management.applications.application.analytics",{url:"/analytics?from&to&q&dashboard",component:"applicationAnalytics",resolve:{dashboards:["DashboardService",function(e){return e.list("APPLICATION").then((function(e){return e.data}))}]},data:{menu:{label:"Analytics",icon:"insert_chart"},perms:{only:["application-analytics-r"]},docs:{page:"management-application-analytics"}},params:{from:{type:"int",dynamic:!0},to:{type:"int",dynamic:!0},q:{type:"string",dynamic:!0},dashboard:{type:"string",dynamic:!0}}}).state("management.applications.application.logs",{url:"/logs?from&to&q&page&size",component:"applicationLogs",data:{menu:{label:"Logs",icon:"receipt"},perms:{only:["application-log-r"]},docs:{page:"management-application-logs"}},params:{from:{type:"int",dynamic:!0},to:{type:"int",dynamic:!0},q:{type:"string",dynamic:!0},page:{type:"int",dynamic:!0},size:{type:"int",dynamic:!0}},resolve:{apis:["$stateParams","ApplicationService",function(e,t){return t.getSubscribedAPI(e.applicationId)}]}}).state("management.applications.application.log",{url:"/logs/:logId?timestamp&from&to&q&page&size",component:"applicationLog",resolve:{log:["$stateParams","ApplicationService",function(e,t){return t.getLog(e.applicationId,e.logId,e.timestamp).then((function(e){return e.data}))}]},data:{perms:{only:["application-log-r"]}}})}t.default=o},function(e,t,i){"use strict";t.__esModule=!0;var n=i(3),a=function(){function e(e){var t=e.name,i=e.id,n=e.description,a=e.requires_redirect_uris,o=e.allowed_grant_types,r=e.default_grant_types,s=e.mandatory_grant_types;this.id=i,this.name=t,this.description=n,this.requires_redirect_uris=a,this.allowed_grant_types=o,this.default_grant_types=r,this.mandatory_grant_types=s,this.icon=this.getIcon()}return e.prototype.isOauth=function(){return"simple"!==this.id.toLowerCase()},e.prototype.isGrantTypeMandatory=function(e){return this.mandatory_grant_types&&-1!==n.indexOf(this.mandatory_grant_types,e.type)},e.prototype.getIcon=function(){switch(this.id.toUpperCase()){case"BROWSER":return"computer";case"WEB":return"language";case"NATIVE":return"phone_android";case"BACKEND_TO_BACKEND":return"share";default:return"pan_tool"}},e}();t.ApplicationType=a},function(e,t,i){"use strict";a.$inject=["$stateProvider"],t.__esModule=!0;var n=i(25);function a(e){e.state("management.applications.application.notifications",{url:"/notifications",component:"notificationsComponent",data:{menu:{label:"Notifications",icon:"notifications"},perms:{only:["application-notification-r","application-alert-r"]}},resolve:{resolvedHookScope:function(){return n.Scope.APPLICATION},resolvedHooks:["NotificationSettingsService",function(e){return e.getHooks(n.Scope.APPLICATION).then((function(e){return e.data}))}],resolvedNotifiers:["NotificationSettingsService","$stateParams",function(e,t){return e.getNotifiers(n.Scope.APPLICATION,t.applicationId).then((function(e){return e.data}))}],notificationSettings:["NotificationSettingsService","$stateParams",function(e,t){return e.getNotificationSettings(n.Scope.APPLICATION,t.applicationId).then((function(e){return e.data}))}],alerts:["AlertService","$stateParams",function(e,t){return e.listAlerts(t.applicationId,1).then((function(e){return e.data}))}]}}).state("management.applications.application.notifications.notification",{url:"/:notificationId",component:"notificationSettingsComponent",data:{menu:null,docs:{page:"management-application-notifications"},perms:{only:["application-notification-r"]}}})}t.default=a},function(e,t,i){"use strict";o.$inject=["$stateProvider"],t.__esModule=!0;var n=i(244),a=i(3);function o(e){e.state("management.apis",{abstract:!0,url:"/apis"}).state("management.apis.detail",{abstract:!0,url:"/:apiId",template:i(913),controller:"ApiAdminController",controllerAs:"apiCtrl",resolve:{resolvedApiState:["$stateParams","ApiService",function(e,t){return t.isAPISynchronized(e.apiId)}],resolvedApi:["$stateParams","ApiService",function(e,t){return t.get(e.apiId)}],resolvedCategories:["CategoryService",function(e){return e.list().then((function(e){return e.data}))}],resolvedGroups:["GroupService",function(e){return e.list().then((function(e){return e.data}))}],resolvedTags:["TagService",function(e){return e.list().then((function(e){return e.data}))}],resolvedTenants:function(){return[]},resolvedApiPermissions:["ApiService","$stateParams",function(e,t){return e.getPermissions(t.apiId)}],onEnter:["UserService","resolvedApiPermissions",function(e,t){e.currentUser.userApiPermissions=[],a.forEach(a.keys(t.data),(function(i){a.forEach(t.data[i],(function(t){var n="API-"+i+"-"+t;e.currentUser.userApiPermissions.push(a.toLower(n))}))})),e.reloadPermissions()}],userTags:["UserService",function(e){return e.getCurrentUserTags().then((function(e){return e.data}))}]}}).state("management.apis.new",{url:"/new",template:i(914),controller:"NewApiController",controllerAs:"$ctrl",resolve:{policies:["PolicyService",function(e){return e.listSwaggerPolicies().then((function(e){return e.data}))}]},data:{perms:{only:["environment-api-c"]},docs:{page:"management-apis-create"}}}).state("management.apis.create",{url:"/new/create",component:"apiCreation",resolve:{tenants:["TenantService",function(e){return e.list().then((function(e){return e.data}))}],tags:["TagService",function(e){return e.list().then((function(e){return e.data}))}]},data:{perms:{only:["environment-api-c"]},docs:{page:"management-apis-create-steps"}}}).state("management.apis.list",{url:"/?q",template:i(915),controller:n.default,controllerAs:"$ctrl",resolve:{resolvedApis:["$stateParams","ApiService",function(e,t){return e.q?t.searchApis(e.q):t.list()}]},data:{menu:{label:"APIs",icon:"dashboard",firstLevel:!0,order:10},docs:{page:"management-apis"},ncyBreadcrumb:{label:"APIs"}},params:{q:{dynamic:!0}}})}t.default=o},function(e,t){e.exports=' <section> <div class=gravitee-api-banner ng-class="{\'gravitee-api-banner-min\': reducedMode}" ng-if=apiCtrl.canReview() ng-cloak=""> <div class=gravitee-api-banner-content style=background-color:#d73a49> API in review<span permission permission-only="\'api-reviews-u\'">, <a href="" ng-click="apiCtrl.showReviewConfirm($event, apiCtrl.api)">accept/reject changes</a></span> </div> </div> <div class=gravitee-api-banner ng-class="{\'gravitee-api-banner-min\': reducedMode}" ng-if=apiCtrl.isRequestForChanges() ng-cloak=""> <div class=gravitee-api-banner-content style=background-color:#d73a49>API reviewer requested changes</div> </div> <div class=gravitee-api-banner ng-class="{\'gravitee-api-banner-min\': reducedMode}" ng-if=apiCtrl.isInDraft() ng-cloak=""> <div class=gravitee-api-banner-content style=background-color:#54a3ff>API in draft</div> </div> <div class=gravitee-api-banner ng-class="{\'gravitee-api-banner-min\': reducedMode}" ng-if=apiCtrl.isReviewOK() ng-cloak=""> <div class=gravitee-api-banner-content style=background-color:#429f46> API review accepted<span permission permission-only="\'api-reviews-u\'">, <a href="" ng-click="apiCtrl.showRequestForChangesConfirm($event, apiCtrl.api)">request for changes</a> </span> </div> </div> <div class=gravitee-api-banner ng-class="{\'gravitee-api-banner-min\': reducedMode}" ng-hide="apiCtrl.apiIsSynchronized || apiCtrl.apiJustDeployed" ng-cloak="" ng-if=apiCtrl.canDeploy()> <div class=gravitee-api-banner-content> API out of sync<span permission permission-only="\'api-definition-u\'">, <a href="" ng-click="apiCtrl.showDeployAPIConfirm($event, apiCtrl.api)">deploy your API</a></span> </div> </div> <div class=gravitee-api-banner ng-class="{\'gravitee-api-banner-min\': reducedMode}" ng-if=apiCtrl.isDeprecated() ng-cloak=""> <div class=gravitee-api-banner-content style=background-color:#d73a49>API deprecated</div> </div> <div ui-view flex></div> </section> '},function(e,t){e.exports=' <section> <md-toolbar class="md-table-toolbar md-default" style=background-color:#fbfbfc> <div class=md-toolbar-tools> <span>Create an API</span> </div> </md-toolbar> <div layout=column> <div layout=row layout-align=center style=margin-top:40px> <div layout=column> <gravitee-empty-state icon=dashboard model=API message="Create an API from scratch ..." create-mode=true></gravitee-empty-state> <md-button ui-sref=management.apis.create style="margin:0 auto" aria-label=create-api class="md-success md-fab create-api-button"> <ng-md-icon icon=arrow_forward style=fill:#fff size=38></ng-md-icon> </md-button> </div> </div> <div layout=row layout-align=center style=margin-top:50px> <div layout=column> <h4>... or import API definition or your Swagger descriptor file</h4> <gv-api-import policies=$ctrl.policies></gv-api-import> </div> </div> </div> </section> '},function(e,t){e.exports=' <div class=gv-sub-content> <div class="gv-forms gv-forms-fluid" layout=column> <div class=gv-form ng-show="$ctrl.apisProvider.length > 0 || $ctrl.isSearchResult()"> <div class=apis-header-filter> <form flex layout=row layout-align="center center" name=formSearch autocomplete=off ng-submit=$ctrl.search()> <input class="form-control apis-filter" type=text style=max-width:960px ng-model=$ctrl.query placeholder="Search APIs" autofocus/> <md-button class="md-primary gv-search-button" type=submit aria-label=Search> <ng-md-icon icon=search ng-disabled=apisLoading></ng-md-icon> </md-button> </form> </div> <div class=gv-form-content id=apis-container style="height:calc(100vh - 200px);overflow-y:auto"> <div layout=row layout-wrap class=inset infinite-scroll="$ctrl.loadMore($ctrl.order, true)" infinite-scroll-distance=1 infinite-scroll-container="\'#apis-container\'"> <md-table-container style=width:100%;min-height:200px;text-align:center> <table md-table ng-model=$ctrl.selectedApis> <thead md-head md-order=$ctrl.order> <tr md-row> <th md-column width=1%></th> <th md-column width=15% md-order-by=name ng-click="$ctrl.loadMore($ctrl.order, false)"><span>Name</span></th> <th md-column width=1%></th> <th md-column md-order-by=virtual_hosts ng-click="$ctrl.loadMore($ctrl.order, false)">Context paths</th> <th md-column width=1%>Tags</th> <th md-column width=1% ng-if=$ctrl.isQualityDisplayed>Quality</th> <th md-column width=1%>Owner</th> <th md-column width=1%></th> </tr> </thead> <md-progress-circular ng-if=apisLoading md-mode=indeterminate></md-progress-circular> <tbody md-body ng-if=!apisLoading> <tr ng-if="$ctrl.apisProvider.length == 0"> <td colspan=7 style=text-align:center md-cell>No APIs found</td> </tr> <tr md-row ng-repeat="api in $ctrl.apis track by api.id"> <td md-cell nowrap=nowrap> <gravitee-identity-picture image-id=api.id image-url=::api.picture_url image-name="api.name + \'  \' + api.version" image-width=40></gravitee-identity-picture> </td> <td md-cell> <a ui-sref="management.apis.detail.portal.general({apiId: api.id})"> {{api.name}} ({{api.version}}) </a> </td> <td md-cell nowrap=nowrap> <i ng-if="api.state == \'started\'" class=icon-play-circled2 style=color:#43a047;font-size:16px> <md-tooltip>Started</md-tooltip> </i> <i ng-if="api.state !== \'started\'" class=icon-stop-circle-o style=color:#e53935;font-size:16px> <md-tooltip>Stopped</md-tooltip> </i> <i ng-if="$ctrl.syncStatus[api.id] === undefined?false:!$ctrl.syncStatus[api.id]" class=icon-arrows-cw style=color:#e8ac3c;font-size:14px> <md-tooltip>API out of sync</md-tooltip> </i> <ng-md-icon ng-if="api.lifecycle_state === \'published\'" icon=cloud_done size=17 style=top:3px> <md-tooltip>Published</md-tooltip> </ng-md-icon> <ng-md-icon ng-if="api.lifecycle_state !== \'published\'" icon=cloud_queue size=17 style=top:3px> <md-tooltip>Unpublished</md-tooltip> </ng-md-icon> <span class="badge gravitee-policy-method-badge-info ng-binding ng-scope" ng-if=$ctrl.getWorkflowStateLabel(api) ng-style="{\'background-color\': $ctrl.getWorkflowStateColor(api)}"> {{$ctrl.getWorkflowStateLabel(api)}} </span> </td> <td md-cell style=padding:5px!important> {{$ctrl.getEntrypoints(api)}} </td> <td md-cell nowrap=nowrap>{{api.tags.join(\', \')}}</td> <td md-cell nowrap=nowrap ng-if=$ctrl.isQualityDisplayed> <span class=gravitee-qm-score-small ng-class=$ctrl.getQualityMetricCssClass($ctrl.qualityScores[api.id])> {{$ctrl.qualityScores[api.id] === undefined ? "-" : $ctrl.qualityScores[api.id]}}% </span> </td> <td md-cell nowrap=nowrap> <span> {{::api.owner.displayName}} <md-tooltip> <span ng-if=api.owner.email>{{::api.owner.email}}</span> </md-tooltip> </span> </td> <td md-cell nowrap=nowrap> <ng-md-icon icon={{$ctrl.getVisibilityIcon(api)}} size=20 style=fill:#cdcdcd> <md-tooltip>{{$ctrl.getVisibility(api)}}</md-tooltip> </ng-md-icon> </td> </tr> </tbody> </table> </md-table-container> </div> </div> </div> <gravitee-empty-state ng-if="$ctrl.apisProvider.length   == 0 && !$ctrl.isSearchResult()" icon=dashboard model=API message="Hmmm, there is no API for you here :(" sub-message={{$ctrl.getSubMessage()}} create-mode=true></gravitee-empty-state> <div ng-if="$ctrl.apisProvider.length == 0 && !$ctrl.isSearchResult()" style=text-align:center> <md-button ng-if=!$ctrl.graviteeUser.id class=md-raised ui-sref=login aria-label=login>Login</md-button> </div> <div ng-style="{\'text-align\': $ctrl.apisProvider.length == 0 && !$ctrl.isSearchResult() ? \'center\' : \'none\' }"> <md-button permission permission-only="\'environment-api-c\'" ng-class="{\'md-fab-bottom-right\': $ctrl.apisProvider.length > 0 || $ctrl.isSearchResult()}" class=md-fab aria-label=create-api ui-sref=management.apis.new> <ng-md-icon icon=add style=fill:#fff></ng-md-icon> </md-button> </div> </div> </div> '},function(e,t,i){"use strict";function n(e){e.state("management.apis.detail.analytics",{template:i(917)}).state("management.apis.detail.analytics.overview",{url:"/analytics?from&to&q&dashboard",template:i(918),controller:"ApiAnalyticsController",controllerAs:"analyticsCtrl",resolve:{dashboards:["DashboardService",function(e){return e.list("API").then((function(e){return e.data}))}]},data:{menu:{label:"Analytics",icon:"insert_chart"},perms:{only:["api-analytics-r"]},docs:{page:"management-api-analytics"}},params:{from:{type:"int",dynamic:!0},to:{type:"int",dynamic:!0},q:{type:"string",dynamic:!0},dashboard:{type:"string",dynamic:!0}}}).state("management.apis.detail.analytics.logs",{url:"/logs?from&to&q&page&size",template:i(919),controller:"ApiLogsController",controllerAs:"logsCtrl",data:{perms:{only:["api-log-r"]},docs:{page:"management-api-logs"}},params:{from:{type:"int",dynamic:!0},to:{type:"int",dynamic:!0},q:{type:"string",dynamic:!0},page:{type:"int",dynamic:!0},size:{type:"int",dynamic:!0}},resolve:{plans:["$stateParams","ApiService",function(e,t){return t.getApiPlans(e.apiId)}],applications:["$stateParams","ApiService",function(e,t){return t.getSubscribers(e.apiId)}],tenants:["TenantService",function(e){return e.list()}]}}).state("management.apis.detail.analytics.loggingconfigure",{url:"/logs/configure",template:i(920),controller:"ApiLoggingConfigurationController",controllerAs:"loggingCtrl",data:{menu:null,perms:{only:["api-log-u"]},docs:{page:"management-api-logging-configuration"}}}).state("management.apis.detail.analytics.log",{url:"/logs/:logId?timestamp&from&to&q&page&size",component:"log",resolve:{log:["$stateParams","ApiService",function(e,t){return t.getLog(e.apiId,e.logId,e.timestamp).then((function(e){return e.data}))}]},data:{perms:{only:["api-log-r"]},docs:{page:"management-api-log"}}}).state("management.apis.detail.analytics.pathMappings",{url:"/path-mappings",template:i(921),controller:"ApiPathMappingsController",controllerAs:"apiPathMappingCtrl",data:{perms:{only:["api-definition-r"]},docs:{page:"management-api-pathMappings"}}})}n.$inject=["$stateProvider"],t.__esModule=!0,t.default=n},function(e,t){e.exports=' <div flex> <div layout=row flex> <div class="gv-sub-menu menu"> <div class=md-headline> <span> {{apiCtrl.api.name}} ({{apiCtrl.api.version}}) <md-tooltip md-direction=bottom>{{apiCtrl.api.name}} ({{apiCtrl.api.version}})</md-tooltip> </span> </div> <div class=aui-nav-heading> <strong>General</strong> </div> <ul class=aui-nav> <li class=iterable-item ui-sref-active=aui-nav-selected ui-sref=management.apis.detail.analytics.overview><a class=execute>Overview</a></li> <li class=iterable-item ui-sref-active=aui-nav-selected ui-sref=management.apis.detail.analytics.logs><a class=execute>Logs</a></li> <li class=iterable-item permission permission-only="[\'api-definition-u\']" ui-sref-active=aui-nav-selected ui-sref=management.apis.detail.analytics.pathMappings><a class=execute>Path mappings</a></li> </ul> </div> <div flex class=gv-sub-content ui-view layout=column></div> </div> </div> '},function(e,t){e.exports=' <div class="gv-forms gv-forms-fluid" layout=column> <div layout=row> <h1 flex>Overview</h1> <div layout=row ng-if=analyticsCtrl.dashboards.length> <label style=padding:27px>Select a dashboard</label> <md-input-container> <md-select ng-model=analyticsCtrl.dashboard ng-change=analyticsCtrl.onDashboardChanged() aria-label="Dashboard selection"> <md-option ng-repeat="dashboard in analyticsCtrl.dashboards" ng-value=dashboard> {{dashboard.name}} </md-option> </md-select> </md-input-container> </div> </div> <div class=gv-form> <gv-dashboard model=analyticsCtrl.dashboard on-view-log-click=analyticsCtrl.viewLogs() access-logs=true></gv-dashboard> </div> </div> '},function(e,t){e.exports=' <div class="gv-forms gv-forms-fluid" layout=column> <div class=gv-forms-header> <h1>Logs</h1> <a permission permission-only="\'api-log-u\'" ui-sref=management.apis.detail.analytics.loggingconfigure>Configure the logging</a> </div> <div class=gv-form> <h2></h2> <div class=gv-form-content layout=column> <div layout=row> <gv-logs-timeframe on-timeframe-change=logsCtrl.timeframeChange(timeframe) flex></gv-logs-timeframe> <div style=margin:auto> <md-button type=button class=md-raised ng-click=logsCtrl.exportAsCSV() ng-disabled="!logsCtrl.logs.logs || logsCtrl.logs.logs.length === 0"> Export as CSV <div id=hidden-export-container style=display:none></div> </md-button> </div> </div> <gv-logs-filters context=api on-filters-change=logsCtrl.filtersChange(filters) metadata=logsCtrl.metadata api=logsCtrl.api></gv-logs-filters> <md-table-container layout-padding> <table md-table class="gravitee-analytics-top-hits-table gv-table-dense" multiple=multiple md-row-select=logsCtrl.widget.chart.selectable data-ng-model=logsCtrl.selected> <thead md-head md-order=logsCtrl.query.field> <tr md-row> <th md-column width=1% md-order-by=@timestamp nowrap=nowrap>Date</th> <th md-column width=1% md-order-by=status nowrap=nowrap>Status</th> <th md-column width=1% nowrap=nowrap>Application</th> <th ng-if=logsCtrl.Constants.logging.user.displayed md-column width=1% md-order-by=user nowrap=nowrap>User</th> <th md-column width=1% nowrap=nowrap>Plan</th> <th md-column width=1% md-order-by=method nowrap=nowrap>Method</th> <th md-column md-order-by=path>Path</th> <th md-column width=1% md-numeric nowrap=nowrap>Response time</th> <th md-column width=1% nowrap=nowrap>Endpoint</th> </tr> </thead> <tbody md-body> <tr ng-if="logsCtrl.logs.logs.length > 0" md-row ng-repeat="log in logsCtrl.logs.logs | limitTo: logsCtrl.query.size" md-auto-select md-select=log md-select-id=key ng-class="{\'log-error\': log.status >= 400}"> <td md-cell nowrap=nowrap> <a ui-sref="management.apis.detail.analytics.log({\n              logId: log.id,\n              timestamp: log.timestamp,\n              from: logsCtrl.query.from,\n              to: logsCtrl.query.to,\n              q: logsCtrl.query.query,\n              page: logsCtrl.query.page,\n              size: logsCtrl.query.size\n              })"> {{log.timestamp | date:\'yyyy-MM-dd HH:mm:ss.sss\'}} </a> </td> <td md-cell nowrap=nowrap><span class="gv-statuscode-{{log.status / 100 | number:0}}xx">{{log.status}}</span></td> <td md-cell nowrap=nowrap>{{logsCtrl.getMetadata(log.application).name}}</td> <td ng-if=logsCtrl.Constants.logging.user.displayed md-cell nowrap=nowrap>{{log.user}}</td> <td md-cell nowrap=nowrap>{{logsCtrl.getMetadata(log.plan).name}}</td> <td md-cell nowrap=nowrap style=text-align:center> <span class="badge gravitee-policy-method-badge-info ng-binding ng-scope gravitee-policy-method-badge-{{log.method | uppercase}}-selected"> {{log.method | uppercase}} </span> </td> <td md-cell>{{log.path}}</td> <td md-cell nowrap=nowrap>{{log.responseTime}} ms</td> <td md-cell><span ng-if=log.endpoint>X</span></td> </tr> <tr ng-if="logsCtrl.logs.total === 0"> <td md-cell colspan=9 style=text-align:center>No log</td> </tr> </tbody> </table> </md-table-container> <md-table-pagination md-limit=logsCtrl.query.size md-limit-options="[5, 10, 15, 20, 30, 50, 100]" md-page=logsCtrl.query.page md-total={{logsCtrl.logs.total}} md-on-paginate=logsCtrl.onPaginate> </md-table-pagination> </div> </div> </div> '},function(e,t){e.exports=' <form name=formLogging ng-submit=loggingCtrl.update(loggingCtrl.api) novalidate> <div class=gv-forms layout=column> <div class=gv-forms-header> <h1>Logging</h1> <a ui-sref=management.apis.detail.analytics.logs>Back to logs</a> </div> <div class=gv-form> <h2>Configuration</h2> <div class=gv-form-content> <p> Use logging with caution and only for development purpose. It can have an impact on API performances and is requiring more spaces for analytics storage. </p><div class=gv-page-draft-banner ng-if="loggingCtrl.maxDuration && loggingCtrl.maxDuration > 0"> <ng-md-icon icon=warning class=gv-warning></ng-md-icon> A maximum duration of <code>{{loggingCtrl.maxDuration}}</code>milliseconds will be applied to your condition. </div> <p></p> <div layout=column layout-wrap layout-gt-sm=row> <div flex-xs flex=50> <div layout-xs=column flex-xs=50> <md-input-container class=md-block flex-gt-sm> <label>Mode</label> <md-select ng-model=loggingCtrl.api.proxy.logging.mode> <md-option ng-repeat="loggingMode in loggingModes" value={{loggingMode.value}}> {{loggingMode.name}} </md-option> </md-select> </md-input-container> <div layout=row flex-xs=50> <md-input-container class=md-block flex-gt-sm> <label>Condition</label> <input ng-model=loggingCtrl.api.proxy.logging.condition type=text ng-required="loggingCtrl.api.proxy.logging.mode !== \'NONE\'" ng-disabled="loggingCtrl.api.proxy.logging.mode === \'NONE\'"> </md-input-container> <md-button md-no-ink class=md-primary ng-click=loggingCtrl.showConditionEditor() ng-disabled="loggingCtrl.api.proxy.logging.mode === \'NONE\'"> Show editor </md-button> </div> </div> </div> </div> <div class="md-actions gravitee-api-save-button" layout=row> <md-button permission permission-only="\'api-log-u\'" class="md-raised md-primary" type=submit ng-disabled="formLogging.$invalid || formLogging.$pristine"> Save </md-button> <md-button permission permission-only="\'api-log-u\'" class=md-raised type=button ng-click=loggingCtrl.reset() ng-disabled=formLogging.$pristine> Reset </md-button> </div> </div> </div> </div> </form> '},function(e,t){e.exports=' <div class="gv-forms gv-forms-fluid" layout=column> <div class=gv-forms-header> <h1>Path Mappings</h1> </div> <div class=gv-form> <h2></h2> <div class=gv-form-content layout=column> <md-table-container ng-show=$parent.apiCtrl.api.path_mappings.length> <table md-table> <thead md-head> <tr md-row> <th width=80% md-column>Path</th> <th md-column permission permission-only="\'api-definition-u\'"></th> </tr> </thead> <tbody md-body> <tr md-row ng-repeat="pathMapping in $parent.apiCtrl.api.path_mappings"> <td md-cell><span><b>{{pathMapping}}</b></span></td> <td md-cell permission permission-only="\'api-definition-u\'"> <div layout=row> <ng-md-icon ng-click=apiPathMappingCtrl.showSavePathMappingDialog($index) icon=edit size=24 style=margin-right:20px></ng-md-icon> <ng-md-icon ng-click=apiPathMappingCtrl.delete($index) icon=delete size=24></ng-md-icon> </div> </td> </tr> </tbody> </table> </md-table-container> <gravitee-empty-state ng-if=!$parent.apiCtrl.api.path_mappings.length icon=map model=pathMapping message="Path mappings will appear here" sub-message="Start creating a path mapping" create-mode=true></gravitee-empty-state> <md-fab-speed-dial permission permission-only="\'api-definition-c\'" ng-style="!$parent.apiCtrl.api.path_mappings.length && {\'text-align\':\'center\'}" md-direction="{{$parent.apiCtrl.api.path_mappings.length?\'left\':\'down\'}}" md-open=false ng-class="{\'md-fab-bottom-right\': $parent.apiCtrl.api.path_mappings.length}" class=md-scale> <md-fab-trigger> <md-button class=md-fab> <ng-md-icon icon=add></ng-md-icon> </md-button> </md-fab-trigger> <md-fab-actions> <md-button class="md-fab md-raised md-mini" aria-label="Add path mapping" ng-click=apiPathMappingCtrl.showSavePathMappingDialog()> <ng-md-icon icon=create style=fill:#333></ng-md-icon> </md-button> <md-button class="md-fab md-raised md-mini" aria-label="Add path mapping by swagger" ng-click=apiPathMappingCtrl.showImportPathMappingDialog()> <md-icon md-svg-src=assets/logo_swagger.svg></md-icon> </md-button> </md-fab-actions> </md-fab-speed-dial> </div> </div> </div> '},function(e,t,i){"use strict";function n(e){e.state("management.apis.detail.audit",{template:i(923)}).state("management.apis.detail.audit.general",{url:"/audit",template:i(924),controller:"ApiAuditController",controllerAs:"auditCtrl",data:{menu:{label:"Audit",icon:"visibility"},perms:{only:["api-audit-r"]},docs:{page:"management-api-audit"}},resolve:{resolvedEvents:["AuditService","$stateParams",function(e,t){return e.listEvents(t.apiId).then((function(e){return e.data}))}]}}).state("management.apis.detail.audit.history",{url:"/history",template:i(925),controller:"ApiHistoryController",controllerAs:"apiHistoryCtrl",resolve:{resolvedEvents:["$stateParams","ApiService",function(e,t){return t.getApiEvents(e.apiId,"PUBLISH_API")}]},data:{perms:{only:["api-event-r"]},docs:{page:"management-api-history"}}}).state("management.apis.detail.audit.events",{url:"/events",template:i(926),controller:"ApiEventsController",controllerAs:"apiEventsCtrl",resolve:{resolvedEvents:["$stateParams","ApiService",function(e,t){return t.getApiEvents(e.apiId,"START_API,STOP_API")}]},data:{perms:{only:["api-event-r"]},docs:{page:"management-api-events"}}})}n.$inject=["$stateProvider"],t.__esModule=!0,t.default=n},function(e,t){e.exports=' <div flex> <div layout=row flex> <div class="gv-sub-menu menu"> <div class=md-headline> <span> {{apiCtrl.api.name}} ({{apiCtrl.api.version}}) <md-tooltip md-direction=bottom>{{apiCtrl.api.name}} ({{apiCtrl.api.version}})</md-tooltip> </span> </div> <div class=aui-nav-heading> <strong>General</strong> </div> <ul class=aui-nav> <li class=iterable-item ui-sref-active=aui-nav-selected ui-sref=management.apis.detail.audit.general><a class=execute>Audit</a></li> <li class=iterable-item ui-sref-active=aui-nav-selected ui-sref=management.apis.detail.audit.history><a class=execute>History</a></li> <li class=iterable-item ui-sref-active=aui-nav-selected ui-sref=management.apis.detail.audit.events><a class=execute>Events</a></li> </ul> </div> <div flex class=gv-sub-content ui-view layout=column></div> </div> </div>'},function(e,t){e.exports=" <gv-audit api=api apis=apis applications=applications events=events></gv-audit> "},function(e,t){e.exports=' <div layout=row flex class=api-events style=margin-top:20px> <div class=api-history-timeline flex=20> <timeline> <div ng-repeat="eventTimeline in apiHistoryCtrl.eventsTimeline"> <timeline-event side=right> <timeline-badge class={{eventTimeline.badgeClass}}> <i class="glyphicon {{eventTimeline.badgeIconClass}}"></i> </timeline-badge> <a class=timeline-link ng-click=apiHistoryCtrl.selectEvent(eventTimeline)> <timeline-panel ng-class="{active : apiHistoryCtrl.isEventSelected(eventTimeline)}" class={{eventTimeline.badgeClass}}> <timeline-heading> <h5>{{eventTimeline.title | uppercase}} <ng-md-icon class=api-history-icon ng-show="apiHistoryCtrl.eventToCompareRequired && !apiHistoryCtrl.isEventSelected(eventTimeline)" icon=crop_din></ng-md-icon> <ng-md-icon class=api-history-icon ng-show=apiHistoryCtrl.isEventSelectedForComparaison(eventTimeline) icon=compare style=fill:green></ng-md-icon> </h5> <p ng-if=eventTimeline.when> <small class="text-muted ng-binding"><i class="glyphicon glyphicon-time"></i>{{eventTimeline.when | date : \'medium\'}} by {{eventTimeline.user.displayName}}</small> </p> <p ng-if=eventTimeline.isCurrentAPI> <small class="text-muted ng-binding"><i class="glyphicon glyphicon-info-sign"></i>In progress API definition</small> </p> </timeline-heading> </timeline-panel> </a> </timeline-event> </div> </timeline> </div> <div class=api-events-content flex=80> <div ng-show="apiHistoryCtrl.eventsSelected.length == 1" class=api-events-content-descriptor> <md-card style=box-shadow:none> <div ng-show="apiHistoryCtrl.eventsTimeline.length > 1" style="border:1px solid #e7eaec;border-bottom:0" layout-padding> <md-button ng-show=apiHistoryCtrl.eventsSelected[0].isCurrentAPI class=md-raised ng-click="apiHistoryCtrl.$scope.$parent.apiCtrl.showDeployAPIConfirm($event, apiHistoryCtrl.api)">Deploy</md-button> <md-button permission permission-only="\'api-definition-u\'" ng-show="(!apiHistoryCtrl.eventsSelected[0].isCurrentAPI && apiHistoryCtrl.eventsSelected[0].event.id != apiHistoryCtrl.events[0].id) || (!apiHistoryCtrl.eventsSelected[0].isCurrentAPI && apiHistoryCtrl.eventsTimeline[0].isCurrentAPI)" class=md-raised ng-click="apiHistoryCtrl.showRollbackAPIConfirm($event, apiHistoryCtrl.eventSelectedPayload)">Rollback</md-button> <md-button ng-show="apiHistoryCtrl.events.length > 0 && apiHistoryCtrl.eventsSelected[0].event.id != apiHistoryCtrl.events[0].id" class=md-raised ng-click=apiHistoryCtrl.diffWithMaster()>Diff with published API</md-button> <md-button ng-show="apiHistoryCtrl.eventsTimeline.length > 1" class=md-raised ng-click=apiHistoryCtrl.enableDiff()>Diff</md-button> </div> <md-card-content style="background-color:#fff;border:1px solid #e7eaec;padding-top:0"> <pre ng-show=!apiHistoryCtrl.diffMode class=api-history-definition>{{apiHistoryCtrl.eventSelectedPayloadDefinition | json }}</pre> <pre ng-show=apiHistoryCtrl.diffMode class=api-history-definition gravitee-diff old-value=apiHistoryCtrl.left new-value=apiHistoryCtrl.right></pre> </md-card-content> </md-card> </div> </div> </div> <gravitee-empty-state ng-if="apiHistoryCtrl.eventsTimeline.length == 0" icon=history model=History message="Your API History will appear here" sub-message="We will Keep you informed of API changes"></gravitee-empty-state> '},function(e,t){e.exports=' <div ng-if="apiEventsCtrl.eventsTimeline.length > 0" layout=row layout-align="center center" flex style=margin-top:20px> <div class=api-events-timeline flex=50> <timeline> <div ng-repeat="eventTimeline in apiEventsCtrl.eventsTimeline"> <timeline-event> <timeline-badge class={{eventTimeline.badgeClass}}> <i class="glyphicon {{eventTimeline.badgeIconClass}}"></i> </timeline-badge> <timeline-panel class={{eventTimeline.badgeClass}}> <timeline-heading> <h5>{{eventTimeline.title | uppercase}}</h5> <p ng-if=eventTimeline.when> <small class="text-muted ng-binding"><i class="glyphicon glyphicon-time"></i>{{eventTimeline.when | date : \'medium\'}} by {{eventTimeline.user.displayName}}</small> </p> </timeline-heading> </timeline-panel> </timeline-event> </div> </timeline> </div> </div> <gravitee-empty-state ng-if="apiEventsCtrl.eventsTimeline.length == 0" icon=event_note model=Event message="Your API Events will appear here" sub-message="Keep playing with your API to see events history"></gravitee-empty-state> '},function(e,t,i){"use strict";function n(e){e.state("management.apis.detail.design",{template:i(928)}).state("management.apis.detail.design.policies",{url:"/policies",template:i(929),controller:"ApiPoliciesController",controllerAs:"apiPoliciesCtrl",resolve:{resolvedTenants:["TenantService",function(e){return e.list()}]},data:{menu:{label:"Design",icon:"palette"},perms:{only:["api-definition-r"]},docs:{page:"management-api-policies"}}}).state("management.apis.detail.design.resources",{url:"/resources",template:i(930),controller:"ApiResourcesController",controllerAs:"apiResourcesCtrl",resolve:{resolvedResources:["ResourceService",function(e){return e.list()}]},data:{perms:{only:["api-definition-r"]},docs:{page:"management-api-resources"}}}).state("management.apis.detail.design.properties",{url:"/properties",template:i(931),controller:"ApiPropertiesController",controllerAs:"apiPropertiesCtrl",data:{perms:{only:["api-definition-r"]},docs:{page:"management-api-properties"}}})}n.$inject=["$stateProvider"],t.__esModule=!0,t.default=n},function(e,t){e.exports=' <div flex> <div layout=row flex> <div class="gv-sub-menu menu"> <div class=md-headline> <span> {{apiCtrl.api.name}} ({{apiCtrl.api.version}}) <md-tooltip md-direction=bottom>{{apiCtrl.api.name}} ({{apiCtrl.api.version}})</md-tooltip> </span> </div> <div class=aui-nav-heading> <strong>General</strong> </div> <ul class=aui-nav> <li class=iterable-item ui-sref-active=aui-nav-selected ui-sref=management.apis.detail.design.policies><a class=execute>Policies</a></li> <li class=iterable-item ui-sref-active=aui-nav-selected ui-sref=management.apis.detail.design.resources><a class=execute>Resources</a></li> <li class=iterable-item ui-sref-active=aui-nav-selected ui-sref=management.apis.detail.design.properties><a class=execute>Properties</a></li> </ul> </div> <div flex class=gv-sub-content ui-view layout=column></div> </div> </div> '},function(e,t){e.exports=' <div layout=row> <div flex=20 layout=column> <div class=inset> <h5>Policies ({{apiPoliciesCtrl.policiesToCopy.length}})</h5> <md-divider></md-divider> </div> <div class="gravitee-policy-draggable gravitee-policy-panel gravitee-policy-panel-left"> <md-card ng-repeat="policy in apiPoliciesCtrl.policiesToCopy" class="gravitee-card gravitee-policy-card" id={{policy.policyId}} ng-cloak> <md-tooltip md-direction=right> version: {{policy.version}} </md-tooltip> <md-card-content layout=row layout-align=space-between> <span class=md-subhead>{{policy.name}}</span> </md-card-content> </md-card> </div> </div> <div flex=40 layout=column> <form name=editPathForm novalidate> <div layout=row layout-align="start center" class=gravitee-policy-filters> <span flex class="badge gravitee-policy-method-badge-filter" ng-class="apiPoliciesCtrl.getHttpMethodClass(httpMethod, apiPoliciesCtrl.httpMethodsFilter)" ng-repeat="httpMethod in apiPoliciesCtrl.httpMethods" ng-click="apiPoliciesCtrl.toggleHttpMethod(httpMethod, apiPoliciesCtrl.httpMethodsFilter)"> {{httpMethod | uppercase}} </span> </div> <md-divider></md-divider> <div class="gravitee-policy-panel gravitee-policy-panel-center"> <v-accordion class=vAccordion--default multiple=multiple> <v-pane ng-repeat="path in apiPoliciesCtrl.sortedPaths()" expanded=$first> <v-pane-header> <h3 class=gravitee-policy-path ng-if=\'path === "/"\'>{{path}}</h3> <div ng-if=\'path !== "/"\' layout=row layout-align="space-between center"> <div flex=90> <md-input-container style=margin:0;width:100%> <input ng_model=path name=path{{$index}} class=gravitee-policy-path required aria-label=path ui-validate="{\n                            pathAlreadyExists : \'apiPoliciesCtrl.pathNotExists($value, $index)\',\n                            mustStartWithSlash : \'apiPoliciesCtrl.pathStartWithSlash($value)\'\n                         }" ng-keydown="apiPoliciesCtrl.pathKeyPress($event, editPathForm[\'path\'+$index], path, $index)" ng-blur="apiPoliciesCtrl.restoreOldPath($index, editPathForm[\'path\'+$index])" ng-click=$event.stopPropagation();> <div ng-messages="editPathForm[\'path\'+$index].$error" ng-show="editPathForm[\'path\'+$index].$dirty"> <div ng-message=required>This is required!</div> <div ng-message=pathAlreadyExists>This path is already configured.</div> <div ng-message=mustStartWithSlash>The path must start with /</div> </div> </md-input-container> </div> <div style=margin-right:15px> <ng-md-icon icon=delete style=fill:#757575 size=18px ng-click=apiPoliciesCtrl.removePath(path);$event.stopPropagation();> <md-tooltip md-direction=right> Remove path </md-tooltip> </ng-md-icon> </div> </div> </v-pane-header> <v-pane-content> <div ng-class=apiPoliciesCtrl.getDropzoneClass(path) data-path={{path}}> <md-card ng-repeat="policy in apiPoliciesCtrl.apiPoliciesByPath[path]" ng-click="apiPoliciesCtrl.editPolicy($index, path, $event)" ng-hide=apiPoliciesCtrl.filterByMethod(policy) class="gravitee-card gravitee-policy-card" ng-class=apiPoliciesCtrl.getApiPolicyClass(policy) layout=row layout-align="space-between start"> <md-card-content layout=column layout-align="start start" layout-fill> <div ng-if=!policy.name layout=column layout-align="start start"> <span class=md-subhead>Unknown policy</span> <i>Please check that the policy \'{{policy.policyId}}\' is installed in plugins</i> </div> <span class=md-subhead>{{policy.name}}</span> <span class=gravitee-policy-card-description>{{policy.description}}</span> <div ng-class="{\'gravitee-policy-card-method\': policy.description}" layout=row layout-align="start center" layout-fill> <div ng-switch="policy.methods.length === apiPoliciesCtrl.httpMethods.length"> <span class="badge gravitee-policy-method-badge-info gravitee-policy-method-badge-GET-selected" ng-switch-when=true>ALL</span> <span class="badge gravitee-policy-method-badge-info gravitee-policy-method-badge-{{method}}-selected" ng-switch-when=false ng-repeat="method in policy.methods">{{method | uppercase}}</span> </div> </div> </md-card-content> <div layout=column permission permission-only="\'api-definition-u\'"> <ng-md-icon icon=close style=fill:#757575 size=18px class=gravitee-card-close ng-click="apiPoliciesCtrl.removePolicy($index, path, $event)"> <md-tooltip md-direction=right> Remove policy </md-tooltip> </ng-md-icon> <ng-md-icon ng-if=policy.name icon=mode_edit style=fill:#757575 size=18px class=gravitee-card-close ng-click="apiPoliciesCtrl.editPolicyDescription($index, path, $event)"> <md-tooltip md-direction=right> Edit policy description </md-tooltip> </ng-md-icon> <ng-md-icon icon=done ng-if=policy.enabled style=fill:#437536 size=18px class=gravitee-card-close ng-click="apiPoliciesCtrl.switchPolicyEnabled($index, path, $event)"> <md-tooltip md-direction=right> Policy is enabled. Click to disable it. </md-tooltip> </ng-md-icon> <ng-md-icon icon=pause_circle_outline ng-if=!policy.enabled style=fill:#751c16 size=18px class=gravitee-card-close ng-click="apiPoliciesCtrl.switchPolicyEnabled($index, path, $event)"> <md-tooltip md-direction=right> Policy is disabled. Click to enable it. </md-tooltip> </ng-md-icon> </div> </md-card> </div> <span ng-if=apiPoliciesCtrl.initDragularDropZone(path)></span> </v-pane-content> </v-pane> </v-accordion> </div> </form> </div> <div flex layout=column> <div ng-if=apiPoliciesCtrl.selectedApiPolicy.policyId> <div class=inset> <div layout=row layout-align="space-between center"> <h5>{{policy.name}}</h5> </div> <md-divider></md-divider> </div> <div layout=row layout-align="start center" layout-wrap> <span flex=10 class="badge gravitee-policy-method-badge-info" ng-class="apiPoliciesCtrl.getHttpMethodClass(httpMethod, apiPoliciesCtrl.selectedApiPolicy.methods)" ng-repeat="httpMethod in apiPoliciesCtrl.httpMethods" ng-click="apiPoliciesCtrl.toggleHttpMethod(httpMethod, apiPoliciesCtrl.selectedApiPolicy.methods)"> {{httpMethod | uppercase}} </span> </div> <div class="gravitee-policy-panel gravitee-policy-panel-right"> <form name=policyConfigurationForm sf-schema=policyJsonSchema sf-form=policyJsonSchemaForm sf-model=apiPoliciesCtrl.selectedApiPolicy[apiPoliciesCtrl.selectedApiPolicy.policyId] sf-options="{ validateOnRender: true, formDefaults: { startEmpty: true } }" novalidate></form> <div ng-if=apiPoliciesCtrl.schemaByPolicyId[apiPoliciesCtrl.selectedApiPolicy.policyId]> <md-divider></md-divider> <md-button permission permission-only="\'api-definition-u\'" class=md-raised ng-disabled="!apiPoliciesCtrl.httpMethodsUpdated && (policyConfigurationForm.$invalid || policyConfigurationForm.$pristine)" ng-click=apiPoliciesCtrl.savePaths();>Save </md-button> </div> </div> </div> </div> </div> <md-button permission permission-only="\'api-definition-d\'" class="md-fab md-fab-bottom-right" aria-label=Add ng-click=apiPoliciesCtrl.showAddPathModal($event)> <ng-md-icon icon=add></ng-md-icon> </md-button> '},function(e,t){e.exports=' <div class="gv-forms gv-forms-fluid" layout=column> <div class=gv-forms-header> <h1>Resources</h1> </div> <div class=gv-form> <h2></h2> <div class=gv-form-content layout=column> <md-table-container ng-show="$parent.apiCtrl.api.resources.length > 0"> <table md-table> <thead md-head md-order=order> <tr md-row> <th md-column order-by=name>Name</th> <th md-column order-by=type>Type</th> <th md-column>Enabled</th> <th md-column permission permission-only="\'api-definition-u\'"></th> </tr> </thead> <tbody md-body> <tr md-row ng-repeat="resource in $parent.apiCtrl.api.resources | orderBy: order"> <td md-cell><span><b>{{resource.name}}</b></span></td> <td md-cell>{{apiResourcesCtrl.getResourceTypeName(resource.type)}}</td> <td md-cell> <ng-md-icon ng-if=resource.enabled icon=play_circle_outline style=fill:green></ng-md-icon> <ng-md-icon ng-if=!resource.enabled icon=pause_circle_outline style=fill:red></ng-md-icon> </td> <td md-cell permission permission-only="\'api-definition-u\'"> <div layout=row> <ng-md-icon ng-click=apiResourcesCtrl.showResourcePanel(resource) icon=settings size=24 style=margin-right:20px></ng-md-icon> <ng-md-icon ng-click=apiResourcesCtrl.deleteResource($index) icon=delete size=24></ng-md-icon> </div> </td> </tr> </tbody> </table> </md-table-container> <md-sidenav class="md-sidenav-right md-whiteframe-z2 resource" md-component-id=resource-config> <md-toolbar> <div class=md-toolbar-tools> <h2 style=color:#fff> <span>Resource: {{apiResourcesCtrl.resource.name}} [{{apiResourcesCtrl.resource.type}}]</span> </h2> <span flex></span> <md-switch ng-model=resourceEnabled ng-disabled="resourceConfigurationForm.$invalid || apiResourcesCtrl.creation" ng-change=apiResourcesCtrl.switchEnabled() class=md-block aria-label="Enable resource"></md-switch> </div> </md-toolbar> <md-content layout-padding> <h4>General</h4> <form name=resourceForm ng-submit=apiResourcesCtrl.save() novalidate> <div layout=row layout-sm=column> <md-input-container class=md-block flex-gt-xs> <label>Name</label> <input required ng-model=apiResourcesCtrl.resource.name md-autofocus type=text ng-required=true> </md-input-container> <div flex=5 hide-xs hide-sm> </div> <md-input-container class=md-block flex-gt-xs> <label>Type</label> <md-select ng-model=apiResourcesCtrl.resource.type placeholder=Type required ng-required=true ng-change=apiResourcesCtrl.onTypeChange() ng-disabled=!apiResourcesCtrl.creation> <md-option ng-repeat="type in apiResourcesCtrl.types" ng-value=type.id>{{type.name}}</md-option> </md-select> </md-input-container> </div> </form> <br> <h4>Configuration</h4> <div layout=row layout-align="start center"> <form name=resourceConfigurationForm sf-schema=apiResourcesCtrl.resourceJsonSchema sf-form=apiResourcesCtrl.resourceJsonSchemaForm sf-model=apiResourcesCtrl.resource.configuration sf-options="{ validateOnRender: true, formDefaults: { startEmpty: true } }" novalidate></form> </div> <br> <div layout=column layout-align="start center" layout-wrap> <md-button class=md-raised ng-disabled="resourceConfigurationForm.$invalid || resourceForm.$invalid" ng-click=apiResourcesCtrl.saveResource()>Save</md-button> </div> </md-content> </md-sidenav> <gravitee-empty-state ng-if="$parent.apiCtrl.api.resources.length == 0" icon=style model=Resource message="Resources will appear here" sub-message="Start creating a resource" create-mode=true></gravitee-empty-state> <div permission permission-only="\'api-definition-c\'" ng-style="$parent.apiCtrl.api.resources.length == 0 && {\'text-align\':\'center\'}"> <md-button ng-class="{\'md-fab-bottom-right\': $parent.apiCtrl.api.resources.length > 0}" class=md-fab aria-label="Add resource" ng-click=apiResourcesCtrl.showResourcePanel()> <ng-md-icon icon=add></ng-md-icon> </md-button> </div> </div> </div> </div> '},function(e,t){e.exports=' <div class="gv-forms gv-forms-fluid" layout=column> <div class=gv-forms-header> <h1>Properties</h1> <span permission permission-only="\'api-definition-u\'"> <ng-md-icon icon=settings ng-click=apiPropertiesCtrl.open()></ng-md-icon> </span> </div> <div class=gv-form> <h2></h2> <div class=gv-form-content layout=column> <div layout=row style=padding-left:16px ng-if=dynamicPropertyEnabled> <span> Dynamic properties service is actually in <code>running</code> state and run each <code>{{apiPropertiesCtrl.dynamicPropertyService.trigger.rate}} {{apiPropertiesCtrl.dynamicPropertyService.trigger.unit}}</code> using <code>{{apiPropertiesCtrl.dynamicPropertyService.provider}}</code> provider. </span> </div> <form ng-if=apiPropertiesCtrl.hasPropertiesDefined() name=formApiProperties ng-submit=apiPropertiesCtrl.update(apiPropertiesCtrl.api) novalidate> <md-table-container> <table md-table ng-init="order = \'name\'"> <thead md-head md-order=order> <tr md-row> <th md-column> <md-checkbox aria-label="Select all" ng-model=apiPropertiesCtrl.selectAll ng-change=apiPropertiesCtrl.toggleSelectAll(apiPropertiesCtrl.selectAll)></md-checkbox> </th> <th md-column md-order-by=name>Name</th> <th md-column>Value</th> <th md-column hide-gt-xs show-gt-sm>Dynamic</th> <th md-column width=80px nowrap=nowrap></th> </tr> </thead> <tbody md-body> <tr md-row ng-repeat="property in apiPropertiesCtrl.api.properties"> <td md-cell><md-checkbox aria-label="Select {{property.key}}" ng-model=apiPropertiesCtrl.selectedProperties[property.key] ng-change=apiPropertiesCtrl.checkSelectAll()></md-checkbox></td> <td md-cell>{{property.key}}</td> <td permission permission-only="\'api-definition-u\'" md-cell ng-click="apiPropertiesCtrl.editValue($event, property)" ng-class="{\'gravitee-placeholder\': property.value}"> {{property.value || \'Set value\'}} </td> <td permission permission-except="\'api-definition-u\'"> {{property.value}} </td> <td md-cell hide-gt-xs show-gt-sm> <ng-md-icon ng-show=property.dynamic icon=check></ng-md-icon> </td> <td md-cell> <ng-md-icon permission permission-only="\'api-definition-d\'" ng-show=!property.dynamic ng-click=apiPropertiesCtrl.deleteProperty(property.key) icon=delete></ng-md-icon> </td> </tr> </tbody> </table> </md-table-container> <div class="md-actions gravitee-api-save-button" layout=row> <md-button class="md-raised md-warn float-right" type=button ng-click=apiPropertiesCtrl.deleteSelectedProperties() permission permission-only="[\'api-definition-u\']" ng-disabled=!apiPropertiesCtrl.hasSelectedProperties()> Delete </md-button> </div> </form> <gravitee-empty-state ng-if=!apiPropertiesCtrl.hasPropertiesDefined() icon=assignment model=Property message="Properties will appear here" sub-message="Start creating a property" create-mode=true></gravitee-empty-state> <div ng-style="!apiPropertiesCtrl.hasPropertiesDefined() && {\'text-align\':\'center\'}"> <md-button permission permission-only="\'api-definition-u\'" ng-class="{\'md-fab-bottom-right\': apiPropertiesCtrl.hasPropertiesDefined()}" class=md-fab aria-label=Add ng-click=apiPropertiesCtrl.showPropertyModal()> <ng-md-icon icon=add></ng-md-icon> </md-button> </div> <div flex></div>  <md-sidenav class="md-sidenav-right md-whiteframe-z2 healthcheck" md-component-id=dynamic-properties-config> <md-toolbar> <div class=md-toolbar-tools> <h2 style=color:#fff> <span>Dynamic properties settings</span> </h2> <span flex></span> <md-switch ng-model=dynamicPropertyEnabled ng-disabled=formDynamicProperties.$invalid ng-change=apiPropertiesCtrl.switchEnabled() class=md-block aria-label="Enable dynamic-property service"></md-switch> </div> </md-toolbar> <md-content layout-padding> <div style="margin-left:7px;font-style:italic;border-left:2px solid #b1bdc5"> <span>This service is requiring an API deployment.</span><br/> <span>Do not forget to deploy API to start dynamic-properties service.</span> </div> <form name=formDynamicProperties ng-submit=apiPropertiesCtrl.update() novalidate> <h4>Polling frequency</h4> <div layout=row layout-sm=column> <md-input-container class=md-block flex-gt-xs> <label>Interval</label> <input required ng-model=apiPropertiesCtrl.dynamicPropertyService.trigger.rate md-autofocus type=number min=1 ng-required=true> </md-input-container> <div flex=5 hide-xs hide-sm> </div> <md-input-container class=md-block flex-gt-xs> <label>Time Unit</label> <md-select ng-model=apiPropertiesCtrl.dynamicPropertyService.trigger.unit placeholder="Time unit" required ng-required=true> <md-option ng-repeat="timeUnit in apiPropertiesCtrl.timeUnits" ng-value=timeUnit>{{timeUnit}}</md-option> </md-select> </md-input-container> </div> <br> <h4>Provider</h4> <div layout=row layout-sm=column> <md-input-container class=md-block flex-gt-xs> <label>Type</label> <md-select ng-model=apiPropertiesCtrl.dynamicPropertyService.provider placeholder=Type required ng-required=true ng-change=apiPropertiesCtrl.onProviderTypeChange()> <md-option ng-repeat="provider in apiPropertiesCtrl.dynamicPropertyProviders" ng-value=provider.id>{{provider.name}}</md-option> </md-select> </md-input-container> </div> <br> <div ng-if=apiPropertiesCtrl.dynamicPropertyService.provider> <h4> Configuration <md-button ng-if="apiPropertiesCtrl.dynamicPropertyService.provider == \'HTTP\'" class=md-icon-button aria-label="Expected HTTP provider output" ng-click=apiPropertiesCtrl.showExpectedProviderOutput()> <ng-md-icon class=no-top icon=info style=fill:#b1bdc5></ng-md-icon> </md-button> </h4> <div ng-if="apiPropertiesCtrl.dynamicPropertyService.provider == \'HTTP\'" layout=column layout-sm=column> <md-input-container class=md-block flex-gt-sm> <label>HTTP Service URL</label> <input ng-model=apiPropertiesCtrl.dynamicPropertyService.configuration.url type=url ng-required=true> </md-input-container> <md-input-container class=md-block flex-gt-sm> <label> Transformation (JOLT Specification) </label> <textarea ui-codemirror="{ onLoad : apiPropertiesCtrl.codemirrorLoaded }" ui-codemirror-opts=apiPropertiesCtrl.joltSpecificationOptions ng-model=apiPropertiesCtrl.dynamicPropertyService.configuration.specification ng-required=true rows=5></textarea> </md-input-container> </div> <br> </div> <md-divider></md-divider> <div class="md-actions gravitee-api-save-button" layout=row> <md-button class=md-accent type=submit ng-disabled="formDynamicProperties.$invalid || formDynamicProperties.$pristine"> Save </md-button> <md-button class=md-warn type=button ng-click=healthCheckCtrl.reset() ng-disabled="formDynamicProperties.$invalid || formDynamicProperties.$pristine"> Reset </md-button> </div> </form> </md-content> </md-sidenav> </div> </div> </div> '},function(e,t,i){"use strict";function n(e){e.state("management.apis.detail.proxy",{template:i(933)}).state("management.apis.detail.proxy.entrypoints",{url:"/proxy",template:i(934),controller:"ApiProxyController",controllerAs:"apiProxyCtrl",resolve:{resolvedTenants:["TenantService",function(e){return e.list()}]},data:{menu:{label:"Proxy",icon:"device_hub"},perms:{only:["api-definition-r","api-health-r"]},docs:{page:"management-api-proxy"}}}).state("management.apis.detail.proxy.cors",{url:"/cors",template:i(935),controller:"ApiProxyController",controllerAs:"apiProxyCtrl",data:{perms:{only:["api-definition-r"]},docs:{page:"management-api-proxy"}}}).state("management.apis.detail.proxy.deployments",{url:"/deployments",template:i(936),controller:"ApiProxyController",controllerAs:"apiProxyCtrl",data:{perms:{only:["api-definition-r"]},docs:{page:"management-api-proxy"}}}).state("management.apis.detail.proxy.failover",{url:"/failover",template:i(937),controller:"ApiProxyController",controllerAs:"apiProxyCtrl",data:{perms:{only:["api-definition-r"]},docs:{page:"management-api-proxy"}}}).state("management.apis.detail.proxy.endpoints",{url:"/endpoints",template:i(938),controller:"ApiProxyController",controllerAs:"apiProxyCtrl",resolve:{resolvedTenants:["TenantService",function(e){return e.list()}]},data:{perms:{only:["api-definition-r"]},docs:{page:"management-api-proxy-endpoints"}}}).state("management.apis.detail.proxy.endpoint",{url:"/groups/:groupName/endpoints/:endpointName",template:i(939),controller:"ApiEndpointController",controllerAs:"endpointCtrl",resolve:{resolvedTenants:["TenantService",function(e){return e.list()}]},data:{perms:{only:["api-definition-r"]},docs:{page:"management-api-proxy-endpoints"}}}).state("management.apis.detail.proxy.group",{url:"/groups/:groupName",template:i(940),controller:"ApiEndpointGroupController",controllerAs:"groupCtrl",resolve:{resolvedServicesDiscovery:["ServiceDiscoveryService",function(e){return e.list()}]},data:{perms:{only:["api-definition-r"]},docs:{page:"management-api-proxy-group"}}}).state("management.apis.detail.proxy.endpointhc",{url:"/groups/:groupName/endpoints/:endpointName/healthcheck",template:i(257),controller:"ApiHealthCheckConfigureController",controllerAs:"healthCheckCtrl",data:{menu:null,perms:{only:["api-health-c"]},docs:{page:"management-api-health-check"}}}).state("management.apis.detail.proxy.healthcheck",{abstract:!0,url:"/healthcheck",template:i(941)}).state("management.apis.detail.proxy.healthcheck.visualize",{url:"?from&to",template:i(942),controller:"ApiHealthCheckController",controllerAs:"healthCheckCtrl",data:{perms:{only:["api-health-r"]},docs:{page:"management-api-health-check"}},params:{from:{type:"int",dynamic:!0},to:{type:"int",dynamic:!0}}}).state("management.apis.detail.proxy.healthcheck.configure",{url:"/configure",template:i(257),controller:"ApiHealthCheckConfigureController",controllerAs:"healthCheckCtrl",data:{menu:null,perms:{only:["api-health-c"]},docs:{page:"management-api-health-check-configure"}}}).state("management.apis.detail.proxy.healthcheck.log",{url:"/logs/:log",template:i(943),controller:"ApiHealthCheckLogController",controllerAs:"healthCheckLogCtrl",resolve:{resolvedLog:["$stateParams","ApiService",function(e,t){return t.getHealthLog(e.apiId,e.log)}]},data:{perms:{only:["api-health-r"]}}}).state("management.apis.detail.proxy.discovery",{url:"/discovery",template:i(944),controller:"ApiDiscoveryController",controllerAs:"discoveryCtrl",data:{perms:{only:["api-discovery-c"]},docs:{page:"management-api-discovery"}}}).state("management.apis.detail.proxy.responsetemplates",{url:"/responsetemplates",abstract:!0}).state("management.apis.detail.proxy.responsetemplates.list",{url:"/",template:i(945),controller:"ApiResponseTemplatesController",controllerAs:"ctrl",data:{perms:{only:["api-response_templates-r"]},docs:{page:"management-api-proxy-response-templates"}}}).state("management.apis.detail.proxy.responsetemplates.new",{url:"/new",component:"gvResponseTemplate",data:{perms:{only:["api-response_templates-c"]},docs:{page:"management-api-proxy-response-template"}}}).state("management.apis.detail.proxy.responsetemplates.edit",{url:"/:key",component:"gvResponseTemplate",data:{perms:{only:["api-response_templates-r","api-response_templates-u"]},docs:{page:"management-api-proxy-response-template"}}})}n.$inject=["$stateProvider"],t.__esModule=!0,t.default=n},function(e,t){e.exports=' <div flex> <div layout=row flex> <div class="gv-sub-menu menu"> <div class=md-headline> <span> {{apiCtrl.api.name}} ({{apiCtrl.api.version}}) <md-tooltip md-direction=bottom>{{apiCtrl.api.name}} ({{apiCtrl.api.version}})</md-tooltip> </span> </div> <div class=aui-nav-heading> <strong>General</strong> </div> <ul class=aui-nav> <li class=iterable-item ui-sref-active=aui-nav-selected ui-sref=management.apis.detail.proxy.entrypoints><a class=execute>Entrypoints</a></li> <li class=iterable-item permission permission-only="[\'api-definition-r\']" ui-sref-active=aui-nav-selected ui-sref=management.apis.detail.proxy.cors><a class=execute>CORS</a></li> <li class=iterable-item permission permission-only="[\'api-definition-r\']" ui-sref-active=aui-nav-selected ui-sref=management.apis.detail.proxy.deployments><a class=execute>Deployments</a></li> <li class=iterable-item permission permission-only="[\'api-response_templates-r\']" ng-class=\'{"aui-nav-selected": apiCtrl.$state.includes("management.apis.detail.proxy.responsetemplates.list") || apiCtrl.$state.includes("management.apis.detail.proxy.responsetemplates.new") || apiCtrl.$state.includes("management.apis.detail.proxy.responsetemplates.edit") }\' ui-sref=management.apis.detail.proxy.responsetemplates.list><a class=execute>Response Templates</a></li> </ul> <div class=aui-nav-heading permission permission-only="[\'api-definition-r\', \'api-health-r\']"> <strong>Backend services</strong> </div> <ul class=aui-nav> <li class=iterable-item permission permission-only="[\'api-definition-r\']" ng-class=\'{"aui-nav-selected": apiCtrl.$state.includes("management.apis.detail.proxy.endpoints") || apiCtrl.$state.includes("management.apis.detail.proxy.endpoint") || apiCtrl.$state.includes("management.apis.detail.proxy.endpointhc") }\' ui-sref=management.apis.detail.proxy.endpoints><a class=execute>Endpoints</a></li> <li class=iterable-item permission permission-only="[\'api-definition-r\']" ui-sref-active=aui-nav-selected ui-sref=management.apis.detail.proxy.failover><a class=execute>Failover</a></li> <li class=iterable-item permission permission-only="[\'api-health-r\']" ng-class=\'{"aui-nav-selected": apiCtrl.$state.includes("management.apis.detail.proxy.healthcheck") || apiCtrl.$state.includes("management.apis.detail.proxy.healthcheck.configure") || apiCtrl.$state.includes("management.apis.detail.proxy.healthcheck.log") }\' ui-sref=management.apis.detail.proxy.healthcheck.visualize><a class=execute>Health-check</a></li> </ul> </div> <div flex class=gv-sub-content ui-view layout=column></div> </div> </div> '},function(e,t){e.exports=' <form name=apiProxyCtrl.formApi ng-submit=apiProxyCtrl.update(apiProxyCtrl.api) novalidate> <div class=gv-forms layout=column> <div class=gv-forms-header> <h1>Entrypoints</h1> <a permission permission-only="\'api-definition-u\'" ng-click=apiProxyCtrl.switchVirtualHostMode() ng-if=!apiProxyCtrl.virtualHostModeEnabled>Switch to virtual-hosts mode</a> <a permission permission-only="\'api-definition-u\'" ng-click=apiProxyCtrl.switchVirtualHostMode() ng-if=apiProxyCtrl.virtualHostModeEnabled>Switch to context-path mode</a> </div> <div class=gv-form> <h2>General</h2> <div class=gv-form-content> <div layout-gt-sm=row ng-if=!apiProxyCtrl.virtualHostModeEnabled> <md-input-container class=md-block flex-gt-sm permission permission-only="\'api-gateway_definition-u\'"> <label>Gateway context-path</label> <input ng-model=apiProxyCtrl.api.proxy.virtual_hosts[0].path type=text name=contextPath ng-pattern=/^\\/[\\/.a-zA-Z0-9-_]+$/ minlength=3 required> <div class=hint ng-if="apiProxyCtrl.formApi.contextPath.$valid || apiProxyCtrl.formApi.contextPath.$pristine"> Path where API is exposed, must start with a \'/\' and must contain any letter, capitalize letter, number, dash or underscore. </div> <div ng-messages=apiProxyCtrl.formApi.contextPath.$error> <div ng-message=required>Context path is required.</div> <div ng-message=minlength>Context path has to be more than 3 characters long.</div> <div ng-message=pattern>Context path is not valid (must start with a \'/\' and must contain any letter, capitalize letter, number, dash or underscore)</div> </div> </md-input-container> <md-input-container class=md-block flex-gt-sm permission permission-except="\'api-gateway_definition-u\'"> <label>Gateway context path</label> <input ng-model=apiProxyCtrl.api.proxy.virtual_hosts[0].path type=text ng-pattern=/^\\/[\\/.a-zA-Z0-9-_]+$/ disabled=disabled required> </md-input-container> </div> <div layout-gt-sm=row ng-if=apiProxyCtrl.virtualHostModeEnabled> <div layout=column layout-sm=column flex> <h5 style=color:grey> <span>Virtual Hosts</span> <ng-md-icon icon=add_circle_outline style=fill:#b1bdc5 aria-label="Add virtual-host" ng-click=apiProxyCtrl.addVirtualHost()>Add virtual-host</ng-md-icon> </h5> <div class=ipsum style=color:grey;margin-bottom:30px>Use sharding tags to control where the API must be deployed.</div> <div layout=row layout-sm=column layout-align="center center" ng-repeat="vHost in apiProxyCtrl.api.proxy.virtual_hosts"> <ng-md-icon icon=remove_circle_outline style=fill:#b1bdc5 aria-label="Delete virtual-host" ng-click=apiProxyCtrl.removeVirtualHost($index)></ng-md-icon> <div flex=5 hide-xs hide-sm> </div> <md-input-container class=md-block flex-gt-sm> <input aria-label="Listening Host" name=vhost{{$index}}-host ng-model=vHost.host type=text placeholder="Listening host"> <div class=hint ng-if="vHost.host === undefined || vHost.host === \'\' || apiProxyCtrl.formApi[\'vhost\'+$index+\'-host\'].$dirty"> Host which must be set into the HTTP request to access this entrypoint. </div> </md-input-container> <div flex=5 hide-xs hide-sm> </div> <md-input-container class=md-block flex-gt-sm> <input aria-label="Listening Path" ng-model=vHost.path name=vhost{{$index}}-path type=text placeholder="Listening path" ng-pattern=/^\\/[\\/.a-zA-Z0-9-_]*$/ required> <div class=hint ng-if="vHost.path === undefined || vHost.path === \'\' || apiProxyCtrl.formApi[\'vhost\'+$index+\'-path\'].$dirty"> Path where API is exposed, must start with a \'/\' and must contain any letter, capitalize letter, number, dash or underscore. </div> <div ng-messages="apiProxyCtrl.formApi[\'vhost\'+$index+\'-path\'].$error"> <div ng-message=required>Listening path is required.</div> <div ng-message=pattern>Listening path is not valid (must start with a \'/\' and must contain any letter, capitalize letter, number, dash or underscore)</div> </div> </md-input-container> <md-input-container class=md-block flex-gt-sm> <input aria-label="Override entrypoint" name=vhost{{$index}}-override ng-model=vHost.override_entrypoint type=checkbox placeholder="Override entrypoint"> <div class=hint ng-if="vHost.override_entrypoint === undefined || vHost.override_entrypoint === \'\' || apiProxyCtrl.formApi[\'vhost\'+$index+\'-override\'].$dirty"> Useful to override entrypoint with the virtual host on the portal. </div> </md-input-container> </div> </div> </div> <div class="md-actions gravitee-api-save-button" layout=row> <md-button permission permission-only="\'api-definition-u\'" class="md-raised md-primary" type=submit ng-disabled="apiProxyCtrl.formApi.$invalid || apiProxyCtrl.formApi.$pristine"> Save </md-button> <md-button permission permission-only="\'api-definition-u\'" class=md-raised type=button ng-click=apiProxyCtrl.reset() ng-disabled=apiProxyCtrl.formApi.$pristine> Reset </md-button> </div> </div> </div> </div> </form> '},function(e,t){e.exports=' <form name=apiProxyCtrl.formApi ng-submit=apiProxyCtrl.update(apiProxyCtrl.api) novalidate> <div class=gv-forms layout=column> <h1>CORS</h1> <div class=gv-form> <div class=gv-forms-header> <h2>Cross-origin resource sharing</h2> <div ng-switch on=apiProxyCtrl.api.proxy.cors.enabled> <span class=proxy-activated ng-switch-when=true>(active)</span> <span class=proxy-deactivated ng-switch-when=false>(not active)</span> <span class=proxy-deactivated ng-switch-default>(not active)</span> </div> </div> <div class=gv-form-content> <md-checkbox ng-model=apiProxyCtrl.api.proxy.cors.enabled aria-label="Enable CORS" flex>Enabled <div class=ipsum> CORS is a mechanism that allows restricted resources (e.g. fonts) on a web page to be requested from another domain outside the domain from which the first resource was served.<br> If you enable the <i>try-it</i> feature of a Swagger page you probably have to enable and configure the CORS. </div> </md-checkbox> <div layout=column layout-wrap layout-gt-sm=row> <div flex-xs flex=50> <md-input-container class=md-block flex-gt-sm> <label>Access-Control-Allow-Origin *</label> <md-chips ng-model=apiProxyCtrl.api.proxy.cors.allowOrigin ng-required=apiProxyCtrl.api.proxy.cors.enabled md-removable=apiProxyCtrl.api.proxy.cors.enabled placeholder="*, https://mydomain.com, (http|https).*.mydomain.com, ..." md-on-add="apiProxyCtrl.controlAllowOrigin($chip, $index)" md-add-on-blur=true readonly=!apiProxyCtrl.api.proxy.cors.enabled> <md-chip-template> <strong>{{$chip}}</strong> </md-chip-template> </md-chips> <div class=hint> The origin parameter specifies a URI that may access the resource. Scheme, domain and port are part of the <i>same-origin</i> definition.<br> If you choose to enable \'*\' it means that is allows all requests, regardless of origin. Regular Expressions are also supported. </div> <div ng-if=!apiProxyCtrl.isRegexValid() style=color:red>Regex is invalid</div> </md-input-container> </div> <div flex-xs flex=50> <md-input-container class=md-block flex-gt-sm> <label>Access-Control-Allow-Methods</label> <md-select ng-model=apiProxyCtrl.api.proxy.cors.allowMethods md-on-close=clearSearchTerm() data-md-container-class=selectdemoSelectHeader multiple=multiple ng-required=apiProxyCtrl.api.proxy.cors.enabled ng-disabled=!apiProxyCtrl.api.proxy.cors.enabled> <md-select-header class=demo-select-header> <input ng-model=searchTerm type=search placeholder="Search for allowed HTTP method." class="demo-header-searchbox md-text"> </md-select-header> <md-optgroup label="HTTP Methods"> <md-option ng-value=method ng-repeat="method in methods |\n              filter:searchTerm">{{method}}</md-option> </md-optgroup> </md-select> <div class=hint>Specifies the method or methods allowed when accessing the resource. This is used in response to a preflight request.</div> </md-input-container> </div> <div flex-xs flex=50> <md-input-container class=md-block flex-gt-sm> <label>Access-Control-Allow-Headers</label> <md-chips ng-model=apiProxyCtrl.api.proxy.cors.allowHeaders md-autocomplete-snap md-add-on-blur=true md-require-match=false readonly=!apiProxyCtrl.api.proxy.cors.enabled> <md-autocomplete md-search-text=searchHeaders md-items="item in apiProxyCtrl.querySearchHeaders(searchHeaders)" md-item-text=item placeholder="Content-Type, ..."> <span md-highlight-text=searchHeaders>{{item}}</span> </md-autocomplete> <md-chip-template> <span> <strong>{{$chip}}</strong> </span> </md-chip-template> <span class=ipsum> Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request. </span> </md-chips> </md-input-container> </div> <div layout-gt-sm=row> <md-input-container class=md-block flex-gt-sm> <md-checkbox ng-model=apiProxyCtrl.api.proxy.cors.allowCredentials ng-disabled=!apiProxyCtrl.api.proxy.cors.enabled aria-label=Access-Control-Allow-Credentials class=md-align-top-left flex> Access-Control-Allow-Credentials<br/> <span class=ipsum> Indicates whether or not the response to the request can be exposed when the credentials flag is true. </span> </md-checkbox> </md-input-container> <md-input-container class=md-block flex-gt-sm> <label>Max Age (seconds)</label> <input ng-model=apiProxyCtrl.api.proxy.cors.maxAge type=number ng-required=apiProxyCtrl.api.proxy.cors.enabled min=-1 ng-disabled=!apiProxyCtrl.api.proxy.cors.enabled> <div class=hint>This header indicates how long the results of a preflight request can be cached (-1 if disabled).</div> </md-input-container> </div> <div flex-xs flex=50> <md-input-container class=md-block flex-gt-sm> <md-chips ng-model=apiProxyCtrl.api.proxy.cors.exposeHeaders md-autocomplete-snap md-add-on-blur=true md-require-match=false readonly=!apiProxyCtrl.api.proxy.cors.enabled> <md-autocomplete md-search-text=searchHeaders md-items="item in apiProxyCtrl.querySearchHeaders(searchHeaders)" md-item-text=item placeholder=Access-Control-Expose-Headers> <span md-highlight-text=searchHeaders>{{item}}</span> </md-autocomplete> <md-chip-template> <span> <strong>{{$chip}}</strong> </span> </md-chip-template> </md-chips> <div class=hint>This header lets a server whitelist headers that browsers are allowed to access.</div> </md-input-container> </div> </div> <div class="md-actions gravitee-api-save-button" layout=row> <md-button permission permission-only="\'api-definition-u\'" class="md-raised md-primary" type=submit ng-disabled="!apiProxyCtrl.isRegexValid() || apiProxyCtrl.formApi.$invalid || apiProxyCtrl.formApi.$pristine"> Save </md-button> <md-button permission permission-only="\'api-definition-u\'" class=md-raised type=button ng-click=apiProxyCtrl.reset() ng-disabled=apiProxyCtrl.formApi.$pristine> Reset </md-button> </div> </div> </div> </div> </form> '},function(e,t){e.exports=' <form name=apiProxyCtrl.formApi ng-submit=apiProxyCtrl.update(apiProxyCtrl.api) novalidate> <div class=gv-forms layout=column> <h1>Deployments</h1> <div class=gv-form> <div class=gv-forms-header> <h2>Deployment</h2> <div class=ipsum>Use sharding tags to control where the API must be deployed.</div> </div> <div class=gv-form-content> <md-input-container class=md-block> <label>Sharding tags</label> <md-select ng-model=apiProxyCtrl.api.tags multiple=multiple> <md-option ng-repeat="tag in apiProxyCtrl.tags" ng-value=tag.id ng-disabled=apiProxyCtrl.isTagDisabled(tag)> {{tag.name}}<span ng-if=tag.description class=gravitee-general-description> - {{tag.description}}</span> </md-option> </md-select> </md-input-container> <div class="md-actions gravitee-api-save-button" layout=row> <md-button permission permission-only="\'api-definition-u\'" class="md-raised md-primary" type=submit ng-disabled="apiProxyCtrl.formApi.$invalid || apiProxyCtrl.formApi.$pristine"> Save </md-button> <md-button permission permission-only="\'api-definition-u\'" class=md-raised type=button ng-click=apiProxyCtrl.reset() ng-disabled=apiProxyCtrl.formApi.$pristine> Reset </md-button> </div> </div> </div> </div> </form> '},function(e,t){e.exports=' <form name=apiProxyCtrl.formApi ng-submit=apiProxyCtrl.update(apiProxyCtrl.api) novalidate> <div class=gv-forms layout=column> <h1>Failover</h1> <div class=gv-form> <div class=gv-forms-header> <h2>Failover</h2> <div ng-switch on=apiProxyCtrl.failoverEnabled> <span class=proxy-activated ng-switch-when=true>(active)</span> <span class=proxy-deactivated ng-switch-when=false>(not active)</span> <span class=proxy-deactivated ng-switch-default>(not active)</span> </div> </div> <div class=gv-form-content> <md-checkbox ng-model=apiProxyCtrl.failoverEnabled aria-label="Enable CORS" flex>Enabled <div class=ipsum>When gateway receives a connect timeout from backend servers, it redirects traffic to the next server until "max attempts" or "timeout" have been reached.</div> </md-checkbox> <md-input-container class=md-block flex> <label>Max attempts</label> <input ng-model=apiProxyCtrl.api.proxy.failover.maxAttempts type=number ng-required=apiProxyCtrl.failoverEnabled min=1 ng-disabled=!apiProxyCtrl.failoverEnabled> <div class=hint>Limits the number of possible tries before returning an error. Each try get an endpoint according to the load balancing algorithm. Must be greater than 0.</div> </md-input-container> <md-input-container class=md-block flex> <label>Timeout (ms)</label> <input ng-model=apiProxyCtrl.api.proxy.failover.retryTimeout type=number min=1 ng-required=apiProxyCtrl.failoverEnabled ng-disabled=!apiProxyCtrl.failoverEnabled> <div class=hint>Limits the time allowed to try another attempt. Must be greater than 0.</div> </md-input-container> <div class="md-actions gravitee-api-save-button" layout=row> <md-button permission permission-only="\'api-definition-u\'" class="md-raised md-primary" type=submit ng-disabled="apiProxyCtrl.formApi.$invalid || apiProxyCtrl.formApi.$pristine"> Save </md-button> <md-button permission permission-only="\'api-definition-u\'" class=md-raised type=button ng-click=apiProxyCtrl.reset() ng-disabled=apiProxyCtrl.formApi.$pristine> Reset </md-button> </div> </div> </div> </div> </form> '},function(e,t){e.exports=' <form name=apiProxyCtrl.formApi ng-submit=apiProxyCtrl.update(apiProxyCtrl.api) novalidate> <div class="gv-forms gv-forms-fluid" layout=column> <h1>Endpoints</h1> <div class=gv-form> <div class=gv-forms-header> <h2>Groups</h2> </div> <div class=gv-form-content> <div ng-repeat="group in apiProxyCtrl.api.proxy.groups" style=margin-bottom:28px> <md-subheader> <div layout=row layout-align="space-between center"> <div>Group: {{group.name}}</div> <div> <md-button class=md-icon-button aria-label="Add endpoint" ui-sref="management.apis.detail.proxy.endpoint({groupName: group.name, endpointName: \'\'})"> <ng-md-icon icon=add></ng-md-icon> <md-tooltip md-direction=left>Add new endpoint</md-tooltip> </md-button> <md-button class=md-icon-button aria-label="Edit group" ui-sref="management.apis.detail.proxy.group({groupName: group.name})"> <ng-md-icon icon=settings></ng-md-icon> <md-tooltip md-direction=left>Edit group</md-tooltip> </md-button> <md-button class=md-icon-button aria-label="Delete group" ng-click=apiProxyCtrl.deleteGroup(group.name) ng-disabled="apiProxyCtrl.api.proxy.groups.length == 1"> <ng-md-icon icon=delete ng-show="apiProxyCtrl.api.proxy.groups.length > 1"></ng-md-icon> <ng-md-icon icon=delete style=fill:rgba(142,158,170,.54) ng-show="apiProxyCtrl.api.proxy.groups.length == 1"></ng-md-icon> <md-tooltip md-direction=left>Delete group</md-tooltip> </md-button> </div> </div> </md-subheader> <md-table-container> <table md-table md-row-select=true ng-model=selected ng-init="order = \'name\'" multiple=true> <thead md-head md-order=order> <tr md-row> <th md-column md-order-by=name><span>Name</span></th> <th width=1%></th> <th md-column md-order-by=target><span>Target</span></th> <th ng-if=apiProxyCtrl.hasTenants() md-column md-order-by=tenant hide-gt-xs show-gt-sm>Tenants</th> <th width=1% md-column md-order-by=weight md-numeric hide-gt-xs show-gt-sm><span>Weight</span></th> <th width=1% nowrap=nowrap md-column permission permission-only="\'api-definition-u\'"> <md-button class=md-icon-button aria-label="Delete endpoint" ng-click=apiProxyCtrl.removeEndpoints($event) ng-disabled="selected.length == 0"> <ng-md-icon icon=delete ng-show="selected.length > 0"></ng-md-icon> <ng-md-icon icon=delete style=fill:rgba(142,158,170,.54) ng-show="selected.length == 0"></ng-md-icon> <md-tooltip md-direction=left>Delete endpoint</md-tooltip> </md-button> </th> </tr> </thead> <tbody md-body> <tr md-row md-select=endpoint md-auto-select=false ng-repeat="endpoint in group.endpoints | orderBy:order"> <td md-cell ng-style="endpoint.backup ? {\'font-style\': \'italic\',\'color\': \'darkgrey\'} : \'\'">{{endpoint.name}}</td> <td md-cell hide-gt-xs show-gt-sm nowrap=nowrap> <ng-md-icon ng-show=apiProxyCtrl.hasHealthCheck(endpoint) icon=favorite> <md-tooltip md-direction=top>Health-check enabled</md-tooltip> </ng-md-icon> <ng-md-icon ng-show=endpoint.inherit icon=subdirectory_arrow_right> <md-tooltip md-direction=top>HTTP configuration inherited</md-tooltip> </ng-md-icon> </td> <td md-cell ng-style="endpoint.backup ? {\'font-style\': \'italic\',\'color\': \'darkgrey\'} : \'\'">{{endpoint.target}}</td> <td ng-if=apiProxyCtrl.hasTenants() md-cell hide-gt-xs show-gt-sm>{{apiProxyCtrl.getTenants(endpoint.tenants)}}</td> <td md-cell hide-gt-xs show-gt-sm ng-class="{\'md-placeholder\': !endpoint.weight}">{{endpoint.weight}}</td> <td md-cell permission permission-only="\'api-definition-u\'"> <md-button class=md-icon-button aria-label="Edit endpoint" ui-sref="management.apis.detail.proxy.endpoint({groupName: group.name, endpointName: endpoint.name})"> <ng-md-icon icon=settings></ng-md-icon> <md-tooltip md-direction=left>Edit endpoint</md-tooltip> </md-button> </td> </tr> </tbody> </table> </md-table-container> </div> <md-content layout=row> <md-button class=md-raised permission permission-only="\'api-definition-u\'" ng-click=apiProxyCtrl.createGroup()> Add a new group </md-button> </md-content> </div> </div> </div> <div class="md-actions gravitee-api-save-button" layout=row> <md-button permission permission-only="\'api-definition-u\'" class="md-raised md-primary" type=submit ng-disabled="apiProxyCtrl.formApi.$invalid || apiProxyCtrl.formApi.$pristine"> Save </md-button> <md-button permission permission-only="\'api-definition-u\'" class=md-raised type=button ng-click=apiProxyCtrl.reset() ng-disabled=apiProxyCtrl.formApi.$pristine> Reset </md-button> </div> </form> '},function(e,t){e.exports=' <form name=formEndpoint ng-submit=endpointCtrl.update(endpointCtrl.api) novalidate autocomplete=false> <div class=gv-forms layout=column> <div class=gv-forms-header> <h1>Endpoint configuration</h1> <a ng-click=endpointCtrl.backToEndpointsConfiguration()>Back to endpoints configuration</a> </div> <md-tabs md-dynamic-height> <md-tab> <md-tab-label>General</md-tab-label> <md-tab-body> <h3></h3> <div layout=column layout-wrap layout-gt-sm=row> <md-input-container flex=30> <label>Name</label> <input ng-model=endpointCtrl.endpoint.name type=text name=endpointName required ng-change=endpointCtrl.checkEndpointNameUniqueness() ng-pattern=/^[^:]*$/ > <div class=hint style=color:#dd2c00 ng-if=duplicateEndpointNames>This name is used by another endpoint and/or an endpoint group.</div> <div ng-messages=formEndpoint.endpointName.$error> <div ng-message=pattern>Endpoint name does not support <code>:</code> in its name.</div> </div> </md-input-container> <md-input-container flex=30> <label>Target</label> <input ng-model=endpointCtrl.endpoint.target type=text required> </md-input-container> <md-input-container flex=30> <label>Weight</label> <input ng-model=endpointCtrl.endpoint.weight type=number min=1 max=99> </md-input-container> <md-input-container class=flex> <label>Tenants</label> <md-select ng-model=endpointCtrl.endpoint.tenants multiple=multiple> <md-option ng-repeat="tenant in endpointCtrl.tenants" ng-value=tenant.id> {{tenant.name}}<span ng-if=tenant.description class=gravitee-general-description> - {{tenant.description}}</span> </md-option> </md-select> </md-input-container> </div> <section ng-if="endpointCtrl.creation === false"> <md-subheader> Health-check <ng-md-icon icon=settings ui-sref="management.apis.detail.proxy.endpointhc({groupName: groupName, endpointName: endpointCtrl.endpoint.name})"></ng-md-icon> </md-subheader> </section> <md-checkbox ng-model=endpointCtrl.endpoint.backup aria-label="Backup endpoint" class=md-align-top-left flex> Backup endpoint<br/> <span class=ipsum> A "backup" endpoint is not included in the load-balancing algorithm, meaning that an incoming HTTP request is never transmitted to the endpoint. </span> </md-checkbox> </md-tab-body> </md-tab> <md-tab> <md-tab-label>HTTP configuration</md-tab-label> <md-tab-body> <gv-http-configuration http-configuration=endpointCtrl.endpoint inherit-http-configuration=endpointCtrl.group form=formEndpoint></gv-http-configuration> </md-tab-body> </md-tab> </md-tabs> <div class="md-actions gravitee-api-save-button" layout=row> <md-button class="md-raised md-primary" type=submit ng-disabled="duplicateEndpointNames || formEndpoint.$invalid || formEndpoint.$pristine"> Save </md-button> <md-button class=md-raised type=button ng-click=endpointCtrl.reset() ng-disabled="formEndpoint.$invalid || formEndpoint.$pristine"> Reset </md-button> </div> </div> </form> '},function(e,t){e.exports=' <form name=formGroup ng-submit=groupCtrl.update(groupCtrl.api) novalidate autocomplete=false> <div class=gv-forms layout=column> <div class=gv-forms-header> <h1>Group configuration</h1> <a ng-click=groupCtrl.backToEndpointsConfiguration()>Back to endpoints configuration</a> </div> <md-tabs md-dynamic-height> <md-tab> <md-tab-label>General</md-tab-label> <md-tab-body> <h3></h3> <md-input-container class=md-block> <label>Name</label> <input ng-model=groupCtrl.group.name name=groupName type=text required ng-change=groupCtrl.checkEndpointNameUniqueness() ng-pattern=/^[^:]*$/ > <div class=hint style=color:#dd2c00 ng-if=duplicateEndpointNames>This name is used by another endpoint and/or an endpoint group.</div> <div ng-messages=formGroup.groupName.$error> <div ng-message=pattern>Group name does not support <code>:</code> in its name.</div> </div> </md-input-container> <md-input-container class=md-block> <label>Load balancing algorithm</label> <md-select ng-model=groupCtrl.group.load_balancing.type> <md-option ng-repeat="lb in lbs" value={{lb.value}}> {{lb.name}} </md-option> </md-select> </md-input-container> </md-tab-body> </md-tab> <md-tab> <md-tab-label>HTTP configuration</md-tab-label> <md-tab-body> <gv-http-configuration http-configuration=groupCtrl.group form=formGroup></gv-http-configuration> </md-tab-body> </md-tab> <md-tab> <md-tab-label>Service Discovery <span ng-switch on=groupCtrl.discovery.enabled> <span class=proxy-activated ng-switch-when=true>(active)</span> <span class=proxy-deactivated ng-switch-when=false>(not active)</span> <span class=proxy-deactivated ng-switch-default>(not active)</span> </span> </md-tab-label> <md-tab-body> <h3></h3> <md-checkbox ng-model=groupCtrl.discovery.enabled aria-label="Enable service discovery" ng-disabled="!groupCtrl.types || groupCtrl.types.length === 0" flex>Enabled service discovery <div class=ipsum>By enabling service discovery, endpoints will be dynamically added or removed (without downtime).</div> </md-checkbox> <div ng-show=groupCtrl.discovery.enabled> <md-content layout=column> <md-input-container class=md-block flex-gt-xs> <label>Type</label> <md-select ng-model=groupCtrl.discovery.provider placeholder=Type ng-required=groupCtrl.discovery.enabled ng-change=groupCtrl.onTypeChange()> <md-option ng-repeat="type in groupCtrl.types" ng-value=type.id>{{type.name}}</md-option> </md-select> </md-input-container> <div ng-form=groupCtrl.serviceDiscoveryConfigurationForm sf-schema=groupCtrl.serviceDiscoveryJsonSchema sf-form=groupCtrl.serviceDiscoveryJsonSchemaForm sf-model=groupCtrl.discovery.configuration sf-options="{ validateOnRender: true, formDefaults: { startEmpty: true } }" novalidate> </div> </md-content> </div> </md-tab-body> </md-tab> </md-tabs> <div class="md-actions gravitee-api-save-button" layout=row> <md-button permission permission-only="\'api-definition-u\'" class="md-raised md-primary" type=submit ng-disabled="duplicateEndpointNames || groupCtrl.serviceDiscoveryConfigurationForm.$invalid || formGroup.$invalid || formGroup.$pristine"> Save </md-button> <md-button permission permission-only="\'api-definition-u\'" class=md-raised type=button ng-click=groupCtrl.reset() ng-disabled=formGroup.$pristine> Reset </md-button> </div> </div> </form> '},function(e,t){e.exports=" <ui-view></ui-view> "},function(e,t){e.exports=' <div class="gv-forms gv-forms-fluid" layout=column> <div class=gv-forms-header> <h1>Health-check</h1> <a permission permission-only="\'api-health-u\'" ui-sref=management.apis.detail.proxy.healthcheck.configure>Configure Health-check</a> </div> <div class=gv-form> <h2></h2> <div class=gv-form-content layout=column> <div layout=row layout-align="end center"> <md-button class=md-primary permission permission-only="\'api-health-r\'" ng-click=healthCheckCtrl.updateChart()> <ng-md-icon icon=refresh></ng-md-icon> Refresh data </md-button> </div> <md-content flex> <gv-logs-timeframe on-timeframe-change=healthCheckCtrl.timeframeChange(timeframe) flex></gv-logs-timeframe> <div layout=column flex> <div layout=row flex> <md-card flex> <div class=widget-card flex> <md-card-title> <md-card-title-text> <span class=md-title><strong>Global availability</strong></span> <span class=md-subhead>Global availability including results of all health-checked endpoints (see below).</span> </md-card-title-text> <md-card-title-media> </md-card-title-media> </md-card-title> <md-card-content> <div> <gravitee-chart options=healthCheckCtrl.chartData zoom=true type=areaspline height=180></gravitee-chart> </div> <div layout=row layout-padding layout-align="center center"> <div flex=15><h5>Last minute</h5></div> <div flex=15><h5>Last hour</h5></div> <div flex=15><h5>Last day</h5></div> <div flex=15><h5>Last week</h5></div> <div flex=15><h5>Last month</h5></div> </div> <div layout=row layout-padding layout-align="center center"> <gv-healthcheck-metric availability="healthCheckCtrl.endpoint.availabilities.data.global[\'1m\']" responsetime="healthCheckCtrl.endpoint.responsetimes.data.global[\'1m\']" layout=column flex=15></gv-healthcheck-metric> <gv-healthcheck-metric availability="healthCheckCtrl.endpoint.availabilities.data.global[\'1h\']" responsetime="healthCheckCtrl.endpoint.responsetimes.data.global[\'1h\']" layout=column flex=15></gv-healthcheck-metric> <gv-healthcheck-metric availability="healthCheckCtrl.endpoint.availabilities.data.global[\'1d\']" responsetime="healthCheckCtrl.endpoint.responsetimes.data.global[\'1d\']" layout=column flex=15></gv-healthcheck-metric> <gv-healthcheck-metric availability="healthCheckCtrl.endpoint.availabilities.data.global[\'1w\']" responsetime="healthCheckCtrl.endpoint.responsetimes.data.global[\'1w\']" layout=column flex=15></gv-healthcheck-metric> <gv-healthcheck-metric availability="healthCheckCtrl.endpoint.availabilities.data.global[\'1M\']" responsetime="healthCheckCtrl.endpoint.responsetimes.data.global[\'1M\']" layout=column flex=15></gv-healthcheck-metric> </div> </md-card-content> </div> </md-card> </div> <div layout=row> <md-card flex> <div class=widget-card flex> <md-card-title> <md-card-title-text> <span class=md-title><strong>Per-endpoint availability</strong></span> <span class=md-subhead>Availability per-endpoint where health-check is enabled</span> </md-card-title-text> <md-card-title-media> </md-card-title-media> </md-card-title> <md-card-content> <div align=column> <div layout=row layout-padding> <div flex=25></div> <div flex=15><h5>Last minute</h5></div> <div flex=15><h5>Last hour</h5></div> <div flex=15><h5>Last day</h5></div> <div flex=15><h5>Last week</h5></div> <div flex=15><h5>Last month</h5></div> </div> <div layout=row ng-repeat="(endpoint, metrics) in healthCheckCtrl.endpoint.availabilities.data.buckets" layout-padding> <div layout=column flex=25> <span style=font-weight:700>{{endpoint}}</span> <span style=color:rgba(0,0,0,.54);font-size:11px>{{healthCheckCtrl.endpoint.availabilities.data.metadata[endpoint].target}}</span> </div> <gv-healthcheck-metric availability="metrics[\'1m\']" responsetime="healthCheckCtrl.endpoint.responsetimes.data.buckets[endpoint][\'1m\']" layout=column flex=15></gv-healthcheck-metric> <gv-healthcheck-metric availability="metrics[\'1h\']" responsetime="healthCheckCtrl.endpoint.responsetimes.data.buckets[endpoint][\'1h\']" layout=column flex=15></gv-healthcheck-metric> <gv-healthcheck-metric availability="metrics[\'1d\']" responsetime="healthCheckCtrl.endpoint.responsetimes.data.buckets[endpoint][\'1d\']" layout=column flex=15></gv-healthcheck-metric> <gv-healthcheck-metric availability="metrics[\'1w\']" responsetime="healthCheckCtrl.endpoint.responsetimes.data.buckets[endpoint][\'1w\']" layout=column flex=15></gv-healthcheck-metric> <gv-healthcheck-metric availability="metrics[\'1M\']" responsetime="healthCheckCtrl.endpoint.responsetimes.data.buckets[endpoint][\'1M\']" layout=column flex=15></gv-healthcheck-metric> </div> </div> </md-card-content> </div> </md-card> <md-card flex=50 ng-if=healthCheckCtrl.displayGatewayHC()> <div class=widget-card flex> <md-card-title> <md-card-title-text> <span class=md-title><strong>Per-gateway availability</strong></span> <span class=md-subhead>Availability per-gateway where health-check is enabled</span> </md-card-title-text> <md-card-title-media> </md-card-title-media> </md-card-title> <md-card-content> <div align=column> <div layout=row layout-padding> <div flex=25></div> <div flex=15><h5>Last minute</h5></div> <div flex=15><h5>Last hour</h5></div> <div flex=15><h5>Last day</h5></div> <div flex=15><h5>Last week</h5></div> <div flex=15><h5>Last month</h5></div> </div> <div layout=row ng-repeat="(gateway, metrics) in healthCheckCtrl.gateway.availabilities.data.buckets"> <div layout=row layout-padding ng-if="healthCheckCtrl.gateway.availabilities.data.metadata[gateway].deleted !== \'true\'" flex> <div layout=column flex=25> <span style=font-weight:700>{{healthCheckCtrl.gateway.availabilities.data.metadata[gateway].hostname}}</span> <span style=color:rgba(0,0,0,.54);font-size:11px>{{healthCheckCtrl.gateway.availabilities.data.metadata[gateway].deleted}}</span> <span style=color:rgba(0,0,0,.54);font-size:11px>{{healthCheckCtrl.gateway.availabilities.data.metadata[gateway].ip}}</span> </div> <gv-healthcheck-metric availability="metrics[\'1m\']" responsetime="healthCheckCtrl.gateway.responsetimes.data.buckets[gateway][\'1m\']" layout=column flex=15></gv-healthcheck-metric> <gv-healthcheck-metric availability="metrics[\'1h\']" responsetime="healthCheckCtrl.gateway.responsetimes.data.buckets[gateway][\'1h\']" layout=column flex=15></gv-healthcheck-metric> <gv-healthcheck-metric availability="metrics[\'1d\']" responsetime="healthCheckCtrl.gateway.responsetimes.data.buckets[gateway][\'1d\']" layout=column flex=15></gv-healthcheck-metric> <gv-healthcheck-metric availability="metrics[\'1w\']" responsetime="healthCheckCtrl.gateway.responsetimes.data.buckets[gateway][\'1w\']" layout=column flex=15></gv-healthcheck-metric> <gv-healthcheck-metric availability="metrics[\'1M\']" responsetime="healthCheckCtrl.gateway.responsetimes.data.buckets[gateway][\'1M\']" layout=column flex=15></gv-healthcheck-metric> </div> </div> </div> </md-card-content> </div> </md-card> </div> <div layout=row> <md-card flex> <div class=widget-card flex> <md-card-title> <md-card-title-text layout=row> <span class=md-title flex><strong>Latest check</strong></span> <span class=md-title><md-switch aria-label="Show only status transitions" ng-model=transitionMode>Show only status transitions</md-switch></span> </md-card-title-text> <md-card-title-media> </md-card-title-media> </md-card-title> <md-card-content> <div layout=column layout-padding> <md-table-container> <table md-table class=gravitee-analytics-top-hits-table multiple=multiple md-row-select=healthCheckCtrl.widget.chart.selectable data-ng-model=healthCheckCtrl.selected> <thead md-head> <tr md-row> <th md-column>Date</th> <th md-column>Endpoint</th> <th md-column>Gateway</th> <th md-column>Health</th> <th md-column>Target</th> <th md-column>Status | Elapsed Time</th> <th md-column></th> </tr> </thead> <tbody md-body> <tr ng-if="transitionMode?healthCheckCtrl.transitionLogs.logs.length > 0:healthCheckCtrl.logs.logs.length > 0" md-row ng-repeat="log in transitionMode?healthCheckCtrl.transitionLogs.logs:healthCheckCtrl.logs.logs | limitTo: healthCheckCtrl.query.size" md-auto-select md-select=log md-select-id=key> <td md-cell>{{log.timestamp | date:\'MMM d, y h:mm:ss.sss a\'}}</td> <td md-cell> <md-tooltip md-direction=bottom>{{healthCheckCtrl.getEndpointStatus(log.state)}}</md-tooltip> <ng-md-icon ng-if="log.state === 0" icon=close size=14px style=fill:red></ng-md-icon> <ng-md-icon ng-if="log.state === 1" icon=trending_down size=14px style=fill:orange></ng-md-icon> <ng-md-icon ng-if="log.state === 2" icon=trending_up size=14px style=fill:orange></ng-md-icon> <ng-md-icon ng-if="log.state === 3" icon=check size=14px style=fill:green></ng-md-icon> {{log.endpoint}} </td> <td md-cell>{{transitionMode?healthCheckCtrl.transitionLogs.metadata[log.gateway].hostname:healthCheckCtrl.logs.metadata[log.gateway].hostname}}</td> <td md-cell> <ng-md-icon ng-if=log.success icon=done size=14px style=fill:green></ng-md-icon> <ng-md-icon ng-if=!log.success icon=close size=14px style=fill:red></ng-md-icon> </td> <td md-cell> <span> {{log.request.method | uppercase}} {{log.request.uri}} </span> </td> <td md-cell>{{log.response.status}} | {{log.responseTime}} ms</td> <td md-cell> <ng-md-icon ng-if=!log.success icon=remove_red_eye size=16px ui-sref="management.apis.detail.proxy.healthcheck.log({log: log.id})"></ng-md-icon> </td> </tr> <tr ng-if="transitionMode?healthCheckCtrl.transitionLogs.total === 0:healthCheckCtrl.logs.total === 0"> <td md-cell colspan=6>No log</td> </tr> </tbody> </table> </md-table-container> <md-table-pagination md-limit=healthCheckCtrl.query.size md-limit-options="[10, 25, 50, 75, 100]" md-page=healthCheckCtrl.query.page md-total={{transitionMode?healthCheckCtrl.transitionLogs.total:healthCheckCtrl.logs.total}} md-on-paginate=healthCheckCtrl.onPaginate md-page-select> </md-table-pagination> </div> </md-card-content> </div> </md-card> </div> </div> </md-content> </div> </div> </div> '},function(e,t){e.exports=' <div class=log-table layout=row layout-padding> <div layout=column flex=33> <md-table-container> <table md-table> <tbody md-body> <tr md-row style=height:30px> <td md-cell><span style=font-weight:700>ID</span></td> <td md-cell>{{healthCheckLogCtrl.log.id}}</td> </tr> <tr md-row style=height:30px> <td md-cell><span style=font-weight:700>Timestamp</span></td> <td md-cell>{{healthCheckLogCtrl.log.timestamp | date:\'MMM d, y h:mm:ss.sss a\'}}</td> </tr> <tr md-row style=height:30px> <td md-cell><span style=font-weight:700>Response time</span></td> <td md-cell>{{healthCheckLogCtrl.log.responseTime | number}} ms</td> </tr> <tr md-row style=height:30px> <td md-cell><span style=font-weight:700>Gateway</span></td> <td md-cell>{{healthCheckLogCtrl.log.gateway}}</td> </tr> <tr md-row style=height:30px> <td md-cell><span style=font-weight:700>Assertion</span></td> <td md-cell>{{healthCheckLogCtrl.log.message}}</td> </tr> </tbody> </table> </md-table-container> </div> </div> <div class=log-table layout=row layout-padding> <div layout=row layout-padding flex=45 style="background-color:#f1f8e9;border:1px solid #dcedc8"> <div flex=10 layout=row layout-align="center center" style=background-color:#dcedc8> <span class="vertical-text log-header" style=text-align:center>REQUEST</span> </div> <div layout=column flex> <md-table-container> <table md-table> <tbody md-body> <tr md-row> <td md-cell> <span class="badge gravitee-policy-method-badge-info ng-binding ng-scope gravitee-policy-method-badge-{{healthCheckLogCtrl.log.request.method | uppercase}}-selected"> {{healthCheckLogCtrl.log.request.method | uppercase}} </span> </td> <td md-cell>{{healthCheckLogCtrl.log.request.uri}}</td> </tr> </tbody> </table> </md-table-container> <br> <md-table-container ng-if=healthCheckLogCtrl.log.request.headers> <table md-table> <tbody md-body> <tr md-row ng-repeat="(key, value) in healthCheckLogCtrl.log.request.headers" style=height:30px> <td md-cell><span style=font-weight:700>{{key}}</span></td> <td md-cell>{{value[0]}}</td> </tr> </tbody> </table> </md-table-container> <div ng-if="healthCheckLogCtrl.log.request.headers === undefined || healthCheckLogCtrl.log.request.headers.length === 0"> <span>No HTTP Headers</span> </div> <br> <div ng-if=healthCheckLogCtrl.log.request.body ui-codemirror ui-codemirror-opts="{lineNumbers: true, readOnly: true, lineWrapping: true, mode: healthCheckLogCtrl.getMimeType(healthCheckLogCtrl.log.request)}" ng-model=healthCheckLogCtrl.log.response.body> </div> </div> </div> <div flex=5 layout=column layout-align="center center"> <span> <ng-md-icon icon=arrow_forward size=30px></ng-md-icon> </span> </div> <div layout=row layout-padding flex=45 style="background-color:#e1f5fe;margin-top:3px;border:1px solid #b3e5fc"> <div flex=10 layout=row layout-align="center center" style=background-color:#b3e5fc> <span class="vertical-text log-header" style=text-align:center>RESPONSE</span> </div> <div layout=column flex> <md-table-container> <table md-table> <tbody md-body> <tr md-row> <td md-cell><span style=font-weight:700>Status</span></td> <td md-cell>{{healthCheckLogCtrl.log.response.status | number}}</td> </tr> </tbody> </table> </md-table-container> <br> <md-table-container ng-if=healthCheckLogCtrl.log.response.headers> <table md-table> <tbody md-body> <tr md-row ng-repeat="(key, value) in healthCheckLogCtrl.log.response.headers" style=height:30px> <td md-cell><span style=font-weight:700>{{key}}</span></td> <td md-cell>{{value[0]}}</td> </tr> </tbody> </table> </md-table-container> <div ng-if="healthCheckLogCtrl.log.response.headers === undefined || healthCheckLogCtrl.log.response.headers.length === 0"> <span>No HTTP Headers</span> </div> <br> <div ng-if=healthCheckLogCtrl.log.response.body ui-codemirror ui-codemirror-opts="{lineNumbers: true, readOnly: true, lineWrapping: true, mode: healthCheckLogCtrl.getMimeType(healthCheckLogCtrl.log.response)}" ng-model=healthCheckLogCtrl.log.response.body> </div> </div> </div> </div> <section> <md-button class=md-button aria-label="Back to healthcheck" ui-sref=management.apis.detail.proxy.healthcheck.visualize> <ng-md-icon icon=reply></ng-md-icon> <span style=color:rgba(0,0,0,.54)>Back to healthcheck</span> </md-button> </section> '},function(e,t){e.exports=' <md-divider></md-divider> <div layout=row> <div flex layout=row layout-align="end top"> <md-button class=md-raised type=submit ng-click=discoveryCtrl.update() ng-disabled="(discoveryCtrl.discovery.enabled === true && formApiDiscoveryConfiguration.$invalid)"> <span style=color:rgba(0,0,0,.54)>Save</span> </md-button> </div> </div> '},function(e,t){e.exports=' <form name=apiProxyCtrl.formApi ng-submit=apiProxyCtrl.update(apiProxyCtrl.api) novalidate> <div class=gv-forms layout=column> <h1>Response Templates</h1> <div class=gv-form> <div class=gv-forms-header> <h2>Templates</h2> <div class=ipsum>Define your own response templates if you\'re looking for overriding default responses from the gateway.</div> </div> <div class=gv-form-content layout=column> <md-table-container ng-if=ctrl.hasTemplates()> <table md-table> <thead md-head> <tr md-row> <th md-column width=1% nowrap=nowrap>Key</th> <th md-column width=1% nowrap=nowrap>Content-Type</th> <th md-column width=1% nowrap=nowrap>Status Code</th> <th md-column nowrap=nowrap>Body</th> <th md-column width=48px></th> </tr> </thead> <tbody md-body ng-repeat="(key, templates) in ctrl.api.response_templates"> <tr md-row ng-repeat="(type, template) in ctrl.api.response_templates[key]"> <td ng-if=$first md-cell rowspan={{ctrl.countTypes(templates)}}> <a ui-sref="management.apis.detail.proxy.responsetemplates.edit({key: key})" permission permission-only="[\'api-response_templates-u\',\'api-response_templates-r\']">{{key}}</a> </td> <td md-cell>{{type}}</td> <td md-cell>{{template.status}}</td> <td md-cell> <div ui-codemirror ui-refresh=true ui-codemirror-opts="{lineWrapping: true, readOnly: nocursor, mode: type}" ng-model=template.body ng-if=template.display> </div> <a ng-if=!template.display ng-click="template.display=true">show</a> <a ng-if=template.display ng-click="template.display=false">hide</a> </td> <td ng-if=$first md-cell rowspan={{ctrl.countTypes(templates)}} width=100px> <ng-md-icon icon=delete ng-click=ctrl.remove(key) permission permission-only="\'api-response_templates-d\'"> style="font-size: 24px; height: 24px;"> <md-tooltip md-direction=top md-visible=false>Remove</md-tooltip> </ng-md-icon> </td> </tr> </tbody> </table> </md-table-container> <gravitee-empty-state ng-if=!ctrl.hasTemplates() icon=assignment model="Response template" message="Response templates will appear here" sub-message="Start creating a response template" create-mode=true></gravitee-empty-state> </div> </div> </div> </form> <md-button permission permission-only="\'api-response_templates-c\'" aria-label="Create response template" class="md-fab md-fab-bottom-right" ui-sref=management.apis.detail.proxy.responsetemplates.new> <md-tooltip md-direction=top md-visible=false>Add a new response template</md-tooltip> <ng-md-icon icon=add></ng-md-icon> </md-button> '},function(e,t,i){"use strict";a.$inject=["$stateProvider"],t.__esModule=!0;var n=i(15);function a(e){e.state("management.apis.detail.portal",{template:i(947),resolve:{qualityRules:["QualityRuleService",function(e){return e.list().then((function(e){return e.data}))}]}}).state("management.apis.detail.portal.general",{url:"/portal",template:i(948),controller:"ApiPortalController",controllerAs:"portalCtrl",data:{menu:{label:"Portal",icon:"important_devices"},docs:{page:"management-api"}}}).state("management.apis.detail.portal.plans",{abstract:!0,url:"/plans",template:'<div layout="column"><div ui-view></div></div>',resolve:{api:["$stateParams","ApiService",function(e,t){return t.get(e.apiId).then((function(e){return e.data}))}]}}).state("management.apis.detail.portal.plans.list",{url:"?state",component:"listPlans",resolve:{plans:["$stateParams","ApiService",function(e,t){return t.getApiPlans(e.apiId).then((function(e){return e.data}))}]},data:{perms:{only:["api-plan-r"]},docs:{page:"management-api-plans"}},params:{state:{type:"string",dynamic:!0}}}).state("management.apis.detail.portal.plans.new",{url:"/new",component:"editPlan",resolve:{groups:["GroupService",function(e){return e.list().then((function(e){return e.data}))}],policies:["PolicyService",function(e){return e.list().then((function(e){return e.data}))}],tags:["TagService",function(e){return e.list().then((function(e){return e.data}))}],userTags:["UserService",function(e){return e.getCurrentUserTags().then((function(e){return e.data}))}]},data:{perms:{only:["api-plan-c"]},docs:{page:"management-api-plans-wizard"}}}).state("management.apis.detail.portal.plans.plan",{url:"/:planId/edit",component:"editPlan",resolve:{plan:["$stateParams","ApiService",function(e,t){return t.getApiPlan(e.apiId,e.planId).then((function(e){return e.data}))}],groups:["GroupService",function(e){return e.list().then((function(e){return e.data}))}],policies:["PolicyService",function(e){return e.list().then((function(e){return e.data}))}],tags:["TagService",function(e){return e.list().then((function(e){return e.data}))}],userTags:["UserService",function(e){return e.getCurrentUserTags().then((function(e){return e.data}))}]},data:{perms:{only:["api-plan-u"]},docs:{page:"management-api-plans-wizard"}}}).state("management.apis.detail.portal.subscriptions",{abstract:!0,url:"/subscriptions",template:'<div layout="column"><div ui-view></div></div>',resolve:{api:["$stateParams","ApiService",function(e,t){return t.get(e.apiId).then((function(e){return e.data}))}]}}).state("management.apis.detail.portal.subscriptions.list",{url:"?page&size&:application&:status&:plan&:api_key",component:"apiSubscriptions",resolve:{subscriptions:["$stateParams","ApiService",function(e,t){var i="?page="+e.page+"&size="+e.size;return e.status&&(i+="&status="+e.status),e.application&&(i+="&application="+e.application),e.plan&&(i+="&plan="+e.plan),e.api_key&&(i+="&api_key="+e.api_key),t.getSubscriptions(e.apiId,i).then((function(e){return e.data}))}],subscribers:["$stateParams","ApiService",function(e,t){return t.getSubscribers(e.apiId).then((function(e){return e.data}))}],plans:["$stateParams","ApiService",function(e,t){return t.getApiPlans(e.apiId).then((function(e){return e.data}))}]},data:{perms:{only:["api-subscription-r"]},docs:{page:"management-api-subscriptions"}},params:{status:{type:"string",dynamic:!0},application:{type:"string",dynamic:!0},plan:{type:"string",dynamic:!0},page:{type:"int",value:1,dynamic:!0},size:{type:"int",value:10,dynamic:!0},api_key:{type:"string",dynamic:!0}}}).state("management.apis.detail.portal.subscriptions.subscription",{url:"/:subscriptionId?:page&:size&:application&:status&:plan&:api_key",component:"apiSubscription",resolve:{subscription:["$stateParams","ApiService",function(e,t){return t.getSubscription(e.apiId,e.subscriptionId).then((function(e){return e.data}))}]},data:{perms:{only:["api-subscription-r"]},docs:{page:"management-api-subscriptions"}},params:{status:{type:"string",dynamic:!0},application:{type:"string",dynamic:!0},plan:{type:"string",dynamic:!0},page:{type:"int",value:1,dynamic:!0},size:{type:"int",value:10,dynamic:!0},api_key:{type:"string",dynamic:!0}}}).state("management.apis.detail.portal.members",{url:"/members",template:i(949),controller:"ApiMembersController",controllerAs:"apiMembersCtrl",resolve:{resolvedMembers:["$stateParams","ApiService",function(e,t){return t.getMembers(e.apiId)}]},data:{perms:{only:["api-member-r"]},docs:{page:"management-api-members"}}}).state("management.apis.detail.portal.groups",{url:"/groups",template:i(950),controller:"ApiPortalController",controllerAs:"portalCtrl",data:{perms:{only:["api-member-r"]},docs:{page:"management-api-members"}}}).state("management.apis.detail.portal.transferownership",{url:"/transferownership",template:i(951),controller:"ApiTransferOwnershipController",controllerAs:"apiTransferOwnershipCtrl",resolve:{resolvedMembers:["$stateParams","ApiService",function(e,t){return t.getMembers(e.apiId)}]},data:{perms:{only:["api-member-r"]},docs:{page:"management-api-members"}}}).state("management.apis.detail.portal.metadata",{url:"/metadata",template:i(256),controller:"ApiMetadataController",controllerAs:"apiMetadataCtrl",resolve:{metadataFormats:["MetadataService",function(e){return e.listFormats()}],metadata:["$stateParams","ApiService",function(e,t){return t.listApiMetadata(e.apiId).then((function(e){return e.data}))}]},data:{perms:{only:["api-metadata-r"]},docs:{page:"management-api-metadata"}}}).state("management.apis.detail.portal.documentation",{url:"/documentation?:parent",component:"documentationManagement",resolve:{pages:["DocumentationService","$stateParams",function(e,t){var i=new n.DocumentationQuery;return t.parent&&""!==t.parent?i.parent=t.parent:i.root=!0,e.search(i,t.apiId).then((function(e){return e.data}))}],folders:["DocumentationService","$stateParams",function(e,t){var i=new n.DocumentationQuery;return i.type="FOLDER",e.search(i,t.apiId).then((function(e){return e.data}))}],systemFolders:["DocumentationService","$stateParams",function(e,t){var i=new n.DocumentationQuery;return i.type="SYSTEM_FOLDER",e.search(i,t.apiId).then((function(e){return e.data}))}]},data:{menu:null,docs:{page:"management-api-documentation"},perms:{only:["api-documentation-r"]}},params:{parent:{type:"string",value:"",squash:!1}}}).state("management.apis.detail.portal.newdocumentation",{url:"/documentation/new?:type&:parent",component:"newPage",resolve:{resolvedFetchers:["FetcherService",function(e){return e.list().then((function(e){return e.data}))}],folders:["DocumentationService","$stateParams",function(e,t){var i=new n.DocumentationQuery;return i.type="FOLDER",e.search(i,t.apiId).then((function(e){return e.data}))}],systemFolders:["DocumentationService","$stateParams",function(e,t){var i=new n.DocumentationQuery;return i.type="SYSTEM_FOLDER",e.search(i,t.apiId).then((function(e){return e.data}))}],pageResources:["DocumentationService","$stateParams",function(e,t){if("LINK"===t.type){var i=new n.DocumentationQuery;return e.search(i,t.apiId).then((function(e){return e.data}))}}],categoryResources:["CategoryService","$stateParams",function(e,t){if("LINK"===t.type)return e.list().then((function(e){return e.data}))}]},data:{menu:null,docs:{page:"management-api-documentation"},perms:{only:["api-documentation-c"]}},params:{type:{type:"string",value:"",squash:!1},parent:{type:"string",value:"",squash:!1}}}).state("management.apis.detail.portal.importdocumentation",{url:"/documentation/import",component:"importPages",resolve:{resolvedFetchers:["FetcherService",function(e){return e.list(!0).then((function(e){return e.data}))}],resolvedRootPage:["DocumentationService","$stateParams",function(e,t){var i=new n.DocumentationQuery;return i.type="ROOT",e.search(i,t.apiId).then((function(e){return e.data&&e.data.length>0?e.data[0]:null}))}]},data:{menu:null,docs:{page:"management-api-documentation"},perms:{only:["api-documentation-c"]}}}).state("management.apis.detail.portal.editdocumentation",{url:"/documentation/:pageId?:tab&type",component:"editPage",resolve:{resolvedPage:["DocumentationService","$stateParams",function(e,t){return e.get(t.apiId,t.pageId).then((function(e){return e.data}))}],resolvedGroups:["GroupService",function(e){return e.list().then((function(e){return e.data}))}],resolvedFetchers:["FetcherService",function(e){return e.list().then((function(e){return e.data}))}],folders:["DocumentationService","$stateParams",function(e,t){var i=new n.DocumentationQuery;return i.type="FOLDER",e.search(i,t.apiId).then((function(e){return e.data}))}],systemFolders:["DocumentationService","$stateParams",function(e,t){var i=new n.DocumentationQuery;return i.type="SYSTEM_FOLDER",e.search(i,t.apiId).then((function(e){return e.data}))}],pageResources:["DocumentationService","$stateParams",function(e,t){if("LINK"===t.type){var i=new n.DocumentationQuery;return e.search(i,t.apiId).then((function(e){return e.data}))}}],categoryResources:["CategoryService","$stateParams",function(e,t){if("LINK"===t.type)return e.list().then((function(e){return e.data}))}]},data:{menu:null,docs:{page:"management-api-documentation"},perms:{only:["api-documentation-r"]}},params:{pageId:{type:"string",value:"",squash:!1}}})}t.default=a},function(e,t){e.exports=' <div flex> <div layout=row flex> <div class="gv-sub-menu menu"> <div class=md-headline> <span> {{apiCtrl.api.name}} ({{apiCtrl.api.version}}) <md-tooltip md-direction=bottom>{{apiCtrl.api.name}} ({{apiCtrl.api.version}})</md-tooltip> </span> </div> <div class=aui-nav-heading> <strong>General</strong> </div> <ul class=aui-nav> <li class=iterable-item ui-sref-active=aui-nav-selected ui-sref=management.apis.detail.portal.general><a class=execute>Details</a></li> </ul> <div class=aui-nav-heading ng-if="apiCtrl.menu.plans.perm\n                  || apiCtrl.menu.subscriptions.perm"> <strong>Plans</strong> </div> <ul class=aui-nav> <li class=iterable-item ng-if=apiCtrl.menu.plans.perm ng-class=\'{"aui-nav-selected": apiCtrl.$state.includes("management.apis.detail.portal.plans.list") || apiCtrl.$state.includes("management.apis.detail.portal.plans.new") || apiCtrl.$state.includes("management.apis.detail.portal.plans.plan") }\' ui-sref={{apiCtrl.menu.plans.goTo}}> <a class=execute>Plans</a> </li> <li class=iterable-item ng-if=apiCtrl.menu.subscriptions.perm ng-class=\'{"aui-nav-selected": apiCtrl.$state.includes("management.apis.detail.portal.subscriptions.list") || apiCtrl.$state.includes("management.apis.detail.portal.subscriptions.subscription") }\' ui-sref={{apiCtrl.menu.subscriptions.goTo}}> <a class=execute>Subscriptions</a> </li> </ul> <div class=aui-nav-heading ng-if="apiCtrl.menu.documentation.perm\n                  || apiCtrl.menu.metadata.perm"> <strong>Documentation</strong> </div> <ul class=aui-nav> <li class=iterable-item ui-sref-active=aui-nav-selected ng-if=apiCtrl.menu.documentation.perm ui-sref={{apiCtrl.menu.documentation.goTo}}> <a class=execute>Pages</a> </li> <li class=iterable-item ui-sref-active=aui-nav-selected ng-if=apiCtrl.menu.metadata.perm ui-sref={{apiCtrl.menu.metadata.goTo}}> <a class=execute>Metadata</a> </li> </ul> <div class=aui-nav-heading ng-if="apiCtrl.menu.members.perm\n                  || apiCtrl.menu.groups.perm"> <strong>User and group access</strong> </div> <ul class=aui-nav> <li class=iterable-item ui-sref-active=aui-nav-selected ng-if=apiCtrl.menu.members.perm ui-sref={{apiCtrl.menu.members.goTo}}> <a class=execute>Members</a> </li> <li class=iterable-item ui-sref-active=aui-nav-selected ng-if=apiCtrl.menu.groups.perm ui-sref={{apiCtrl.menu.groups.goTo}}> <a class=execute>Groups</a> </li> <li class=iterable-item ui-sref-active=aui-nav-selected ng-if=apiCtrl.menu.members.perm ui-sref=management.apis.detail.portal.transferownership> <a class=execute>Transfer ownership</a> </li> </ul> </div> <div flex class=gv-sub-content ui-view layout=column></div> </div> </div> '},function(e,t){e.exports=' <form name=portalCtrl.formApi ng-submit=portalCtrl.update(portalCtrl.api) novalidate> <div class=gv-forms layout=column> <h1>Details</h1> <div class=gv-form> <h2>General</h2> <div class=gv-form-content layout=column> <div layout-gt-sm=row> <div layout=column flex> <div layout-gt-sm=row> <md-input-container flex> <label>Name</label> <input permission permission-only="\'api-definition-u\'" permission-on-unauthorized=PermissionStrategies.disableElement ng-model=portalCtrl.api.name type=text required> </md-input-container> <md-input-container> <label>Version</label> <input permission permission-only="\'api-definition-u\'" permission-on-unauthorized=PermissionStrategies.disableElement ng-model=portalCtrl.api.version type=text required> </md-input-container> </div> <md-input-container flex> <label>Description</label> <textarea permission permission-only="\'api-definition-u\'" permission-on-unauthorized=PermissionStrategies.disableElement ng-model=portalCtrl.api.description required></textarea> </md-input-container> </div> <div class=gravitee-api-header-image ng-if=portalCtrl.readOnly ng-style="{\'background-image\':\'url({{portalCtrl.api.picture || portalCtrl.api.picture_url || \'assets/default_api_logo.png\'}})\'}" layout=column layout-align="center center"></div> <gravitee-image ng-if=!portalCtrl.readOnly image-id=portalCtrl.api.id image=portalCtrl.api.picture image-url=portalCtrl.api.picture_url image-name="portalCtrl.api.name + \'  \' + portalCtrl.api.version"></gravitee-image> </div> <div layout=row> <md-input-container class=md-block flex> <label>Owner</label> <input type=text disabled=disabled value={{portalCtrl.api.owner.displayName}}> </md-input-container> <md-input-container class=md-block flex> <label>Created at</label> <input type=text disabled=disabled value="{{portalCtrl.api.created_at | humanDateFilter}}"> </md-input-container> <md-input-container class=md-block flex> <label>Last deployment at</label> <input type=text disabled=disabled value="{{portalCtrl.api.deployed_at | humanDateFilter}}"> </md-input-container> </div> <md-input-container permission permission-only="\'api-definition-u\'" class=flex> <label>Labels</label> <md-chips ng-model=portalCtrl.api.labels placeholder="Enter a label" md-add-on-blur=true ng-click=portalCtrl.formApi.$setDirty()></md-chips> </md-input-container> <div ng-if="portalCtrl.api.labels && portalCtrl.api.labels.length"> <label>Labels</label> <md-chips permission permission-except="\'api-definition-u\'" readonly=true ng-model=portalCtrl.api.labels></md-chips> </div> <md-input-container permission permission-only="\'api-definition-u\'" class=flex> <label>Portal categories</label> <md-select ng-model=portalCtrl.api.categories multiple=multiple> <md-option ng-repeat="category in portalCtrl.categories" ng-value=category.key> {{category.name}}<span ng-if=category.description class=gravitee-general-description> - {{category.description}}</span> </md-option> </md-select> </md-input-container> <div layout=column ng-if="portalCtrl.api.categories && portalCtrl.api.categories.length"> <label>Portal categories</label> <md-chips permission permission-except="\'api-definition-u\'" readonly=true ng-model=portalCtrl.api.categories></md-chips> </div> <div class="md-actions gravitee-api-save-button" layout=row> <md-button permission permission-only="\'api-definition-u\'" class="md-raised md-primary" type=submit ng-disabled="portalCtrl.formApi.$invalid || portalCtrl.formApi.$pristine || portalCtrl.isDeprecated()"> Save </md-button> <md-button permission permission-only="\'api-definition-u\'" class=md-raised type=button ng-click=portalCtrl.reset() ng-disabled="portalCtrl.formApi.$invalid || portalCtrl.formApi.$pristine"> Reset </md-button> <md-button aria-label="Export definition" ng-click=portalCtrl.showExportDialog()> <ng-md-icon icon=file_upload></ng-md-icon> Export </md-button> <md-button permission permission-only="\'api-definition-u\'" aria-label="Import definition" ng-click=portalCtrl.showImportDialog() ng-disabled=portalCtrl.isDeprecated()> <ng-md-icon icon=file_download></ng-md-icon> Import </md-button> <md-button permission permission-only="[\'environment-api-c\']" aria-label="Duplicate API" ng-click=portalCtrl.showDuplicateDialog()> <ng-md-icon icon=content_copy></ng-md-icon> Duplicate </md-button> </div> </div> </div> <div class=gv-form ng-if=portalCtrl.isQualityEnabled> <h2>Quality</h2> <div class=gv-form-content layout=column> <div> <div ng-if="portalCtrl.qualityMetrics === undefined" layout=column layout-align="center center" flex> <md-progress-circular md-mode=indeterminate class="md-accent md-hue-1" md-diameter=50></md-progress-circular> </div> <div ng-if="portalCtrl.qualityMetrics !== undefined" id=qualityMetrics layout=row layout-align="start center"> <div layout=column layout-padding> <div style=width:100px;padding:0> <circular-percentage score=portalCtrl.qualityMetrics.score></circular-percentage> </div> </div> <div layout=column layout-align="start start" class=gravitee-qm-metrics-list style=padding-left:20px> <div ng-repeat="(k,v) in portalCtrl.qualityMetrics.metrics_passed" class=gravitee-qm-metrics ng-class="{\'gravitee-qm-metrics-passed\': v, \'gravitee-qm-metrics-failed\': !v }"> {{portalCtrl.qualityMetricsDescription.get(k)}} </div> </div> </div> </div> </div> </div> <div class="gv-form gv-form-danger" permission permission-only="[\'api-definition-u\', \'api-definition-d\']"> <h2>Danger Zone</h2> <div class=gv-form-content layout=column> <div layout=row layout-align="space-between center" permission permission-only="\'api-definition-u\'" ng-if=portalCtrl.canAskForReview()> <div class=gv-form-danger-text>Ask for a review before to be able to publish / start your API.</div> <div><md-button class="md-flat md-warn" type=button ng-click=portalCtrl.askForReview()>Ask for a review</md-button></div> </div> <div layout=row layout-align="space-between center" permission permission-only="\'api-definition-u\'" ng-if=portalCtrl.canChangeLifecycle()> <div class=gv-form-danger-text ng-if="portalCtrl.api.state===\'started\'">Stop the API. It will no longer be available on all gateways.</div> <div class=gv-form-danger-text ng-if="portalCtrl.api.state===\'stopped\'">Start the API. It will be available on all gateways (depending on sharding tags).</div> <div> <md-button class="md-flat md-warn" type=button ng-click=portalCtrl.changeLifecycle() ng-if="portalCtrl.api.state===\'started\'">Stop the API</md-button> <md-button class="md-flat md-warn" type=button ng-click=portalCtrl.changeLifecycle() ng-if="portalCtrl.api.state===\'stopped\'">Start the API</md-button> </div> </div> <div layout=row layout-align="space-between center" permission permission-only="\'api-definition-u\'" ng-if=portalCtrl.canChangeApiLifecycle()> <div class=gv-form-danger-text ng-if="portalCtrl.api.lifecycle_state===\'published\'"> Unpublish the API. It will no longer be available on portal. </div> <div class=gv-form-danger-text ng-if=portalCtrl.canPublish()> Publish the API. It will be available on portal (depending on visibility/rights). </div> <div> <md-button class="md-flat md-warn" type=button ng-click="portalCtrl.changeApiLifecycle(\'published\')" ng-if=portalCtrl.canPublish()>Publish the API</md-button> <md-button class="md-flat md-warn" type=button ng-click="portalCtrl.changeApiLifecycle(\'unpublished\')" ng-if="portalCtrl.api.lifecycle_state===\'published\'">Unpublish the API</md-button> </div> </div> <div layout=row layout-align="space-between center" permission permission-only="\'api-definition-u\'" ng-if=!portalCtrl.isDeprecated()> <div class=gv-form-danger-text ng-if="portalCtrl.api.visibility===\'public\'"> Make this API private. Only members will see it. </div> <div class=gv-form-danger-text ng-if="portalCtrl.api.visibility===\'private\'"> Make this API public. Everyone can see it. </div> <div> <md-button class="md-flat md-warn" type=button ng-click="portalCtrl.toggleVisibility(); portalCtrl.update(portalCtrl.api);" ng-if="portalCtrl.api.visibility===\'public\'">Make Private</md-button> <md-button class="md-flat md-warn" type=button ng-click="portalCtrl.toggleVisibility(); portalCtrl.update(portalCtrl.api);" ng-if="portalCtrl.api.visibility===\'private\'">Make Public</md-button> </div> </div> <div layout=row layout-align="space-between center" permission permission-only="\'api-definition-d\'" ng-if=!portalCtrl.isDeprecated()> <div class=gv-form-danger-text> Deprecate this API. It will no longer be published on portal. </div> <div> <md-button class="md-flat md-warn" type=button ng-click="portalCtrl.changeApiLifecycle(\'deprecated\')">Deprecate</md-button> </div> </div> <div layout=row layout-align="space-between center" permission permission-only="\'api-definition-d\'"> <div class=gv-form-danger-text> Delete this API. <span ng-if="portalCtrl.api.state === \'started\' || portalCtrl.api.lifecycle_state===\'published\'">A running or published API cannot be deleted</span> </div> <div> <md-button class="md-flat md-warn" type=button ng-click=portalCtrl.delete(portalCtrl.api.id) ng-disabled="portalCtrl.api.state === \'started\' || portalCtrl.api.lifecycle_state===\'published\'">Delete</md-button> </div> </div> </div> </div> </div> </form> '},function(e,t){e.exports=' <div class=gv-forms layout=column> <h1>Members</h1> <div class=gv-form> <h2>{{apiMembersCtrl.members.length}} direct members</h2> <div class=gv-form-content layout=column> <md-table-container ng-show=apiMembersCtrl.members.length> <table md-table class=gv-table-dense> <thead md-head md-order=order> <tr md-row> <th md-column width=1% nowrap=nowrap></th> <th md-column order-by=lastname>Member</th> <th md-column order-by=type>Role</th> <th md-column permission permission-only="\'api-member-u\'"></th> </tr> </thead> <tbody md-body> <tr md-row ng-repeat="member in apiMembersCtrl.members | orderBy: order"> <td md-cell> <gravitee-identity-picture image-id=member.id image-url=apiMembersCtrl.getMembershipAvatar(member) image-name=apiMembersCtrl.getMembershipDisplay(member) image-width=32 image-border-radius=true></gravitee-identity-picture> </td> <td md-cell> <md-list-item> <span ng-if="member.role == \'PRIMARY_OWNER\'"><b>{{apiMembersCtrl.getMembershipDisplay(member)}}</b></span> <span ng-if="member.role != \'PRIMARY_OWNER\'">{{apiMembersCtrl.getMembershipDisplay(member)}}</span> </md-list-item> </td> <td permission permission-only="\'api-member-u\'" md-cell> <md-select ng-model=member.role ng-change=apiMembersCtrl.updateMember(member) ng-disabled="member.role == \'PRIMARY_OWNER\'" aria-label="Update member role"> <md-option ng-value=role.name ng-repeat="role in apiMembersCtrl.roles" ng-disabled=role.system>{{role.name}}</md-option> </md-select> </td> <td permission permission-except="\'api-member-u\'" md-cell> <md-select ng-model=member.role ng-change=apiMembersCtrl.updateMember(member) disabled=disabled aria-label="Update member role"> <md-option ng-value=role.name ng-repeat="role in apiMembersCtrl.roles">{{role.name}}</md-option> </md-select> </td> <td md-cell permission permission-only="\'api-member-u\'"> <ng-md-icon ng-if="member.role != \'PRIMARY_OWNER\'" ng-click="apiMembersCtrl.showDeleteMemberConfirm($event, member)" icon=delete size=24 style=cursor:pointer></ng-md-icon> </td> </tr> </tbody> </table> </md-table-container> <gravitee-empty-state ng-if=!apiMembersCtrl.members.length icon=group model=Member message="Members will appear here" sub-message="Start attaching a member" create-mode=true></gravitee-empty-state> </div> </div> <div class=gv-form ng-repeat="grp in apiMembersCtrl.groupIdsWithMembers"> <h2>{{apiMembersCtrl.groupMembers[grp].length}} members inherited from group "{{apiMembersCtrl.groupById[grp].name}}"</h2> <div class=gv-form-content layout=column> <div layout=row layout-align="start end"> <div style=margin-bottom:5px ng-model=apiMembersCtrl.displayGroups[grp] ng-if=!apiMembersCtrl.displayGroups[grp] ng-click="apiMembersCtrl.displayGroups[grp]=true"> <a>Show</a> </div> <div style=margin-bottom:5px ng-model=apiMembersCtrl.displayGroups[grp] ng-if=apiMembersCtrl.displayGroups[grp] ng-click="apiMembersCtrl.displayGroups[grp]=false"> <a>Hide</a> </div> </div> <div style="background:0 0" ng-if=apiMembersCtrl.displayGroups[grp]> <md-table-container ng-show=apiMembersCtrl.groupMembers[grp].length> <table md-table class=gv-table-dense> <thead md-head md-order=order> <tr md-row> <th md-column order-by=username>Member</th> <th md-column order-by=type>Role</th> </tr> </thead> <tbody md-body> <tr md-row ng-repeat="member in apiMembersCtrl.groupMembers[grp] | orderBy: order"> <td md-cell> <md-list-item> <gravitee-identity-picture image-id=member.id image-url=apiMembersCtrl.getMembershipAvatar(member) image-name=apiMembersCtrl.getMembershipDisplay(member) image-width=32 image-border-radius=true></gravitee-identity-picture> <span>{{apiMembersCtrl.getMembershipDisplay(member)}}</span> </md-list-item> </td> <td md-cell> {{member.roles["API"]}} </td> </tr> </tbody> </table> </md-table-container> </div> </div> </div> <div ng-style="!apiMembersCtrl.members.length && {\'text-align\':\'center\'}"> <md-button permission permission-only="\'api-member-c\'" ng-class="{\'md-fab-bottom-right\': apiMembersCtrl.members.length}" class=md-fab aria-label=Add ng-click=apiMembersCtrl.showAddMemberModal($event)> <ng-md-icon icon=add></ng-md-icon> </md-button> </div> </div> '},function(e,t){e.exports=' <form name=portalCtrl.formApi ng-submit=portalCtrl.update(portalCtrl.api) layout=column> <div class=gv-forms layout=column> <h1>Groups</h1> <div class=gv-form> <h2></h2> <div class=gv-form-content layout=column> <md-input-container permission permission-only="\'api-definition-u\'" class=flex> <label>Groups</label> <md-select ng-model=portalCtrl.api.groups multiple=multiple> <md-option ng-repeat="group in portalCtrl.groups" ng-value=group.id> {{group.name}} </md-option> </md-select> </md-input-container> <div permission permission-except="\'api-definition-u\'" layout=column> <label>Groups</label> <md-chips permission permission-except="\'api-definition-u\'" readonly=true ng-model=portalCtrl.api.groups> <md-chip-template>{{portalCtrl.getGroup($chip).name}}</md-chip-template> </md-chips> </div> <div class="md-actions gravitee-api-save-button" layout=row> <md-button permission permission-only="\'api-definition-u\'" class="md-raised md-primary" type=submit ng-disabled="portalCtrl.formApi.$invalid || portalCtrl.formApi.$pristine"> Save </md-button> <md-button permission permission-only="\'api-definition-u\'" class=md-raised type=button ng-click=portalCtrl.reset() ng-disabled="portalCtrl.formApi.$invalid || portalCtrl.formApi.$pristine"> Reset </md-button> </div> </div> </div> </div> </form> '},function(e,t){e.exports=' <div class=gv-forms layout=column> <h1>Transfer ownership</h1> <div class=gv-form> <h2></h2> <div class=gv-form-content layout=column layout-align="start stretch"> <div ng-if=apiTransferOwnershipCtrl.isAllowedToTransferOwnership()> <p> Give full access to this API to an other user. </p> <md-autocomplete md-search-text=searchText md-selected-item-change=apiTransferOwnershipCtrl.selectedUserChange(user) md-items="user in apiTransferOwnershipCtrl.searchUser(searchText)" md-item-text=user.displayName placeholder="Select a user" md-autofocus=false md-delay=500 md-min-length=0 md-menu-class=autocomplete-custom-template> <md-item-template> <md-list-item class="md-2-line contact-item"> <div class="md-list-item-text compact"> <span style=font-size:medium>{{user.displayName}}</span> <span style=padding-left:24px;font-size:small ng-if=user.email>{{user.email}}</span> </div> </md-list-item> </md-item-template> <md-not-found> No user matching "{{searchText}}" were found. </md-not-found> </md-autocomplete> <br/> <md-input-container class=md-block> <label>New role for current Primary Owner</label> <md-select ng-model=apiTransferOwnershipCtrl.newPORole> <md-option ng-value=role ng-repeat="role in apiTransferOwnershipCtrl.newPORoles">{{role.name}}</md-option> </md-select> </md-input-container> <div class="md-actions gravitee-api-save-button" layout=row> <md-button ng-disabled="apiTransferOwnershipCtrl.newPrimaryOwner == null" class="md-primary md-raised" ng-click=apiTransferOwnershipCtrl.showTransferOwnershipConfirm($event)>Transfer</md-button> </div> </div> </div> </div> </div> '},function(e,t,i){"use strict";a.$inject=["$stateProvider"],t.__esModule=!0;var n=i(25);function a(e){e.state("management.apis.detail.notifications",{url:"/notifications",component:"notificationsComponent",data:{menu:{label:"Notifications",icon:"notifications"},perms:{only:["api-notification-r"]}},resolve:{resolvedHookScope:function(){return n.Scope.API},resolvedHooks:["NotificationSettingsService",function(e){return e.getHooks(n.Scope.API).then((function(e){return e.data}))}],resolvedNotifiers:["NotificationSettingsService","$stateParams",function(e,t){return e.getNotifiers(n.Scope.API,t.apiId).then((function(e){return e.data}))}],notificationSettings:["NotificationSettingsService","$stateParams",function(e,t){return e.getNotificationSettings(n.Scope.API,t.apiId).then((function(e){return e.data}))}],api:["$stateParams","ApiService",function(e,t){return t.get(e.apiId).then((function(e){return e.data}))}],plans:["$stateParams","ApiService",function(e,t){return t.getPublishedApiPlans(e.apiId).then((function(e){return e.data}))}]}}).state("management.apis.detail.notifications.notification",{url:"/:notificationId",component:"notificationSettingsComponent",data:{menu:null,docs:{page:"management-api-notifications"},perms:{only:["api-notification-r"]}}}).state("management.apis.detail.alerts",{url:"/alerts",component:"alertsComponent",data:{menu:{label:"Alerts",icon:"alarm",parameter:"alert.enabled"},perms:{only:["api-alert-r"]}},resolve:{api:["$stateParams","ApiService",function(e,t){return t.get(e.apiId).then((function(e){return e.data}))}],alerts:["AlertService","$stateParams",function(e,t){return e.listAlerts(t.apiId,0).then((function(e){return e.data}))}],status:["AlertService","$stateParams",function(e,t){return e.getStatus(t.apiId,0).then((function(e){return e.data}))}],notifiers:["NotifierService",function(e){return e.list().then((function(e){return e.data}))}]}}).state("management.apis.detail.alertnew",{url:"/alert/create",component:"alertComponent",data:{menu:null,docs:{page:"management-alerts"},perms:{only:["api-alert-c"]}},resolve:{alerts:["AlertService","$stateParams",function(e,t){return e.listAlerts(t.apiId,0).then((function(e){return e.data}))}],status:["AlertService","$stateParams",function(e,t){return e.getStatus(t.apiId,0).then((function(e){return e.data}))}],notifiers:["NotifierService",function(e){return e.list().then((function(e){return e.data}))}]}}).state("management.apis.detail.alert",{url:"/alert/:alertId?:tab",component:"alertComponent",data:{menu:null,docs:{page:"management-alerts"},perms:{only:["api-alert-u"]}},resolve:{alerts:["AlertService","$stateParams",function(e,t){return e.listAlerts(t.apiId,0).then((function(e){return e.data}))}],status:["AlertService","$stateParams",function(e,t){return e.getStatus(t.apiId,0).then((function(e){return e.data}))}],notifiers:["NotifierService",function(e){return e.list().then((function(e){return e.data}))}]}})}t.default=a},function(e,t,i){"use strict";o.$inject=["$stateProvider"],t.__esModule=!0;var n=i(15),a=i(3);function o(e){e.state("management.settings",{url:"/settings",component:"settings",data:{menu:{label:"Settings",icon:"settings",firstLevel:!0,order:50},perms:{only:["environment-category-r","environment-metadata-r","environment-top_apis-r","environment-group-r","environment-tag-c","environment-tenant-c","environment-group-c","organization-role-c","environment-documentation-c","environment-tag-u","environment-tenant-u","environment-group-u","organization-role-u","environment-documentation-u","environment-tag-d","environment-tenant-d","environment-group-d","organization-role-d","environment-documentation-d","environment-api_header-r"]}}}).state("management.settings.categories",{url:"/categories",component:"categories",resolve:{categories:["CategoryService",function(e){return e.list().then((function(e){return e.data}))}]},data:{menu:null,docs:{page:"management-configuration-categories"},perms:{only:["environment-category-r"]}}}).state("management.settings.categorynew",{url:"/categories/new",component:"category",data:{menu:null,docs:{page:"management-configuration-categories"},perms:{only:["environment-category-c"]}}}).state("management.settings.category",{url:"/categories/:categoryId",component:"category",resolve:{category:["CategoryService","$stateParams",function(e,t){return e.get(t.categoryId).then((function(e){return e.data}))}],categoryApis:["ApiService","$stateParams",function(e,t){return e.list(t.categoryId).then((function(e){return e.data}))}]},data:{menu:null,docs:{page:"management-configuration-categories"},perms:{only:["environment-category-u","environment-category-d"]}}}).state("management.settings.tags",{url:"/tags",component:"tags",resolve:{tags:["TagService",function(e){return e.list().then((function(e){return e.data}))}],entrypoints:["EntrypointService",function(e){return e.list().then((function(e){return e.data}))}],groups:["GroupService",function(e){return e.list().then((function(e){return e.data}))}]},data:{menu:null,docs:{page:"management-configuration-sharding-tags"},perms:{only:["environment-tag-r"]}}}).state("management.settings.newEntrypoint",{url:"/tags/entrypoint/new",component:"entrypoint",resolve:{tags:["TagService",function(e){return e.list().then((function(e){return e.data}))}]},data:{menu:null,docs:{page:"management-configuration-entrypoint"},perms:{only:["environment-entrypoint-c"]}}}).state("management.settings.entrypoint",{url:"/tags/entrypoint/:entrypointId",component:"entrypoint",resolve:{tags:["TagService",function(e){return e.list().then((function(e){return e.data}))}]},data:{menu:null,docs:{page:"management-configuration-entrypoint"},perms:{only:["environment-entrypoint-u"]}}}).state("management.settings.tag",{url:"/tags/:tagId",component:"tag",resolve:{groups:["GroupService",function(e){return e.list().then((function(e){return e.data}))}]},data:{menu:null,docs:{page:"management-configuration-sharding-tag"},perms:{only:["environment-tag-r","environment-tag-c","environment-tag-u"]}}}).state("management.settings.tenants",{url:"/tenants",component:"tenants",resolve:{tenants:["TenantService",function(e){return e.list().then((function(e){return e.data}))}]},data:{menu:null,docs:{page:"management-configuration-tenants"},perms:{only:["environment-tenant-r"]}}}).state("management.settings.groups",{abstract:!0,url:"/groups"}).state("management.settings.groups.list",{url:"/",component:"groups",resolve:{groups:["GroupService",function(e){return e.list().then((function(e){return a.filter(e.data,"manageable")}))}]},data:{menu:null,docs:{page:"management-configuration-groups"},perms:{only:["environment-group-r"]}}}).state("management.settings.groups.create",{url:"/new",component:"group",resolve:{tags:["TagService",function(e){return e.list().then((function(e){return e.data}))}]},data:{menu:null,docs:{page:"management-configuration-group"},perms:{only:["environment-group-r"]}}}).state("management.settings.groups.group",{url:"/:groupId",component:"group",resolve:{group:["GroupService","$stateParams",function(e,t){return e.get(t.groupId).then((function(e){return e.data}))}],members:["GroupService","$stateParams",function(e,t){return e.getMembers(t.groupId).then((function(e){return e.data}))}],apiRoles:["RoleService",function(e){return e.list("API").then((function(e){return[{scope:"API",name:"",system:!1}].concat(e)}))}],applicationRoles:["RoleService",function(e){return e.list("APPLICATION").then((function(e){return[{scope:"APPLICATION",name:"",system:!1}].concat(e)}))}],invitations:["GroupService","$stateParams",function(e,t){return e.getInvitations(t.groupId).then((function(e){return e.data}))}],tags:["TagService",function(e){return e.list().then((function(e){return e.data}))}]},data:{menu:null,docs:{page:"management-configuration-group"},perms:{only:["environment-group-r"]}}}).state("management.settings.documentation",{url:"/pages?:parent",component:"documentationManagement",resolve:{pages:["DocumentationService","$stateParams",function(e,t){var i=new n.DocumentationQuery;return t.parent&&""!==t.parent?i.parent=t.parent:i.root=!0,e.search(i).then((function(e){return e.data}))}],folders:["DocumentationService",function(e){var t=new n.DocumentationQuery;return t.type="FOLDER",e.search(t).then((function(e){return e.data}))}],systemFolders:["DocumentationService",function(e){var t=new n.DocumentationQuery;return t.type="SYSTEM_FOLDER",e.search(t).then((function(e){return e.data}))}]},data:{menu:null,docs:{page:"management-configuration-portal-pages"},perms:{only:["environment-documentation-r"]}},params:{parent:{type:"string",value:"",squash:!1}}}).state("management.settings.newdocumentation",{url:"/pages/new?type&:parent",component:"newPage",resolve:{resolvedFetchers:["FetcherService",function(e){return e.list().then((function(e){return e.data}))}],folders:["DocumentationService",function(e){var t=new n.DocumentationQuery;return t.type="FOLDER",e.search(t).then((function(e){return e.data}))}],systemFolders:["DocumentationService",function(e){var t=new n.DocumentationQuery;return t.type="SYSTEM_FOLDER",e.search(t).then((function(e){return e.data}))}],pageResources:["DocumentationService","$stateParams",function(e,t){if("LINK"===t.type){var i=new n.DocumentationQuery;return e.search(i).then((function(e){return e.data}))}}],categoryResources:["CategoryService","$stateParams",function(e,t){if("LINK"===t.type)return e.list().then((function(e){return e.data}))}]},data:{menu:null,docs:{page:"management-configuration-portal-pages"},perms:{only:["environment-documentation-c"]}},params:{type:{type:"string",value:"",squash:!1},parent:{type:"string",value:"",squash:!1}}}).state("management.settings.importdocumentation",{url:"/pages/import",component:"importPages",resolve:{resolvedFetchers:["FetcherService",function(e){return e.list(!0).then((function(e){return e.data}))}],resolvedRootPage:["DocumentationService",function(e){var t=new n.DocumentationQuery;return t.type="ROOT",e.search(t).then((function(e){return e.data&&e.data.length>0?e.data[0]:null}))}]},data:{menu:null,docs:{page:"management-configuration-portal-pages"},perms:{only:["environment-documentation-c"]}}}).state("management.settings.editdocumentation",{url:"/pages/:pageId?:tab&type",component:"editPage",resolve:{resolvedPage:["DocumentationService","$stateParams",function(e,t){return e.get(null,t.pageId).then((function(e){return e.data}))}],resolvedGroups:["GroupService",function(e){return e.list().then((function(e){return e.data}))}],resolvedFetchers:["FetcherService",function(e){return e.list().then((function(e){return e.data}))}],folders:["DocumentationService",function(e){var t=new n.DocumentationQuery;return t.type="FOLDER",e.search(t).then((function(e){return e.data}))}],systemFolders:["DocumentationService",function(e){var t=new n.DocumentationQuery;return t.type="SYSTEM_FOLDER",e.search(t).then((function(e){return e.data}))}],pageResources:["DocumentationService","$stateParams",function(e,t){if("LINK"===t.type){var i=new n.DocumentationQuery;return e.search(i).then((function(e){return e.data}))}}],categoryResources:["CategoryService","$stateParams",function(e,t){if("LINK"===t.type)return e.list().then((function(e){return e.data}))}]},data:{menu:null,docs:{page:"management-configuration-portal-pages"},perms:{only:["environment-documentation-u"]}},params:{pageId:{type:"string",value:"",squash:!1}}}).state("management.settings.metadata",{url:"/metadata",component:"metadata",resolve:{metadata:["MetadataService",function(e){return e.list().then((function(e){return e.data}))}],metadataFormats:["MetadataService",function(e){return e.listFormats()}]},data:{menu:null,docs:{page:"management-configuration-metadata"},perms:{only:["environment-metadata-r"]}}}).state("management.settings.roles",{url:"/roles",component:"roles",resolve:{roleScopes:["RoleService",function(e){return e.listScopes()}],organizationRoles:["RoleService",function(e){return e.list("ORGANIZATION")}],environmentRoles:["RoleService",function(e){return e.list("ENVIRONMENT")}],apiRoles:["RoleService",function(e){return e.list("API")}],applicationRoles:["RoleService",function(e){return e.list("APPLICATION")}]},data:{menu:null,docs:{page:"management-configuration-roles"},perms:{only:["organization-role-r"]}},params:{roleScope:{type:"string",value:"ORGANIZATION",squash:!1}}}).state("management.settings.rolenew",{url:"/role/:roleScope/new",component:"role",resolve:{roleScopes:["RoleService",function(e){return e.listScopes()}]},data:{menu:null,docs:{page:"management-configuration-roles"},perms:{only:["organization-role-c"]}}}).state("management.settings.roleedit",{url:"/role/:roleScope/:role",component:"role",resolve:{roleScopes:["RoleService",function(e){return e.listScopes()}]},data:{menu:null,docs:{page:"management-configuration-roles"},perms:{only:["organization-role-u"]}}}).state("management.settings.rolemembers",{url:"/role/:roleScope/:role/members",component:"roleMembers",data:{menu:null,docs:{page:"management-configuration-roles"},perms:{only:["organization-role-u"]}},resolve:{members:["RoleService","$stateParams",function(e,t){return e.listUsers(t.roleScope,t.role).then((function(e){return e}))}]}}).state("management.settings.theme",{url:"/theme",component:"theme",resolve:{},data:{menu:null,docs:{page:"management-configuration-portal-theme"},perms:{only:["environment-theme-r"]}}}).state("management.settings.top-apis",{url:"/top-apis",component:"topApis",resolve:{topApis:["TopApiService",function(e){return e.list().then((function(e){return e.data}))}]},data:{menu:null,docs:{page:"management-configuration-top_apis"},perms:{only:["environment-top_apis-r"]}}}).state("management.settings.users",{url:"/users?q&page",component:"users",resolve:{usersPage:["UserService","$state","$stateParams",function(e,t,i){return e.list(i.q,i.page).then((function(e){return e.data}))}]},data:{menu:null,docs:{page:"management-configuration-users"},perms:{only:["organization-user-c","organization-user-r","organization-user-u","organization-user-d"]}},params:{page:{value:"1",dynamic:!0}}}).state("management.settings.user",{url:"/users/:userId",component:"userDetail",resolve:{selectedUser:["UserService","$stateParams",function(e,t){return e.get(t.userId).then((function(e){return e}))}],groups:["UserService","$stateParams",function(e,t){return e.getUserGroups(t.userId).then((function(e){return e.data}))}],organizationRoles:["RoleService",function(e){return e.list("ORGANIZATION").then((function(e){return e}))}],environmentRoles:["RoleService",function(e){return e.list("ENVIRONMENT").then((function(e){return e}))}],apiRoles:["RoleService",function(e){return e.list("API").then((function(e){return[{scope:"API",name:"",system:!1}].concat(e)}))}],applicationRoles:["RoleService",function(e){return e.list("APPLICATION").then((function(e){return[{scope:"APPLICATION",name:"",system:!1}].concat(e)}))}]},data:{menu:null,docs:{page:"management-configuration-user"},perms:{only:["organization-user-c","organization-user-r","organization-user-u","organization-user-d"]}}}).state("management.settings.newuser",{url:"/users/new",component:"newUser",data:{menu:null,docs:{page:"management-configuration-create-user"},perms:{only:["organization-user-c"]}}}).state("management.settings.portal",{url:"/portal",component:"portalSettings",resolve:{tags:["TagService",function(e){return e.list().then((function(e){return e.data}))}]},data:{menu:null,docs:{page:"management-configuration-portal"},perms:{only:["environment-settings-r"]}}}).state("management.settings.dictionaries",{abstract:!0,url:"/dictionaries"}).state("management.settings.dictionaries.list",{url:"/",component:"dictionaries",resolve:{dictionaries:["DictionaryService",function(e){return e.list().then((function(e){return e.data}))}]},data:{menu:null,docs:{page:"management-configuration-dictionaries"},perms:{only:["environment-dictionary-r"]}}}).state("management.settings.dictionaries.new",{url:"/new",component:"dictionary",data:{menu:null,docs:{page:"management-configuration-dictionary"},perms:{only:["environment-dictionary-c"]}}}).state("management.settings.dictionaries.dictionary",{url:"/:dictionaryId",component:"dictionary",resolve:{dictionary:["DictionaryService","$stateParams",function(e,t){return e.get(t.dictionaryId).then((function(e){return e.data}))}]},data:{menu:null,docs:{page:"management-configuration-dictionary"},perms:{only:["environment-dictionary-c","environment-dictionary-r","environment-dictionary-u","environment-dictionary-d"]}}}).state("management.settings.analytics",{url:"/analytics",component:"analyticsSettings",resolve:{dashboardsPlatform:["DashboardService",function(e){return e.list("PLATFORM").then((function(e){return e.data}))}],dashboardsApi:["DashboardService",function(e){return e.list("API").then((function(e){return e.data}))}],dashboardsApplication:["DashboardService",function(e){return e.list("APPLICATION").then((function(e){return e.data}))}]},data:{menu:null,docs:{page:"management-configuration-analytics"},perms:{only:["environment-settings-r"]}}}).state("management.settings.dashboardnew",{url:"/analytics/dashboard/:type/new",component:"dashboard",data:{menu:null,docs:{page:"management-configuration-dashboard"},perms:{only:["environment-dashboard-c"]}}}).state("management.settings.dashboard",{url:"/analytics/dashboard/:type/:dashboardId",component:"dashboard",resolve:{dashboard:["DashboardService","$stateParams",function(e,t){return e.get(t.dashboardId).then((function(e){return e.data}))}]},data:{menu:null,docs:{page:"management-configuration-dashboard"},perms:{only:["environment-dashboard-u"]}}}).state("management.settings.apiPortalHeader",{url:"/apiportalheader",component:"configApiPortalHeader",resolve:{apiPortalHeaders:["ApiHeaderService",function(e){return e.list().then((function(e){return e.data}))}]},data:{menu:null,docs:{page:"management-configuration-apiportalheader"},perms:{only:["environment-api_header-r"]}}}).state("management.settings.apiQuality",{url:"/apiquality",component:"configApiQuality",resolve:{qualityRules:["QualityRuleService",function(e){return e.list().then((function(e){return e.data}))}]},data:{menu:null,docs:{page:"management-configuration-apiquality"},perms:{only:["environment-settings-r"]}}}).state("management.settings.qualityRulenew",{url:"/apiquality/new",component:"qualityRule",data:{menu:null,docs:{page:"management-configuration-apiquality"},perms:{only:["environment-quality_rule-c"]}}}).state("management.settings.qualityRule",{url:"/apiquality/:qualityRuleId",component:"qualityRule",resolve:{qualityRule:["QualityRuleService","$stateParams",function(e,t){return e.get(t.qualityRuleId).then((function(e){return e.data}))}]},data:{menu:null,docs:{page:"management-configuration-apiquality"},perms:{only:["environment-quality_rule-u"]}}}).state("management.settings.identityproviders",{abstract:!0,url:"/identities"}).state("management.settings.identityproviders.list",{url:"/",component:"identityProviders",resolve:{identityProviders:["IdentityProviderService",function(e){return e.list().then((function(e){return e}))}]},data:{menu:null,docs:{page:"management-configuration-identityproviders"},perms:{only:["environment-identity_provider-r"]}}}).state("management.settings.identityproviders.new",{url:"/new?:type",component:"identityProvider",data:{menu:null,docs:{page:"management-configuration-identityprovider"},perms:{only:["environment-identity_provider-c"]}}}).state("management.settings.identityproviders.identityprovider",{url:"/:id",component:"identityProvider",resolve:{identityProvider:["IdentityProviderService","$stateParams",function(e,t){return e.get(t.id).then((function(e){return e}))}],groups:["GroupService",function(e){return e.list().then((function(e){return e.data}))}],environmentRoles:["RoleService",function(e){return e.list("ENVIRONMENT").then((function(e){return e}))}],organizationRoles:["RoleService",function(e){return e.list("ORGANIZATION").then((function(e){return e}))}]},data:{menu:null,docs:{page:"management-configuration-identityprovider"},perms:{only:["environment-identity_provider-r","environment-identity_provider-u","environment-identity_provider-d"]}}}).state("management.settings.api_logging",{url:"/api_logging",component:"apiLogging",data:{menu:null,docs:{page:"management-configuration-apilogging"},perms:{only:["environment-settings-r"]}}}).state("management.settings.clientregistrationproviders",{abstract:!0,url:"/client-registration"}).state("management.settings.clientregistrationproviders.list",{url:"/",component:"clientRegistrationProviders",resolve:{clientRegistrationProviders:["ClientRegistrationProviderService",function(e){return e.list().then((function(e){return e}))}]},data:{menu:null,docs:{page:"management-configuration-client-registration-providers"},perms:{only:["environment-client_registration_provider-r"]}}}).state("management.settings.clientregistrationproviders.create",{url:"/new",component:"clientRegistrationProvider",data:{menu:null,docs:{page:"management-configuration-client-registration-provider"},perms:{only:["environment-client_registration_provider-c"]}}}).state("management.settings.clientregistrationproviders.clientregistrationprovider",{url:"/:id",component:"clientRegistrationProvider",resolve:{clientRegistrationProvider:["ClientRegistrationProviderService","$stateParams",function(e,t){return e.get(t.id).then((function(e){return e}))}]},data:{menu:null,docs:{page:"management-configuration-client-registration-provider"},perms:{only:["environment-client_registration_provider-r","environment-client_registration_provider-u","environment-client_registration_provider-d"]}}})}t.default=o},function(e,t,i){"use strict";a.$inject=["$stateProvider"],t.__esModule=!0;var n=i(25);function a(e){e.state("management.settings.notifications",{url:"/notifications",component:"notificationsComponent",data:{menu:{label:"Notifications",icon:"notifications"},perms:{only:["environment-notification-r"]}},resolve:{resolvedHookScope:function(){return n.Scope.PORTAL},resolvedHooks:["NotificationSettingsService",function(e){return e.getHooks(n.Scope.PORTAL).then((function(e){return e.data}))}],resolvedNotifiers:["NotificationSettingsService",function(e){return e.getNotifiers(n.Scope.PORTAL,null).then((function(e){return e.data}))}],notificationSettings:["NotificationSettingsService",function(e){return e.getNotificationSettings(n.Scope.PORTAL,null).then((function(e){return e.data}))}]}}).state("management.settings.notifications.notification",{url:"/:notificationId",component:"notificationSettingsComponent",data:{menu:null,docs:{page:"management-configuration-notifications"},perms:{only:["environment-notification-r"]}}}).state("management.settings.alerts",{url:"/alerts",component:"alertsComponent",data:{menu:{label:"Alerts",icon:"alarm",parameter:"alert.enabled"},perms:{only:["environment-alert-r"]}},resolve:{alerts:["AlertService","$stateParams",function(e,t){return e.listAlerts(void 0,2).then((function(e){return e.data}))}],status:["AlertService","$stateParams",function(e,t){return e.getStatus(t.apiId,2).then((function(e){return e.data}))}],notifiers:["NotifierService",function(e){return e.list().then((function(e){return e.data}))}]}}).state("management.settings.alertnew",{url:"/alert/create",component:"alertComponent",data:{menu:null,docs:{page:"management-alerts"},perms:{only:["environment-alert-c"]}},resolve:{alerts:["AlertService","$stateParams",function(e,t){return e.listAlerts(void 0,2).then((function(e){return e.data}))}],status:["AlertService","$stateParams",function(e,t){return e.getStatus(t.apiId,2).then((function(e){return e.data}))}],notifiers:["NotifierService",function(e){return e.list().then((function(e){return e.data}))}]}}).state("management.settings.alert",{url:"/alert/:alertId",component:"alertComponent",data:{menu:null,docs:{page:"management-alerts"},perms:{only:["environment-alert-u"]}},resolve:{alerts:["AlertService","$stateParams",function(e,t){return e.listAlerts(void 0,2).then((function(e){return e.data}))}],status:["AlertService","$stateParams",function(e,t){return e.getStatus(t.apiId,2).then((function(e){return e.data}))}],notifiers:["NotifierService",function(e){return e.list().then((function(e){return e.data}))}]}})}t.default=a},function(e,t,i){"use strict";t.__esModule=!0;var n=i(956),a=i(3),o=function(){function e(e,t,i,n,a,o,r,s,l,c,d,p,m){this.$http=e,this.$q=t,this.RoleService=n,this.PermPermissionStore=a,this.$urlService=o,this.ApplicationService=r,this.ApiService=s,this.$location=l,this.$cookies=c,this.$window=d,this.StringService=p,this.Base64Service=m,this.routerInitialized=!1,this.isLogout=!1,this.searchUsersURL=i.baseURL+"search/users/",this.usersURL=i.baseURL+"users/",this.userURL=i.baseURL+"user/"}return e.$inject=["$http","$q","Constants","RoleService","PermPermissionStore","$urlService","ApplicationService","ApiService","$location","$cookies","$window","StringService","Base64Service"],e.prototype.list=function(e,t,i){void 0===t&&(t=1),void 0===i&&(i=10);var n=this.usersURL+"?page="+t+"&size="+i;return e&&(n+="&q="+e),this.$http.get(n)},e.prototype.get=function(e){return this.$http.get(this.usersURL+e).then((function(e){return Object.assign(new n.User,e.data)}))},e.prototype.remove=function(e){return this.$http.delete(this.usersURL+e)},e.prototype.create=function(e){return this.$http.post(this.usersURL,e)},e.prototype.register=function(e){return this.$http.post(this.usersURL+"registration",e)},e.prototype.finalizeRegistration=function(e){return this.$http.post(this.usersURL+"registration/finalize",e)},e.prototype.search=function(e){return this.$http.get(this.searchUsersURL+"?q="+e)},e.prototype.isUserHasPermissions=function(e){return this.currentUser&&this.currentUser.allowedTo(e)},e.prototype.current=function(){var e=this,t=this;if(this.currentUser&&this.currentUser.authenticated)return this.$q.resolve(this.currentUser);var i=[this.$http.get(this.userURL,{silentCall:!0,forceSessionExpired:!0})],o=/applications\/([\w|\-]+)/.exec(this.$location.$$path);!t.isLogout&&o&&"create"!==o[1]&&i.push(this.ApplicationService.getPermissions(o[1]));var r=/apis\/([\w|\-]+)/.exec(this.$location.$$path);return!t.isLogout&&r&&"new"!==r[1]&&i.push(this.ApiService.getPermissions(r[1])),this.$q.all(i).then((function(i){return t.currentUser=Object.assign(new n.User,i[0].data),t.currentUser.userPermissions=[],a.forEach(t.currentUser.roles,(function(e){a.forEach(a.keys(e.permissions),(function(i){a.forEach(e.permissions[i],(function(n){var o=e.scope+"-"+i+"-"+n;t.currentUser.userPermissions.push(a.toLower(o))}))}))})),i[1]&&(a.includes(i[1].config.url,"applications")?(e.currentUser.userApplicationPermissions=[],a.forEach(a.keys(i[1].data),(function(e){a.forEach(i[1].data[e],(function(i){var n="APPLICATION-"+e+"-"+i;t.currentUser.userApplicationPermissions.push(a.toLower(n))}))}))):a.includes(i[1].config.url,"apis")&&(e.currentUser.userApiPermissions=[],a.forEach(a.keys(i[1].data),(function(e){a.forEach(i[1].data[e],(function(i){var n="API-"+e+"-"+i;t.currentUser.userApiPermissions.push(a.toLower(n))}))})))),t.reloadPermissions(),t.currentUser.authenticated=!0,e.$q.resolve(t.currentUser)})).catch((function(t){return e.currentUser=new n.User,e.currentUser.authenticated=!1,e.$q.resolve(e.currentUser)})).finally((function(){t.routerInitialized||(t.$urlService.sync(),t.$urlService.listen(),t.routerInitialized=!0)}))},e.prototype.reloadPermissions=function(){var e=this,t=this.RoleService.listRights();this.RoleService.listScopes().then((function(i){var n=[];a.forEach(i,(function(e,i){a.forEach(e,(function(e){a.forEach(t,(function(t){var o=i+"-"+e+"-"+t;n.push(a.toLower(o))}))}))})),e.PermPermissionStore.defineManyPermissions(n,(function(t){return a.includes(e.currentUser.userPermissions,t)||a.includes(e.currentUser.userApiPermissions,t)||a.includes(e.currentUser.userApplicationPermissions,t)}))}))},e.prototype.isAuthenticated=function(){return void 0!==this.currentUser&&void 0!==this.currentUser.id},e.prototype.login=function(e){return this.$http.post(this.userURL+"login",{},{headers:{Authorization:"Basic "+this.Base64Service.encode(e.username+":"+e.password)}})},e.prototype.logout=function(){var e=this;return this.$http.post(this.userURL+"logout",{}).then((function(){e.removeCurrentUserData()}))},e.prototype.removeCurrentUserData=function(){this.currentUser=new n.User,this.currentUser.authenticated=!1,this.isLogout=!0,this.$window.localStorage.removeItem("satellizer_token"),this.$cookies.remove("Auth-Graviteeio-APIM"),this.$window.localStorage.removeItem("profileConfirmed")},e.prototype.currentUserPicture=function(){if(this.currentUser&&this.currentUser.id)return this.userURL+"avatar?"+this.StringService.hashCode(this.currentUser.id)},e.prototype.getUserAvatar=function(e){return""+this.usersURL+e+"/avatar"},e.prototype.getUserGroups=function(e){return this.$http.get(""+this.usersURL+e+"/groups")},e.prototype.save=function(e){return this.$http.put(""+this.userURL,{username:e.username,picture:e.picture,newsletter:e.newsletter,email:e.email})},e.prototype.resetPassword=function(e){return this.$http.post(""+this.usersURL+e+"/resetPassword",{})},e.prototype.getMemberships=function(e,t){return this.$http.get(""+this.usersURL+e+"/memberships?type="+t)},e.prototype.setTasks=function(e){return this.currentUser.tasks.populate(e),this.currentUser},e.prototype.getCurrentUserTags=function(){return this.$http.get(this.userURL+"tags")},e.prototype.updateUserRoles=function(e,t){return this.$http.put(""+this.usersURL+e+"/roles",t)},e}();t.default=o},function(e,t,i){"use strict";t.__esModule=!0;var n=i(3),a=i(182),o=function(){function e(){this.authenticated=!1,this.tasks=new a.PagedResult,this.notifications=new a.PagedResult}return e.prototype.allowedTo=function(e){return!(!e||!this.userPermissions)&&(n.intersection(this.userPermissions,e).length>0||n.intersection(this.userApiPermissions,e).length>0||n.intersection(this.userApplicationPermissions,e).length>0)},e.prototype.isAdmin=function(){return!!this.userPermissions&&n.some(this.userPermissions,(function(e){return n.startsWith(e,"environment-instance")||n.startsWith(e,"environment-platform")}))},e}();t.User=o},function(e,t,i){"use strict";t.__esModule=!0;var n=function(){function e(e,t,i,n,a){this.UserService=e,this.NotificationService=t,this.$state=i,this.$scope=n,this.$rootScope=a}return e.$inject=["UserService","NotificationService","$state","$scope","$rootScope"],e.prototype.$onInit=function(){!this.user||this.user&&void 0===this.user.id?this.$state.go("login",{},{reload:!0,inherit:!1}):this.originalPicture=this.getUserPicture()},e.prototype.save=function(){var e=this;this.UserService.save(this.user).then((function(t){e.user=t.data,e.$rootScope.$broadcast("graviteeUserRefresh",{user:e.user,refresh:!0}),e.$scope.formUser.$setPristine(),e.NotificationService.show("User has been updated successfully")}))},e.prototype.cancel=function(){delete this.user.picture,this.$state.reload()},e.prototype.getUserPicture=function(){return this.UserService.currentUserPicture()},e}();t.default=n},function(e,t,i){"use strict";t.__esModule=!0;var n={bindings:{user:"<"},controller:"UserController",template:i(959)};t.default=n},function(e,t){e.exports=" <form name=formUser ng-submit=$ctrl.save() novalidate> <md-card class=gravitee-user-container> <md-card-title> <md-card-title-text> <span class=md-headline>User information</span> <span class=md-subhead ng-bind=$ctrl.user.displayName></span> </md-card-title-text> <md-card-title-media style=text-align:center> <gravitee-image image-id=$ctrl.user.id image=$ctrl.user.picture image-url=$ctrl.getUserPicture() image-border-radius=true image-name=$ctrl.user.displayName image-form=formUser></gravitee-image> </md-card-title-media> </md-card-title> <md-card-content> <div layout=row> <ng-md-icon flex=10 icon=person></ng-md-icon> <label>{{$ctrl.user.lastname || '-'}} {{$ctrl.user.firstname || '-'}}</label> </div> <div layout=row> <ng-md-icon flex=10 icon=contact_mail></ng-md-icon> <label>{{$ctrl.user.email || '-'}}</label> </div> <div layout=row> <ng-md-icon flex=10 icon=lock> <md-tooltip> <span ng-repeat=\"auth in $ctrl.user.authorities\">{{auth.authority}}{{$last ? '' : ',&nbsp'}}</span> </md-tooltip> </ng-md-icon> <label ng-repeat=\"role in $ctrl.user.roles\">{{\"[\" + role.scope + \"]&nbsp;\" + role.name}}{{$last ? '' : '&nbsp;-&nbsp;'}}</label> </div> </md-card-content> <md-card-actions layout=row layout-align=\"end center\"> <md-button type=submit ng-disabled=formUser.$pristine>Update</md-button> <md-button ng-click=$ctrl.cancel() ng-disabled=formUser.$pristine>Cancel</md-button> </md-card-actions> </md-card> </form> "},function(e,t,i){"use strict";t.__esModule=!0;var n=i(3);t.submenuFilter=["$state","UserService","Constants",function(e,t,i){return function(a){var o=e.current.name.split(".").splice(0,2),r="apiId"in e.params||"applicationId"in e.params||"instanceId"in e.params;if(-1!==o.indexOf("configuration")||r){var s=o.join(".")+".";return a.filter((function(e){return!e.abstract&&e.data&&e.data.menu&&!e.data.menu.firstLevel&&0===e.name.indexOf(s)&&(!e.data.perms||!e.data.perms.only||t.isUserHasPermissions(e.data.perms.only))&&(!e.data.menu.parameter||n.get(i,e.data.menu.parameter))}))}return[]}}]},function(e,t,i){"use strict";t.__esModule=!0;var n=i(3),a={template:i(962),controller:["$state","UserService",function(e,t){var i=this;this.tasks=t.currentUser.tasks,this.taskMessage=function(e){switch(e.type){case"subscription_approval":var t=i.tasks.metadata[e.data.application].name,n=i.tasks.metadata[e.data.plan].name,a=i.tasks.metadata[e.data.plan].api;return'The application "'+t+'" requests a subscription for API: '+i.tasks.metadata[a].name+" (plan: "+n+")";case"in_review":return'The API "'+i.tasks.metadata[e.data.referenceId].name+'" is ready to be reviewed';case"request_for_changes":var o='The API "'+i.tasks.metadata[e.data.referenceId].name+'" need changes';return e.data.comment&&(o+=": "+e.data.comment),o;default:return"Unknown task"}},this.title=function(e){return n.startCase(e.type)},this.go=function(t){switch(t.type){case"subscription_approval":e.go("management.apis.detail.portal.subscriptions.subscription",{apiId:t.data.api,subscriptionId:t.data.id});break;case"in_review":case"request_for_changes":e.go("management.apis.detail.portal.general",{apiId:t.data.referenceId})}},this.icon=function(e){switch(e.type){case"subscription_approval":return"vpn_key";case"in_review":case"request_for_changes":return"rate_review";default:return""}}}]};t.default=a},function(e,t){e.exports=' <div layout=row layout-align="center start" ng-if="$ctrl.tasks.page.total_elements > 0"> <md-card flex=100 flex-gt-sm=90 flex-gt-md=70 class=gv-tasks> <md-card-title> <md-card-title-text> <span class=md-headline>My Tasks ({{$ctrl.tasks.data.length}})</span> </md-card-title-text> </md-card-title> <md-card-content> <md-list> <md-list-item class="md-3-line noright" ng-repeat="task in $ctrl.tasks.data" ng-click=$ctrl.go(task)> <div class=md-list-item-text layout=row layout-align="space-between center"> <ng-md-icon icon={{$ctrl.icon(task)}} size=36 flex=none></ng-md-icon> <h4 flex=grow>{{$ctrl.taskMessage(task)}}</h4> <p flex=none>{{task.created_at | humanDatetimeFilter}}</p> </div> </md-list-item> </md-list> </md-card-content> </md-card> </div> <gravitee-empty-state ng-if="$ctrl.tasks.page.total_elements == 0" icon=wb_sunny message="Congratulations, you did all your tasks !"></gravitee-empty-state> '},function(e,t,i){"use strict";t.__esModule=!0;var n=function(){function e(e,t,i){this.$http=e,this.Constants=t,this.URL=this.Constants.baseURL+"user/tasks",this.UserService=i}return e.$inject=["$http","Constants","UserService"],e.prototype.getTaskSchedulerInSeconds=function(){return this.Constants.scheduler&&this.Constants.scheduler.tasks?this.Constants.scheduler.tasks:10},e.prototype.getTasks=function(){return this.$http.get(this.URL,{ignoreLoadingBar:!0,silentCall:!0})},e.prototype.fillUserTasks=function(e){return this.UserService.setTasks(e)},e}();t.default=n},function(e,t,i){"use strict";t.__esModule=!0;var n=i(182),a={bindings:{user:"<"},template:i(965),controller:["UserNotificationService","$scope","$interval",function(e,t,i){var a=this,o=this;o.notificationsScheduler=null,o.$onInit=function(){a.lastNbNotification=-1,o.notificationsScheduler||(o.refreshUserNotifications(),o.notificationsScheduler=i((function(){o.refreshUserNotifications()}),1e3*e.getNotificationSchedulerInSeconds()))},o.delete=function(t){a.lastNbNotification--,e.delete(t).then((function(e){o.refreshUserNotifications()}))},o.deleteAll=function(t){a.lastNbNotification=-1,t.preventDefault(),e.deleteAll().then((function(e){o.refreshUserNotifications()}))},t.$on("graviteeUserCancelScheduledServices",(function(){o.cancelRefreshUserNotifications()})),o.cancelRefreshUserNotifications=function(){o.notificationsScheduler&&(i.cancel(o.notificationsScheduler),o.notificationsScheduler=void 0)},o.getUserNotificationsCount=function(){return o.user.notifications?o.user.notifications.page.total_elements:0},o.refreshUserNotifications=function(){e.getNotifications().then((function(t){var i=new n.PagedResult;if(i.populate(t.data),e.fillUserNotifications(o.user,i),a.lastNbNotification<0)a.lastNbNotification=o.user.notifications.data.length;else if(o.user.notifications.data.length>0&&a.lastNbNotification<o.user.notifications.data.length){for(var r=a.lastNbNotification;r<o.user.notifications.data.length;r++)a.windowNotification(o.user.notifications.data[r].title,o.user.notifications.data[r].message);a.lastNbNotification=o.user.notifications.data.length}}))},o.windowNotification=function(e,t){"Notification"in window&&Notification.requestPermission().then((function(){new Notification(e,{body:t,icon:"/favicon.ico"})}))}}]};t.default=a},function(e,t){e.exports=' <md-menu ng-if=$ctrl.user.id md-offset="0 45"> <md-button class=gv-navbar-button ng-click=$mdMenu.open($event) aria-label="Open notifications"> <ng-md-icon icon=notifications gv-theme-element=portal.navbar.notifications></ng-md-icon> <span ng-if="$ctrl.getUserNotificationsCount()>0" flex class="badge gv-notification-badge" gv-theme-element=portal.navbar.user.notification> {{ $ctrl.getUserNotificationsCount() }} </span> </md-button> <md-menu-content class=gv-notification-content width=8> <md-subheader ng-if="$ctrl.user.notifications.data.length < 2">{{$ctrl.user.notifications.data.length}} notification</md-subheader> <md-subheader ng-if="$ctrl.user.notifications.data.length > 1"> <div layout=row layout-align="space-between center"> <span>{{$ctrl.user.notifications.data.length}} notifications</span> <span><a ng-click=$ctrl.deleteAll($event)>delete all</a></span> </div> </md-subheader> <md-list> <md-list-item class=md-3-line ng-repeat="notification in $ctrl.user.notifications.data" ng-click=$ctrl.delete(notification)> <div class=md-list-item-text layout=column> <h3>{{ notification.title }}</h3> <h4>{{ notification.message }}</h4> <p>{{ notification.created_at | humanDatetimeFilter }}</p> </div> </md-list-item> </md-list> </md-menu-content> </md-menu> '},function(e,t,i){"use strict";t.__esModule=!0;var n=function(){function e(e,t){this.$http=e,this.Constants=t,this.URL=this.Constants.baseURL+"user/notifications"}return e.$inject=["$http","Constants"],e.prototype.getNotificationSchedulerInSeconds=function(){return this.Constants.scheduler&&this.Constants.scheduler.notifications?this.Constants.scheduler.notifications:10},e.prototype.getNotifications=function(){return this.$http.get(this.URL,{ignoreLoadingBar:!0,silentCall:!0})},e.prototype.delete=function(e){return this.$http.delete(this.URL+"/"+e.id)},e.prototype.deleteAll=function(){return this.$http.delete(this.URL)},e.prototype.fillUserNotifications=function(e,t){e.notifications.metadata=t.metadata,e.notifications.data=t.data,e.notifications.page=t.page},e}();t.default=n},function(e,t,i){"use strict";t.__esModule=!0;var n={bindings:{notificationSettings:"<",api:"<",application:"<"},template:i(968),controller:["Constants","$state",function(e,t){this.$onInit=function(){t.go("^.notifications.notification",{notificationId:"portal"})}}]};t.default=n},function(e,t){e.exports=" <div layout=row ng-style=\"$ctrl.api ? '' : {'margin': '0 0 0 -32px'}\"> <div class=\"gv-sub-menu menu\"> <div ng-if=$ctrl.api class=md-headline>{{$ctrl.api.name}} ({{$ctrl.api.version}})</div> <div ng-if=$ctrl.application class=md-headline>{{$ctrl.application.name}}</div> <div class=aui-nav-heading> <strong>Notifications</strong> </div> <ul class=aui-nav> <li class=iterable-item ui-sref-active=aui-nav-selected ng-repeat=\"notificationSetting in $ctrl.notificationSettings\" ng-click=$ctrl.selectNotificationSetting(notificationSetting)> <a class=execute ui-sref=\"^.notifications.notification({notificationId: notificationSetting.id || 'portal'})\">{{notificationSetting.name}}</a> </li> </ul> </div> <div flex class=notifications-content ui-view layout=column></div> </div> "},function(e,t,i){"use strict";t.__esModule=!0;var n=i(3),a=i(970),o=i(25),r={bindings:{resolvedHookScope:"<",resolvedHooks:"<",resolvedNotifiers:"<",notificationSettings:"="},template:i(971),controller:["$state","NotificationSettingsService","NotificationService","$mdDialog","$timeout","$rootScope",function(e,t,r,s,l,c){var d=this,p=this;this.$rootScope=c,p.$mdDialog=s,p.$onInit=function(){p.hooksByCategory=n.groupBy(p.resolvedHooks,"category"),p.hooksCategories=n.keysIn(p.hooksByCategory),p.selectNotificationSetting(n.find(p.notificationSettings,{id:e.params.notificationId})||p.notificationSettings[0]),e.params.apiId?p.currentReferenceId=e.params.apiId:e.params.applicationId?p.currentReferenceId=e.params.applicationId:p.currentReferenceId="DEFAULT"},p.selectNotificationSetting=function(t,i){p.selectedNotificationSetting=t,p.hookStatus={},n.forEach(p.resolvedHooks,(function(e){p.hookStatus[e.id]=p.selectedNotificationSetting.hooks.indexOf(e.id)>=0})),p.selectedNotificationSetting.notifier?p.selectedNotifier=n.filter(p.resolvedNotifiers,{id:p.selectedNotificationSetting.notifier})[0]:p.selectedNotifier=void 0,l((function(){e.params.notificationId=p.selectedNotificationSetting.id||"portal",e.transitionTo(e.current,e.params,{reload:i})}))},p.save=function(){var e=new a.NotificationConfig;e.id=p.selectedNotificationSetting.id,e.name=p.selectedNotificationSetting.name,e.config_type=p.selectedNotificationSetting.config_type,e.referenceType=p.selectedNotificationSetting.referenceType,e.referenceId=p.selectedNotificationSetting.referenceId,p.selectedNotifier&&(e.notifier=p.selectedNotifier.id),e.config=p.selectedNotificationSetting.config,e.useSystemProxy=p.selectedNotificationSetting.useSystemProxy,e.hooks=[],n.forEach(p.hookStatus,(function(t,i){t&&e.hooks.push(i)})),t.update(e).then((function(e){var t=n.findIndex(p.notificationSettings,{id:e.data.id});t<0?p.notificationSettings[0]=e.data:p.notificationSettings[t]=e.data,r.show("Notifications saved with success"),p.formNotification.$setPristine()}))},p.delete=function(){var e=d.$mdDialog.confirm({title:"Warning",content:"Are you sure you want to remove this notification?",ok:"OK",cancel:"Cancel"});d.$mdDialog.show(e).then((function(){t.delete(p.resolvedHookScope,p.selectedNotificationSetting.referenceId,p.selectedNotificationSetting.id).then((function(e){r.show("Notification deleted with success"),p.notificationSettings=n.filter(p.notificationSettings,(function(e){return p.selectedNotificationSetting.id!==e.id})),p.selectNotificationSetting(p.notificationSettings[0],!0)}))}))},p.addDialog=function(){p.$mdDialog.show({controller:"DialogAddNotificationSettingsController",controllerAs:"dialogAddNotificationSettingsController",template:i(972),clickOutsideToClose:!0,notifiers:p.resolvedNotifiers}).then((function(e){var i=new a.NotificationConfig;switch(i.name=e.name,i.config_type="GENERIC",i.referenceId=p.currentReferenceId,i.notifier=e.notifierId,i.hooks=[],p.resolvedHookScope){case o.Scope.APPLICATION:i.referenceType="APPLICATION";break;case o.Scope.API:i.referenceType="API";break;case o.Scope.PORTAL:i.referenceType="PORTAL"}t.create(i).then((function(e){p.notificationSettings.push(e.data),p.selectNotificationSetting(e.data)}))}))},p.validate=function(){return"portal"===p.selectedNotificationSetting.config_type||p.selectedNotificationSetting.config&&""!==p.selectedNotificationSetting.config}}]};t.default=r},function(e,t,i){"use strict";t.__esModule=!0;var n=function(){};t.NotificationConfig=n},function(e,t){e.exports=' <div class="gv-forms gv-forms-fluid" layout=column> <div class=gv-forms layout=column> <form name=$ctrl.formNotification novalidate> <h1>{{$ctrl.selectedNotificationSetting.name}}</h1> <div class=gv-form> <h2>Settings</h2> <div class=gv-form-content layout=column> <div ng-if="$ctrl.selectedNotificationSetting.config_type===\'generic\'"> <h5>Configure the notifier you want to use:</h5> <div layout=column> <md-input-container flex> <label>Notifier</label> <input readonly=readonly ng-model=$ctrl.selectedNotificationSetting.notifier> </md-input-container> <md-input-container flex> <label ng-if="$ctrl.selectedNotifier.type === \'EMAIL\'">Email list (use space, \',\' or \';\' to separate emails)</label> <label ng-if="$ctrl.selectedNotifier.type === \'WEBHOOK\'">URL (Gravitee will POST datas to this url)</label> <input ng-model=$ctrl.selectedNotificationSetting.config aria-label="Notifier configuration"> </md-input-container> <md-input-container flex ng-if="$ctrl.selectedNotifier.type === \'WEBHOOK\'"> <md-checkbox ng-model=$ctrl.selectedNotificationSetting.useSystemProxy aria-label="Use system proxy">Use system proxy</md-checkbox> </md-input-container> </div> </div> <h5>Which events would you like to subscribe for ?</h5> <div layout=column> <div ng-repeat="category in $ctrl.hooksCategories" style=margin-top:18px> <h6>{{category}}</h6> <div layout=row layout-wrap> <div flex=35 ng-repeat="hook in $ctrl.hooksByCategory[category]"> <md-checkbox ng-model=$ctrl.hookStatus[hook.id] aria-label="Notification Hook"> <b>{{hook.label}}</b> <br> {{hook.description}} </md-checkbox> </div> </div> </div> </div> <div class="md-actions gravitee-api-save-button" layout=row> <md-button class="md-raised md-primary" type=submit permission permission-only="[\'api-notification-u\', \'application-notification-u\', \'environment-notification-u\']" ng-disabled="!$ctrl.validate() || $ctrl.formNotification.$pristine" ng-click=$ctrl.save()> Save </md-button> <md-button class="md-raised md-warn" type=button ng-click=$ctrl.delete() permission permission-only="[\'api-notification-d\', \'application-notification-d\', \'environment-notification-d\']" ng-if="$ctrl.selectedNotificationSetting.config_type===\'generic\'"> Delete </md-button> </div> </div> </div> </form> </div> <md-button permission permission-only="[\'api-notification-c\', \'application-notification-c\', \'environment-notification-c\']" class="md-fab md-fab-bottom-right md-fab-scrollable" ng-class="{\'gv-help-displayed\': $ctrl.$rootScope.helpDisplayed}" aria-label=Add ng-click=$ctrl.addDialog()> <ng-md-icon icon=add></ng-md-icon> </md-button> </div> '},function(e,t){e.exports=' <md-dialog aria-label="New Notification Settings"> <form name=formNotificationSetting ng-submit=dialogAddNotificationSettingsController.save() novalidate> <md-dialog-content layout=column layout-padding> <h4>New Notification Settings</h4> <md-input-container> <label>Name</label> <input ng-model=dialogAddNotificationSettingsController.name id=name required autofocus> </md-input-container> <md-input-container> <label>Notifier</label> <md-select ng-model=dialogAddNotificationSettingsController.selectedNotifier ng-model-options="{trackBy: \'$value.id\'}" required> <md-option ng-repeat="notifier in dialogAddNotificationSettingsController.notifiers" ng-value=notifier> {{notifier.name}} </md-option> </md-select> </md-input-container> </md-dialog-content> <md-dialog-actions layout=row> <md-button ng-click=dialogAddNotificationSettingsController.hide()> Cancel </md-button> <md-button type=submit class="md-raised md-primary" ng-disabled=formNotificationSetting.$invalid> Add </md-button> </md-dialog-actions> </form> </md-dialog> '},function(e,t,i){"use strict";t.__esModule=!0;var n=i(25),a=function(){function e(e,t){this.$http=e,this.Constants=t,this.applicationsURL=t.baseURL+"applications/",this.apisURL=t.baseURL+"apis/",this.portalgCfgURL=t.baseURL+"configuration/"}return e.$inject=["$http","Constants"],e.prototype.getHooks=function(e){switch(e){case n.Scope.APPLICATION:return this.$http.get(this.applicationsURL+"hooks");case n.Scope.API:return this.$http.get(this.apisURL+"hooks");case n.Scope.PORTAL:return this.$http.get(this.portalgCfgURL+"hooks")}},e.prototype.getNotifiers=function(e,t){switch(e){case n.Scope.APPLICATION:return this.$http.get(this.applicationsURL+t+"/notifiers");case n.Scope.API:return this.$http.get(this.apisURL+t+"/notifiers");case n.Scope.PORTAL:return this.$http.get(this.portalgCfgURL+"notifiers")}},e.prototype.getNotificationSettings=function(e,t){switch(e){case n.Scope.APPLICATION:return this.$http.get(this.applicationsURL+t+"/notificationsettings");case n.Scope.API:return this.$http.get(this.apisURL+t+"/notificationsettings");case n.Scope.PORTAL:return this.$http.get(this.portalgCfgURL+"notificationsettings")}},e.prototype.delete=function(e,t,i){switch(e){case n.Scope.APPLICATION:return this.$http.delete(this.applicationsURL+t+"/notificationsettings/"+i);case n.Scope.API:return this.$http.delete(this.apisURL+t+"/notificationsettings/"+i);case n.Scope.PORTAL:return this.$http.delete(this.portalgCfgURL+"notificationsettings/"+i)}},e.prototype.update=function(e){var t=e.id?e.id:"";return"API"===e.referenceType?this.$http.put(this.apisURL+e.referenceId+"/notificationsettings/"+t,e):"APPLICATION"===e.referenceType?this.$http.put(this.applicationsURL+e.referenceId+"/notificationsettings/"+t,e):"PORTAL"===e.referenceType?this.$http.put(this.portalgCfgURL+"notificationsettings/"+t,e):void 0},e.prototype.create=function(e){return"API"===e.referenceType?this.$http.post(this.apisURL+e.referenceId+"/notificationsettings",e):"APPLICATION"===e.referenceType?this.$http.post(this.applicationsURL+e.referenceId+"/notificationsettings",e):"PORTAL"===e.referenceType?this.$http.post(this.portalgCfgURL+"notificationsettings",e):void 0},e}();t.default=a},function(e,t,i){"use strict";t.__esModule=!0;var n=i(15),a=i(3),o={bindings:{pages:"<",folders:"<",systemFolders:"<"},template:i(975),controller:["NotificationService","DocumentationService","$state","$scope","$mdDialog","$rootScope",function(e,t,o,r,s,l){var c=this;this.$rootScope=l,this.apiId=o.params.apiId,this.$onInit=function(){c.pages=c.filterROOTAndSystemPages(c.pages),c.rootDir=o.params.parent,c.foldersById=a.keyBy(c.folders,"id"),c.systemFoldersById=a.keyBy(c.systemFolders,"id"),c.currentFolder=c.getFolder(c.rootDir),c.supportedTypes=t.supportedTypes(c.getFolderSituation(c.rootDir)),c.breadcrumb=c.generateBreadcrumb(),r.renameFolder=!1,r.translateFolder=!1},this.getFolderSituation=function(e){if(!e)return n.FolderSituation.ROOT;if(c.systemFoldersById[e])return n.SystemFolderName.TOPFOOTER===c.systemFoldersById[e].name?n.FolderSituation.SYSTEM_FOLDER_WITH_FOLDERS:n.FolderSituation.SYSTEM_FOLDER;if(c.foldersById[e]){var t=c.foldersById[e].parentId;return c.systemFoldersById[t]?n.FolderSituation.FOLDER_IN_SYSTEM_FOLDER:n.FolderSituation.FOLDER_IN_FOLDER}console.debug("impossible to determine folder situation : "+e)},this.canCreateShortCut=function(e,t){return"SWAGGER"===t||"MARKDOWN"===t||"FOLDER"===t&&c.getFolderSituation(e)!==n.FolderSituation.FOLDER_IN_SYSTEM_FOLDER},this.filterROOTAndSystemPages=function(e){return a.filter(e,(function(e){return"ROOT"!==e.type&&"SYSTEM_FOLDER"!==e.type&&"TRANSLATION"!==e.type}))},this.toggleRenameFolder=function(){r.renameFolder=!r.renameFolder,r.renameFolder&&(c.newFolderName=c.breadcrumb[c.breadcrumb.length-1].name)},this.renameFolder=function(){t.partialUpdate("name",c.newFolderName,c.rootDir,c.apiId).then((function(t){e.show("Folder "+c.newFolderName+" has been changed with success"),c.breadcrumb[c.breadcrumb.length-1].name=t.data.name,c.toggleRenameFolder()}))},this.generateBreadcrumb=function(){var e=[];return c.rootDir&&c.addParentToBreadcrumb(c.rootDir,e),e.push({id:"",name:"~"}),e.reverse()},this.getFolder=function(e){if(e){var t=c.foldersById[e];return t||(t=c.systemFoldersById[e]),t}},this.createShortCut=function(n){s.show({controller:"SelectFolderDialogController",controllerAs:"ctrl",template:i(258),clickOutsideToClose:!0,locals:{title:'Create shortcut for "'+n.name+'" in...',folders:c.generateCreateShortCutFolder()}}).then((function(i){if(i){var a={name:n.name,content:n.id,parentId:i,type:"LINK",published:n.published,configuration:{resourceType:"page",isFolder:"FOLDER"===n.type,inherit:"true"}};t.create(a,c.apiId).then((function(){e.show('"Link to '+n.name+'" has been created with success'),c.refresh()}))}}))},this.generateCreateShortCutFolder=function(){var e=[];if(c.folders||c.systemFolders){var t=a.concat(c.folders,c.systemFolders);return a.forEach(t,(function(t){var i=c.getFolderSituation(t.id);if(i===n.FolderSituation.SYSTEM_FOLDER||i===n.FolderSituation.SYSTEM_FOLDER_WITH_FOLDERS||i===n.FolderSituation.FOLDER_IN_SYSTEM_FOLDER){var a=c.getFolderPath(t.id);a&&e.push({id:t.id,path:a})}})),a.orderBy(e,["path"],["asc"])}return e},this.moveToFolder=function(n){s.show({controller:"SelectFolderDialogController",controllerAs:"ctrl",template:i(258),clickOutsideToClose:!0,locals:{title:'Move "'+n.name+'" to...',folders:c.generateMoveToFolder(n.id,n.type)}}).then((function(i){i&&t.partialUpdate("parentId",-1===i?"":i,n.id,c.apiId).then((function(){e.show('"'+n.name+'" has been moved with success'),c.refresh()}))}))},this.generateMoveToFolder=function(e,t){var i=[];if(c.folders||c.systemFolders){var o=a.concat(c.folders,c.systemFolders),r=c.canCreateShortCut(e,t);return r&&i.push({id:-1,path:"/"}),a.forEach(o,(function(a){var o=c.getFolderSituation(a.id);if(r&&(o===n.FolderSituation.ROOT||o===n.FolderSituation.FOLDER_IN_FOLDER)||!r&&("FOLDER"===t&&o===n.FolderSituation.SYSTEM_FOLDER_WITH_FOLDERS||"FOLDER"!==t&&(o===n.FolderSituation.SYSTEM_FOLDER||o===n.FolderSituation.SYSTEM_FOLDER_WITH_FOLDERS||o===n.FolderSituation.FOLDER_IN_SYSTEM_FOLDER))){var s=c.getFolderPath(a.id,e);s&&i.push({id:a.id,path:s})}})),a.orderBy(i,["path"],["asc"])}return i},this.getFolderPath=function(e,t){var i=[],n=c.getFolder(e);if(i.push(n.name),c.getFolderParentName(e,i,t),0!==i.length)return"/ "+a.reduceRight(i,(function(e,t){return e+" / "+t}))},this.getFolderParentName=function(e,t,i){var n=c.getFolder(e);if(e===i||n.parentId&&i===n.parentId)t.length=0;else if(n.parentId){var a=c.getFolder(n.parentId);a&&(t.push(a.name),c.getFolderParentName(n.parentId,t,i))}},this.addParentToBreadcrumb=function(e,t){var i=c.getFolder(e);i&&(t.push(i),i.parentId&&c.addParentToBreadcrumb(i.parentId,t))},this.refresh=function(){var e=new n.DocumentationQuery;c.rootDir?e.parent=c.rootDir:e.root=!0,t.search(e,c.apiId).then((function(e){return c.pages=c.filterROOTAndSystemPages(e.data)}))},this.refreshCurrentFolder=function(){c.rootDir&&(t.get(c.apiId,c.rootDir).then((function(e){return c.currentFolder=e.data})),delete c.currentTranslation)},this.togglePublish=function(i){i.published=!i.published,t.partialUpdate("published",i.published,i.id,c.apiId).then((function(){e.show("Page "+i.name+" has been "+(i.published?"":"un")+"published with success")}))},this.upward=function(i){i.order=i.order-1,t.partialUpdate("order",i.order,i.id,c.apiId).then((function(){e.show("Page "+i.name+" order has been changed with success"),c.refresh()}))},this.downward=function(i){i.order=i.order+1,t.partialUpdate("order",i.order,i.id,c.apiId).then((function(){e.show("Page "+i.name+" order has been changed with success"),c.refresh()}))},this.remove=function(n){var a=c;s.show({controller:"DialogConfirmController",controllerAs:"ctrl",template:i(5),clickOutsideToClose:!0,locals:{title:'Would you like to remove "'+n.name+'" ?',msg:"LINK"!==n.type?"All related links will also be removed.":"",confirmButton:"Remove"}}).then((function(i){i&&t.remove(n.id,a.apiId).then((function(){e.show("Page "+n.name+" has been removed"),a.refresh(),a.refreshCurrentFolder(),a.currentTranslation.id===n.id&&delete a.currentTranslation}))}))},this.newPage=function(e){c.apiId?o.go("management.apis.detail.portal.newdocumentation",{type:e,parent:c.rootDir}):o.go("management.settings.newdocumentation",{type:e,parent:c.rootDir})},this.openUrl=function(e){return"FOLDER"===e.type||"SYSTEM_FOLDER"===e.type?c.apiId?o.go("management.apis.detail.portal.documentation",{apiId:c.apiId,type:e.type,parent:e.id}):o.go("management.settings.documentation",{parent:e.id}):c.apiId?o.go("management.apis.detail.portal.editdocumentation",{apiId:c.apiId,type:e.type,pageId:e.id}):o.go("management.settings.editdocumentation",{pageId:e.id,type:e.type,tab:"content"})},this.importPages=function(){c.apiId?o.go("management.apis.detail.portal.importdocumentation",{apiId:c.apiId}):o.go("management.settings.importdocumentation")},this.fetch=function(){c.fetchAllInProgress=!0,t.fetchAll(c.apiId).then((function(){c.refresh(),e.show("Pages has been successfully fetched")})).finally((function(){c.fetchAllInProgress=!1}))},this.hasExternalDoc=function(){return c.pages.filter((function(e){return e.hasOwnProperty("source")})).length>0},this.toggleTranslateFolder=function(){r.translateFolder=!r.translateFolder},this.saveFolderTranslation=function(){c.currentTranslation.id?t.update(c.currentTranslation,c.apiId).then((function(t){e.show("'"+c.currentTranslation.name+"' has been updated"),c.refreshCurrentFolder()})):t.create(c.currentTranslation,c.apiId).then((function(t){var i=t.data;e.show("'"+i.name+"' has been created"),c.refreshCurrentFolder()}))},this.selectTranslation=function(e){c.currentTranslation=e},this.addTranslation=function(){c.currentTranslation={type:"TRANSLATION",parentId:c.currentFolder.id}}}]};t.default=o},function(e,t){e.exports=' <div class="gv-forms gv-forms-fluid" layout=column> <div class=gv-forms-header> <h1>Documentation</h1> <a permission permission-only="[\'environment-documentation-c\', \'api-documentation-c\']" ng-click=$ctrl.importPages()> Import multiple files </a> <md-button class="md-raised md-primary" type=button ng-if=$ctrl.hasExternalDoc() ng-click=$ctrl.fetch() ng-disabled=$ctrl.fetchAllInProgress permission permission-only="[\'environment-documentation-u\', \'api-documentation-u\']"> Fetch all </md-button> </div> <div class=gv-form> <div layout=row layout-align="space-between center" ng-if=!renameFolder> <h2> <span ng-repeat="folder in $ctrl.breadcrumb"> <a ng-if="$ctrl.apiId && !$last" ui-sref="management.apis.detail.portal.documentation({apiId: $ctrl.apiId, parent: folder.id})">{{folder.name}}</a> <a ng-if="!$ctrl.apiId && !$last" ui-sref="management.settings.documentation({parent: folder.id})">{{folder.name}}</a> <span ng-if="$ctrl.apiId && $last">{{folder.name}}</span> <span ng-if="!$ctrl.apiId && $last">{{folder.name}}</span> <span ng-if="$first || !$last ">&nbsp;/&nbsp;</span> </span> </h2> <div ng-if="$ctrl.breadcrumb.length > 1 && $ctrl.currentFolder.type != \'SYSTEM_FOLDER\'"> <md-button type=button class="md-raised md-primary" ng-click=$ctrl.toggleRenameFolder() aria-label=Edit permission permission-only="[\'environment-documentation-u\', \'api-documentation-u\']" ng-if=!translateFolder> Rename Folder</md-button> <md-button type=button class="md-raised md-primary" ng-click=$ctrl.toggleTranslateFolder() aria-label=Translations permission permission-only="[\'environment-documentation-u\', \'api-documentation-u\']"> {{ translateFolder? \'Browse Folder\' : \'Translate Folder\' }}</md-button> </div> </div> <div layout=row layout-align="space-between center" ng-if=renameFolder> <h2> <span ng-repeat="folder in $ctrl.breadcrumb"> <span ng-if=!$last>{{folder.name}}</span> <input ng-if=$last type=text ng-model=$ctrl.newFolderName> <span ng-if="$first || !$last ">&nbsp;/&nbsp;</span> </span> </h2> <div ng-if="$ctrl.breadcrumb.length > 1"> <md-button type=button class="md-raised md-primary" ng-click=$ctrl.renameFolder() aria-label=Edit> Save</md-button> <md-button class=md-raised type=button ng-click=$ctrl.toggleRenameFolder()> Cancel </md-button> </div> </div> <div ng-if=translateFolder> <md-table-container> <table md-table class=gv-table-dense> <thead md-head> <tr md-row> <th md-column width=48px>Language</th> <th md-column>Name</th> <th md-column width=1% nowrap=nowrap>Last Update</th> <th md-column width=48px></th> <th md-column width=48px></th> </tr> </thead> <tbody md-body> <tr ng-if="!$ctrl.currentFolder.translations.length || $ctrl.currentFolder.translations.length <= 0"> <td md-cell colspan=5><span>No translation available</span></td> </tr> <tr md-row ng-repeat="translation in $ctrl.currentFolder.translations"> <td md-cell width=48px> <span> <a ng-click=$ctrl.selectTranslation(translation)>{{translation.configuration.lang}}</a> </span> </td> <td md-cell>{{translation.name}}</td> <td md-cell width=1% nowrap=nowrap>{{translation.lastModificationDate | date:\'medium\'}}</td> <td md-cell width=48px> <ng-md-icon icon=delete ng-click=$ctrl.remove(translation) style=font-size:24px;height:24px permission permission-only="[\'environment-documentation-u\', \'api-documentation-u\']"> <md-tooltip md-direction=top md-visible=false>Remove</md-tooltip> </ng-md-icon> </td> </tr> </tbody> </table> </md-table-container> <div style=text-align:right> <md-button permission permission-only="[\'environment-documentation-u\', \'api-documentation-u\']" type=button aria-label="Add translation" class="md-raised md-primary" ng-click=$ctrl.addTranslation()> Add a translation </md-button> </div> <div class=gv-form-content ng-if=$ctrl.currentTranslation> <md-input-container class=md-block> <label>Language (max. 2 characters)</label> <input ng-model=$ctrl.currentTranslation.configuration.lang style=font-size:large maxlength=2 required> </md-input-container> <md-input-container class=md-block> <label>Translated title</label> <input type=text ng-model=$ctrl.currentTranslation.name style=font-size:large required> </md-input-container> </div> <div class="md-actions gravitee-api-save-button" layout=row style=padding-top:32px ng-if=$ctrl.currentTranslation> <md-button permission permission-only="[\'environment-documentation-u\', \'api-documentation-u\']" type=button aria-label="Save translation" class="md-raised md-primary" ng-click=$ctrl.saveFolderTranslation() ng-disabled="!$ctrl.currentTranslation.configuration.lang || !$ctrl.currentTranslation.name"> Save translation </md-button> <md-button class=md-raised type=button ng-click=$ctrl.refreshCurrentFolder()> Reset </md-button> </div> </div> <div class=gv-form-content layout=column ng-if=!translateFolder> <md-table-container ng-if="$ctrl.pages.length > 0 || ($ctrl.systemFolders.length > 0 && $ctrl.rootDir==\'\') "> <table md-table class=gv-table-dense> <thead md-head> <tr md-row> <th md-column class=column-with-logo>Name</th> <th md-column width=48px></th> <th md-column width=48px></th> <th md-column width=48px></th> <th md-column width=76px></th> <th md-column width=1% nowrap=nowrap>Last Update</th> <th md-column width=48px></th> </tr> </thead> <tbody md-body> <tr md-row ng-if="!$ctrl.rootDir || $ctrl.rootDir == \'\'" ng-repeat="page in $ctrl.systemFolders"> <td md-cell> <md-icon md-svg-src="assets/logo_{{page.type | lowercase}}.svg" style=margin-right:12px></md-icon> <span> <a ng-click=$ctrl.openUrl(page)>{{page.name}}</a> </span> </td> <td md-cell width=48px></td> <td md-cell width=48px></td> <td md-cell width=48px></td> <td md-cell width=76px></td> <td md-cell width=1%></td> <td md-cell width=48px></td> </tr> <tr md-row ng-repeat="page in $ctrl.pages"> <td md-cell> <md-icon md-svg-src="assets/logo_{{page.type | lowercase}}.svg"></md-icon> <sub ng-if="\'LINK\' === page.type" class=icon-button-homepage> <ng-md-icon ng-if="\'external\' === page.configuration.resourceType" icon=open_in_new size=12 style=fill:#000></ng-md-icon> <ng-md-icon ng-if="\'page\' === page.configuration.resourceType" icon=insert_drive_file size=12 style=fill:#000></ng-md-icon> <ng-md-icon ng-if="\'category\' === page.configuration.resourceType" icon=view_comfy size=12 style=fill:#000></ng-md-icon> <md-tooltip>{{ page.configuration.resourceType }}</md-tooltip> </sub> <span style=margin-left:12px> <a ng-style="page.published?\'\':{\'font-style\': \'italic\', \'color\': \'grey\'}" ng-click=$ctrl.openUrl(page)> {{page.name}} </a> <sup ng-if=page.homepage class=icon-button-homepage> <ng-md-icon icon=home size=12 style=fill:#448aff></ng-md-icon> </sup> <sup ng-if="page.translations && (page.type !== \'LINK\' || (page.type === \'LINK\' && page.configuration && page.configuration.inherit && page.configuration.inherit === \'false\'))" class=icon-button-homepage> <ng-md-icon icon=language size=12 style=fill:#448aff> <md-tooltip>Translated</md-tooltip> </ng-md-icon> </sup> </span> </td> <td md-cell width=48px> <ng-md-icon icon=link ng-click=$ctrl.createShortCut(page) style=font-size:24px;height:24px ng-if="$ctrl.canCreateShortCut(page.id, page.type)" permission permission-only="[\'environment-documentation-u\', \'api-documentation-u\']"> <md-tooltip md-direction=top md-visible=false>Create a Link in ...</md-tooltip> </ng-md-icon> </td> <td md-cell width=48px> <ng-md-icon icon=archive ng-click=$ctrl.moveToFolder(page) style=font-size:24px;height:24px ng-if="page.type !== \'folder\'" permission permission-only="[\'environment-documentation-u\', \'api-documentation-u\']"> <md-tooltip md-direction=top md-visible=false>Move to ...</md-tooltip> </ng-md-icon> </td> <td md-cell width=48px> <ng-md-icon ng-if="!page.published && page.type !== \'LINK\'" icon=cloud_queue ng-click=$ctrl.togglePublish(page) style=font-size:24px;height:24px permission permission-only="[\'environment-documentation-u\', \'api-documentation-u\']"> <md-tooltip md-direction=top md-visible=false>Publish this page</md-tooltip> </ng-md-icon> <ng-md-icon ng-if="page.published && page.type !== \'LINK\'" icon=cloud_done ng-click=$ctrl.togglePublish(page) style=font-size:24px;height:24px permission permission-only="[\'environment-documentation-u\', \'api-documentation-u\']"> <md-tooltip md-direction=top md-visible=false>Unpublish this page</md-tooltip> </ng-md-icon> </td> <td md-cell width=76px nowrap=nowrap> <ng-md-icon ng-if=!$first icon=arrow_upwards ng-click=$ctrl.upward(page) permission permission-only="[\'environment-documentation-u\', \'api-documentation-u\']"> <md-tooltip md-direction=top md-visible=false>Move upward</md-tooltip> </ng-md-icon> <span ng-if=$first style=padding-right:28px></span> <ng-md-icon ng-if=!$last icon=arrow_downward ng-click=$ctrl.downward(page) permission permission-only="[\'environment-documentation-u\', \'api-documentation-u\']"> <md-tooltip md-direction=top md-visible=false>Move downward</md-tooltip> </ng-md-icon> </td> <td md-cell width=1% nowrap=nowrap>{{page.lastModificationDate | date:\'medium\'}}</td> <td md-cell width=48px> <ng-md-icon icon=delete ng-click=$ctrl.remove(page) style=font-size:24px;height:24px permission permission-only="[\'environment-documentation-u\', \'api-documentation-u\']"> <md-tooltip md-direction=top md-visible=false>Remove</md-tooltip> </ng-md-icon> </td> </tr> </tbody> </table> </md-table-container> <gravitee-empty-state ng-if="$ctrl.rootDir != \'\' && $ctrl.pages.length == 0" icon=insert_drive_file model=Page message="Documentation will appear here" sub-message="Start creating a page" create-mode=true></gravitee-empty-state> <md-fab-speed-dial md-direction="{{$ctrl.pages.length > 0 ? \'left\' : \'down\'}}" md-open=false ng-class="{\'md-fab-bottom-right md-fab-scrollable\' : $ctrl.pages.length > 0, \'gv-help-displayed\': $ctrl.$rootScope.helpDisplayed}" class=md-scale> <md-fab-trigger> <md-button aria-label=menu class="md-fab md-success" permission permission-only="[\'environment-documentation-u\', \'api-documentation-u\']"> <md-tooltip ng-if="$ctrl.pages.length > 0" md-direction=top md-visible=false>New page</md-tooltip> <ng-md-icon icon=add></ng-md-icon> </md-button> </md-fab-trigger> <md-fab-actions> <md-button ng-repeat="type in $ctrl.supportedTypes" class="md-fab md-raised md-mini" ng-click=$ctrl.newPage(type)> <md-tooltip md-direction="{{$ctrl.pages.length > 0 ? \'top\' : \'right\'}}">{{type}}</md-tooltip> <md-icon md-svg-src="assets/logo_{{type | lowercase}}.svg"></md-icon> </md-button> </md-fab-actions> </md-fab-speed-dial> </div> </div> </div> '},function(e,t,i){"use strict";t.__esModule=!0;var n=i(3),a={controller:function(){function e(){this.fetchersWithSvg=["github","gitlab","bitbucket"]}return e.prototype.type=function(){return this.pageType?this.pageType:this.page.type},e.prototype.logoAvailable=function(e){return n.includes(this.fetchersWithSvg,e)},e}(),template:i(977),bindings:{page:"<",pageType:"<",edit:"<",sidenav:"<",sidenavoffset:"<"}};t.default=a},function(e,t){e.exports=' <div layout=row> <div id=page-content layout-padding ng-switch=$ctrl.type() flex="{{ $ctrl.sidenav ? 75 : 100 }}"> <div class=gv-page-draft-banner ng-if="!$ctrl.edit && !$ctrl.page.published"> <ng-md-icon icon=warning class=gv-warning></ng-md-icon> This page is not published yet and will not be visible to other users </div> <md-button ng-if=$ctrl.page.metadata.edit_url type=button style="margin:25px 6px;float:right" target=_blank href={{$ctrl.page.metadata.edit_url}} aria-label=Edit> <md-icon ng-if="$ctrl.logoAvailable($ctrl.page.metadata.provider_name | lowercase)" md-svg-src="./assets/logo_{{$ctrl.page.metadata.provider_name | lowercase}}-fetcher.svg" aria-label="{{$ctrl.page.metadata.provider_name | lowercase}}"></md-icon> <ng-md-icon ng-if="!$ctrl.logoAvailable($ctrl.page.metadata.provider_name | lowercase)" icon=open_in_new style=fill:#212121></ng-md-icon> Edit on {{$ctrl.page.metadata.provider_name}} </md-button> <div ng-switch-when=RAML> <div class=gv-page-draft-banner> <ng-md-icon icon=warning class=gv-warning></ng-md-icon> The RAML format is no longer supported and will be completely removed in a future version </div> {{$ctrl.page.content}} </div> <gv-page-swagger page=$ctrl.page edit=$ctrl.edit ng-switch-when=SWAGGER></gv-page-swagger> <gv-page-editor-markdown-viewer page=$ctrl.page ng-switch-when=MARKDOWN></gv-page-editor-markdown-viewer> </div> <gv-page-sidenav ng-if=$ctrl.sidenav page=$ctrl.page offset=$ctrl.sidenavoffset flex=25 hide-xs></gv-page-sidenav> </div> '},function(e,t,i){"use strict";t.__esModule=!0;var n=i(171),a=i(3),o=i(259),r=function(){return{statePlugins:{spec:{wrapSelectors:{allowTryItOutFor:function(){return function(){return!1}}}}}}},s={template:i(981),bindings:{page:"<",edit:"<"},controller:["Constants","UserService","$state",function(e,t,i){var s=this;this.$onChanges=function(){s.pageId=void 0===s.page?i.params.pageId:s.page.id,i.params.apiId?s.url=e.baseURL+"apis/"+i.params.apiId+"/pages/"+s.pageId+"/content":s.url=e.baseURL+"portal/pages/"+s.pageId+"/content",s.tryItEnabled=function(){return!a.isNil(s.page.configuration)&&"true"===s.page.configuration.tryIt&&(t.isAuthenticated()||"true"===s.page.configuration.tryItAnonymous)};var l=[];s.tryItEnabled()||l.push(r);var c={};try{c=JSON.parse(s.page.content)}catch(e){c=n.safeLoad(s.page.content)}var d={dom_id:"#swagger-container",presets:[o.SwaggerUIBundle.presets.apis],layout:"BaseLayout",plugins:l,requestInterceptor:function(e){return e.loadSpec&&(e.credentials="include"),e},spec:c,oauth2RedirectUrl:window.location.origin+window.location.pathname+("/"!==window.location.pathname.substr(-1)?"/":"")+"swagger-oauth2-redirect.html"};a.isNil(s.page.configuration)||("true"===s.page.configuration.showURL&&(d.url=s.url,d.spec=void 0),d.docExpansion=a.isNil(s.page.configuration.docExpansion)?"none":s.page.configuration.docExpansion,d.displayOperationId=!a.isNil(s.page.configuration.displayOperationId)&&"true"===s.page.configuration.displayOperationId,d.filter=!a.isNil(s.page.configuration.enableFiltering)&&"true"===s.page.configuration.enableFiltering,d.showExtensions=!a.isNil(s.page.configuration.showExtensions)&&"true"===s.page.configuration.showExtensions,d.showCommonExtensions=!a.isNil(s.page.configuration.showCommonExtensions)&&"true"===s.page.configuration.showCommonExtensions,d.maxDisplayedTags=a.isNaN(Number(s.page.configuration.maxDisplayedTags))||"-1"===s.page.configuration.maxDisplayedTags?void 0:Number(s.page.configuration.maxDisplayedTags));var p=o.SwaggerUIBundle(a.merge(d,{onComplete:function(){p.initOAuth({clientId:"",scopeSeparator:" "})}}))}}]};t.default=s},,,function(e,t){e.exports=' <svg xmlns=http://www.w3.org/2000/svg xmlns:xlink=http://www.w3.org/1999/xlink style=position:absolute;width:0;height:0> <defs> <symbol viewBox="0 0 20 20" id=unlocked> <path d="M15.8 8H14V5.6C14 2.703 12.665 1 10 1 7.334 1 6 2.703 6 5.6V6h2v-.801C8 3.754 8.797 3 10 3c1.203 0 2 .754 2 2.199V8H4c-.553 0-1 .646-1 1.199V17c0 .549.428 1.139.951 1.307l1.197.387C5.672 18.861 6.55 19 7.1 19h5.8c.549 0 1.428-.139 1.951-.307l1.196-.387c.524-.167.953-.757.953-1.306V9.199C17 8.646 16.352 8 15.8 8z"></path> </symbol> <symbol viewBox="0 0 20 20" id=locked> <path d="M15.8 8H14V5.6C14 2.703 12.665 1 10 1 7.334 1 6 2.703 6 5.6V8H4c-.553 0-1 .646-1 1.199V17c0 .549.428 1.139.951 1.307l1.197.387C5.672 18.861 6.55 19 7.1 19h5.8c.549 0 1.428-.139 1.951-.307l1.196-.387c.524-.167.953-.757.953-1.306V9.199C17 8.646 16.352 8 15.8 8zM12 8H8V5.199C8 3.754 8.797 3 10 3c1.203 0 2 .754 2 2.199V8z"/> </symbol> <symbol viewBox="0 0 20 20" id=close> <path d="M14.348 14.849c-.469.469-1.229.469-1.697 0L10 11.819l-2.651 3.029c-.469.469-1.229.469-1.697 0-.469-.469-.469-1.229 0-1.697l2.758-3.15-2.759-3.152c-.469-.469-.469-1.228 0-1.697.469-.469 1.228-.469 1.697 0L10 8.183l2.651-3.031c.469-.469 1.228-.469 1.697 0 .469.469.469 1.229 0 1.697l-2.758 3.152 2.758 3.15c.469.469.469 1.229 0 1.698z"/> </symbol> <symbol viewBox="0 0 20 20" id=large-arrow> <path d="M13.25 10L6.109 2.58c-.268-.27-.268-.707 0-.979.268-.27.701-.27.969 0l7.83 7.908c.268.271.268.709 0 .979l-7.83 7.908c-.268.271-.701.27-.969 0-.268-.269-.268-.707 0-.979L13.25 10z"/> </symbol> <symbol viewBox="0 0 20 20" id=large-arrow-down> <path d="M17.418 6.109c.272-.268.709-.268.979 0s.271.701 0 .969l-7.908 7.83c-.27.268-.707.268-.979 0l-7.908-7.83c-.27-.268-.27-.701 0-.969.271-.268.709-.268.979 0L10 13.25l7.418-7.141z"/> </symbol> <symbol viewBox="0 0 24 24" id=jump-to> <path d="M19 7v4H5.83l3.58-3.59L8 6l-6 6 6 6 1.41-1.41L5.83 13H21V7z"/> </symbol> <symbol viewBox="0 0 24 24" id=expand> <path d="M10 18h4v-2h-4v2zM3 6v2h18V6H3zm3 7h12v-2H6v2z"/> </symbol> </defs> </svg> <div id=swagger-container></div>'},function(e,t,i){"use strict";t.__esModule=!0;var n={template:i(983),bindings:{page:"<"}};t.default=n},function(e,t){e.exports=" <div ng-if=$ctrl.page.content markdown-to-html=$ctrl.page.content class=markdown-page></div> "},function(e,t,i){"use strict";t.__esModule=!0;var n=i(185),a=i(165),o=i(26),r=function(){function e(e,t,i){this.$http=e,this.Constants=t,this.$state=i;t.portal.uploadMedia.maxSizeInOctet}return e.$inject=["$http","Constants","$state"],e.prototype.$onChanges=function(){var e,t=this,i=this.page&&this.page.content?this.page.content:"";e=this.$state.params.apiId?this.Constants.baseURL+"apis/"+this.$state.params.apiId+"/media/":this.Constants.baseURL+"portal/media/";var r=["heading","bold","italic","strike","divider","hr","quote","divider","ul","ol","task","indent","outdent","divider","table","link","divider","code","codeblock"],s=this.$http,l=this.Constants;this.maxSize;l.portal.uploadMedia.enabled&&r.splice(15,0,"image"),this.tuiEditor&&this.tuiEditor.remove(),this.tuiEditor=new n(Object.assign({el:document.querySelector("#editSection"),initialEditType:"markdown",previewStyle:"vertical",initialValue:i,useDefaultHTMLSanitizer:!1,height:"500px",usageStatistics:!1,exts:["table","scrollSync"],toolbarItems:r,events:{change:function(e){t.page.content=t.tuiEditor.getMarkdown()}},hooks:{addImageBlobHook:function(t,i){var n=new FormData;return n.append("file",t),t.size>l.portal.uploadMedia.maxSizeInOctet?(i("file uploaded to big, you're limited at "+l.portal.uploadMedia.maxSizeInOctet," bytes"),!1):(s.post(e+"upload",n,{headers:{"Content-Type":void 0}}).then((function(n){i(e+n.data,t.name)})),!1)}},plugins:[[a,{hljs:o.default}]]},this.options))},e}(),s={template:i(985),bindings:{page:"<",options:"<"},controller:r};t.default=s},function(e,t){e.exports=" <div> <div class=gv-page-draft-banner ng-if=!$ctrl.page.published> <ng-md-icon icon=warning class=gv-warning></ng-md-icon> This page is not published yet and will not be visible to other users </div> <div id=editSection></div> </div> "},function(e,t,i){"use strict";t.__esModule=!0;var n=i(987),a=i(165),o=i(26),r=i(3),s=i(218),l=function(){function e(e){var t=this;this.$location=e,this.findChildrenValue=function(e,i){if(void 0===i&&(i=0),!(i>5))return i++,e&&Array.isArray(e)&&e.length>0?"text"===e[0].type?e[0].value:t.findChildrenValue(e[0].children,i):void 0}}return e.$inject=["$location"],e.prototype.$onChanges=function(){for(var e,t=this.page&&this.page.content?this.page.content:"",i=s.parse(t),l=!1,c="",d=0;d<i.children.length;d++){var p=i.children[d];if(!("heading"!==p.type||p.depth<2||p.depth>2)){l&&(c+="</section>");var m=this.findChildrenValue(p.children);if(m)c+="<section id='"+m.replace(new RegExp(" ","g"),"").toLowerCase()+"'>";else c+="<section>";l=!0,i.children.splice(d,0,{type:"html",value:c}),d++,c=""}}l&&i.children.splice(i.children.length-1,0,{type:"html",value:c}),e=s.stringify(i),new n(Object.assign({el:document.querySelector("#viewerSection"),viewer:!0,height:"auto",initialValue:r.replace(r.replace(e,"(#","("+this.$location.absUrl()+"#"),'href="#','href="'+this.$location.absUrl()+"#"),useDefaultHTMLSanitizer:!1,plugins:[[a,{hljs:o.default}]]},this.options))},e}(),c={template:i(988),bindings:{page:"<",options:"<"},controller:l};t.default=c},,function(e,t){e.exports=" <div id=viewerSection></div> "},function(e,t,i){"use strict";t.__esModule=!0;var n=i(3),a=i(7),o=function(){function e(e,t,i){this.$timeout=e,this.$document=t,this.$window=i}return e.$inject=["$timeout","$document","$window"],e}(),r={restrict:"E",scope:{page:"=",offset:"<"},template:i(990),link:function(e,t,i,o){e.offset||(e.offset=60),o.$timeout((function(){a.element(document.getElementById("sidenav"));var t=document.getElementById("page-content"),i=void 0;if("SWAGGER"===e.page.type?i=t.getElementsByClassName("api-description")[0]:"MARKDOWN"===e.page.type&&(i=t),void 0!==i){i.querySelectorAll("h1");var r=i.querySelectorAll("h2");e.anchors=n.map(r,(function(e){return e.id=e.textContent.replace(new RegExp(" ","g"),"").toLowerCase(),{id:e.id,title:e.textContent,elt:e}})),e.scrollTo=function(e){var t=e;o.$document.scrollToElementAnimated(t,54).catch((function(){}))}}}),200)},controller:o};t.default=r},function(e,t){e.exports=' <div id=sidenav class=sidenav-fixed layout-padding> <ul> <li class=sidenav_item ng-repeat="anchor in anchors" href=#{{::anchor.id}} ng-click=scrollTo(anchor.elt) offset={{::offset}} du-smooth-scroll du-scrollspy> <span>{{::anchor.title}}</span> </li> </ul> </div> '},function(e,t,i){"use strict";t.__esModule=!0;var n=i(15),a=i(3),o={bindings:{resolvedFetchers:"<",folders:"<",systemFolders:"<",pageResources:"<",categoryResources:"<"},template:i(992),controller:["NotificationService","DocumentationService","$state","$scope",function(e,t,i,o){var r=this;this.apiId=i.params.apiId,this.page={name:"",type:i.params.type,parentId:i.params.parent},o.getContentMode="inline",this.codeMirrorOptions={lineWrapping:!0,lineNumbers:!0,allowDropFileTypes:!0,autoCloseTags:!0,mode:"javascript"},this.$onInit=function(){r.foldersById=a.keyBy(r.folders,"id"),r.systemFoldersById=a.keyBy(r.systemFolders,"id"),r.pageList=r.buildPageList(r.pageResources),r.fetchers=r.resolvedFetchers,t.supportedTypes(r.getFolderSituation(r.page.parentId)).indexOf(r.page.type)<0&&i.go("management.settings.documentation",{parent:i.params.parent}),r.emptyFetcher={type:"object",id:"empty",properties:{"":{}}},o.fetcherJsonSchema=r.emptyFetcher,r.fetcherJsonSchemaForm=["*"]},this.buildPageList=function(e){var t=a.filter(e,(function(e){return"MARKDOWN"===e.type||"SWAGGER"===e.type||"FOLDER"===e.type&&r.getFolderSituation(e.id)!==n.FolderSituation.FOLDER_IN_SYSTEM_FOLDER})).map((function(e){return{id:e.id,name:e.name,type:e.type,fullPath:r.getFolderPath(e.parentId)}})).sort((function(e,t){var i=0;return e.fullPath>t.fullPath?i=1:e.fullPath<t.fullPath&&(i=-1),i}));return t.unshift({id:"root",name:"",type:"FOLDER",fullPath:""}),t},this.getFolderSituation=function(e){if(!e)return n.FolderSituation.ROOT;if(r.systemFoldersById[e])return n.SystemFolderName.TOPFOOTER===r.systemFoldersById[e].name?n.FolderSituation.SYSTEM_FOLDER_WITH_FOLDERS:n.FolderSituation.SYSTEM_FOLDER;if(r.foldersById[e]){var t=r.foldersById[e].parentId;return r.systemFoldersById[t]?n.FolderSituation.FOLDER_IN_SYSTEM_FOLDER:n.FolderSituation.FOLDER_IN_FOLDER}console.debug("impossible to determine folder situation : "+e)},this.getFolder=function(e){if(e){var t=r.foldersById[e];return t||(t=r.systemFoldersById[e]),t}},this.getFolderPath=function(e){var t=r.getFolder(e);return t?r.getFolderPath(t.parentId)+"/"+t.name:""},this.configureFetcher=function(e){r.page.source||(r.page.source={}),r.page.source={type:e.id,configuration:{}},o.fetcherJsonSchema=JSON.parse(e.schema)},this.checkIfFolder=function(){if(r.page.content)if("root"===r.page.content)r.page.configuration.isFolder=!0,r.page.configuration.inherit="false";else{var e=r.getFolder(r.page.content);r.page.configuration.isFolder=!!e}},this.onChangeLinkType=function(){delete r.page.content,delete r.page.configuration.isFolder,"external"===r.page.configuration.resourceType||r.page.configuration.inherit||(r.page.configuration.inherit="true")},this.save=function(){t.create(r.page,r.apiId).then((function(t){var i=t.data;e.show("'"+i.name+"' has been created"),"FOLDER"===i.type?r.gotoParent():r.gotoEdit(i)}))},this.changeContentMode=function(e){"fetcher"===e?r.page.source={configuration:{}}:delete r.page.source},this.cancel=function(){r.gotoParent()},this.gotoParent=function(){r.apiId?i.go("management.apis.detail.portal.documentation",{apiId:r.apiId,parent:i.params.parent}):i.go("management.settings.documentation",{parent:i.params.parent})},this.gotoEdit=function(e){r.apiId?i.go("management.apis.detail.portal.editdocumentation",{apiId:r.apiId,pageId:e.id,type:e.type}):i.go("management.settings.editdocumentation",{pageId:e.id,type:e.type})},this.updateLinkName=function(e){r.page.name&&""!==r.page.name&&"true"!==r.page.configuration.inherit&&""!==e||(r.page.name=e)}}]};t.default=o},function(e,t){e.exports=' <div class="gv-forms gv-forms-fluid" layout=column> <div> <h1 ng-if="\'FOLDER\' !== $ctrl.page.type && \'LINK\' !== $ctrl.page.type">New Page</h1> <h1 ng-if="\'FOLDER\' === $ctrl.page.type">New Folder</h1> <h1 ng-if="\'LINK\' === $ctrl.page.type">New Link</h1> <a ng-click=$ctrl.cancel()>Back to Documentation</a> </div> <div class=gv-form ng-if="\'FOLDER\' === $ctrl.page.type"> <h2></h2> <div class=gv-form-content layout=column> <form name=$ctrl.formNewFolder ng-submit=$ctrl.save() novalidate> <md-input-container class=md-block flex-gt-xs> <label>Name</label> <input ng-model=$ctrl.page.name required> </md-input-container> <div class="md-actions gravitee-api-save-button" layout=row> <md-button class="md-raised md-primary" type=submit ng-disabled="$ctrl.formNewFolder.$invalid || $ctrl.formNewFolder.$pristine"> Save </md-button> </div> </form> </div> </div> <div class=gv-form ng-if="\'LINK\' === $ctrl.page.type"> <h2></h2> <div class=gv-form-content layout=column> <form name=$ctrl.formNewLink ng-submit=$ctrl.save() novalidate> <md-input-container class=md-block> <label>Type of link</label> <md-select ng-model=$ctrl.page.configuration.resourceType required ng-change=$ctrl.onChangeLinkType()> <md-option ng-value="\'external\'">External link</md-option> <md-option ng-value="\'page\'">Link to an existing documentation page</md-option> <md-option ng-value="\'category\'">Link to a category</md-option> </md-select> </md-input-container> <div ng-if="\'external\' === $ctrl.page.configuration.resourceType"> <md-input-container class=md-block flex-gt-xs> <label>Name</label> <input ng-model=$ctrl.page.name required> </md-input-container> <md-input-container class=md-block flex-gt-xs> <label>URL</label> <input ng-model=$ctrl.page.content required> </md-input-container> </div> <div ng-if="\'category\' === $ctrl.page.configuration.resourceType"> <md-input-container ng-if="\'category\' === $ctrl.page.configuration.resourceType" class=md-block flex-gt-xs> <label>Target</label> <md-select ng-model=$ctrl.page.content required> <md-option ng-repeat="resource in $ctrl.categoryResources" ng-value=resource.key ng-click=$ctrl.updateLinkName(resource.name)> {{ resource.name }} </md-option> </md-select> </md-input-container> <md-switch ng-model=$ctrl.page.configuration.inherit ng-true-value="\'true\'" ng-false-value="\'false\'" aria-label="Inherit from related category"> Inherit name from category </md-switch> <div class=hint> <div ng-if="$ctrl.page.configuration.inherit === \'false\'">Switch on to inherit name from category.</div> <div ng-if="$ctrl.page.configuration.inherit === \'true\'">Switch off to be able to modify the name of the link.</div> </div> <md-input-container class=md-block ng-if="$ctrl.page.configuration.inherit === \'false\'" flex-gt-xs> <label>Name</label> <input ng-model=$ctrl.page.name> </md-input-container> </div> <div ng-if="\'page\' === $ctrl.page.configuration.resourceType"> <md-input-container ng-if="\'page\' === $ctrl.page.configuration.resourceType" class=md-block flex-gt-xs> <label>Target</label> <md-select ng-model=$ctrl.page.content required ng-change=$ctrl.checkIfFolder()> <md-option ng-repeat="resource in $ctrl.pageList" ng-value=resource.id ng-click=$ctrl.updateLinkName(resource.name)> <md-icon md-svg-src="assets/logo_{{resource.type | lowercase}}.svg"></md-icon> <span style=font-style:italic;opacity:.5>{{ resource.fullPath }}</span>/{{ resource.name }} </md-option> </md-select> </md-input-container> <div ng-if="$ctrl.page.content && $ctrl.page.content !== \'root\'"> <md-switch ng-model=$ctrl.page.configuration.inherit ng-true-value="\'true\'" ng-false-value="\'false\'" aria-label="Inherit from related page"> Inherit name and translations from page </md-switch> <div class=hint> <div ng-if="$ctrl.page.configuration.inherit === \'false\'">Switch on to inherit name and translations from page.</div> <div ng-if="$ctrl.page.configuration.inherit === \'true\'">Switch off to be able to modify the name of the link and add custom translations.</div> </div> <md-input-container class=md-block ng-if="$ctrl.page.configuration.inherit === \'false\'" flex-gt-xs> <label>Name</label> <input ng-model=$ctrl.page.name> </md-input-container> </div> <div ng-if="$ctrl.page.content && $ctrl.page.content === \'root\'"> <md-input-container class=md-block flex-gt-xs> <label>Name</label> <input ng-model=$ctrl.page.name required> </md-input-container> </div> </div> <div class="md-actions gravitee-api-save-button" layout=row> <md-button class="md-raised md-primary" type=submit ng-disabled="$ctrl.formNewLink.$invalid || $ctrl.formNewLink.$pristine"> Save </md-button> </div> </form> </div> </div> <div class=gv-form ng-if="\'FOLDER\' !== $ctrl.page.type && \'LINK\' !== $ctrl.page.type"> <h2></h2> <div class=gv-form-content layout=column> <div layout=row> <md-icon md-svg-src="assets/logo_{{$ctrl.page.type | lowercase}}.svg" style=margin-right:8px></md-icon> <md-input-container class=md-block flex> <label>Name</label> <input ng-model=$ctrl.page.name required> </md-input-container> </div> <md-input-container class=md-block> <md-checkbox ng-model=$ctrl.page.homepage aria-label="set as homepage" class="md-warn md-align-top-left" flex> Set as homepage </md-checkbox> </md-input-container> <md-input-container class=md-block> <md-checkbox ng-model=$ctrl.page.published aria-label=Published class=md-align-top-left flex> Publish this page </md-checkbox> </md-input-container> <h3>How to get the content ?</h3> <md-radio-group ng-model=getContentMode ng-change=$ctrl.changeContentMode(getContentMode)> <md-radio-button value=inline class=md-primary selected=selected>Fill the content inline</md-radio-button> <md-radio-button value=import>Import from file</md-radio-button> <md-radio-button value=fetcher>Import from an external source (gitlab, bitbucket, ...)</md-radio-button> </md-radio-group> <div ng-if="\'inline\' === getContentMode && \'SWAGGER\' === $ctrl.page.type" style=display:inline-block;width:100%> <h3>Type your documentation here:</h3> <md-input-container class=md-block> <textarea ui-codemirror ui-codemirror-opts=$ctrl.codeMirrorOptions ng-model=$ctrl.page.content aria-label="page content" rows=20 style=overflow-y:scroll ng-disabled=pageCtrl.useFetcher md-autofocus></textarea> </md-input-container> </div> <div ng-if="\'inline\' === getContentMode && \'MARKDOWN\' === $ctrl.page.type" style=display:inline-block;width:100%> <h3>Type your documentation here:</h3> <md-input-container class=md-block> <gv-page-editor-markdown page=$ctrl.page></gv-page-editor-markdown> </md-input-container> </div> <div ng-if="\'import\' === getContentMode" style=display:inline-block> <h3>Select a file to import:</h3> <input type=file filecontent=$ctrl.page.content filename=$ctrl.page.name> </div> <div ng-if="\'fetcher\' === getContentMode" style=display:inline-block> <h3>Select your source:</h3> <div layout=row> <md-button ng-repeat="fetcher in $ctrl.fetchers" ng-click=$ctrl.configureFetcher(fetcher) ng-class="{\'md-raised\': fetcher.id === $ctrl.page.source.type}" aria-label=fetcher> <md-icon md-svg-icon="assets/logo_{{fetcher.id | lowercase}}.svg" style=width:80px;height:40px></md-icon> </md-button> </div> <div layout=column> <form name=PageConfigFetcherForm sf-schema=fetcherJsonSchema sf-form=$ctrl.fetcherJsonSchemaForm sf-model=$ctrl.page.source.configuration></form> </div> </div> <div class="md-actions gravitee-api-save-button" layout=row style=padding-top:32px> <md-button class="md-raised md-primary" type=submit ng-click=$ctrl.save() ng-disabled=!$ctrl.page.name> Save </md-button> </div> </div> </div> </div> '},function(e,t,i){"use strict";t.__esModule=!0;var n=i(15),a=i(3),o={bindings:{resolvedPage:"<",resolvedGroups:"<",resolvedFetchers:"<",folders:"<",systemFolders:"<",pageResources:"<",categoryResources:"<"},template:i(994),controller:["NotificationService","DocumentationService","UserService","$mdDialog","$state","$scope",function(e,t,o,r,s,l){var c=this;this.apiId=s.params.apiId,this.tabs=["content","translations","config","fetchers","access-control"];var d=this.tabs.indexOf(s.params.tab);this.selectedTab=d>-1?d:0,this.currentTab=this.tabs[this.selectedTab],l.rename=!1,this.$onInit=function(){c.page=c.resolvedPage,c.groups=c.resolvedGroups,c.fetchers=c.resolvedFetchers,c.foldersById=a.keyBy(c.folders,"id"),c.systemFoldersById=a.keyBy(c.systemFolders,"id"),c.pageList=c.buildPageList(c.pageResources),t.supportedTypes(c.getFolderSituation(c.page.parentId)).indexOf(c.page.type)<0&&s.go("management.settings.documentation"),c.emptyFetcher={type:"object",id:"empty",properties:{"":{}}},l.fetcherJsonSchema=c.emptyFetcher,c.fetcherJsonSchemaForm=["*"],c.initEditor(),c.codeMirrorOptions={lineWrapping:!0,lineNumbers:!0,allowDropFileTypes:!0,autoCloseTags:!0,readOnly:l.editorReadonly,mode:"javascript"},c.apiId?c.canUpdate=o.isUserHasPermissions(["api-documentation-u"]):c.canUpdate=o.isUserHasPermissions(["environment-documentation-u"]),"SWAGGER"===c.page.type&&(c.page.configuration||(c.page.configuration={}),c.page.configuration.viewer||(c.page.configuration.viewer="Swagger"))},this.selectTranslation=function(e){c.currentTranslation=e,c.currentTranslation.configuration.inheritContent||(c.currentTranslation.configuration.inheritContent="true")},this.addTranslation=function(){c.currentTranslation={type:"TRANSLATION",parentId:c.page.id,configuration:{}},"MARKDOWN"!==c.page.type&&"SWAGGER"!==c.page.type||(c.currentTranslation.configuration.inheritContent="true")},this.saveTranslation=function(){!c.page.configuration||"page"!==c.page.configuration.resourceType&&"category"!==c.page.configuration.resourceType||(c.currentTranslation.content=c.page.content),c.currentTranslation.id?t.update(c.currentTranslation,c.apiId).then((function(t){e.show("'"+c.currentTranslation.name+"' has been updated"),c.refreshTranslations()})):t.create(c.currentTranslation,c.apiId).then((function(t){var i=t.data;e.show("'"+i.name+"' has been created"),c.refreshTranslations()}))},this.remove=function(n){var a=c;r.show({controller:"DialogConfirmController",controllerAs:"ctrl",template:i(5),clickOutsideToClose:!0,locals:{title:'Would you like to remove "'+n.name+'" ?',confirmButton:"Remove"}}).then((function(i){i&&t.remove(n.id,a.apiId).then((function(){e.show("Translation "+n.name+" has been removed"),a.refreshTranslations()}))}))},this.refreshTranslations=function(){t.get(c.apiId,c.page.id).then((function(e){return c.page.translations=e.data.translations})),delete c.currentTranslation},this.getFolderSituation=function(e){if(!e)return n.FolderSituation.ROOT;if(c.systemFoldersById[e])return n.SystemFolderName.TOPFOOTER===c.systemFoldersById[e].name?n.FolderSituation.SYSTEM_FOLDER_WITH_FOLDERS:n.FolderSituation.SYSTEM_FOLDER;if(c.foldersById[e]){var t=c.foldersById[e].parentId;return c.systemFoldersById[t]?n.FolderSituation.FOLDER_IN_SYSTEM_FOLDER:n.FolderSituation.FOLDER_IN_FOLDER}console.debug("impossible to determine folder situation : "+e)},this.buildPageList=function(e){var t=a.filter(e,(function(e){return"MARKDOWN"===e.type||"SWAGGER"===e.type||"FOLDER"===e.type&&c.getFolderSituation(e.id)!==n.FolderSituation.FOLDER_IN_SYSTEM_FOLDER})).map((function(e){return{id:e.id,name:e.name,type:e.type,fullPath:c.getFolderPath(e.parentId)}})).sort((function(e,t){var i=0;return e.fullPath>t.fullPath?i=1:e.fullPath<t.fullPath&&(i=-1),i}));return t.unshift({id:"root",name:"",type:"FOLDER",fullPath:""}),t},this.getFolder=function(e){if(e){var t=c.foldersById[e];return t||(t=c.systemFoldersById[e]),t}},this.getFolderPath=function(e){var t=c.getFolder(e);return t?c.getFolderPath(t.parentId)+"/"+t.name:""},this.initEditor=function(){l.editorReadonly=!1,a.isNil(c.page.source)||a.isNil(c.page.source.type)||a.forEach(c.fetchers,(function(e){e.id===c.page.source.type&&(l.fetcherJsonSchema=JSON.parse(e.schema),l.editorReadonly=!0)}))},this.configureFetcher=function(e){c.page.source||(c.page.source={}),c.page.source={type:e.id,configuration:{}},l.fetcherJsonSchema=JSON.parse(e.schema)},this.removeFetcher=function(){c.page.source=null,l.fetcherJsonSchema=c.emptyFetcher},this.checkIfFolder=function(){if(c.page.content)if("root"===c.page.content)c.page.configuration.isFolder=!0,c.page.configuration.inherit="false";else{var e=c.getFolder(c.page.content);c.page.configuration.isFolder=!!e}},this.onChangeLinkType=function(){delete c.page.content,delete c.page.configuration.isFolder,"external"===c.page.configuration.resourceType?(delete c.page.configuration.inherit,c.page.translations&&a.forEach(c.page.translations,(function(e){return delete e.content}))):c.page.configuration.inherit||(c.page.configuration.inherit="true")},this.save=function(){t.update(c.page,c.apiId).then((function(t){e.show("'"+c.page.name+"' has been updated"),c.apiId?s.go("management.apis.detail.portal.editdocumentation",{pageId:c.page.id,tab:c.currentTab},{reload:!0}):s.go("management.settings.editdocumentation",{pageId:c.page.id,type:c.page.type,tab:c.currentTab},{reload:!0})}))},this.changeContentMode=function(e){"fetcher"===e?c.page.source={configuration:{}}:delete c.page.source},this.cancel=function(){c.apiId?s.go("management.apis.detail.portal.documentation",{apiId:c.apiId,parent:c.page.parentId}):s.go("management.settings.documentation",{parent:c.page.parentId})},this.reset=function(){c.apiId?s.go("management.apis.detail.portal.editdocumentation",{pageId:c.page.id},{reload:!0}):s.go("management.settings.editdocumentation",{pageId:c.page.id,type:c.page.type},{reload:!0})},this.toggleRename=function(){l.rename=!l.rename,l.rename&&(c.newName=c.page.name)},this.rename=function(){t.partialUpdate("name",c.newName,c.page.id,c.apiId).then((function(){e.show("'"+c.page.name+"' has been renamed to '"+c.newName+"'"),c.page.name=c.newName,c.toggleRename()}))},this.goToExternalSource=function(){c.selectedTab=2},this.selectTab=function(e){c.changeTab(e),c.apiId?s.transitionTo("management.apis.detail.portal.editdocumentation",{apiId:c.apiId,type:c.page.type,pageId:c.page.id,tab:c.currentTab},{notify:!1}):s.transitionTo("management.settings.editdocumentation",{pageId:c.page.id,type:c.page.type,tab:c.currentTab},{notify:!1})},this.changeTab=function(e){c.selectedTab=e,c.currentTab=c.tabs[c.selectedTab]},this.fetch=function(){t.fetch(c.page.id,c.apiId).then((function(){e.show("'"+c.page.name+"' has been successfully fetched"),c.reset()}))},this.toggleEntrypointAsServer=function(){"false"===c.page.configuration.entrypointsAsServers&&(c.page.configuration.entrypointAsBasePath=c.page.configuration.entrypointsAsServers)},this.updateLinkName=function(e){"true"===c.page.configuration.inherit&&""!==e&&(c.page.name=e)},this.updateLinkNameWithPageId=function(e){var t=a.find(c.pageList,(function(t){return t.id===e}));t&&c.updateLinkName(t.name)},this.updateLinkNameWithCategoryId=function(e){var t=a.find(c.categoryResources,(function(t){return t.id===e}));t&&c.updateLinkName(t.name)},this.updateTranslationContent=function(){"false"!==c.currentTranslation.configuration.inheritContent||c.currentTranslation.content&&""!==c.currentTranslation.content||(c.currentTranslation.content=c.page.content),"true"===c.currentTranslation.configuration.inheritContent&&delete c.currentTranslation.content}}]};t.default=o},function(e,t){e.exports=' <div class="gv-forms gv-forms-fluid" layout=column> <div class=gv-forms-header layout=row layout-align="space-between end" ng-if=!rename> <div> <md-icon md-svg-src="assets/logo_{{$ctrl.page.type | lowercase}}.svg" style="margin:0 8px 12px 0"></md-icon> <h1>{{$ctrl.page.name}}</h1> <sup ng-if="(\'LINK\' === $ctrl.page.type && $ctrl.page.configuration.inherit && $ctrl.page.configuration.inherit === \'true\')"> <ng-md-icon icon=lock size=12 style=fill:#000> <md-tooltip>Inherited</md-tooltip> </ng-md-icon> </sup> <a ng-click=$ctrl.cancel()>Back to Documentation</a> </div> <div ng-if=$ctrl.canUpdate> <md-button class="md-raised md-primary" type=button ng-if=$ctrl.page.source ng-click=$ctrl.fetch()> Fetch </md-button> <md-button type=button class="md-raised md-primary" ng-click=$ctrl.toggleRename() aria-label=Rename ng-if="\'LINK\' !== $ctrl.page.type || (\'LINK\' === $ctrl.page.type && (!$ctrl.page.configuration.inherit || $ctrl.page.configuration.inherit === \'false\')) "> Rename </md-button> <md-button ng-if=$ctrl.page.metadata.edit_url type=button style="padding:0 6px" target=_blank href={{$ctrl.page.metadata.edit_url}} aria-label=Edit> <md-icon md-svg-icon="assets/logo_{{$ctrl.page.metadata.provider_name | lowercase}}-fetcher.svg" style=height:24px;padding:0;vertical-align:inherit></md-icon> Edit on {{$ctrl.page.metadata.provider_name}} </md-button> </div> </div> <div class=gv-forms-header layout=row layout-align="space-between end" ng-if=rename> <div> <md-icon md-svg-src="assets/logo_{{$ctrl.page.type | lowercase}}.svg" style="margin:0 8px 12px 0"></md-icon> <input type=text ng-model=$ctrl.newName autofocus> </div> <div> <md-button type=button class="md-raised md-primary" ng-click=$ctrl.rename() aria-label=Edit> Save</md-button> <md-button class=md-raised type=button ng-click=$ctrl.toggleRename()> Cancel </md-button> </div> </div> <div class=gv-form ng-if="\'LINK\' === $ctrl.page.type"> <h2></h2> <div class=gv-form-content layout=column> <md-tabs md-dynamic-height md-selected=$ctrl.selectedTab> <md-tab md-on-select=$ctrl.changeTab(0)> <md-tab-label>Page</md-tab-label> <md-tab-body> <form name=$ctrl.formNewLink ng-submit=$ctrl.save() novalidate> <md-input-container class=md-block> <label>Type of link</label> <md-select ng-model=$ctrl.page.configuration.resourceType required ng-change=$ctrl.onChangeLinkType()> <md-option ng-value="\'external\'">External link</md-option> <md-option ng-value="\'page\'">Link to an existing documentation page</md-option> <md-option ng-value="\'category\'">Link to a category</md-option> </md-select> </md-input-container> <div ng-if="\'external\' === $ctrl.page.configuration.resourceType"> <md-input-container class=md-block flex-gt-xs> <label>URL</label> <input ng-model=$ctrl.page.content required> </md-input-container> </div> <div ng-if="\'category\' === $ctrl.page.configuration.resourceType"> <md-input-container ng-if="\'category\' === $ctrl.page.configuration.resourceType" class=md-block flex-gt-xs> <label>Target</label> <md-select ng-model=$ctrl.page.content required> <md-option ng-repeat="resource in $ctrl.categoryResources" ng-value=resource.key ng-click=$ctrl.updateLinkName(resource.name)>{{ resource.name }}</md-option> </md-select> </md-input-container> <div ng-if=$ctrl.page.content> <md-switch ng-model=$ctrl.page.configuration.inherit ng-true-value="\'true\'" ng-false-value="\'false\'" aria-label="Inherit from related category" ng-change=$ctrl.updateLinkNameWithCategoryId($ctrl.page.content)> Inherit name from category </md-switch> <div class=hint> <div ng-if="$ctrl.page.configuration.inherit === \'false\'">Switch on to inherit name from category.</div> <div ng-if="$ctrl.page.configuration.inherit === \'true\'">Switch off to be able to modify the name of the link.</div> </div> </div> </div> <div ng-if="\'page\' === $ctrl.page.configuration.resourceType"> <md-input-container ng-if="\'page\' === $ctrl.page.configuration.resourceType" class=md-block flex-gt-xs> <label>Target</label> <md-select ng-model=$ctrl.page.content required ng-change=$ctrl.checkIfFolder()> <md-option ng-repeat="resource in $ctrl.pageList" ng-value=resource.id ng-click=$ctrl.updateLinkName(resource.name)> <md-icon md-svg-src="assets/logo_{{resource.type | lowercase}}.svg"></md-icon> <span style=font-style:italic;opacity:.5>{{ resource.fullPath }}</span>/{{ resource.name }} </md-option> </md-select> </md-input-container> <div ng-if="$ctrl.page.content && $ctrl.page.content !== \'root\'"> <md-switch ng-model=$ctrl.page.configuration.inherit ng-true-value="\'true\'" ng-false-value="\'false\'" aria-label="Inherit from related page" ng-change=$ctrl.updateLinkNameWithPageId($ctrl.page.content)> Inherit name and translations from page </md-switch> <div class=hint> <div ng-if="$ctrl.page.configuration.inherit === \'false\'">Switch on to inherit name and translations from page.</div> <div ng-if="$ctrl.page.configuration.inherit === \'true\'">Switch off to be able to modify the name of the link and add custom translations.</div> </div> </div> </div> <div class="md-actions gravitee-api-save-button" layout=row> <md-button class="md-raised md-primary" type=submit ng-disabled="$ctrl.formNewLink.$invalid || $ctrl.formNewLink.$pristine"> Save </md-button> </div> </form> </md-tab-body> </md-tab> <md-tab md-on-select=$ctrl.changeTab(1) ng-if="$ctrl.canUpdate && (!$ctrl.page.configuration.inherit || $ctrl.page.configuration.inherit === \'false\')"> <md-tab-label> Translations </md-tab-label> <md-tab-body> <md-table-container> <table md-table class=gv-table-dense> <thead md-head> <tr md-row> <th md-column width=48px>Language</th> <th md-column>Name</th> <th md-column ng-if="$ctrl.page.configuration.resourceType === \'external\'">URL</th> <th md-column width=1% nowrap=nowrap>Last Update</th> <th md-column width=48px></th> </tr> </thead> <tbody md-body> <tr ng-if="!$ctrl.page.translations.length || $ctrl.page.translations.length <= 0"> <td md-cell colspan=5><span>No translation available</span></td> </tr> <tr md-row ng-repeat="translation in $ctrl.page.translations"> <td md-cell width=48px> <span> <a ng-click=$ctrl.selectTranslation(translation)>{{translation.configuration.lang}}</a> </span> </td> <td md-cell>{{translation.name}}</td> <td md-cell ng-if="$ctrl.page.configuration.resourceType === \'external\'">{{translation.content}}</td> <td md-cell width=1% nowrap=nowrap>{{translation.lastModificationDate | date:\'medium\'}}</td> <td md-cell width=48px> <ng-md-icon icon=delete ng-click=$ctrl.remove(translation) style=font-size:24px;height:24px permission permission-only="[\'environment-documentation-u\', \'api-documentation-u\']"> <md-tooltip md-direction=top md-visible=false>Remove</md-tooltip> </ng-md-icon> </td> </tr> </tbody> </table> </md-table-container> <div style=text-align:right> <md-button permission permission-only="[\'environment-documentation-u\', \'api-documentation-u\']" type=button aria-label="Add translation" class="md-raised md-primary" ng-click=$ctrl.addTranslation()> Add a translation </md-button> </div> <div class=gv-form-content ng-if="$ctrl.currentTab === \'translations\' && $ctrl.currentTranslation"> <md-input-container class=md-block> <label>Language (max. 2 characters)</label> <input ng-model=$ctrl.currentTranslation.configuration.lang style=font-size:large maxlength=2 required> </md-input-container> <md-input-container class=md-block> <label>Translated title</label> <input type=text ng-model=$ctrl.currentTranslation.name style=font-size:large required> </md-input-container> <md-input-container class=md-block ng-if="$ctrl.page.configuration.resourceType === \'external\'"> <label>URL</label> <input type=text ng-model=$ctrl.currentTranslation.content style=font-size:large required> </md-input-container> </div> </md-tab-body> </md-tab> </md-tabs> <div class="md-actions gravitee-api-save-button" layout=row style=padding-top:32px ng-if="$ctrl.canUpdate && $ctrl.currentTab === \'translations\' && $ctrl.currentTranslation"> <md-button permission permission-only="[\'environment-documentation-u\', \'api-documentation-u\']" type=button aria-label="Save translation" class="md-raised md-primary" ng-click=$ctrl.saveTranslation() ng-disabled="!$ctrl.currentTranslation.configuration.lang || !$ctrl.currentTranslation.name"> Save translation </md-button> <md-button class=md-raised type=button ng-click=$ctrl.reset()> Reset </md-button> </div> </div> </div> <div class=gv-form ng-if="\'FOLDER\' !== $ctrl.page.type && \'LINK\' !== $ctrl.page.type"> <h2></h2> <div class=gv-form-content layout=column> <div ng-if="editorReadonly && $ctrl.canUpdate" class=gv-page-draft-banner> <ng-md-icon icon=warning class=gv-warning></ng-md-icon> Page\'s content is retrieved from an external source. If you want to edit content manually, <a ng-click=$ctrl.goToExternalSource()>please change the configuration</a>. </div> <md-tabs md-dynamic-height md-selected=$ctrl.selectedTab> <md-tab md-on-select=$ctrl.selectTab(0)> <md-tab-label>Page</md-tab-label> <md-tab-body> <div ng-if="$ctrl.currentTab === \'content\'"> <div ng-if="\'SWAGGER\' === $ctrl.page.type" style=display:inline-block;width:100%> <div layout=row style=max-height:900px;overflow:auto> <md-input-container class=md-block flex=50 ng-if=$ctrl.canUpdate> <textarea ui-codemirror ui-codemirror-opts=$ctrl.codeMirrorOptions ng-model=$ctrl.page.content aria-label="page content" rows=5 style=overflow-y:scroll ng-disabled=$ctrl.page.source md-autofocus></textarea> </md-input-container> <gv-page flex page=$ctrl.page edit=$ctrl.canUpdate></gv-page> </div> </div> <div ng-if="\'MARKDOWN\' === $ctrl.page.type" style=display:inline-block;width:100%> <md-input-container class=md-block> <gv-page-editor-markdown ng-if=$ctrl.canUpdate page=$ctrl.page></gv-page-editor-markdown> <gv-page-markdown ng-if=!$ctrl.canUpdate page=$ctrl.page></gv-page-markdown> </md-input-container> </div> <div style=display:inline-block ng-if=$ctrl.canUpdate> <h4>Select a file to import:</h4> <input type=file filecontent=$ctrl.page.content filename=pageContentFile.name> </div> </div> </md-tab-body> </md-tab> <md-tab md-on-select=$ctrl.selectTab(1) ng-if=$ctrl.canUpdate> <md-tab-label>Translations</md-tab-label> <md-tab-body> <md-table-container> <table md-table class=gv-table-dense> <thead md-head> <tr md-row> <th md-column width=48px>Language</th> <th md-column>Name</th> <th md-column width=1% nowrap=nowrap>Last Update</th> <th md-column width=48px></th> </tr> </thead> <tbody md-body> <tr md-row ng-if="!$ctrl.page.translations.length || $ctrl.page.translations.length <= 0"> <td md-cell colspan=5><span>No translation available</span></td> </tr> <tr md-row ng-repeat="translation in $ctrl.page.translations"> <td md-cell width=48px> <span> <a ng-click=$ctrl.selectTranslation(translation)>{{translation.configuration.lang}}</a> </span> </td> <td md-cell>{{translation.name}}</td> <td md-cell width=1% nowrap=nowrap>{{translation.lastModificationDate | date:\'medium\'}}</td> <td md-cell width=48px> <ng-md-icon icon=delete ng-click=$ctrl.remove(translation) style=font-size:24px;height:24px permission permission-only="[\'environment-documentation-u\', \'api-documentation-u\']"> <md-tooltip md-direction=top md-visible=false>Remove</md-tooltip> </ng-md-icon> </td> </tr> </tbody> </table> </md-table-container> <div style=text-align:right> <md-button permission permission-only="[\'environment-documentation-u\', \'api-documentation-u\']" type=button aria-label="Add translation" class="md-raised md-primary" ng-click=$ctrl.addTranslation()> Add a translation </md-button> </div> <div class=gv-form-content ng-if="$ctrl.currentTab === \'translations\' && $ctrl.currentTranslation"> <md-input-container class=md-block> <label>Language (max. 2 characters)</label> <input ng-model=$ctrl.currentTranslation.configuration.lang style=font-size:large maxlength=2 required> </md-input-container> <md-input-container class=md-block> <label>Translated title</label> <input type=text ng-model=$ctrl.currentTranslation.name style=font-size:large required> </md-input-container> <md-input-container class=gv-input-container-dense> <md-switch ng-model=$ctrl.currentTranslation.configuration.inheritContent ng-true-value="\'true\'" ng-false-value="\'false\'" aria-label="Inherit content" ng-change=$ctrl.updateTranslationContent()> Inherit content </md-switch> <div class=hint> <div ng-if="$ctrl.currentTranslation.configuration.inheritContent === \'false\'">Switch on to inherit content.</div> <div ng-if="$ctrl.currentTranslation.configuration.inheritContent === \'true\'">Switch off to be able to modify the content of the page for this language.</div> </div> </md-input-container> <div ng-if="$ctrl.currentTranslation.configuration.inheritContent === \'false\'"> <div ng-if="\'SWAGGER\' === $ctrl.page.type" style=display:inline-block;width:100%> <div layout=row style=max-height:900px;overflow:auto> <md-input-container class=md-block flex=50 ng-if=$ctrl.canUpdate> <textarea ui-codemirror ui-codemirror-opts=$ctrl.codeMirrorOptions ng-model=$ctrl.currentTranslation.content aria-label="translation content" rows=5 style=overflow-y:scroll md-autofocus></textarea> </md-input-container> <gv-page flex page=$ctrl.currentTranslation page-type=$ctrl.page.type edit=$ctrl.canUpdate></gv-page> </div> </div> <div ng-if="\'MARKDOWN\' === $ctrl.page.type" style=display:inline-block;width:100%> <md-input-container class=md-block> <gv-page-editor-markdown ng-if=$ctrl.canUpdate page=$ctrl.currentTranslation></gv-page-editor-markdown> <gv-page-markdown ng-if=!$ctrl.canUpdate page=$ctrl.currentTranslation></gv-page-markdown> </md-input-container> </div> </div> </div> </md-tab-body> </md-tab> <md-tab md-on-select=$ctrl.selectTab(2) ng-if=$ctrl.canUpdate> <md-tab-label>Configuration</md-tab-label> <md-tab-body> <h3>General</h3> <md-input-container class=md-block> <md-checkbox ng-model=$ctrl.page.homepage aria-label="set as homepage" class=md-align-top-left flex> Set as homepage </md-checkbox> </md-input-container> <md-input-container class=md-block> <md-checkbox ng-model=$ctrl.page.published aria-label=Published class=md-align-top-left flex> Publish this page </md-checkbox> </md-input-container> <div ng-if="$ctrl.page.type === \'SWAGGER\'" layout=column> <h3>OpenAPI documentation viewer: </h3> <md-radio-group ng-model=$ctrl.page.configuration.viewer> <md-radio-button value=Swagger class=md-primary>Swagger-UI (Default)</md-radio-button> <md-radio-button value=Redoc>Redoc</md-radio-button> </md-radio-group> <div ng-if="$ctrl.page.configuration.viewer === \'Swagger\'" layout=column> <h3>Swagger</h3> <md-checkbox ng-model=$ctrl.page.configuration.tryIt ng-true-value="\'true\'" ng-false-value="\'false\'"> Enable "Try it!" mode. Perhaps you will have to configure the CORS in the proxy section. </md-checkbox> <md-checkbox ng-model=$ctrl.page.configuration.tryItAnonymous ng-true-value="\'true\'" ng-false-value="\'false\'"> Allow "Try it!" for anonymous users </md-checkbox> <md-input-container class=md-block> <label>Base URL</label> <input type=text ng-model=$ctrl.page.configuration.tryItURL ng-disabled="$ctrl.page.configuration.tryIt === \'false\'"> <div class=hint>Base URL used to try the API</div> </md-input-container> <md-checkbox ng-model=$ctrl.page.configuration.entrypointsAsServers ng-true-value="\'true\'" ng-false-value="\'false\'" ng-click=$ctrl.toggleEntrypointAsServer()> Swagger servers URL are based on the entrypoints of the API (in that case, the base URL is no more used). </md-checkbox> <md-checkbox ng-model=$ctrl.page.configuration.entrypointAsBasePath ng-true-value="\'true\'" ng-false-value="\'false\'" ng-disabled="$ctrl.page.configuration.entrypointsAsServers === undefined || $ctrl.page.configuration.entrypointsAsServers === \'false\'"> Swagger servers URL contains the context-path of the API as the base path </md-checkbox> <md-checkbox ng-model=$ctrl.page.configuration.showURL ng-true-value="\'true\'" ng-false-value="\'false\'"> Show the URL to download the content </md-checkbox> <md-checkbox ng-model=$ctrl.page.configuration.displayOperationId ng-true-value="\'true\'" ng-false-value="\'false\'"> Display the operationId in the operations list </md-checkbox> <md-input-container class=md-block> <label>Default expansion setting for the operations and tags</label> <md-select ng-model=$ctrl.page.configuration.docExpansion> <md-option ng-value="\'list\'">Expands only the tags</md-option> <md-option ng-value="\'full\'">Expands the tags and operations</md-option> <md-option ng-value="\'none\'">Expands nothing</md-option> </md-select> </md-input-container> <md-checkbox ng-model=$ctrl.page.configuration.enableFiltering ng-true-value="\'true\'" ng-false-value="\'false\'" class=md-block> Add a top bar to filter content </md-checkbox> <md-checkbox ng-model=$ctrl.page.configuration.showExtensions ng-true-value="\'true\'" ng-false-value="\'false\'" class=md-block> Display vendor extension (X-) fields and values for Operations, Parameters, and Schema </md-checkbox> <md-checkbox ng-model=$ctrl.page.configuration.showCommonExtensions ng-true-value="\'true\'" ng-false-value="\'false\'"> Display extensions (pattern, maxLength, minLength, maximum, minimum) fields and values for Parameters </md-checkbox> <md-input-container class=md-block> <label>Number of max tagged operations displayed</label> <input type=number ng-model=$ctrl.page.configuration.maxDisplayedTags> <div class=hint>Limits the number of tagged operations displayed to at most this many (-1 means show all operations).</div> </md-input-container> </div> </div> </md-tab-body> </md-tab> <md-tab md-on-select=$ctrl.selectTab(3) ng-if=$ctrl.canUpdate> <md-tab-label>External Source</md-tab-label> <md-tab-body> <div style=display:inline-block> <h3></h3> <div layout=row> <md-button ng-repeat="fetcher in $ctrl.fetchers" ng-click=$ctrl.configureFetcher(fetcher) ng-class="{\'md-raised\': fetcher.id === $ctrl.page.source.type}" aria-label=fetcher> <md-icon md-svg-icon="assets/logo_{{fetcher.id | lowercase}}.svg" style=width:80px;height:40px></md-icon> </md-button> </div> <div layout=column> <form name=PageConfigFetcherForm sf-schema=fetcherJsonSchema sf-form=$ctrl.fetcherJsonSchemaForm sf-model=$ctrl.page.source.configuration></form> </div> </div> </md-tab-body> </md-tab> <md-tab md-on-select=$ctrl.selectTab(4) ng-if=$ctrl.canUpdate> <md-tab-label>Access Control</md-tab-label> <md-tab-body> <h3>Groups Authorizations</h3> <md-input-container class=md-block flex=100> <label>Groups excluded</label> <md-select ng-model=$ctrl.page.excluded_groups multiple=multiple> <md-option ng-repeat="group in $ctrl.groups | orderBy:\'name\'" ng-value=group.id> {{group.name}} </md-option> </md-select> </md-input-container> </md-tab-body> </md-tab> </md-tabs> <div class="md-actions gravitee-api-save-button" layout=row style=padding-top:32px ng-if=$ctrl.canUpdate> <md-button class="md-raised md-primary" type=submit ng-click=$ctrl.save() ng-disabled=!$ctrl.page.name ng-if="$ctrl.currentTab !== \'translations\' || !$ctrl.currentTranslation"> Save </md-button> <md-button permission permission-only="[\'environment-documentation-u\', \'api-documentation-u\']" type=button aria-label="Save translation" class="md-raised md-primary" ng-click=$ctrl.saveTranslation() ng-if="$ctrl.currentTab === \'translations\' && $ctrl.currentTranslation" ng-disabled="!$ctrl.currentTranslation.configuration.lang || !$ctrl.currentTranslation.name"> Save translation </md-button> <md-button class=md-raised type=button ng-click=$ctrl.reset()> Reset </md-button> <md-button class="md-flat md-warn" type=button ng-if=$ctrl.page.source ng-click=$ctrl.removeFetcher()> Remove External Source Configuration </md-button> </div> </div> </div> </div> '},function(e,t,i){"use strict";t.__esModule=!0;var n=i(3),a={bindings:{resolvedFetchers:"<",resolvedRootPage:"<"},template:i(996),controller:["NotificationService","DocumentationService","$state","$scope",function(e,t,i,a){var o=this;this.apiId=i.params.apiId,this.codeMirrorOptions={lineWrapping:!0,lineNumbers:!0,allowDropFileTypes:!0,autoCloseTags:!0,mode:"javascript"},this.$onInit=function(){o.page=o.resolvedRootPage||{name:"root",type:"ROOT"},o.fetchers=o.resolvedFetchers,o.emptyFetcher={type:"object",id:"empty",properties:{"":{}}},a.fetcherJsonSchema=o.emptyFetcher,o.fetcherJsonSchemaForm=["*"],n.isNil(o.page.source)||n.isNil(o.page.source.type)||n.forEach(o.fetchers,(function(e){e.id===o.page.source.type&&(a.fetcherJsonSchema=JSON.parse(e.schema))}))},this.configureFetcher=function(e){o.page.source||(o.page.source={}),o.page.source={type:e.id,configuration:{}},a.fetcherJsonSchema=JSON.parse(e.schema)},this.import=function(){o.importInProgress=!0,o.page.name="import",t.import(o.page,o.apiId).then((function(t){o.page.id?e.show("'"+t.data.length+"' elements has been updated."):e.show("'"+t.data.length+"' elements has been created."),o.apiId?i.go("management.apis.detail.portal.documentation",{apiId:o.apiId}):i.go("management.settings.documentation")})).finally((function(){o.importInProgress=!1}))},this.changeContentMode=function(e){"fetcher"===e?o.page.source={configuration:{}}:delete o.page.source},this.cancel=function(){o.apiId?i.go("management.apis.detail.portal.documentation",{apiId:o.apiId}):i.go("management.settings.documentation")}}]};t.default=a},function(e,t){e.exports=' <div class="gv-forms gv-forms" layout=column> <div class=gv-forms-header> <h1>Import Files</h1> <a ng-click=$ctrl.cancel()>Back to Documentation</a> </div> <div class=gv-form> <h2></h2> <div class=gv-form-content layout=column> <div class=gv-page-draft-banner> <ng-md-icon icon=warning class=gv-warning></ng-md-icon> All files (with a supported page type) will be imported, generating one request by file to import.<br> If you use an external source with rate limiting, you can reach your maximum requests authorized. </div> <blockquote> <p style=font-size:12px> <ng-md-icon icon=info style=fill:grey></ng-md-icon> You can import a whole directory (only available in few sources), or import a Gravitee.io descriptor (refer to the documentation). If the filepath is not filled, the root directory will be imported. </p> </blockquote> <div style=display:inline-block> <md-input-container class=md-block> <md-checkbox ng-model=$ctrl.page.published aria-label=Published class=md-align-top-left flex> Publish all imported pages </md-checkbox> </md-input-container> <h3>Select your source:</h3> <div layout=row> <md-button ng-repeat="fetcher in $ctrl.fetchers" ng-click=$ctrl.configureFetcher(fetcher) ng-class="{\'md-raised\': fetcher.id === $ctrl.page.source.type}" aria-label=fetcher> <md-icon md-svg-icon="assets/logo_{{fetcher.id | lowercase}}.svg" style=width:80px;height:40px></md-icon> </md-button> </div> <div layout=column> <form name=PageConfigFetcherForm sf-schema=fetcherJsonSchema sf-form=$ctrl.fetcherJsonSchemaForm sf-model=$ctrl.page.source.configuration></form> </div> </div> <div class="md-actions gravitee-api-save-button" layout=row style=padding-top:32px> <md-button class="md-raised md-primary" type=submit ng-click=$ctrl.import() ng-disabled="!$ctrl.page.source.type || $ctrl.importInProgress"> Import </md-button> </div> </div> </div> </div>'},function(e,t,i){"use strict";t.__esModule=!0;var n=i(3),a=i(7),o=function(){function e(e,t,i,a,o,r,s){var l=this;if(this.ApiService=e,this.NotificationService=t,this.$mdDialog=i,this.$scope=a,this.$state=o,this.$stateParams=r,this.$rootScope=s,this.api=this.$scope.$parent.apiCtrl.api,this.$scope.$on("apiChangeSuccess",(function(e,t){l.api=t.api})),void 0!==this.$stateParams.endpointName){var c=n.find(this.api.proxy.groups,{name:r.groupName});this.endpoint=n.find(c.endpoints,{name:r.endpointName}),this.rootHealthcheckEnabled=this.api.services&&this.api.services["health-check"]&&this.api.services["health-check"].enabled,!this.endpoint.healthcheck&&this.rootHealthcheckEnabled?this.healthcheck={enabled:!0,inherit:!0}:this.healthcheck=this.endpoint.healthcheck,this.endpointToDisplay=this.endpoint}else 1===this.api.proxy.groups.length&&1===this.api.proxy.groups[0].endpoints.length&&(this.endpointToDisplay=this.api.proxy.groups[0].endpoints[0]),this.healthcheck=this.api.services&&this.api.services["health-check"];this.healthcheck=this.healthcheck||{enabled:!1,inherit:!1,trigger:{}};var d=void 0!==this.endpoint&&this.healthcheck.inherit,p=this.healthcheck.enabled;d&&(this.healthcheck=n.cloneDeep(this.api.services&&this.api.services["health-check"]||{enabled:!1,trigger:{}})),this.healthcheck.inherit=d,this.healthcheck.enabled=p,this.timeUnits=["SECONDS","MINUTES","HOURS","DAYS"],this.httpMethods=["GET","POST","PUT"],this.initState()}return e.$inject=["ApiService","NotificationService","$mdDialog","$scope","$state","$stateParams","$rootScope"],e.prototype.initState=function(){void 0===this.healthcheck.steps&&(this.healthcheck.steps=[]),void 0===this.healthcheck.steps[0]&&(this.healthcheck.steps[0]={request:{headers:[]},response:{assertions:[]}})},e.prototype.openMenu=function(e,t){e(t)},e.prototype.addHTTPHeader=function(){void 0===this.healthcheck.steps[0].request.headers&&(this.healthcheck.steps[0].request.headers=[]),this.healthcheck.steps[0].request.headers.push({name:"",value:""})},e.prototype.removeHTTPHeader=function(e){void 0!==this.healthcheck.steps[0].request.headers&&this.healthcheck.steps[0].request.headers.splice(e,1)},e.prototype.addAssertion=function(){void 0===this.healthcheck.steps[0].response?this.healthcheck.response={assertions:[""]}:this.healthcheck.steps[0].response.assertions.push("")},e.prototype.removeAssertion=function(e){void 0!==this.healthcheck.steps[0].response&&this.healthcheck.steps[0].response.assertions.splice(e,1)},e.prototype.buildTrigger=function(){var e="Health-check is running each ";return e+=this.healthcheck.trigger&&this.healthcheck.trigger.rate||"{rate}",e+=" "+(this.healthcheck.trigger&&this.healthcheck.trigger.unit||"{unit}")},e.prototype.buildRequest=function(){var e="";if(e+=(this.healthcheck.steps&&this.healthcheck.steps[0].request.method||"{method}")+" ",this.healthcheck.steps&&this.healthcheck.steps[0].request.fromRoot){if(this.endpointToDisplay)try{e+=new URL(this.endpointToDisplay.target).origin}catch(t){e+=this.endpointToDisplay.target}else e+="{endpoint}";e+=this.healthcheck.steps&&this.healthcheck.steps[0].request.path||"/{path}"}else e+=this.endpointToDisplay?this.endpointToDisplay.target:"{endpoint}",e+=this.healthcheck.steps&&this.healthcheck.steps[0].request.path||"/{path}";return e},e.prototype.showAssertionInformation=function(){this.$mdDialog.show({controller:"DialogAssertionInformationController",controllerAs:"ctrl",template:i(998),parent:a.element(document.body),clickOutsideToClose:!0})},e.prototype.backToEndpointConfiguration=function(){this.$state.go("management.apis.detail.proxy.endpoint",{groupName:this.$stateParams.groupName,endpointName:this.$stateParams.endpointName})},e.prototype.backToHealthcheck=function(){this.$state.go("management.apis.detail.proxy.healthcheck.visualize")},e.prototype.update=function(){var e=this;void 0!==this.endpoint?this.endpoint.healthcheck=this.healthcheck:(!1===this.healthcheck.enabled&&(delete this.healthcheck.trigger,delete this.healthcheck.steps),this.api.services["health-check"]=this.healthcheck),this.ApiService.update(this.api).then((function(t){e.api=t.data,e.initState(),e.api.etag=t.headers("etag"),e.$scope.formApiHealthCheckTrigger.$setPristine(),e.$scope.formApiHealthCheckRequest.$setPristine(),e.$scope.formApiHealthCheckResponse.$setPristine(),e.$rootScope.$broadcast("apiChangeSuccess",{api:e.api}),void 0!==e.endpoint?e.NotificationService.show("Health-check configuration for endpoint ["+e.endpoint.name+"] has been updated"):e.NotificationService.show("Global health-check configuration  has been updated")}))},e}();t.default=o},function(e,t){e.exports=" <md-dialog aria-label=\"Health-check Assertion\"> <md-dialog-content layout-padding> <h4>How to write assertion</h4> <p> Example 1: Check the status of the HTTP response<br> <code>#response.status == 200</code> </p> <br> <p> Example 2: Check the JSON content of the response<br> <code>#jsonPath(#response.content, '$.status') == 'green'</code> </p> </md-dialog-content> <md-dialog-actions layout=row> <md-button class=md-primary ng-click=ctrl.cancel()> Close </md-button> </md-dialog-actions> </md-dialog> "},function(e,t,i){"use strict";function n(e,t){this.cancel=t.cancel}n.$inject=["$scope","$mdDialog"],t.__esModule=!0,t.default=n},function(e,t,i){"use strict";t.__esModule=!0;var n=i(180),a=i(1),o=i(3),r=function(){function e(e,t,i,a,o,r,s){this.ApiService=e,this.$scope=t,this.$rootScope=i,this.$state=a,this.ChartService=o,this.$q=r,this.UserService=s,this.api=this.$scope.$parent.apiCtrl.api,this.gateway={availabilities:{},responsetimes:{}},this.endpoint={availabilities:{},responsetimes:{}},this.onPaginate=this.onPaginate.bind(this),this.query=new n.LogsQuery,this.query.size=10,this.query.page=1,this.query.from=this.$state.params.from,this.query.to=this.$state.params.to,this.updateChart()}return e.$inject=["ApiService","$scope","$rootScope","$state","ChartService","$q","UserService"],e.prototype.timeframeChange=function(e){this.query.from=e.from,this.query.to=e.to,this.updateChart()},e.prototype.updateChart=function(){var e=this;this.ApiService.apiHealth(this.api.id,"availability").then((function(t){e.endpoint.availabilities.data=t.data})),this.ApiService.apiHealth(this.api.id,"response_time").then((function(t){e.endpoint.responsetimes.data=t.data})),this.displayGatewayHC()&&(this.ApiService.apiHealth(this.api.id,"availability","gateway").then((function(t){e.gateway.availabilities.data=t.data})),this.ApiService.apiHealth(this.api.id,"response_time","gateway").then((function(t){e.gateway.responsetimes.data=t.data}))),this.refresh()},e.prototype.onPaginate=function(e){this.query.page=e,this.refresh()},e.prototype.refresh=function(){var e,t,i=this;this.$state.transitionTo(this.$state.current,{apiId:this.api.id,page:this.query.page,size:this.query.size,from:this.query.from,to:this.query.to},{notify:!1}),this.ApiService.apiHealthLogs(this.api.id,this.query).then((function(e){i.logs=e.data})),this.ApiService.apiHealthLogs(this.api.id,o.assign({transition:!0},this.query)).then((function(e){i.transitionLogs=e.data})),e=this.query.from||a().subtract(1,"days"),t=this.query.to||a();var n=Math.floor((t-e)/24),r=[this.ApiService.apiHealthAverage(this.api.id,{from:e,to:t,interval:n,type:"RESPONSE_TIME"}),this.ApiService.apiHealthAverage(this.api.id,{from:e,to:t,interval:n,type:"AVAILABILITY"})];this.$q.all(r).then((function(e){var t=0,n=[];o.forEach(e,(function(e){var i=e.data.values;i&&i.length>0&&o.forEach(i,(function(e){o.forEach(e.buckets,(function(e){if(e){var i=0==t;n.push({name:"Average of "+(i?"response time":"availability"),data:e.data,color:i?"#337AB7":"#5CB85C",type:i?"area":"column",labelSuffix:i?"ms":"%",decimalFormat:!i,yAxis:t,zones:i?[]:[{value:80,color:"#D9534F"},{value:95,color:"#F0AD4E"},{color:"#5CB85C"}]})}}))})),t++}));var a=e[0]&&e[0].data&&e[0].data.timestamp;i.chartData={plotOptions:{series:{pointStart:a&&a.from,pointInterval:a&&a.interval}},series:n,xAxis:{type:"datetime",dateTimeLabelFormats:{month:"%e. %b",year:"%b"}},yAxis:[{labels:{format:"{value}ms"},title:{text:"Response time"}},{title:{text:"Availability"},labels:{format:"{value}%"},max:100,opposite:!0}],chart:{events:{selection:function(e){e.resetSelection||(i.query.from=Math.floor(e.xAxis[0].min),i.query.to=Math.floor(e.xAxis[0].max),i.$rootScope.$broadcast("timeframeZoom",{from:i.query.from,to:i.query.to}),i.refresh())}}}}}))},e.prototype.getEndpointStatus=function(e){switch(e){case 3:return"UP";case 2:return"TRANSITIONALLY_UP";case 1:return"TRANSITIONALLY_DOWN";case 0:return"DOWN";default:return"-"}},e.prototype.viewLog=function(e){this.$state.go("management.apis.detail.proxy.healthcheck.log",e)},e.prototype.displayGatewayHC=function(){return this.UserService.currentUser.isAdmin()},e}();t.default=r},function(e,t,i){"use strict";t.__esModule=!0;var n={template:i(1002),bindings:{value:"<"}};t.default=n},function(e,t){e.exports=" <div class=progress> <div class=progress-bar ng-class=\"{'progress-bar-success': $ctrl.value >= 95, 'progress-bar-warning': $ctrl.value < 95 && $ctrl.value >= 80 , 'progress-bar-danger': $ctrl.value < 80 && $ctrl.value >= 30, 'progress-bar-fatal': $ctrl.value < 30 }\" role=progressbar aria-valuenow={{$ctrl.value}} aria-valuemin=0 aria-valuemax=100 ng-style=\"{width: $ctrl.value + '%'}\"> {{$ctrl.value}}% </div> </div> "},function(e,t,i){"use strict";t.__esModule=!0;var n=function(){function e(e,t){this.$scope=e,this.resolvedLog=t,this.api=this.$scope.$parent.apiCtrl.api,this.log=t.data}return e.$inject=["$scope","resolvedLog"],e.prototype.getMimeType=function(e){return void 0!==e.headers&&void 0!==e.headers["Content-Type"]?e.headers["Content-Type"][0].split(";",1)[0]:null},e}();t.default=n},function(e,t,i){"use strict";t.__esModule=!0;var n={template:i(1005),bindings:{availability:"<",responsetime:"<"}};t.default=n},function(e,t){e.exports=' <div> <progress-bar value="$ctrl.availability | floor  "></progress-bar> <md-tooltip md-direction=top> {{$ctrl.availability | number: 3}}% </md-tooltip> </div> <span class="label label-primary" style=font-weight:700;font-size:10.5px> {{$ctrl.responsetime | number: 0 }}ms </span>'},function(e,t,i){"use strict";t.__esModule=!0;var n=function(){function e(e,t){this.$http=e,this.Constants=t,this.ticketURL=t.baseURL+"platform/tickets"}return e.$inject=["$http","Constants"],e.prototype.create=function(e){if(e)return this.$http.post(this.ticketURL,e)},e.prototype.isSupportEnabled=function(){return this.Constants.portal.support.enabled},e}();t.default=n},function(e,t,i){"use strict";t.__esModule=!0;var n=i(3),a=function(){function e(e,t,i,a,o,r){var s=this;this.TicketService=e,this.NotificationService=t,this.UserService=i,this.ApiService=a,this.ApplicationService=o,this.$stateParams=r,this.stateParams=r,(this.isAuthenticated=i.isAuthenticated())&&(this.userHasAnEmail=!!i.currentUser.email,a.list().then((function(e){return s.apis=e.data})).then((function(e){r.apiId&&(n.find(e,{id:r.apiId})&&(s.ticket={api:r.apiId}))})),o.list().then((function(e){return s.applications=e.data})))}return e.$inject=["TicketService","NotificationService","UserService","ApiService","ApplicationService","$stateParams"],e.prototype.create=function(){var e=this;this.TicketService.create(this.ticket).then((function(){e.NotificationService.show("support.ticket.successCreation"),e.formTicket.$setPristine()}))},e}();t.default=a},function(e,t,i){"use strict";t.__esModule=!0;var n=function(){function e(e,t,i,n){this.resolvedApis=e,this.resolvedApplications=t,this.resolvedEvents=i,this.$scope=n,this.$scope.apis=e,this.$scope.applications=t,this.$scope.events=i}return e.$inject=["resolvedApis","resolvedApplications","resolvedEvents","$scope"],e}();t.default=n},function(e,t,i){"use strict";t.__esModule=!0;var n=function(){function e(e,t,i){this.resolvedEvents=e,this.$scope=t,this.$state=i,this.$scope.api=this.$state.params.apiId,this.$scope.apis=[{id:this.$state.params.apiId}],this.$scope.applications=[],this.$scope.events=e}return e.$inject=["resolvedEvents","$scope","$state"],e}();t.default=n},function(e,t,i){"use strict";t.__esModule=!0;var n=i(3),a=i(262),o={template:i(1011),bindings:{api:"<",apis:"<",applications:"<",events:"<"},controller:["AuditService",function(e){var t=this,i=this;i.$onInit=function(){i.events=n.map(i.events,(function(e){return e.toUpperCase()})),i.query=new a.AuditQuery,i.onPaginate=i.onPaginate.bind(t),e.list(null,i.api).then((function(e){return i.handleAuditResponseData(e.data)}))},i.handleAuditResponseData=function(e){i.auditLogs=e.content,i.metadata=e.metadata,i.enhanceAuditLogs(i.auditLogs),i.query.page=e.pageNumber,i.result={size:e.pageElements,total:e.totalElements}},i.enhanceAuditLogs=function(e){n.forEach(e,(function(e){e.prettyPatch=JSON.stringify(JSON.parse(e.patch),null,"  "),e.displayPatch=!1,e.displayProperties=!1}))},i.onPaginate=function(){e.list(i.query,i.api).then((function(e){i.handleAuditResponseData(e.data)}))},i.getNameByReference=function(e){return i.metadata[e.type+":"+e.id+":name"]?i.metadata[e.type+":"+e.id+":name"]:e.id},i.getDisplayableProperties=function(e){return n.map(e,(function(e,t){return i.metadata[t+":"+e+":name"]}))},i.search=function(){i.query.page=1,i.query.mgmt&&(i.query.api=null,i.query.application=null),e.list(i.query,i.api).then((function(e){i.handleAuditResponseData(e.data)}))}}]};t.default=o},function(e,t){e.exports=' <div class="gv-forms gv-forms-fluid" layout=column> <h1>Audit</h1> <div class=gv-form> <h2>Logs</h2> <div class=gv-form-content layout=column> <div layout=row layout-align="space-around end"> <div layout=column layout-align="end start"> <md-checkbox aria-label="Only Portal Audit Logs" ng-model=$ctrl.query.mgmt ng-if=!$ctrl.api> Show only portal audit logs </md-checkbox> <div layout=row layout-align="space-around end"> <md-input-container> <label>Events</label> <md-select ng-model=$ctrl.query.event> <md-option ng-value="undefined"></md-option> <md-option ng-repeat="evt in $ctrl.events" ng-value=evt> {{evt}} </md-option> </md-select> </md-input-container> <md-input-container ng-if="!$ctrl.query.mgmt && !$ctrl.api"> <label>Applications</label> <md-select ng-model=$ctrl.query.application> <md-option ng-value="undefined"></md-option> <md-option ng-repeat="app in $ctrl.applications | orderBy:name" ng-value=app.id> {{app.name}} </md-option> </md-select> </md-input-container> <md-input-container ng-if="!$ctrl.query.mgmt && !$ctrl.api"> <label>APIs</label> <md-select ng-model=$ctrl.query.api> <md-option ng-value="undefined"></md-option> <md-option ng-repeat="api in $ctrl.apis | orderBy:name" ng-value=api.id> {{api.name}} </md-option> </md-select> </md-input-container> </div> </div> <div layout=row layout-align="space-between end"> <md-datepicker ng-model=$ctrl.query.from md-placeholder="Select begin date" md-max-date=$ctrl.query.to></md-datepicker> <md-datepicker ng-model=$ctrl.query.to md-placeholder="Select end date" md-min-date=$ctrl.query.from></md-datepicker> <md-button class=md-raised ng-click=$ctrl.search()>Apply</md-button> </div> </div> <md-table-container> <table md-table class=gv-table-dense> <thead md-head> <tr md-row> <th md-column>Date</th> <th md-column>User</th> <th md-column ng-if=!$ctrl.api>Type</th> <th md-column ng-if=!$ctrl.api>Reference</th> <th md-column>Event</th> <th md-column>Target</th> <th md-column>Patch</th> </tr> </thead> <tbody md-body> <tr ng-if="$ctrl.auditLogs.length > 0" md-row ng-repeat="log in $ctrl.auditLogs"> <td md-cell nowrap=nowrap>{{log.createdAt | date : \'dd/MM/yyyy HH:mm:ss.sss\'}}</td> <td md-cell nowrap=nowrap>{{$ctrl.getNameByReference({type: \'USER\', id: log.user})}}</td> <td md-cell nowrap=nowrap ng-if=!$ctrl.api>{{log.referenceType}}</td> <td md-cell nowrap=nowrap ng-if=!$ctrl.api>{{$ctrl.getNameByReference({type: log.referenceType, id: log.referenceId})}}</td> <td md-cell nowrap=nowrap>{{log.event}}</td> <td md-cell><span ng-repeat="prop in  $ctrl.getDisplayableProperties(log.properties)">{{prop}}</span></td> <td md-cell> <div ui-codemirror ui-refresh=true ui-codemirror-opts="{lineWrapping: true, readOnly: nocursor, mode: {name: \'javascript\', json: true}}" ng-model=log.prettyPatch ng-if=log.displayPatch> </div> <a ng-if=!log.displayPatch ng-click="log.displayPatch=true">show</a> <a ng-if=log.displayPatch ng-click="log.displayPatch=false">hide</a> </td> </tr> <tr ng-if="$ctrl.auditLogs.length === 0"> <td md-cell colspan=7>No audit logs</td> </tr> </tbody> </table> </md-table-container> <md-table-pagination ng-if="$ctrl.result.size > 0" md-limit=$ctrl.result.size md-page=$ctrl.query.page md-total={{$ctrl.result.total}} md-on-paginate=$ctrl.onPaginate> </md-table-pagination> </div> </div> </div> '},function(e,t,i){"use strict";t.__esModule=!0;var n=i(3),a={template:i(1013),controller:["$rootScope","SidenavService","$state","UserService","Constants",function(e,t,i,a,o){var r=this;this.$state=i,this.settingsMenu={analytics:{perm:a.isUserHasPermissions(["environment-settings-r"]),goTo:"management.settings.analytics"},apiPortalHeader:{perm:a.isUserHasPermissions(["environment-api_header-r"]),goTo:"management.settings.apiPortalHeader"},apiQuality:{perm:a.isUserHasPermissions(["environment-settings-r"]),goTo:"management.settings.apiQuality"},clientRegistration:{perm:a.isUserHasPermissions(["environment-client_registration_provider-r"]),goTo:"management.settings.clientregistrationproviders.list"},identityProviders:{perm:a.isUserHasPermissions(["environment-identity_provider-r"]),goTo:"management.settings.identityproviders.list"},documentations:{perm:a.isUserHasPermissions(["environment-documentation-c","environment-documentation-u","environment-documentation-d"]),goTo:"management.settings.documentation"},metadata:{perm:a.isUserHasPermissions(["environment-metadata-r"]),goTo:"management.settings.metadata"},portalSettings:{perm:a.isUserHasPermissions(["environment-settings-r"]),goTo:"management.settings.portal"},theme:{perm:a.isUserHasPermissions(["environment-theme-r"]),goTo:"management.settings.theme"},topApis:{perm:a.isUserHasPermissions(["environment-top_apis-r"]),goTo:"management.settings.top-apis"},categories:{perm:a.isUserHasPermissions(["environment-category-r"]),goTo:"management.settings.categories"},managementSettings:{perm:a.isUserHasPermissions(["environment-settings-r"]),goTo:"management.settings.management"},api_logging:{perm:a.isUserHasPermissions(["environment-settings-r"]),goTo:"management.settings.api_logging"},dictionaries:{perm:a.isUserHasPermissions(["environment-dictionary-r"]),goTo:"management.settings.dictionaries.list"},tags:{perm:a.isUserHasPermissions(["environment-tag-c","environment-tag-u","environment-tag-d"]),goTo:"management.settings.tags"},tenants:{perm:a.isUserHasPermissions(["environment-tenant-c","environment-tenant-u","environment-tenant-d"]),goTo:"management.settings.tenants"},users:{perm:a.isUserHasPermissions(["organization-user-r"]),goTo:"management.settings.users"},groups:{perm:a.isUserHasPermissions(["environment-group-r"]),goTo:"management.settings.groups.list"},roles:{perm:a.isUserHasPermissions(["organization-role-c","organization-role-u","organization-role-d"]),goTo:"management.settings.roles"},notifications:{perm:a.isUserHasPermissions(["environment-notification-r"]),goTo:"management.settings.notifications"},alerts:{perm:a.isUserHasPermissions(["environment-alert-r"])&&o.alert&&o.alert.enabled,goTo:"management.settings.alerts"}},this.$onInit=function(){if("management.settings"===i.current.name){e.$broadcast("reduceSideNav"),t.setCurrentResource("SETTINGS");for(var a=0,o=n.keys(r.settingsMenu);a<o.length;a++){var s=o[a];if(r.settingsMenu[s].perm){i.go(r.settingsMenu[s].goTo);break}}}}}]};t.default=a},function(e,t){e.exports=" <div flex> <div layout=row flex> <div class=\"gv-sub-menu menu\"> <div class=md-headline>Settings</div> <div class=aui-nav-heading ng-if=\"$ctrl.settingsMenu.apiPortalHeader.perm\n                 || $ctrl.settingsMenu.clientRegistration.perm\n                 || $ctrl.settingsMenu.identityProviders.perm\n                 || $ctrl.settingsMenu.portalSettings.perm\n                 || $ctrl.settingsMenu.documentations.perm\n                 || $ctrl.settingsMenu.metadata.perm\n                 || $ctrl.settingsMenu.settings.perm\n                 || $ctrl.settingsMenu.topApis.perm\n                 || $ctrl.settingsMenu.categories.perm\"> <strong>Portal</strong> </div> <ul class=aui-nav> <li class=iterable-item ng-class=\"{'aui-nav-selected': $ctrl.$state.includes('management.settings.analytics') ||\n                  $ctrl.$state.includes('management.settings.dashboard') || $ctrl.$state.includes('management.settings.dashboardnew')}\" ng-if=$ctrl.settingsMenu.analytics.perm> <a class=execute ui-sref={{$ctrl.settingsMenu.analytics.goTo}}>Analytics</a> </li> <li class=iterable-item ui-sref-active=aui-nav-selected ng-if=$ctrl.settingsMenu.apiPortalHeader.perm> <a class=execute ui-sref={{$ctrl.settingsMenu.apiPortalHeader.goTo}}>API Portal Informations</a> </li> <li class=iterable-item ng-class=\"{'aui-nav-selected': $ctrl.$state.includes('management.settings.apiQuality') || $ctrl.$state.includes('management.settings.qualityRule') || $ctrl.$state.includes('management.settings.qualityRulenew')}\" ng-if=$ctrl.settingsMenu.portalSettings.perm> <a class=execute ui-sref={{$ctrl.settingsMenu.apiQuality.goTo}}>API Quality</a> </li> <li class=iterable-item ng-class=\"{'aui-nav-selected': $ctrl.$state.includes('management.settings.identityproviders')}\" ng-if=$ctrl.settingsMenu.identityProviders.perm> <a class=execute ui-sref={{$ctrl.settingsMenu.identityProviders.goTo}}>Authentication</a> </li> <li class=iterable-item ng-class=\"{'aui-nav-selected': $ctrl.$state.includes('management.settings.categories') || $ctrl.$state.includes('management.settings.category') || $ctrl.$state.includes('management.settings.categorynew')}\" ng-if=$ctrl.settingsMenu.categories.perm> <a class=execute ui-sref={{$ctrl.settingsMenu.categories.goTo}}>Categories</a> </li> <li class=iterable-item ng-class=\"{'aui-nav-selected': $ctrl.$state.includes('management.settings.clientregistrationproviders')}\" ng-if=$ctrl.settingsMenu.clientRegistration.perm> <a class=execute ui-sref={{$ctrl.settingsMenu.clientRegistration.goTo}}>Client Registration</a> </li> <li class=iterable-item ui-sref-active=aui-nav-selected ng-if=$ctrl.settingsMenu.documentations.perm> <a class=execute ui-sref={{$ctrl.settingsMenu.documentations.goTo}}>Documentation</a> </li> <li class=iterable-item ui-sref-active=aui-nav-selected ng-if=$ctrl.settingsMenu.metadata.perm> <a class=execute ui-sref={{$ctrl.settingsMenu.metadata.goTo}}>Metadata</a> </li> <li class=iterable-item ui-sref-active=aui-nav-selected ng-if=$ctrl.settingsMenu.portalSettings.perm> <a class=execute ui-sref={{$ctrl.settingsMenu.portalSettings.goTo}}>Settings</a> </li> <li class=iterable-item ui-sref-active=aui-nav-selected ng-if=$ctrl.settingsMenu.theme.perm> <a class=execute ui-sref={{$ctrl.settingsMenu.theme.goTo}}>Theme</a> </li> <li class=iterable-item ui-sref-active=aui-nav-selected ng-if=$ctrl.settingsMenu.topApis.perm> <a class=execute ui-sref={{$ctrl.settingsMenu.topApis.goTo}}>Top APIs</a> </li> </ul> <div class=aui-nav-heading ng-if=\"$ctrl.settingsMenu.portalSettings.perm\n                 || $ctrl.settingsMenu.tags.perm\n                 || $ctrl.settingsMenu.tenants.perm\n                 || $ctrl.settingsMenu.dictionaries.perm\"> <strong>Gateway</strong> </div> <ul class=aui-nav> <li class=iterable-item ui-sref-active=aui-nav-selected ng-if=$ctrl.settingsMenu.api_logging.perm> <a class=execute ui-sref={{$ctrl.settingsMenu.api_logging.goTo}}>API Logging</a> </li> <li class=iterable-item ng-class=\"{'aui-nav-selected': $ctrl.$state.includes('management.settings.dictionaries')}\" ng-if=$ctrl.settingsMenu.dictionaries.perm> <a class=execute ui-sref={{$ctrl.settingsMenu.dictionaries.goTo}}>Dictionaries</a> </li> <li class=iterable-item ui-sref-active=aui-nav-selected ng-if=$ctrl.settingsMenu.tags.perm> <a class=execute ui-sref={{$ctrl.settingsMenu.tags.goTo}}>Sharding Tags</a> </li> <li class=iterable-item ui-sref-active=aui-nav-selected ng-if=$ctrl.settingsMenu.tenants.perm> <a class=execute ui-sref={{$ctrl.settingsMenu.tenants.goTo}}>Tenants</a> </li> </ul> <div class=aui-nav-heading ng-if=\"$ctrl.settingsMenu.users.perm\n                 || $ctrl.settingsMenu.groups.perm\n                 || $ctrl.settingsMenu.roles.perm\"> <strong>User Management</strong> </div> <ul class=aui-nav> <li class=iterable-item ng-class=\"{'aui-nav-selected': $ctrl.$state.includes('management.settings.users') || $ctrl.$state.includes('management.settings.user') }\" ng-if=$ctrl.settingsMenu.users.perm> <a class=execute ui-sref={{$ctrl.settingsMenu.users.goTo}}>Users</a> </li> <li class=iterable-item ng-class=\"{'aui-nav-selected': $ctrl.$state.includes('management.settings.groups') }\" ng-if=$ctrl.settingsMenu.groups.perm> <a class=execute ui-sref={{$ctrl.settingsMenu.groups.goTo}}>Groups</a> </li> <li class=iterable-item ng-class=\"{'aui-nav-selected': $ctrl.$state.includes('management.settings.roles') || $ctrl.$state.includes('management.settings.rolenew') || $ctrl.$state.includes('management.settings.roleedit') || $ctrl.$state.includes('management.settings.rolemembers') }\" ng-if=$ctrl.settingsMenu.roles.perm> <a class=execute ui-sref={{$ctrl.settingsMenu.roles.goTo}}>Roles</a> </li> </ul> <div class=aui-nav-heading ng-if=\"$ctrl.settingsMenu.notifications.perm || $ctrl.settingsMenu.alerts.perm\"> <strong>Notifications</strong> </div> <ul class=aui-nav> <li class=iterable-item ui-sref-active=aui-nav-selected ng-if=$ctrl.settingsMenu.notifications.perm> <a class=execute ui-sref={{$ctrl.settingsMenu.notifications.goTo}}>Notifications</a> </li> </ul> <ul class=aui-nav> <li class=iterable-item ng-class=\"{'aui-nav-selected': $ctrl.$state.includes('management.settings.alerts') || $ctrl.$state.includes('management.settings.alertnew') || $ctrl.$state.includes('management.settings.alert') }\" ng-if=$ctrl.settingsMenu.alerts.perm> <a class=execute ui-sref={{$ctrl.settingsMenu.alerts.goTo}}>Alerts</a> </li> </ul> </div> <div flex class=gv-sub-content ui-view layout=column></div> </div> </div> "},function(e,t,i){"use strict";t.__esModule=!0;var n=function(){function e(e,t,i){this.$http=e,this.$q=t,this.portalURL=i.baseURL+"portal/",this.Constants=i}return e.$inject=["$http","$q","Constants"],e.prototype.save=function(e){return this.$http.post(this.portalURL,e||this.Constants)},e.prototype.get=function(){return this.$http.get(this.portalURL)},e}();t.default=n},function(e,t,i){"use strict";t.__esModule=!0;var n={controller:"ApiLoggingController",template:i(1016)};t.default=n},function(e,t){e.exports=' <div class=gv-sub-content> <div class=gv-forms layout=column> <form name=$ctrl.formApiLogging ng-submit=$ctrl.save() novalidate> <h1>API logging</h1> <div class=gv-form> <md-input-container class=md-block flex-gt-xs> <md-checkbox ng-model=$ctrl.Constants.logging.audit.enabled aria-label="Audit on API Logging"> Enable audit on API Logging consultation </md-checkbox> </md-input-container> <md-input-container class=md-block flex-gt-xs> <md-checkbox ng-model=$ctrl.Constants.logging.user.displayed aria-label="End user on API Logging"> Display end user on API Logging (in case of OAuth2/JWT plan) </md-checkbox> </md-input-container> <md-input-container class=md-block flex-gt-xs> <md-checkbox ng-model=$ctrl.Constants.logging.audit.trail.enabled aria-label="Generate API Logging audit trail"> Generate API Logging audit events (API_LOGGING_ENABLED, API_LOGGING_DISABLED, API_LOGGING_UPDATED) </md-checkbox> </md-input-container> <div class=gv-form-content layout=column> <md-input-container class=md-block flex-gt-xs> <label>Maximum duration (in milliseconds) when a logging mode is activated (0 means no max duration)</label> <input type=number min=0 ng-model=$ctrl.Constants.logging.maxDurationMillis> </md-input-container> </div> </div> <div class="md-actions gravitee-api-save-button" layout=row> <md-button class=md-raised type=submit permission permission-only="[\'environment-settings-c\', \'environment-settings-u\']" ng-disabled="$ctrl.formApiLogging.$pristine || $ctrl.formApiLogging.$invalid"> Save </md-button> </div> </form> </div> </div> '},function(e,t,i){"use strict";t.__esModule=!0;var n=function(){function e(e,t,i){this.PortalConfigService=e,this.NotificationService=t,this.Constants=i,this.Constants=i}return e.$inject=["PortalConfigService","NotificationService","Constants"],e.prototype.save=function(){var e=this;this.PortalConfigService.save().then((function(){e.NotificationService.show("API logging saved"),e.formApiLogging.$setPristine()}))},e}();t.default=n},function(e,t,i){"use strict";t.__esModule=!0;var n={bindings:{usersPage:"<"},template:i(1019),controller:["UserService","NotificationService","$mdDialog","$state","$rootScope","$window",function(e,t,n,a,o,r){var s=this;this.$rootScope=o,this.$onInit=function(){s.onPaginate=s.onPaginate.bind(s),s.query=a.params.q},this.remove=function(o,r){o.stopPropagation(),n.show({controller:"DialogConfirmController",controllerAs:"ctrl",template:i(5),clickOutsideToClose:!0,locals:{msg:"",title:'Would you like to remove the user "'+r.displayName+'" ?',confirmButton:"Remove"}}).then((function(i){i&&e.remove(r.id).then((function(e){t.show("User "+r.displayName+" has been removed."),a.reload()}))}))},this.onPaginate=function(t){r.localStorage.usersTablePage=t,e.list(s.query,t).then((function(e){s.usersPage=e.data,a.go(".",{page:t})}))},this.getUserPicture=function(t){return e.getUserAvatar(t.id)},this.search=function(){r.localStorage.usersTableQuery=s.query,r.localStorage.usersTablePage=1,a.go(".",{q:s.query,page:1})},this.newUser=function(){a.go("management.settings.newuser")}}]};t.default=n},function(e,t){e.exports=' <div class="gv-forms gv-forms-fluid" layout=column> <h1>Users</h1> <div class=gv-form> <div class=apis-header-filter> <form flex layout=row layout-align="center center" name=formSearch autocomplete=off ng-submit=$ctrl.search()> <input class="form-control apis-filter" type=text style=max-width:960px ng-model=$ctrl.query placeholder="Search users" autofocus/> <md-button class="md-primary gv-search-button" type=submit aria-label=Search> <ng-md-icon icon=search></ng-md-icon> </md-button> </form> </div> <h2></h2> <div class=gv-form-content layout=column> <md-table-container> <table md-table class=gv-table-dense> <thead md-head> <tr md-row> <th md-column width=1% nowrap=nowrap></th> <th md-column>Display name</th> <th md-column width=15% nowrap=nowrap>Email</th> <th md-column width=15% nowrap=nowrap>Source</th> <th md-column width=1% nowrap=nowrap></th> </tr> </thead> <tbody md-body> <tr md-row ng-repeat="user in $ctrl.usersPage.data | orderBy: orderUser"> <td md-cell> <gravitee-identity-picture image-id=user.id image-url=$ctrl.getUserPicture(user) image-name=user.displayName image-width=32 image-border-radius=true></gravitee-identity-picture> </td> <td md-cell> <a ui-sref="management.settings.user({userId: user.id})"> {{user.displayName}} <span ng-if=user.primary_owner flex class=badge style=background-color:#039be5>Primary Owner</span> </a> </td> <td md-cell width=15% nowrap=nowrap>{{user.email}}</td> <td md-cell width=15% nowrap=nowrap>{{user.source}}</td> <td md-cell width=1% nowrap=nowrap ng-click=$event.stopPropagation()> <span ng-if=!user.primary_owner permission permission-only="[\'organization-user-d\']"> <md-tooltip md-direction=top>delete</md-tooltip> <ng-md-icon icon=delete style=width:20px;display:block ng-click="$ctrl.remove($event, user)" aria-label=delete-user></ng-md-icon> </span> </td> </tr> </tbody> </table> </md-table-container> <md-table-pagination ng-if="$ctrl.usersPage.page.size > 0" md-limit=$ctrl.usersPage.page.per_page md-page=$ctrl.usersPage.page.current md-total={{$ctrl.usersPage.page.total_elements}} md-on-paginate=$ctrl.onPaginate> </md-table-pagination> </div> </div> </div> <md-button ng-click=$ctrl.newUser() aria-label="Add user" class="md-fab md-fab-bottom-right md-fab-scrollable" ng-class="{\'gv-help-displayed\': $ctrl.$rootScope.helpDisplayed}"> <md-tooltip md-direction=top md-visible=false>Add user</md-tooltip> <ng-md-icon icon=add></ng-md-icon> </md-button> '},function(e,t,i){"use strict";t.__esModule=!0;var n=i(3),a={bindings:{selectedUser:"<",groups:"<",organizationRoles:"<",environmentRoles:"<",apiRoles:"<",applicationRoles:"<"},template:i(1021),controller:["$mdDialog","NotificationService","GroupService","UserService","RoleService","$scope","$rootScope","$window","$state",function(e,t,a,o,r,s,l,c,d){var p=this;this.$rootScope=l,this.$onInit=function(){s.selectedOrganizationRole=n.map(n.filter(p.selectedUser.roles,(function(e){return"organization"===e.scope})),(function(e){return e.id})),s.selectedEnvironmentRole=n.map(n.filter(p.selectedUser.roles,(function(e){return"environment"===e.scope})),(function(e){return e.id})),s.userApis=[],s.userApplications=[]},this.getUserPicture=function(){return o.getUserAvatar(p.selectedUser.id)},this.remove=function(n,r){n.stopPropagation(),e.show({controller:"DialogConfirmController",controllerAs:"ctrl",template:i(5),clickOutsideToClose:!0,locals:{msg:"",title:'Would you like to remove the user from the group "'+r.name+'" ?',confirmButton:"Remove"}}).then((function(e){e&&a.deleteMember(r.id,p.selectedUser.id).then((function(){t.show(p.selectedUser.displayName+' has been removed from the group "'+r.name+'"'),o.getUserGroups(p.selectedUser.id).then((function(e){return p.groups=e.data}))}))}))},this.updateGroupRole=function(e){var i={id:p.selectedUser.id,roles:e.roles},n=a.addOrUpdateMember(e.id,[i]);n&&n.then((function(){t.show("Role has been updated"),o.getUserGroups(p.selectedUser.id).then((function(e){return p.groups=e.data}))}))},this.updateOrganizationsRole=function(e,i){if(e){var a=[];a=s.selectedEnvironmentRole&&s.selectedEnvironmentRole.length>0?n.concat(s.selectedEnvironmentRole,i):i,o.updateUserRoles(p.selectedUser.id,a),t.show("Organization Role updated")}},this.updateEnvironmentsRole=function(e,i){if(e){var a=[];a=s.selectedOrganizationRole&&s.selectedOrganizationRole.length>0?n.concat(s.selectedOrganizationRole,i):i,o.updateUserRoles(p.selectedUser.id,a),t.show("Environment Role updated")}},this.addGroupDialog=function(){var t=p;a.list().then((function(n){e.show({controller:"DialogAddUserGroupController",controllerAs:"dialogCtrl",template:i(1022),clickOutsideToClose:!0,locals:{groups:n.data,apiRoles:p.apiRoles,applicationRoles:p.applicationRoles}}).then((function(e){t.updateGroupRole(e)}))}))},this.resetPasswordDialog=function(){e.show({controller:"DialogConfirmController",controllerAs:"ctrl",template:i(5),clickOutsideToClose:!0,locals:{title:'Are you sure you want to reset password of user "'+p.selectedUser.displayName+'"?',msg:"An email with a link to change it will be sent to him",confirmButton:"Reset"}}).then((function(e){e&&o.resetPassword(p.selectedUser.id).then((function(){t.show('The password of user "'+p.selectedUser.displayName+'" has been successfully reset')}))}))},this.loadUserApis=function(){o.getMemberships(p.selectedUser.id,"api").then((function(e){var t=[];n.forEach(e.data.metadata,(function(e,i){t.push({id:i,name:e.name,version:e.version,visibility:e.visibility})})),s.userApis=n.sortBy(t,"name")}))},this.loadUserApplications=function(){o.getMemberships(p.selectedUser.id,"application").then((function(e){var t=[];n.forEach(e.data.metadata,(function(e,i){e.status&&"archived"===e.status||t.push({id:i,name:e.name,type:e.type})})),s.userApplications=n.sortBy(t,"name")}))},this.backToUsers=function(){var e=c.localStorage.usersTablePage||1,t=c.localStorage.usersTableQuery||void 0;d.go("management.settings.users",{q:t,page:e})}}]};t.default=a},function(e,t){e.exports=' <div class=gv-forms layout=column> <div layout=row layout-align="start end" class=gv-forms-header style=display:flex;align-items:center;margin-top:16px> <gravitee-identity-picture image-id=$ctrl.selectedUser.id image-url=$ctrl.getUserPicture() image-name=$ctrl.selectedUser.displayName image-width=50 image-border-radius=true></gravitee-identity-picture> <h1 class=user> {{$ctrl.selectedUser.displayName}} </h1> <a ng-click=$ctrl.backToUsers() style=font-size:12px;font-weight:400>Back to users</a> </div> <div class=gv-form> <h2></h2> <div class=gv-form-content layout=column> <md-table-container layout=row layout-align="center center"> <table md-table> <tbody md-body> <tr md-row style=height:30px> <td md-cell width=15%><span style=font-weight:700>Email</span></td> <td md-cell width=35%>{{$ctrl.selectedUser.email}}</td> <td md-cell><span style=font-weight:700>Source</span></td> <td md-cell>{{$ctrl.selectedUser.source}}</td> </tr> <tr md-row style=background-color:#fff;height:30px> <td md-cell><span style=font-weight:700>Created at</span></td> <td md-cell>{{$ctrl.selectedUser.created_at | date:\'MMM d, y h:mm:ss a\'}}</td> <td md-cell nowrap=nowrap width=15%><span style=font-weight:700>Last connection at</span></td> <td md-cell width=35%>{{$ctrl.selectedUser.lastConnectionAt | date:\'MMM d, y h:mm:ss a\'}}</td> </tr> <tr md-row style=background-color:#fff;height:30px> <td md-cell nowrap=nowrap><span style=font-weight:700>Organization Role</span></td> <td md-cell> <md-select class=inline-multiple-select ng-model=selectedOrganizationRole aria-label="organization Role" md-on-open="selectOpened = true" md-on-close="selectOpened = false" ng-change="$ctrl.updateOrganizationsRole(selectOpened, selectedOrganizationRole)" multiple=multiple> <md-option ng-value=role.id ng-repeat="role in $ctrl.organizationRoles">{{role.name}}</md-option> </md-select> </td> <td md-cell><span style=font-weight:700>Environment Role</span></td> <td md-cell> <md-select class=inline-multiple-select ng-model=selectedEnvironmentRole aria-label="Environment Role" md-on-open="selectOpened = true" md-on-close="selectOpened = false" ng-change="$ctrl.updateEnvironmentsRole(selectOpened, selectedEnvironmentRole)" multiple=multiple> <md-option ng-value=role.id ng-repeat="role in $ctrl.environmentRoles">{{role.name}}</md-option> </md-select> </td> </tr> </tbody> </table> </md-table-container> <div layout=row layout-align="center center"> <md-button type=button class="md-raised md-warn" permission permission-only="\'organization-user-u\'" aria-label="User reset password" style=fill:#fff ng-if="$ctrl.selectedUser.source === \'gravitee\'" ng-click=$ctrl.resetPasswordDialog()> <ng-md-icon icon=autorenew></ng-md-icon>Reset user password </md-button> </div> </div> </div> <div class=gv-form> <h2></h2> <div class=gv-form-content layout=column> <md-tabs md-dynamic-height> <md-tab md-on-select="currentTab=\'groups\'"> <md-tab-label>Groups</md-tab-label> <md-tab-body> <div style="margin:16px 0 8px">You can manage all groups of this user.</div> <md-table-container> <table md-table class=gv-table-dense> <thead md-head> <tr md-row> <th md-column>Name</th> <th md-column>Group Admin</th> <th md-column>API Role</th> <th md-column>Application Role</th> <th md-column></th> </tr> </thead> <tbody md-body> <tr style=height:30px ng-if="$ctrl.groups.length === 0"> <td md-cell style=text-align:center colspan=4>None.</td> </tr> <tr md-row ng-repeat="group in $ctrl.groups"> <td md-cell>{{group.name}}</td> <td md-cell> <md-checkbox ng-model="group.roles[\'GROUP\']" ng-true-value="\'ADMIN\'" ng-false-value="\'\'" ng-change=$ctrl.updateGroupRole(group) aria-label="Administrator of this group"> </md-checkbox> </td> <td md-cell> <md-select ng-model="group.roles[\'API\']" aria-label=membership-api-role ng-change=$ctrl.updateGroupRole(group)> <md-option ng-value=role.name ng-repeat="role in $ctrl.apiRoles" ng-disabled=role.system>{{role.name}}</md-option> </md-select> </td> <td md-cell> <md-select ng-model="group.roles[\'APPLICATION\']" aria-label=membership-application-role ng-change=$ctrl.updateGroupRole(group)> <md-option ng-value=role.name ng-repeat="role in $ctrl.applicationRoles" ng-disabled=role.system>{{role.name}}</md-option> </md-select> </td> <td md-cell ng-click=$event.stopPropagation()> <div layout=row layout-align="end center"> <span permission permission-only="[\'organization-user-d\']"> <md-tooltip md-direction=top>delete</md-tooltip> <ng-md-icon icon=delete ng-click="$ctrl.remove($event, group)" aria-label=delete-user></ng-md-icon> </span> </div> </td> </tr> </tbody> </table> </md-table-container> </md-tab-body> </md-tab> <md-tab md-on-select="currentTab=\'apis\'; $ctrl.loadUserApis();"> <md-tab-label>APIs</md-tab-label> <md-tab-body> <div style="margin:16px 0 8px">Here is the list of all APIs of this user.</div> <md-table-container> <table md-table class=gv-table-dense> <thead md-head> <tr md-row> <th md-column>Name</th> <th md-column>Version</th> <th md-column>Visibility</th> </tr> </thead> <tbody md-body> <tr style=height:30px ng-if="userApis.length === 0"> <td md-cell style=text-align:center colspan=3>None.</td> </tr> <tr ng-repeat="api in userApis" md-row> <td md-cell>{{api.name}}</td> <td md-cell>{{api.version}}</td> <td md-cell> <ng-md-icon icon="{{api.visibility===\'public\' ? \'public\' : \'lock\'}}" size=20 style=fill:#cdcdcd> <md-tooltip>{{api.visibility}}</md-tooltip> </ng-md-icon> </td> </tr> </tbody> </table> </md-table-container> </md-tab-body> </md-tab> <md-tab md-on-select="currentTab=\'applications\'; $ctrl.loadUserApplications();"> <md-tab-label>Applications</md-tab-label> <md-tab-body> <div style="margin:16px 0 8px">Here is the list of all applications of this user.</div> <md-table-container> <table md-table class=gv-table-dense> <thead md-head> <tr md-row> <th md-column>Name</th> <th md-column>Type</th> </tr> </thead> <tbody md-body> <tr style=height:30px ng-if="userApplications.length === 0"> <td md-cell style=text-align:center colspan=2>None.</td> </tr> <tr ng-repeat="application in userApplications" md-row> <td md-cell>{{application.name}}</td> <td md-cell>{{application.type}}</td> </tr> </tbody> </table> </md-table-container> </md-tab-body> </md-tab> </md-tabs> </div> </div> </div> <md-button permission permission-only="[\'organization-user-c\']" class="md-fab md-fab-bottom-right md-fab-scrollable" ng-class="{\'gv-help-displayed\': $ctrl.$rootScope.helpDisplayed}" aria-label=Add ng-click=$ctrl.addGroupDialog()> <ng-md-icon icon=add></ng-md-icon> </md-button> '},function(e,t){e.exports=' <md-dialog aria-label="Add user into a group" style=min-width:350px> <form name=formGroup ng-submit=dialogCtrl.save() novalidate> <md-dialog-content layout-padding layout=column> <h4>Add a group with roles</h4> <md-input-container> <label>Group</label> <md-select ng-model=selectedGroup aria-label=group required> <md-option ng-repeat="group in dialogCtrl.groups" ng-value=group.id> {{group.name}} </md-option> </md-select> </md-input-container> <h5 ng-style="{ \'color\': (dialogCtrl.atLeastOneRoleSelected()) ? \'black\' : \'red\' }"> Select at least one role *: </h5> <md-input-container> <label>API Role</label> <md-select ng-model=selectedApiRole aria-label="API role"> <md-option ng-repeat="apiRole in dialogCtrl.apiRoles" ng-value=apiRole.name ng-disabled=apiRole.system> {{apiRole.name}} </md-option> </md-select> </md-input-container> <md-input-container> <label>Application Role</label> <md-select ng-model=selectedApplicationRole aria-label="Application role"> <md-option ng-repeat="applicationRole in dialogCtrl.applicationRoles" ng-value=applicationRole.name ng-disabled=applicationRole.system> {{applicationRole.name}} </md-option> </md-select> </md-input-container> </md-dialog-content> <div class=md-actions layout=row> <md-button ng-click=dialogCtrl.hide()> Cancel </md-button> <md-button type=submit class="md-raised md-primary" ng-disabled="formGroup.$invalid || !dialogCtrl.atLeastOneRoleSelected()"> Save </md-button> </div> </form> </md-dialog> '},function(e,t,i){"use strict";t.__esModule=!0;var n={template:i(1024),controller:["UserService","NotificationService","$state",function(e,t,i){var n=this;this.create=function(){e.create(n.user).then((function(){t.show("User registered with success"),i.go("management.settings.users")}))}}]};t.default=n},function(e,t){e.exports=' <div class=gv-forms layout=column> <div layout=row layout-align="start end" class=gv-forms-header> <h1 class=user> Create a user <a ui-sref=management.settings.users style=font-size:12px;font-weight:400>Back to users</a> </h1> </div> <div class=gv-form> <form name=$ctrl.formCreation ng-submit=$ctrl.create($) layout=column> <md-input-container class=md-icon-float> <label>First name</label> <input ng-model=$ctrl.user.firstname type=text required autofocus> </md-input-container> <md-input-container class=md-icon-float> <label>Last name</label> <input ng-model=$ctrl.user.lastname type=text required> </md-input-container> <md-input-container class=md-icon-float> <label>Email</label> <input ng-model=$ctrl.user.email type=email required> </md-input-container> <div class=md-actions layout=row> <md-button type=submit class="md-raised md-primary" ng-disabled="$ctrl.formCreation.$invalid || $ctrl.formCreation.$pristine"> Save </md-button> </div> </form> </div> </div> '},function(e,t,i){"use strict";function n(e,t,i,n,a){this.groups=i,this.apiRoles=n,this.applicationRoles=a,this.hide=function(){t.hide()},this.atLeastOneRoleSelected=function(){return e.selectedApiRole||e.selectedApplicationRole},this.save=function(){var i={};e.selectedApplicationRole&&(i.APPLICATION=e.selectedApplicationRole),e.selectedApiRole&&(i.API=e.selectedApiRole),t.hide({id:e.selectedGroup,roles:i})}}n.$inject=["$scope","$mdDialog","groups","apiRoles","applicationRoles"],t.__esModule=!0,t.default=n},function(e,t,i){"use strict";t.__esModule=!0;var n=i(3),a={bindings:{groups:"<"},template:i(1027),controller:["GroupService","UserService","NotificationService","$mdDialog","$state","$rootScope",function(e,t,a,o,r,s){var l=this;this.$rootScope=s,this.create=function(){r.go("management.settings.groups.create")},this.removeGroup=function(t,r,s){t.stopPropagation(),o.show({controller:"DialogConfirmController",controllerAs:"ctrl",template:i(5),clickOutsideToClose:!0,locals:{title:'Would you like to remove the group "'+s+'" ?',confirmButton:"Remove"}}).then((function(t){t&&e.remove(r).then((function(){a.show("Group "+s+" has been deleted."),e.list().then((function(e){l.groups=n.filter(e.data,"manageable"),l.initEventRules()}))}))}))},this.saveEventRules=function(t){t.manageable&&(e.updateEventRules(t,l.apiByDefault[t.id],l.applicationByDefault[t.id]),e.update(t).then((function(){a.show("Group "+t.name+" has been updated.")})))},this.selectGroupUrl=function(e){return e.manageable?r.go("management.settings.groups.group",{groupId:e.id}):null},this.hasEvent=function(e,t){return e.event_rules&&-1!==e.event_rules.findIndex((function(e){return e.event===t}))}}]};t.default=a},function(e,t){e.exports=' <div class=gv-forms layout=column> <h1>Groups</h1> <div class=gv-form> <h2></h2> <div class=gv-form-content layout=column> <md-table-container ng-if="$ctrl.groups.length > 0"> <table md-table ng-init="orderGrp = \'name\'" class=gv-table-dense> <thead md-head md-order=orderGrp> <tr md-row> <th md-column width=30% md-order-by=name>Name</th> <th md-column width=30% style=text-align:center>Associated to new API</th> <th md-column width=30% style=text-align:center>Associated to new application</th> <th md-column width=10%></th> </tr> </thead> <tbody md-body> <tr md-row ng-repeat="group in $ctrl.groups | orderBy: orderGrp"> <td md-cell> <a ng-click=$ctrl.selectGroupUrl(group)> {{group.name}} </a> </td> <td md-cell style=text-align:center> <ng-md-icon ng-if="$ctrl.hasEvent(group, \'API_CREATE\')" icon=done></ng-md-icon> </td> <td md-cell style=text-align:center> <ng-md-icon ng-if="$ctrl.hasEvent(group, \'APPLICATION_CREATE\')" icon=done></ng-md-icon> </td> <td md-cell ng-click=$event.stopPropagation() layout=row style="padding:10px 0"> <span ng-if=group.manageable> <md-tooltip md-direction=top>Delete</md-tooltip> <ng-md-icon icon=delete ng-click="$ctrl.removeGroup($event, group.id, group.name)" aria-label=delete-group></ng-md-icon> </span> </td> </tr> </tbody> </table> </md-table-container> <gravitee-empty-state ng-if="$ctrl.groups.length == 0" icon=dashboard model=GROUPS message="There is no group to manage"></gravitee-empty-state> <div ng-style="{\'text-align\': $ctrl.groups.length == 0 ? \'center\' : \'none\' }"> <md-button permission permission-only="[\'environment-group-c\']" ng-class="{\'md-fab-bottom-right md-fab-scrollable\': $ctrl.groups.length > 0, \'gv-help-displayed\': $ctrl.$rootScope.helpDisplayed}" class=md-fab aria-label=Add ng-click=$ctrl.create()> <ng-md-icon icon=add></ng-md-icon> </md-button> </div> </div> </div> </div> '},function(e,t,i){"use strict";t.__esModule=!0;var n=i(3),a={bindings:{group:"<",members:"<",apiRoles:"<",applicationRoles:"<",invitations:"<",tags:"<"},template:i(1029),controller:["GroupService","NotificationService","$mdDialog","$state","$scope","UserService","$rootScope",function(e,t,a,o,r,s,l){var c=this;this.$rootScope=l,this.$onInit=function(){c.updateMode=void 0!==c.group&&void 0!==c.group.id,c.updateMode||(c.group={}),r.groupApis=[],r.groupApplications=[],r.currentTab="users",c.group.roles&&(r.selectedApiRole=c.group.roles.API,r.selectedApplicationRole=c.group.roles.APPLICATION),c.apiByDefault=c.group.event_rules&&-1!==c.group.event_rules.findIndex((function(e){return"API_CREATE"===e.event})),c.applicationByDefault=c.group.event_rules&&-1!==c.group.event_rules.findIndex((function(e){return"APPLICATION_CREATE"===e.event}))},this.updateRole=function(i){e.addOrUpdateMember(c.group.id,[i]).then((function(e){t.show("Member successfully updated"),o.reload()}))},this.associateToApis=function(){e.associate(c.group.id,"api").then((function(e){o.reload(),t.show("Group '"+c.group.name+"' has been associated to all APIs")}))},this.associateToApplications=function(){e.associate(c.group.id,"application").then((function(e){o.reload(),t.show("Group '"+c.group.name+"' has been associated to all applications")}))},this.update=function(){if(e.updateEventRules(c.group,c.apiByDefault,c.applicationByDefault),c.updateMode){var i={};r.selectedApiRole?i.API=r.selectedApiRole:delete i.API,r.selectedApplicationRole?i.APPLICATION=r.selectedApplicationRole:delete i.APPLICATION,c.group.roles=i,e.update(c.group).then((function(e){c.group=e.data,c.$onInit(),r.formGroup.$setPristine(),t.show("Group '"+c.group.name+"' has been updated")}))}else e.create(c.group).then((function(e){o.go("management.settings.groups.group",{groupId:e.data.id},{reload:!0}),t.show("Group '"+c.group.name+"' has been created")}))},this.removeUser=function(n,o){n.stopPropagation(),a.show({controller:"DialogConfirmController",controllerAs:"ctrl",template:i(5),clickOutsideToClose:!0,locals:{msg:"",title:'Are you sure you want to remove the user "'+o.displayName+'"?',confirmButton:"Remove"}}).then((function(i){i&&e.deleteMember(c.group.id,o.id).then((function(i){t.show("Member "+o.displayName+" has been successfully removed"),e.getMembers(c.group.id).then((function(e){return c.members=e.data}))}))}))},this.showAddMemberModal=function(){a.show({controller:"DialogAddGroupMemberController",controllerAs:"$ctrl",template:i(1030),clickOutsideToClose:!0,locals:{defaultApiRole:r.selectedApiRole,defaultApplicationRole:r.selectedApplicationRole,group:c.group,apiRoles:c.apiRoles,applicationRoles:c.applicationRoles,canChangeDefaultApiRole:c.canChangeDefaultApiRole,canChangeDefaultApplicationRole:c.canChangeDefaultApplicationRole}}).then((function(i){i&&e.addOrUpdateMember(c.group.id,i).then((function(e){t.show("Member(s) successfully added"),o.reload()}))}),(function(){}))},this.loadGroupApis=function(){e.getMemberships(c.group.id,"api").then((function(e){r.groupApis=n.sortBy(e.data,"name")}))},this.loadGroupApplications=function(){e.getMemberships(c.group.id,"application").then((function(e){r.groupApplications=n.sortBy(e.data,"name")}))},this.reset=function(){o.reload()},this.canChangeDefaultApiRole=function(){return c.isSuperAdmin()||!c.group.lock_api_role},this.canChangeDefaultApplicationRole=function(){return c.isSuperAdmin()||!c.group.lock_application_role},this.canAddMembers=function(){if(c.isSuperAdmin())return!0;if(c.group.manageable){var e=(c.members?c.members.length:0)+(c.invitations?c.invitations.length:0);return!c.group.max_invitation||e<c.group.max_invitation}return!1},this.isSuperAdmin=function(){return s.isUserHasPermissions(["environment-group-u"])},this.canSave=function(){return!c.updateMode||c.group.manageable},this.updateInvitation=function(i){e.updateInvitation(c.group.id,i).then((function(){t.show("Invitation successfully updated"),o.reload()}))},this.showInviteMemberModal=function(){a.show({controller:["$mdDialog","group","apiRoles","applicationRoles","defaultApiRole","defaultApplicationRole","canChangeDefaultApiRole","canChangeDefaultApplicationRole",function(e,t,i,n,a,o,r,s){this.group=t,this.group.api_role=t.api_role||a,this.group.application_role=t.application_role||o,this.apiRoles=i,this.applicationRoles=n,this.canChangeDefaultApiRole=r,this.canChangeDefaultApplicationRole=s,this.hide=function(){e.hide()},this.save=function(){e.hide(this.email)}}],controllerAs:"$ctrl",template:i(1031),clickOutsideToClose:!0,locals:{defaultApiRole:r.selectedApiRole,defaultApplicationRole:r.selectedApplicationRole,group:c.group,apiRoles:c.apiRoles,applicationRoles:c.applicationRoles,canChangeDefaultApiRole:c.canChangeDefaultApiRole,canChangeDefaultApplicationRole:c.canChangeDefaultApplicationRole}}).then((function(i){i&&e.inviteMember(c.group,i).then((function(e){e.data.id?t.show("Invitation successfully sent"):t.show("Member successfully added"),o.reload()}))}),(function(){}))},this.removeInvitation=function(n,r){n.stopPropagation(),a.show({controller:"DialogConfirmController",controllerAs:"ctrl",template:i(5),clickOutsideToClose:!0,locals:{msg:"",title:'Are you sure you want to remove the invitation for "'+r.email+'"?',confirmButton:"Remove"}}).then((function(i){i&&e.deleteInvitation(c.group.id,r.id).then((function(){t.show("Invitation for "+r.email+" has been successfully removed"),o.reload()}))}),(function(){}))},this.hasGroupAdmin=function(){var e=!1;return n.forEach(c.members,(function(t){t.roles.GROUP&&"ADMIN"===t.roles.GROUP&&(e=!0)})),e}}]};t.default=a},function(e,t){e.exports=' <div class=gv-forms layout=column> <div class=gv-forms-header> <h1 ng-if=$ctrl.updateMode>{{$ctrl.group.name}}</h1> <h1 ng-if=!$ctrl.updateMode>Create a group</h1> <a ui-sref=management.settings.groups.list>Back to groups</a> </div> <form name=formGroup class=gv-form ng-submit=$ctrl.update()> <h2>General</h2> <div class=gv-form-content layout=column> <div layout-gt-sm=row> <md-input-container class=md-block flex-gt-sm> <label>Name</label> <input ng-model=$ctrl.group.name type=text required name=name maxlength=50> <div class=hint ng-if="$ctrl.formGroup.name.$valid || $ctrl.formGroup.name.$pristine">Group Name</div> <div ng-messages=$ctrl.formGroup.name.$error> <div ng-message=required>Group name is required.</div> <div ng-message=md-maxlength>The group name has to be less than 50 characters long.</div> </div> </md-input-container> </div> </div> <h2>Roles & Members</h2> <div class=gv-form-content layout=column> <div layout=row ng-if=$ctrl.updateMode> <div layout=row flex=50> <b style="margin:26px 10px 26px 0">Default API Role</b> <md-select placeholder="Default API Role" class=gv-input-number ng-model=selectedApiRole aria-label="Default API Role" ng-disabled=!$ctrl.canChangeDefaultApiRole()> <md-option ng-value=role.name ng-repeat="role in $ctrl.apiRoles" ng-disabled=role.system>{{role.name}}</md-option> </md-select> </div> <div layout=row flex=50> <b style="margin:26px 10px 26px 0">Default Application Role</b> <md-select placeholder="Default Application Role" ng-model=selectedApplicationRole class=gv-input-number aria-label="Default Application Role" ng-disabled=!$ctrl.canChangeDefaultApplicationRole()> <md-option ng-value=role.name ng-repeat="role in $ctrl.applicationRoles" ng-disabled=role.system>{{role.name}}</md-option> </md-select> </div> </div> <div permission permission-only="\'environment-group-u\'"> <div layout=column> <md-input-container class=gv-input-number> <label>Max members (default unlimited)</label> <input ng-model=$ctrl.group.max_invitation type=number min=0 max=99999> </md-input-container> <md-checkbox ng-model=$ctrl.group.system_invitation aria-label="Allows system invitation" class=md-align-top-left flex> Allows invitation via user search </md-checkbox> <md-checkbox ng-model=$ctrl.group.email_invitation aria-label="Allows email invitation" class=md-align-top-left flex> Allows email invitation </md-checkbox> <md-checkbox ng-model=$ctrl.group.lock_api_role ng-true-value=false ng-false-value=true aria-label="Change default API role" class=md-align-top-left flex> Allows the group admin to change the API role </md-checkbox> <md-checkbox ng-model=$ctrl.group.lock_application_role ng-true-value=false ng-false-value=true aria-label="Change default Application role" class=md-align-top-left flex> Allows the group admin to change the application role </md-checkbox> </div> </div> </div> <h2>Associations</h2> <div class=gv-form-content layout=column> <md-checkbox ng-model=$ctrl.apiByDefault ng-click=$event.stopPropagation() aria-label="Associate to every new API" class="md-primary md-align-top-left" flex> Associate automatically to every new API </md-checkbox> <md-checkbox ng-model=$ctrl.applicationByDefault aria-label="Associate to every new application" class="md-primary md-align-top-left" flex> Associate automatically to every new application </md-checkbox> <div class="md-actions gravitee-api-save-button" layout=row ng-if=$ctrl.updateMode> <md-button aria-label="Associate to existing APIs" ng-click=$ctrl.associateToApis() class="md-actions md-raised md-primary"> Associate to existing APIs </md-button> <md-button aria-label="Associate to existing applications" ng-click=$ctrl.associateToApplications() class="md-actions md-raised md-primary"> Associate to existing applications </md-button> </div> </div> <h2>Actions</h2> <div class=gv-form-content layout=column> <div class="md-actions gravitee-api-save-button" layout=row ng-if=$ctrl.canSave()> <md-button ng-if=$ctrl.updateMode class="md-raised md-primary" type=submit ng-disabled="formGroup.$invalid || formGroup.$pristine" permission permission-only="[\'environment-group-u\']"> Update </md-button> <md-button ng-if=!$ctrl.updateMode class="md-raised md-primary" type=submit ng-disabled="formGroup.$invalid || formGroup.$pristine" permission permission-only="[\'environment-group-c\']"> Create </md-button> <md-button class=md-raised type=button ng-click=$ctrl.reset() ng-disabled="formGroup.$invalid || formGroup.$pristine"> Reset </md-button> </div> </div> </form> <div class=gv-form ng-if=$ctrl.updateMode> <h2>Dependents</h2> <div class=gv-form-content layout=column> <md-tabs md-dynamic-height> <md-tab md-on-select="currentTab=\'users\'"> <md-tab-label>Members</md-tab-label> <md-tab-body> <div style="margin:16px 0 8px">You can manage all members of this group. <span permission permission-except="\'environment-group-u\'" ng-if=$ctrl.group.max_invitation> Limited to {{$ctrl.group.max_invitation}} members.</span> <div ng-if="$ctrl.hasGroupAdmin() && !$ctrl.group.system_invitation && !$ctrl.group.email_invitation" style=font-weight:700> Enable email invitation and/or user search to allow the group administrator to add users. </div> </div> <md-table-container> <table md-table ng-init="orderGrp = \'displayName\'"> <thead md-head md-order=orderGrp> <tr md-row> <th md-column width=22% md-order-by=displayName>Name</th> <th md-column width=22%>Group Admin</th> <th md-column width=22%>API Role</th> <th md-column width=22%>Application Role</th> <th md-column width=12%></th> </tr> </thead> <tbody md-body> <tr style=height:30px ng-if="$ctrl.members.length === 0"> <td md-cell style=text-align:center colspan=5>None.</td> </tr> <tr md-row ng-repeat="member in $ctrl.members | orderBy: orderGrp"> <td md-cell>{{member.displayName}}</td> <td md-cell> <md-checkbox ng-model="member.roles[\'GROUP\']" ng-true-value="\'ADMIN\'" ng-false-value="\'\'" ng-change=$ctrl.updateRole(member) aria-label="Administrator of this group"> </md-checkbox> </td> <td md-cell> <md-select ng-model="member.roles[\'API\']" aria-label="API Role" ng-change=$ctrl.updateRole(member) ng-disabled=!$ctrl.canChangeDefaultApiRole()> <md-option ng-value=role.name ng-repeat="role in $ctrl.apiRoles" ng-disabled=role.system>{{role.name}}</md-option> </md-select> </td> <td md-cell> <md-select ng-model="member.roles[\'APPLICATION\']" aria-label="Application Role" ng-change=$ctrl.updateRole(member) ng-disabled=!$ctrl.canChangeDefaultApplicationRole()> <md-option ng-value=role.name ng-repeat="role in $ctrl.applicationRoles" ng-disabled=role.system>{{role.name}}</md-option> </md-select> </td> <td md-cell ng-click=$event.stopPropagation()> <div layout=row layout-align="end center"> <span ng-if=$ctrl.group.manageable> <md-tooltip md-direction=top>delete</md-tooltip> <ng-md-icon icon=delete ng-click="$ctrl.removeUser($event, member)" aria-label=delete-user></ng-md-icon> </span> </div> </td> </tr> </tbody> </table> <div ng-if="$ctrl.invitations.length > 0"> <hr> <h3 style=color:red>Pending invitations</h3> <table md-table ng-init="orderInvitation = \'email\'"> <thead md-head md-order=orderInvitation> <tr md-row> <th md-column md-order-by=email>Email</th> <th md-column>API Role</th> <th md-column>Application Role</th> <th md-column md-order-by=created_at>Invitation date</th> <th md-column></th> </tr> </thead> <tbody md-body> <tr md-row ng-repeat="invitation in $ctrl.invitations | orderBy: orderInvitation"> <td md-cell>{{invitation.email}}</td> <td md-cell> <md-select ng-model=invitation.api_role aria-label="API Role" ng-change=$ctrl.updateInvitation(invitation) ng-disabled=!$ctrl.canChangeDefaultApiRole()> <md-option ng-value=role.name ng-repeat="role in $ctrl.apiRoles" ng-disabled=role.system>{{role.name}}</md-option> </md-select> </td> <td md-cell> <md-select ng-model=invitation.application_role aria-label="Application Role" ng-change=$ctrl.updateInvitation(invitation) ng-disabled=!$ctrl.canChangeDefaultApplicationRole()> <md-option ng-value=role.name ng-repeat="role in $ctrl.applicationRoles" ng-disabled=role.system>{{role.name}}</md-option> </md-select> </td> <td md-cell>{{invitation.created_at | date}}</td> <td md-cell ng-click=$event.stopPropagation()> <div layout=row layout-align="end center"> <span ng-if=$ctrl.group.manageable> <md-tooltip md-direction=top>delete</md-tooltip> <ng-md-icon icon=delete ng-click="$ctrl.removeInvitation($event, invitation)" aria-label=delete-user></ng-md-icon> </span> </div> </td> </tr> </tbody> </table> </div> </md-table-container>  </md-tab-body> </md-tab> <md-tab md-on-select="currentTab=\'apis\'; $ctrl.loadGroupApis();"> <md-tab-label>APIs</md-tab-label> <md-tab-body> <div style="margin:16px 0 8px">Here is the list of all APIs of this group.</div> <md-table-container> <table md-table> <thead md-head> <tr md-row> <th md-column>Name</th> <th md-column>Version</th> <th md-column>Visibility</th> </tr> </thead> <tbody md-body> <tr style=height:30px ng-if="groupApis.length === 0"> <td md-cell style=text-align:center colspan=3>None.</td> </tr> <tr ng-repeat="api in groupApis" md-row> <td md-cell>{{api.name}}</td> <td md-cell>{{api.version}}</td> <td md-cell> <ng-md-icon icon="{{api.visibility===\'public\' ? \'public\' : \'lock\'}}" size=20 style=fill:#cdcdcd> <md-tooltip>{{api.visibility}}</md-tooltip> </ng-md-icon> </td> </tr> </tbody> </table> </md-table-container> </md-tab-body> </md-tab> <md-tab md-on-select="currentTab=\'applications\'; $ctrl.loadGroupApplications();"> <md-tab-label>Applications</md-tab-label> <md-tab-body> <div style="margin:16px 0 8px">Here is the list of all applications of this group.</div> <md-table-container> <table md-table> <thead md-head> <tr md-row> <th md-column>Name</th> <th md-column>Type</th> </tr> </thead> <tbody md-body> <tr style=height:30px ng-if="groupApplications.length === 0"> <td md-cell style=text-align:center colspan=2>None.</td> </tr> <tr ng-repeat="application in groupApplications" md-row> <td md-cell>{{application.name}}</td> <td md-cell>{{application.type}}</td> </tr> </tbody> </table> </md-table-container> </md-tab-body> </md-tab> </md-tabs> </div> </div> </div> <md-fab-speed-dial ng-if="$ctrl.canAddMembers() || ($ctrl.group.system_invitation && $ctrl.group.email_invitation)" md-direction=left md-open=false class="md-scale md-fab-bottom-right md-fab-scrollable" ng-class="{\'gv-help-displayed\': $ctrl.$rootScope.helpDisplayed}"> <md-fab-trigger> <md-button aria-label=menu class="md-fab md-success"> <md-tooltip md-direction=top md-visible=false>Add member</md-tooltip> <ng-md-icon icon=add></ng-md-icon> </md-button> </md-fab-trigger> <md-fab-actions> <md-button ng-if="$ctrl.isSuperAdmin() || $ctrl.group.system_invitation" class="md-fab md-success md-mini" ng-click=$ctrl.showAddMemberModal() aria-label="Add member"> <md-tooltip md-direction=top>Add member</md-tooltip> <ng-md-icon icon=people></ng-md-icon> </md-button> <md-button ng-if="$ctrl.isSuperAdmin() || $ctrl.group.email_invitation" class="md-fab md-success md-mini" ng-click=$ctrl.showInviteMemberModal() aria-label="Invite member"> <md-tooltip md-direction=topmd-fab-bottom-right>Invite member</md-tooltip> <ng-md-icon icon=email></ng-md-icon> </md-button> </md-fab-actions> </md-fab-speed-dial> <md-button ng-if="!$ctrl.isSuperAdmin() && !($ctrl.group.system_invitation && $ctrl.group.email_invitation) && ($ctrl.group.system_invitation || $ctrl.group.email_invitation)" ng-click="$ctrl.group.system_invitation?$ctrl.showAddMemberModal(): $ctrl.showInviteMemberModal()" aria-label="Add member" class="md-fab md-fab-bottom-right md-fab-scrollable" ng-class="{\'gv-help-displayed\': $ctrl.$rootScope.helpDisplayed}"> <md-tooltip md-direction=top md-visible=false>Add member</md-tooltip> <ng-md-icon icon=add></ng-md-icon> </md-button> '},function(e,t){e.exports=' <md-dialog aria-label="Add member" layout-padding flex=30> <md-dialog-content class=searchMembers> <h4>Add members to {{$ctrl.group.name}}</h4> <div layout=row layout-align="space-between center"> <span>Choose an API role</span> <md-select ng-model=$ctrl.defaultApiRole aria-label="API Role" class=md-no-underline ng-disabled=!$ctrl.canChangeDefaultApiRole()> <md-option ng-repeat="role in $ctrl.apiRoles" ng-value=role.name ng-disabled=role.system> {{role.name}} </md-option> </md-select> </div> <div layout=row layout-align="space-between center"> <span>Choose an Application role</span> <md-select ng-model=$ctrl.defaultApplicationRole aria-label="Application Role" class=md-no-underline ng-disabled=!$ctrl.canChangeDefaultApplicationRole()> <md-option ng-repeat="role in $ctrl.applicationRoles" ng-value=role.name ng-disabled=role.system> {{role.name}} </md-option> </md-select> </div> <div ng-if="!$ctrl.defaultApiRole && !$ctrl.defaultApplicationRole" style="margin:0 0 8px 0;text-align:right"> <em style=color:red>Select at least one role</em> </div> <form name=formMember ng-submit=$event.preventDefault()> <md-autocomplete md-selected-item=selectedItem md-search-text=$ctrl.searchText md-selected-item-change=$ctrl.selectUser(user) md-items="user in $ctrl.searchUser($ctrl.searchText)" md-item-text=user.reference md-min-length=1 md-delay=500 placeholder="Search user..." md-autofocus=true md-menu-class=autocomplete-search-user flex> <md-item-template> <md-list-item class="md-2-line contact-item"> <gravitee-identity-picture image-id=user.id image-url=getUserAvatar(user.id) image-name=user.displayName image-width=40 image-border-radius=true class=md-avatar></gravitee-identity-picture> <div class="md-list-item-text compact"> <h3>{{user.displayName}}</h3> <span ng-if=user.email>{{user.email}}</span> </div> </md-list-item> </md-item-template> <md-not-found> No user matching "{{$ctrl.searchText}}" were found, or users already selected. </md-not-found> </md-autocomplete> <br/> <md-list class=fixedRows ng-show="$ctrl.usersSelected.length > 0"> <md-subheader class=md-no-sticky>Selected users</md-subheader> <md-list-item class="md-2-line contact-item" ng-repeat="(index, user) in $ctrl.usersSelected"> <gravitee-identity-picture image-id=user.id image-url=getUserAvatar(user.id) image-name=user.displayName image-width=40 image-border-radius=true class=md-avatar></gravitee-identity-picture> <div class="md-list-item-text compact"> <h3>{{user.displayName}}</h3> </div> </md-list-item> </md-list> </form> </md-dialog-content> <md-dialog-actions layout=row> <md-button ng-click=$ctrl.hide()> Cancel </md-button> <md-button type=submit class="md-raised md-primary" ng-click=$ctrl.addMembers() ng-disabled="formMember.$invalid || $ctrl.invalid()"> Add </md-button> </md-dialog-actions> </md-dialog> '},function(e,t){e.exports=' <md-dialog aria-label="Invite member" flex=30> <form name=formInvitation ng-submit=$ctrl.save() novalidate> <md-dialog-content layout-padding> <h4>Invite members to group <b>{{$ctrl.group.name}}</b></h4> <div layout=row layout-align="space-between center"> <span>Choose an API role</span> <md-select ng-model=$ctrl.group.api_role aria-label="API Role" class=md-no-underline ng-disabled=!$ctrl.canChangeDefaultApiRole()> <md-option ng-repeat="role in $ctrl.apiRoles" ng-value=role.name ng-disabled=role.system> {{role.name}} </md-option> </md-select> </div> <div layout=row layout-align="space-between center"> <span>Choose an Application role</span> <md-select ng-model=$ctrl.group.application_role aria-label="Application Role" class=md-no-underline ng-disabled=!$ctrl.canChangeDefaultApplicationRole()> <md-option ng-repeat="role in $ctrl.applicationRoles" ng-value=role.name ng-disabled=role.system> {{role.name}} </md-option> </md-select> </div> <div layout=column> <md-input-container> <label>Email</label> <input ng-model=$ctrl.email type=email required md-autofocus> </md-input-container> </div> </md-dialog-content> <md-dialog-actions layout=row> <md-button ng-click=$ctrl.hide()> Cancel </md-button> <md-button type=submit class="md-raised md-primary" ng-disabled=formInvitation.$invalid> Save </md-button> </md-dialog-actions> </form> </md-dialog> '},function(e,t,i){"use strict";t.__esModule=!0;var n=i(3),a=function(){function e(e,t){this.$http=e,this.groupsURL=t.baseURL+"configuration/groups"}return e.$inject=["$http","Constants"],e._mapToEntity=function(e){return{name:e.name,roles:e.roles,event_rules:e.event_rules,max_invitation:e.max_invitation,lock_api_role:e.lock_api_role,lock_application_role:e.lock_application_role,system_invitation:e.system_invitation,email_invitation:e.email_invitation}},e.prototype.get=function(e){return this.$http.get(this.groupsURL+"/"+e)},e.prototype.list=function(){return this.$http.get(this.groupsURL)},e.prototype.getMembers=function(e){return this.$http.get([this.groupsURL,e,"members"].join("/"))},e.prototype.create=function(t){if(t){var i=e._mapToEntity(t);return this.$http.post(this.groupsURL,i)}},e.prototype.update=function(t){if(t.id&&t){var i=e._mapToEntity(t);return this.$http.put([this.groupsURL,t.id].join("/"),i)}},e.prototype.remove=function(e){if(e)return this.$http.delete([this.groupsURL,e].join("/"))},e.prototype.updateEventRules=function(e,t,i){var n=[];t&&n.push({event:"API_CREATE"}),i&&n.push({event:"APPLICATION_CREATE"}),e.event_rules=n},e.prototype.addOrUpdateMember=function(e,t){var i=[],a=[];if(n.forEach(t,(function(e){if(n.filter(n.values(e.roles),(function(e){return!n.isEmpty(e)})).length>0){var t=n.keys(e.roles);n.forEach(t,(function(t){i.push({scope:t,name:e.roles[t]})})),a.push({id:e.id,reference:e.reference,roles:i})}})),a.length>0)return this.$http.post([this.groupsURL,e,"members"].join("/"),a)},e.prototype.deleteMember=function(e,t){return this.$http.delete([this.groupsURL,e,"members",t].join("/"))},e.prototype.getMemberships=function(e,t){return this.$http.get(this.groupsURL+"/"+e+"/memberships?type="+t)},e.prototype.associate=function(e,t){return this.$http.post(this.groupsURL+"/"+e+"/memberships?type="+t)},e.prototype.getInvitationsURL=function(e){return this.groupsURL+"/"+e+"/invitations/"},e.prototype.getInvitations=function(e){return this.$http.get(this.getInvitationsURL(e))},e.prototype.inviteMember=function(e,t){return this.$http.post(this.getInvitationsURL(e.id),{reference_type:"GROUP",reference_id:e.id,email:t,api_role:e.api_role,application_role:e.application_role})},e.prototype.deleteInvitation=function(e,t){return this.$http.delete(this.getInvitationsURL(e)+t)},e.prototype.updateInvitation=function(e,t){return delete t.created_at,delete t.updated_at,this.$http.put(this.getInvitationsURL(e)+t.id,t)},e}();t.default=a},function(e,t,i){"use strict";t.__esModule=!0;var n=function(){function e(e,t){this.$http=e,this.dictionariesURL=t.baseURL+"configuration/dictionaries"}return e.$inject=["$http","Constants"],e.prototype.list=function(){return this.$http.get(this.dictionariesURL)},e.prototype.get=function(e){return this.$http.get([this.dictionariesURL,e].join("/"))},e.prototype.create=function(e){return this.$http.post(this.dictionariesURL,e)},e.prototype.update=function(e){return this.$http.put([this.dictionariesURL,e.id].join("/"),{name:e.name,description:e.description,type:e.type,properties:e.properties,provider:e.provider,trigger:e.trigger})},e.prototype.delete=function(e){return this.$http.delete([this.dictionariesURL,e.id].join("/"))},e.prototype.deploy=function(e){return this.$http.post([this.dictionariesURL,e.id,"_deploy"].join("/"),{})},e.prototype.undeploy=function(e){return this.$http.post([this.dictionariesURL,e.id,"_undeploy"].join("/"),{})},e.prototype.start=function(e){return this.$http.post([this.dictionariesURL,e.id].join("/")+"?action=START",{})},e.prototype.stop=function(e){return this.$http.post([this.dictionariesURL,e.id].join("/")+"?action=STOP",{})},e}();t.default=n},function(e,t,i){"use strict";t.__esModule=!0;var n={bindings:{dictionaries:"<"},controller:"DictionariesController",template:i(1035)};t.default=n},function(e,t){e.exports=' <div class="gv-forms gv-forms-fluid" layout=column> <h1>Dictionaries</h1> <div class=gv-form> <h2></h2> <div class=gv-form-content layout=column> <md-table-container ng-if="$ctrl.dictionaries.length > 0"> <table md-table class=gv-table-dense> <thead md-head> <tr md-row> <th md-column>ID</th> <th md-column>Name</th> <th md-column>Description</th> <th md-column>Type</th> <th md-column>Number of properties</th> <th md-column>Last updated at</th> <th md-column>Last deployment at</th> </tr> </thead> <tbody md-body> <tr md-row ng-repeat="dictionary in $ctrl.dictionaries | orderBy: name"> <td md-cell> <a ui-sref="management.settings.dictionaries.dictionary({dictionaryId: dictionary.id})"> {{dictionary.id}} </a> </td> <td md-cell>{{dictionary.name}}</td> <td md-cell>{{dictionary.description}}</td> <td md-cell> {{dictionary.type}} <span permission permission-only="[\'environment-dictionary-u\']" ng-if="dictionary.type === \'dynamic\' && dictionary.state === \'started\'" style=color:#429f46> - Started</span> <span permission permission-only="[\'environment-dictionary-u\']" ng-if="dictionary.type === \'dynamic\' && dictionary.state !== \'started\'" style=color:red> - Stopped</span> </td> <td md-cell>{{dictionary.properties}}</td> <td md-cell>{{dictionary.updated_at | date:\'MMM d, y h:mm:ss a\'}}</td> <td md-cell>{{(dictionary.deployed_at | date:\'MMM d, y h:mm:ss a\') || \'-\'}}</td> </tr> </tbody> </table> </md-table-container> <gravitee-empty-state ng-if="$ctrl.dictionaries.length === 0" icon=assignment model=Dictionary message="Dictionaries will appear here" sub-message="Start creating a dictionary" create-mode=true></gravitee-empty-state> </div> </div> <md-button permission permission-only="\'environment-dictionary-c\'" aria-label="Add dictionary" class="md-fab md-fab-bottom-right md-fab-scrollable" ng-class="{\'gv-help-displayed\': $ctrl.$rootScope.helpDisplayed}" ui-sref=management.settings.dictionaries.new> <md-tooltip md-direction=top md-visible=false>Add a new dictionary</md-tooltip> <ng-md-icon icon=add></ng-md-icon> </md-button> </div> '},function(e,t,i){"use strict";t.__esModule=!0;var n=function(){function e(e,t){this.$state=e,this.$rootScope=t,this.$rootScope=t}return e.$inject=["$state","$rootScope"],e}();t.default=n},function(e,t,i){"use strict";t.__esModule=!0;var n={bindings:{dictionary:"<"},controller:"DictionaryController",template:i(1038)};t.default=n},function(e,t){e.exports=' <div class=gv-forms layout=column> <div class=gv-forms-header> <h1 ng-if=$ctrl.updateMode>{{$ctrl.dictionary.name}}</h1> <h1 ng-if=!$ctrl.updateMode>Create a new dictionary</h1> <a ui-sref=management.settings.dictionaries.list>Back to dictionnaries</a> </div> <form name=$ctrl.formDictionary ng-submit=$ctrl.update() novalidate> <div class=gv-form> <h2>General</h2> <div class=gv-form-content layout=column> <div layout-gt-sm=row> <md-input-container class=md-block flex-gt-sm> <label>Name</label> <input ng-model=$ctrl.dictionary.name type=text required name=name maxlength=50> <div class=hint ng-if="$ctrl.formDictionary.name.$valid || $ctrl.formDictionary.name.$pristine">Dictionary Name</div> <div ng-messages=$ctrl.formDictionary.name.$error> <div ng-message=required>dictionary name is required.</div> <div ng-message=md-maxlength>The name has to be less than 50 characters long.</div> </div> </md-input-container> </div> <div layout-gt-sm=row> <md-input-container class=md-block flex-gt-sm> <label>Description</label> <input ng-model=$ctrl.dictionary.description type=text name=description> <div class=hint ng-if="$ctrl.formDictionary.description.$valid || $ctrl.formDictionary.description.$pristine"> Provide a description of the dictionary </div> </md-input-container> </div> <div layout-gt-sm=row> <md-input-container class=md-block flex-gt-sm> <label>Type</label> <md-select ng-model=$ctrl.dictionary.type placeholder=Type required ng-required=true ng-disabled=$ctrl.dictionary.id> <md-option ng-repeat="type in $ctrl.types" ng-value=type.id>{{type.name}}</md-option> </md-select> <div class=hint ng-if="$ctrl.formDictionary.type.$valid || $ctrl.formDictionary.type.$pristine"> Set the type of the dictionary </div> </md-input-container> </div> <div layout-gt-sm=row ng-if=$ctrl.dictionary.deployed_at> <md-input-container class=md-block flex-gt-sm> <label>Last deployment at</label> <input value="{{$ctrl.dictionary.deployed_at | date:\'yyyy-MM-dd hh:mm:ss.sss\'}}" type=text name=lastDeploymentAt ng-disabled=true> </md-input-container> </div> <div layout-gt-sm=row ng-if="$ctrl.updateMode && $ctrl.dictionary.type === \'dynamic\'" permission permission-only="[\'environment-dictionary-u\']"> <label>Lifecycle</label> <md-input-container class=md-block flex-gt-sm> <md-button class=md-raised type=button ng-click=$ctrl.start() ng-disabled="$ctrl.dictionary.state === \'started\'"> Start </md-button> <md-button class="md-raised md-warn" type=button ng-click=$ctrl.stop() ng-disabled="$ctrl.dictionary.state === \'stopped\'"> Stop </md-button> </md-input-container> </div> </div> </div> <div class=gv-form ng-if="$ctrl.dictionary.type === \'dynamic\'" permission permission-only="[\'environment-dictionary-c\', \'environment-dictionary-u\', \'environment-dictionary-d\']"> <h2>Trigger</h2> <div class=gv-form-content layout=column> <div layout=row layout-sm=column> <md-input-container class=md-block flex-gt-xs> <label>Interval</label> <input required ng-model=$ctrl.dictionary.trigger.rate md-autofocus type=number min=1 ng-required=true> </md-input-container> <div flex=5 hide-xs hide-sm> </div> <md-input-container class=md-block flex-gt-xs> <label>Time Unit</label> <md-select ng-model=$ctrl.dictionary.trigger.unit placeholder="Time unit" required ng-required=true> <md-option ng-repeat="timeUnit in $ctrl.timeUnits" ng-value=timeUnit.id>{{timeUnit.name}}</md-option> </md-select> </md-input-container> </div> </div> </div> <div class=gv-form ng-if="$ctrl.dictionary.type === \'dynamic\'" permission permission-only="[\'environment-dictionary-c\', \'environment-dictionary-u\', \'environment-dictionary-d\']"> <h2>Provider</h2> <div class=gv-form-content layout=column> <md-input-container class=md-block flex-gt-xs> <label>Type</label> <md-select ng-model=$ctrl.dictionary.provider.type placeholder=Type required ng-required=true> <md-option ng-repeat="provider in $ctrl.providers" ng-value=provider.id>{{provider.name}}</md-option> </md-select> </md-input-container> <br> <div ng-if=$ctrl.dictionary.provider> <h6> Configuration <md-button ng-if="$ctrl.dictionary.provider.type == \'HTTP\'" class=md-icon-button aria-label="Expected HTTP provider output" ng-click=$ctrl.showExpectedProviderOutput()> <ng-md-icon class=no-top icon=info style=fill:#b1bdc5></ng-md-icon> </md-button> </h6> <div ng-if="$ctrl.dictionary.provider.type == \'HTTP\'" layout=column layout-sm=column> <md-input-container class=md-block flex-gt-sm> <label>HTTP Service URL</label> <input ng-model=$ctrl.dictionary.provider.configuration.url type=url ng-required=true> </md-input-container> <div layout=column layout-sm=column style=margin-bottom:15px> <h5 style=color:grey> <span>Headers</span> <ng-md-icon icon=add_circle_outline style=fill:#b1bdc5 aria-label="Add HTTP header" ng-click=$ctrl.addHTTPHeader()>Add headers</ng-md-icon> </h5> <div layout=row layout-sm=column layout-align="center center" ng-repeat="header in $ctrl.dictionary.provider.configuration.headers"> <ng-md-icon icon=remove_circle_outline style=fill:#b1bdc5 aria-label="Delete header" ng-click=$ctrl.removeHTTPHeader($index)></ng-md-icon> <div flex=5 hide-xs hide-sm> </div> <md-input-container flex-gt-sm> <input aria-label="Header name" ng-model=header.name type=text placeholder="Header name" ng-required=true> </md-input-container> <div flex=5 hide-xs hide-sm> </div> <md-input-container flex-gt-sm> <input aria-label="Header value" ng-model=header.value type=text placeholder="Header value" ng-required=true> </md-input-container> </div> </div> <md-input-container class=md-block flex-gt-sm> <label style="transform:translate3d(0,6px,0) scale(.75)!important"> Transformation (JOLT Specification) </label> <textarea ui-codemirror="{ onLoad : $ctrl.codemirrorLoaded }" ui-codemirror-opts=$ctrl.joltSpecificationOptions ng-model=$ctrl.dictionary.provider.configuration.specification ng-required=true rows=5></textarea> </md-input-container> </div> <br> </div> </div> </div> <div class="md-actions gravitee-api-save-button" layout=row> <md-button ng-if=$ctrl.updateMode class="md-raised md-primary" type=submit ng-disabled="$ctrl.formDictionary.$invalid || $ctrl.formDictionary.$pristine" permission permission-only="[\'environment-dictionary-u\']"> Update </md-button> <md-button ng-if=!$ctrl.updateMode class="md-raised md-primary" type=submit ng-disabled="$ctrl.formDictionary.$invalid || $ctrl.formDictionary.$pristine" permission permission-only="[\'environment-dictionary-c\']"> Create </md-button> <md-button class="md-raised md-primary" ng-if="$ctrl.updateMode && $ctrl.dictionary.type === \'manual\'" permission permission-only="[\'environment-dictionary-u\']" ng-click=$ctrl.deploy()> <ng-md-icon icon=backup style=fill:#fff></ng-md-icon> Deploy </md-button> <md-button class=md-raised type=button ng-click=$ctrl.reset() permission permission-only="[\'environment-dictionary-u\']" ng-disabled="$ctrl.formDictionary.$invalid || $ctrl.formDictionary.$pristine"> Reset </md-button> <md-button ng-if=$ctrl.updateMode class="md-raised md-warn float-right" type=button ng-click=$ctrl.delete() permission permission-only="[\'environment-dictionary-d\']"> Delete </md-button> </div> </form> <div class=gv-form ng-if=$ctrl.updateMode> <h2>Properties</h2> <div class=gv-form-content layout=column> <form name=formProperties ng-submit=$ctrl.saveProperties() novalidate> <md-table-container ng-if=$ctrl.hasProperties()> <table md-table ng-init="order = \'name\'"> <thead md-head md-order=order> <tr md-row> <th md-column> <md-checkbox aria-label="Select all" ng-model=$ctrl.selectAll ng-change=$ctrl.toggleSelectAll($ctrl.selectAll)></md-checkbox> </th> <th md-column md-order-by=name>Key</th> <th md-column>Value</th> <th md-column md-column width=80px nowrap=nowrap ng-if="$ctrl.dictionary.type === \'manual\'"></th> </tr> </thead> <tbody md-body> <tr md-row ng-repeat="(key, value) in $ctrl.getPropertiesPage()"> <td md-cell><md-checkbox aria-label="Select {{key}}" ng-model=$ctrl.selectedProperties[key] ng-change=$ctrl.checkSelectAll()></md-checkbox></td> <td md-cell>{{::key}}</td> <td md-cell ng-click="$ctrl.editProperty($event, key, value)" ng-class="{\'gravitee-placeholder\': value}"> {{::value || \'Set value\'}} </td> <td md-cell ng-if="$ctrl.dictionary.type === \'manual\'"> <ng-md-icon permission permission-only="[\'environment-dictionary-u\']" ng-click=$ctrl.deleteProperty(key) icon=delete></ng-md-icon> </td> </tr> </tbody> </table> </md-table-container> <md-table-pagination ng-if=$ctrl.hasProperties() md-limit=$ctrl.query.limit md-limit-options="[10, 25, 50, 75, 100]" md-page=$ctrl.query.page md-total={{$ctrl.query.total}} md-on-limit=$ctrl.searchEvents md-on-paginate=$ctrl.searchEvents md-page-select></md-table-pagination> <gravitee-empty-state ng-if=!$ctrl.hasProperties() icon=assignment model=Property message="Properties will appear here" sub-message="{{$ctrl.dictionary.type === \'dynamic\' ? \'Properties will be updated automatically\' : \'Start creating property\'}}" create-mode=!$ctrl.updateMode></gravitee-empty-state> <div class="md-actions gravitee-api-save-button" layout=row> <md-button ng-if="$ctrl.dictionary.type === \'manual\'" class="md-raised md-primary" type=submit permission permission-only="[\'environment-dictionary-u\']"> Save properties </md-button> <md-button class="md-raised md-warn float-right" type=button ng-click=$ctrl.deleteSelectedProperties() permission permission-only="[\'environment-dictionary-u\']" ng-disabled=!$ctrl.hasSelectedProperties()> Delete </md-button> </div> </form> </div> </div> </div> <md-button ng-if="$ctrl.dictionary.type === \'manual\' && $ctrl.dictionary.id" permission permission-only="\'environment-dictionary-u\'" aria-label="Create property" class="md-fab md-fab-bottom-right" ng-click=$ctrl.addProperty()> <md-tooltip md-direction=top md-visible=false>Create property</md-tooltip> <ng-md-icon icon=add></ng-md-icon> </md-button> '},function(e,t,i){"use strict";t.__esModule=!0;var n=i(3),a=function(){function e(e,t,i,n,a,o){this.$scope=e,this.$state=t,this.$mdEditDialog=i,this.$mdDialog=n,this.NotificationService=a,this.DictionaryService=o,this.selectedProperties={},this.types=[{id:"manual",name:"Manual"},{id:"dynamic",name:"Dynamic"}],this.providers=[{id:"HTTP",name:"Custom (HTTP)"}],this.timeUnits=[{id:"seconds",name:"Seconds"},{id:"minutes",name:"Minutes"},{id:"hours",name:"Hours"}],this.joltSpecificationOptions={placeholder:"Edit your JOLT specification here.",lineWrapping:!0,lineNumbers:!0,allowDropFileTypes:!0,autoCloseTags:!0,mode:"javascript",controller:this}}return e.$inject=["$scope","$state","$mdEditDialog","$mdDialog","NotificationService","DictionaryService"],e.prototype.$onInit=function(){this.updateMode=this.dictionary&&this.dictionary.id,this.initialDictionary=n.cloneDeep(this.dictionary),this.query={limit:10,page:1,total:this.initialDictionary&&this.initialDictionary.properties&&Object.keys(this.initialDictionary.properties).length||0}},e.prototype.getPropertiesPage=function(){return Object.entries(this.dictionary.properties).slice((this.query.page-1)*this.query.limit,this.query.page*this.query.limit).reduce((function(e,t){return e[t[0]]=t[1],e}),{})},e.prototype.reset=function(){this.dictionary=n.cloneDeep(this.initialDictionary),this.formDictionary.$setPristine()},e.prototype.update=function(){var e=this;this.updateMode?this.DictionaryService.update(this.dictionary).then((function(t){e.NotificationService.show("Dictionary "+e.dictionary.name+" has been updated"),e.dictionary=t.data})):this.DictionaryService.create(this.dictionary).then((function(t){e.NotificationService.show("Dictionary "+e.dictionary.name+" has been created"),e.$state.go("management.settings.dictionaries.dictionary",{dictionaryId:t.data.id},{reload:!0})}))},e.prototype.delete=function(){var e=this;this.$mdDialog.show({controller:"DialogConfirmController",controllerAs:"ctrl",template:i(5),clickOutsideToClose:!0,locals:{title:"Are you sure you want to delete this dictionary ?",confirmButton:"Yes, delete it."}}).then((function(t){t&&e.DictionaryService.delete(e.dictionary).then((function(t){e.NotificationService.show("Dictionary "+e.dictionary.name+" has been deleted"),e.$state.go("management.settings.dictionaries.list",{},{reload:!0})}))}))},e.prototype.deploy=function(){var e=this;this.DictionaryService.deploy(this.dictionary).then((function(t){e.NotificationService.show("Dictionary "+e.dictionary.name+" has been deployed"),e.dictionary=t.data}))},e.prototype.start=function(){var e=this;this.DictionaryService.start(this.dictionary).then((function(t){e.NotificationService.show("Dictionary "+e.dictionary.name+" has been started"),e.dictionary=t.data}))},e.prototype.stop=function(){var e=this;this.DictionaryService.stop(this.dictionary).then((function(t){e.NotificationService.show("Dictionary "+e.dictionary.name+" has been stopped"),e.dictionary=t.data}))},e.prototype.hasProperties=function(){return this.dictionary.properties&&Object.keys(this.dictionary.properties).length>0},e.prototype.addProperty=function(){var e=this;this.$mdDialog.show({controller:"DialogAddPropertyController",controllerAs:"dialogDictionaryAddPropertyCtrl",template:i(1040),clickOutsideToClose:!0}).then((function(t){void 0===e.dictionary.properties&&(e.dictionary.properties={}),t&&(e.dictionary.properties[t.key]=t.value,++e.query.total)}))},e.prototype.editProperty=function(e,t,i){var n=this;e.stopPropagation(),this.$mdEditDialog.small({modelValue:i,placeholder:"Set property value",save:function(e){n.dictionary.properties[t]=e.$modelValue},targetEvent:e,validators:{"md-maxlength":160}})},e.prototype.deleteProperty=function(e){delete this.dictionary.properties[e],--this.query.total},e.prototype.deleteSelectedProperties=function(){var e=this;n.forEach(this.selectedProperties,(function(t,i){t&&(e.deleteProperty(i),delete e.selectedProperties[i])}))},e.prototype.saveProperties=function(){var e=this;this.DictionaryService.update(this.dictionary).then((function(t){e.NotificationService.show("Properties has been updated"),e.dictionary=t.data}))},e.prototype.toggleSelectAll=function(e){var t=this;e?n.forEach(this.dictionary.properties,(function(e,i){return t.selectedProperties[i]=!0})):this.selectedProperties={}},e.prototype.checkSelectAll=function(){this.selectAll=n.filter(this.selectedProperties,(function(e){return e})).length===Object.keys(this.dictionary.properties).length},e.prototype.hasSelectedProperties=function(){return n.filter(this.selectedProperties,(function(e){return e})).length>0},e.prototype.addHTTPHeader=function(){void 0===this.dictionary.provider.configuration.headers&&(this.dictionary.provider.configuration.headers=[]),this.dictionary.provider.configuration.headers.push({name:"",value:""})},e.prototype.removeHTTPHeader=function(e){void 0!==this.dictionary.provider.configuration.headers&&(this.dictionary.provider.configuration.headers.splice(e,1),this.formDictionary.$setDirty())},e}();t.default=a},function(e,t){e.exports=' <md-dialog aria-label="New property"> <form name=formDictionaryProperty ng-submit=dialogDictionaryAddPropertyCtrl.save() novalidate> <md-dialog-content layout-padding> <h4>New property</h4> <md-input-container> <label>Name</label> <input ng-model=property.name id=key required> </md-input-container> <md-input-container> <label>Value</label> <input ng-model=property.value id=value required> </md-input-container> </md-dialog-content> <md-dialog-actions layout=row> <md-button ng-click=dialogDictionaryAddPropertyCtrl.hide()> Cancel </md-button> <md-button type=submit class="md-raised md-primary" ng-disabled=formDictionaryProperty.$invalid> Add </md-button> </md-dialog-actions> </form> </md-dialog> '},function(e,t,i){"use strict";function n(e,t){this.hide=function(){t.hide()},this.save=function(){var i={key:e.property.name,value:e.property.value};t.hide(i)}}n.$inject=["$scope","$mdDialog"],t.__esModule=!0,t.default=n},function(e,t,i){"use strict";t.__esModule=!0;var n=i(3),a={bindings:{identityProviders:"<"},template:i(1043),controller:["$mdDialog","IdentityProviderService","PortalConfigService","NotificationService","$state","Constants","$rootScope",function(e,t,a,o,r,s,l){var c=this;this.$rootScope=l,this.settings=n.cloneDeep(s),this.availableProviders=[{name:"Gravitee.io AM",icon:"perm_identity",type:"graviteeio_am"},{name:"Google",icon:"google-plus",type:"google"},{name:"GitHub",icon:"github-circle",type:"github"},{name:"OpenID Connect",icon:"perm_identity",type:"oidc"}],this.create=function(e){r.go("management.settings.identityproviders.new",{type:e})},this.delete=function(n){e.show({controller:"DialogConfirmController",controllerAs:"ctrl",template:i(5),clickOutsideToClose:!0,locals:{title:"Are you sure you want to delete this identity provider ?",msg:"",confirmButton:"Delete"}}).then((function(e){e&&t.delete(n).then((function(e){o.show("Identity provider '"+n.name+"' has been deleted"),r.go("management.settings.identityproviders.list",{},{reload:!0})}))}))},this.saveForceLogin=function(){a.save({authentication:{forceLogin:{enabled:c.settings.authentication.forceLogin.enabled}}}).then((function(e){o.show("Authentication is now "+(c.settings.authentication.forceLogin.enabled?"mandatory":"optional")),s.authentication.forceLogin=e.data.authentication.forceLogin}))},this.saveShowLoginForm=function(){a.save({authentication:{localLogin:{enabled:c.settings.authentication.localLogin.enabled}}}).then((function(e){o.show("Login form is now "+(c.settings.authentication.localLogin.enabled?"enabled":"disabled")),s.authentication.localLogin=e.data.authentication.localLogin}))}}]};t.default=a},function(e,t){e.exports=' <div class="gv-forms gv-forms-fluid" layout=column> <h1>Authentication</h1> <div class=gv-form> <h2></h2> <div class=gv-form-content layout=column> <h3>Configuration</h3> <md-input-container class=gv-input-container-dense> <md-checkbox ng-model=$ctrl.settings.authentication.forceLogin.enabled aria-label="Force login" ng-change=$ctrl.saveForceLogin()> Force authentication to access portal </md-checkbox> </md-input-container> <md-input-container class=gv-input-container-dense> <md-checkbox ng-model=$ctrl.settings.authentication.localLogin.enabled aria-label="Show login form" ng-change=$ctrl.saveShowLoginForm()> Show login form </md-checkbox> </md-input-container> <md-table-container ng-if="$ctrl.identityProviders.length > 0"> <table md-table class=gv-table-dense> <thead md-head> <tr md-row> <th md-column width=1% nowrap=nowrap></th> <th md-column>ID</th> <th md-column>Name</th> <th md-column>Description</th> <th md-column>Enabled</th> <th md-column>Sync</th> <th md-column>Last updated at</th> <th md-column width=48px nowrap=nowrap></th> </tr> </thead> <tbody md-body> <tr md-row ng-repeat="identityProvider in $ctrl.identityProviders | orderBy: name"> <td md-cell ng-switch=identityProvider.type> <md-icon md-svg-icon="assets/logo_{{identityProvider.type | lowercase}}-idp.svg" style=fill:#000></md-icon> </td> <td md-cell> <a ui-sref="management.settings.identityproviders.identityprovider({id: identityProvider.id})">{{identityProvider.id}}</a> </td> <td md-cell>{{identityProvider.name}}</td> <td md-cell>{{identityProvider.description}}</td> <td md-cell> <ng-md-icon ng-if=identityProvider.enabled icon=done></ng-md-icon> </td> <td md-cell> <ng-md-icon ng-if=identityProvider.sync icon=done></ng-md-icon> </td> <td md-cell>{{identityProvider.updated_at | date:\'MMM d, y h:mm:ss a\'}}</td> <td md-cell width=40 nowrap=nowrap> <ng-md-icon permission permission-only="\'environment-identity_provider-d\'" icon=delete ng-click=$ctrl.delete(identityProvider)> <md-tooltip md-direction=top md-visible=false>Delete</md-tooltip> </ng-md-icon> </td> </tr> </tbody> </table> </md-table-container> <gravitee-empty-state ng-if="$ctrl.identityProviders.length === 0" icon=perm_identity model="Identity Provider" message="Identity providers will appear here" sub-message="Start creating an identity provider" create-mode=true></gravitee-empty-state> </div> </div> <md-fab-speed-dial permission permission-only="\'environment-identity_provider-c\'" md-direction="{{$ctrl.identityProviders.length > 0 ? \'left\' : \'down\'}}" md-open=false ng-class="{\'md-fab-bottom-right md-fab-scrollable\' : $ctrl.identityProviders.length > 0, \'gv-help-displayed\': $ctrl.$rootScope.helpDisplayed}" class=md-scale> <md-fab-trigger> <md-button aria-label=menu class="md-fab md-success"> <md-tooltip ng-if="$ctrl.identityProviders.length > 0" md-direction=top md-visible=false>New identity provider</md-tooltip> <ng-md-icon icon=add></ng-md-icon> </md-button> </md-fab-trigger> <md-fab-actions> <md-button ng-repeat="provider in $ctrl.availableProviders" class="md-fab md-raised md-mini" ng-click=$ctrl.create(provider.type)> <md-tooltip md-direction="{{$ctrl.availableProviders.length > 0 ? \'top\' : \'right\'}}">{{provider.name}}</md-tooltip> <md-icon md-svg-icon="assets/logo_{{provider.type | lowercase}}-idp.svg" style=fill:#000></md-icon> </md-button> </md-fab-actions> </md-fab-speed-dial> </div> '},function(e,t,i){"use strict";t.__esModule=!0;var n={bindings:{identityProvider:"<",groups:"<",environmentRoles:"<",organizationRoles:"<"},controller:"IdentityProviderController",template:i(1045)};t.default=n},function(e,t){e.exports=' <div class=gv-forms layout=column> <div layout=row layout-align="start end" class=gv-forms-header> <h1 ng-if=$ctrl.updateMode> <md-icon md-svg-icon="assets/logo_{{$ctrl.identityProvider.type | lowercase}}-idp.svg" style=fill:#000></md-icon> {{$ctrl.identityProvider.name}} </h1> <h1 ng-if=!$ctrl.updateMode>Create a new {{$ctrl.identityProvider.type}} identity provider</h1> <a ui-sref=management.settings.identityproviders.list>Back to identity providers</a> </div> <form name=formIdentityProvider ng-submit=$ctrl.update() novalidate> <div class=gv-form> <h2>General</h2> <div class=gv-form-content layout=column> <div layout-gt-sm=row> <md-input-container class=md-block flex-gt-sm> <md-checkbox ng-model=$ctrl.identityProvider.enabled aria-label="Enable identity provider" class="md-primary md-align-top-left" flex> Enable authentication using this identity provider. </md-checkbox> </md-input-container> </div> <div layout-gt-sm=row> <md-input-container class=md-block flex-gt-sm> <label>Name</label> <input ng-model=$ctrl.identityProvider.name type=text required name=name maxlength=50 autofocus> <div class=hint ng-if="formIdentityProvider.name.$valid || formIdentityProvider.name.$pristine"> Identity provider name. The name will be used to define the authentication endpoint.</div> <div ng-messages=formIdentityProvider.name.$error> <div ng-message=required>Identity provider name is required.</div> <div ng-message=md-maxlength>The identity provider has to be less than 50 characters long.</div> </div> </md-input-container> </div> <div layout-gt-sm=row> <md-input-container class=md-block flex-gt-sm> <label>Description</label> <input ng-model=$ctrl.identityProvider.description type=text name=description> <div class=hint ng-if="formIdentityProvider.description.$valid || formIdentityProvider.description.$pristine"> Provide a description of the identity provider </div> </md-input-container> </div> <div layout-gt-sm=row ng-if="$ctrl.identityProvider.type === \'oidc\' && $ctrl.tokenExchangeEndpoint"> <md-input-container class=md-block flex-gt-sm> <label>Token exchange endpoint</label> <input ng-model=$ctrl.tokenExchangeEndpoint type=text name=exchangeEndpoint readonly=readonly> <div class=hint> Token exchange endpoint used to convert a provider token to a gravitee token to let the user to consume the Gravitee.io Management API. </div> </md-input-container> </div> <div layout-gt-sm=row> <md-input-container class=md-block flex-gt-sm> <md-checkbox ng-model=$ctrl.identityProvider.emailRequired aria-label="A public email is required" class="md-primary md-align-top-left" flex> A public email is required to be able to authenticate. </md-checkbox> </md-input-container> </div> <div layout-gt-sm=row> <md-radio-group ng-model=$ctrl.identityProvider.syncMappings> <md-radio-button ng-value=false class=md-primary> Group and role mappings are computed only during first user authentication. Subsequent authentications will not update any of these mappings. This mode is useful if you want to let the platform administrator manage by himself roles and permissions. </md-radio-button> <md-radio-button ng-value=true> Group and role mappings are computed during each user authentication. Platform administrators still have the ability to override mappings but those one will be refreshed after next user authentications.</md-radio-button> </md-radio-group> </div> </div> </div> <div ng-switch=$ctrl.identityProvider.type> <gv-identityprovider-google ng-switch-when=google identity-provider=$ctrl.identityProvider></gv-identityprovider-google> <gv-identityprovider-github ng-switch-when=github identity-provider=$ctrl.identityProvider></gv-identityprovider-github> <gv-identityprovider-oidc ng-switch-when=oidc identity-provider=$ctrl.identityProvider></gv-identityprovider-oidc> <gv-identityprovider-graviteeio-am ng-switch-when=graviteeio_am identity-provider=$ctrl.identityProvider></gv-identityprovider-graviteeio-am> </div> <div class=gv-form ng-if=$ctrl.updateMode> <h2>Groups Mapping</h2> <div class=gv-form-content layout=column> <div layout-gt-sm=column ng-repeat="mapping in $ctrl.identityProvider.groupMappings"> <div layout=row> <div flex=5 layout=row layout-align="center center" style="border-right:1px solid #d3d3d3;margin-right:10px"> <ng-md-icon icon=close style=fill:grey size=20px ng-click=$ctrl.deleteGroupMapping($index)></ng-md-icon> </div> <div layout=column flex> <md-input-container class=md-block flex-gt-sm> <label>Condition</label> <input ng-model=mapping.condition type=text required name=group-mapping-condition> <div class=hint>The condition which should be validated to associate below groups at login time.</div> </md-input-container> <md-input-container class=md-block flex-gt-sm> <label>Groups</label> <md-select ng-model=mapping.groups multiple=multiple required> <md-option ng-repeat="group in $ctrl.groups" ng-value=group.id> {{group.name}} </md-option> </md-select> </md-input-container> </div> </div> <hr/> </div> <a ng-click=$ctrl.addGroupMapping();>Add a new mapping</a> </div> </div> <div class=gv-form ng-if=$ctrl.updateMode> <h2>Roles Mapping</h2> <div class=gv-form-content layout=column> <div layout-gt-sm=column ng-repeat="mapping in $ctrl.identityProvider.roleMappings"> <div layout=row> <div flex=5 layout=row layout-align="center center" style="border-right:1px solid #d3d3d3;margin-right:10px"> <ng-md-icon icon=close style=fill:grey size=20px ng-click=$ctrl.deleteRoleMapping($index)></ng-md-icon> </div> <div layout=column flex> <md-input-container class=md-block flex-gt-sm> <label>Condition</label> <input ng-model=mapping.condition type=text required name=group-mapping-condition> <div class=hint>The condition which should be validated to associate below roles at login time.</div> </md-input-container> <md-input-container class=md-block flex-gt-sm> <label>Environment Role</label> <md-select ng-model=mapping.environments multiple=multiple> <md-option ng-repeat="role in $ctrl.environmentRoles" ng-value=role.name> {{role.name}} </md-option> </md-select> </md-input-container> <md-input-container class=md-block flex-gt-sm> <label>Organization Role</label> <md-select ng-model=mapping.organizations multiple=multiple> <md-option ng-repeat="role in $ctrl.organizationRoles" ng-value=role.name> {{role.name}} </md-option> </md-select> </md-input-container> </div> <hr/> </div> </div> <a ng-click=$ctrl.addRoleMapping();>Add a new mapping</a> </div> </div> <div class="md-actions gravitee-api-save-button" layout=row> <md-button ng-if=$ctrl.updateMode class="md-raised md-primary" type=submit ng-disabled="formIdentityProvider.$invalid || formIdentityProvider.$pristine" permission permission-only="[\'environment-identity_provider-u\']"> Update </md-button> <md-button ng-if=!$ctrl.updateMode class="md-raised md-primary" type=submit ng-disabled="formIdentityProvider.$invalid || formIdentityProvider.$pristine" permission permission-only="[\'environment-identity_provider-c\']"> Create </md-button> <md-button class=md-raised type=button ng-click=$ctrl.reset() permission permission-only="[\'environment-identity_provider-u\']" ng-disabled="formIdentityProvider.$invalid || formIdentityProvider.$pristine"> Reset </md-button> </div> </form> </div> '},function(e,t,i){"use strict";t.__esModule=!0;var n=i(1047),a=i(3),o=function(){function e(e,t,i,n,a,o,r){this.$scope=e,this.$state=t,this.$mdEditDialog=i,this.Constants=n,this.$mdDialog=a,this.NotificationService=o,this.IdentityProviderService=r}return e.$inject=["$scope","$state","$mdEditDialog","Constants","$mdDialog","NotificationService","IdentityProviderService"],e.prototype.$onInit=function(){this.updateMode=void 0!==this.identityProvider&&void 0!==this.identityProvider.id,this.updateMode?this.tokenExchangeEndpoint=this.Constants.baseURL+"auth/oauth2/"+this.identityProvider.id:(this.identityProvider=new n.IdentityProvider,this.identityProvider.enabled=!0,this.identityProvider.type=this.$state.params.type,this.identityProvider.configuration=new Map,this.identityProvider.configuration.scopes=[],this.identityProvider.emailRequired=!0,"oidc"!==this.identityProvider.type&&"graviteeio_am"!==this.identityProvider.type||(this.identityProvider.userProfileMapping={id:"sub",firstname:"given_name",lastname:"family_name",email:"email",picture:"picture"})),this.initialIdentityProvider=a.cloneDeep(this.identityProvider)},e.prototype.addGroupMapping=function(){this.identityProvider.groupMappings.push(new n.GroupMapping),this.$scope.formIdentityProvider.$setDirty()},e.prototype.addRoleMapping=function(){this.identityProvider.roleMappings.push(new n.RoleMapping),this.$scope.formIdentityProvider.$setDirty()},e.prototype.deleteGroupMapping=function(e){this.identityProvider.groupMappings.splice(e,1),this.$scope.formIdentityProvider.$setDirty()},e.prototype.deleteRoleMapping=function(e){this.identityProvider.roleMappings.splice(e,1),this.$scope.formIdentityProvider.$setDirty()},e.prototype.reset=function(){this.identityProvider=a.cloneDeep(this.initialIdentityProvider),this.$scope.formIdentityProvider.$setPristine()},e.prototype.update=function(){var e=this;this.updateMode?this.IdentityProviderService.update(this.identityProvider).then((function(t){e.NotificationService.show("Identity provider "+e.identityProvider.name+" has been updated"),e.identityProvider=t,e.$scope.formIdentityProvider.$setPristine()})):this.IdentityProviderService.create(this.identityProvider).then((function(t){e.NotificationService.show("Identity provider "+e.identityProvider.name+" has been created"),e.$state.go("management.settings.identityproviders.identityprovider",{id:t.data.id},{reload:!0})}))},e}();t.default=o},function(e,t,i){"use strict";t.__esModule=!0;var n=function(){};t.GroupMapping=n;var a=function(){};t.RoleMapping=a;var o=function(){};t.IdentityProvider=o},function(e,t,i){"use strict";t.__esModule=!0;var n={bindings:{identityProvider:"<"},template:i(1049)};t.default=n},function(e,t){e.exports=" <div class=gv-form> <h2>Configuration</h2> <div class=gv-form-content layout=column> <div layout=column> <md-input-container class=md-block flex-gt-xs> <label>Client Id</label> <input ng-model=$ctrl.identityProvider.configuration.clientId md-autofocus type=text required> </md-input-container> <md-input-container class=md-block flex-gt-xs> <label>Client Secret</label> <input ng-model=$ctrl.identityProvider.configuration.clientSecret md-autofocus type=text required> </md-input-container> </div> </div> </div> "},function(e,t,i){"use strict";t.__esModule=!0;var n={bindings:{identityProvider:"<"},template:i(1051)};t.default=n},function(e,t){e.exports=" <div class=gv-form> <h2>Configuration</h2> <div class=gv-form-content layout=column> <div layout=column> <md-input-container class=md-block flex-gt-xs> <label>Client Id</label> <input ng-model=$ctrl.identityProvider.configuration.clientId md-autofocus type=text required> </md-input-container> <md-input-container class=md-block flex-gt-xs> <label>Client Secret</label> <input ng-model=$ctrl.identityProvider.configuration.clientSecret md-autofocus type=text required> </md-input-container> </div> </div> </div> "},function(e,t,i){"use strict";t.__esModule=!0;var n={bindings:{identityProvider:"<"},template:i(1053),controller:function(){this.buttonConfig={},this.buttonConfig.backgroundOptions={label:"Text Background",icon:"font_download",default:"#34A0D4",hasBackdrop:!0,clickOutsideToClose:!0,random:!0,openOnInput:!0,alphaChannel:!1,genericPalette:!1,history:!1}}};t.default=n},function(e,t){e.exports=' <div class=gv-form> <h2>Configuration</h2> <div class=gv-form-content layout=column> <div layout=column> <md-input-container class=md-block flex-gt-xs> <label>Client Id</label> <input ng-model=$ctrl.identityProvider.configuration.clientId type=text required> </md-input-container> <md-input-container class=md-block flex-gt-xs> <label>Client Secret</label> <input ng-model=$ctrl.identityProvider.configuration.clientSecret type=text required> </md-input-container> <md-input-container class=md-block flex-gt-xs> <label>Server URL</label> <input ng-model=$ctrl.identityProvider.configuration.serverURL type=url required> </md-input-container> <md-input-container class=md-block flex-gt-xs> <label>Security domain</label> <input ng-model=$ctrl.identityProvider.configuration.domain type=text required> </md-input-container> <md-input-container class=md-block flex-gt-xs> <label>Scopes</label> <md-chips ng-model=$ctrl.identityProvider.configuration.scopes md-add-on-blur=true placeholder="Enter a scope and press Enter"></md-chips> </md-input-container> <label>Authentication button color</label> <div flex md-color-picker=$ctrl.buttonConfig ng-model=$ctrl.identityProvider.configuration.color md-color-history=true> </div> </div> </div> </div> <div class=gv-form> <h2>User profile mapping</h2> <div class=gv-form-content layout=column> <div layout=column> <md-input-container class=md-block flex-gt-xs> <label>ID</label> <input ng-model=$ctrl.identityProvider.userProfileMapping.id type=text placeholder=sub required> </md-input-container> <md-input-container class=md-block flex-gt-xs> <label>First name</label> <input ng-model=$ctrl.identityProvider.userProfileMapping.firstname type=text placeholder=given_name> </md-input-container> <md-input-container class=md-block flex-gt-xs> <label>Last name</label> <input ng-model=$ctrl.identityProvider.userProfileMapping.lastname type=text placeholder=family_name> </md-input-container> <md-input-container class=md-block flex-gt-xs> <label>Email</label> <input ng-model=$ctrl.identityProvider.userProfileMapping.email type=text placeholder=email> </md-input-container> <md-input-container class=md-block flex-gt-xs> <label>Picture</label> <input ng-model=$ctrl.identityProvider.userProfileMapping.picture type=text placeholder=picture> </md-input-container> </div> </div> </div> '},function(e,t,i){"use strict";t.__esModule=!0;var n={bindings:{identityProvider:"<"},template:i(1055),controller:function(){this.buttonConfig={},this.buttonConfig.backgroundOptions={label:"Text Background",icon:"font_download",default:"#34A0D4",hasBackdrop:!0,clickOutsideToClose:!0,random:!0,openOnInput:!0,alphaChannel:!1,genericPalette:!1,history:!1}}};t.default=n},function(e,t){e.exports=' <div class=gv-form> <h2>Configuration</h2> <div class=gv-form-content layout=column> <div layout=column> <md-input-container class=md-block flex-gt-xs> <label>Client Id</label> <input ng-model=$ctrl.identityProvider.configuration.clientId type=text required> </md-input-container> <md-input-container class=md-block flex-gt-xs> <label>Client Secret</label> <input ng-model=$ctrl.identityProvider.configuration.clientSecret type=text required> </md-input-container> <md-input-container class=md-block flex-gt-xs> <label>Token Endpoint</label> <input ng-model=$ctrl.identityProvider.configuration.tokenEndpoint type=url required> </md-input-container> <md-input-container class=md-block flex-gt-xs> <label>Token Introspection Endpoint</label> <input ng-model=$ctrl.identityProvider.configuration.tokenIntrospectionEndpoint type=url> </md-input-container> <md-input-container class=md-block flex-gt-xs> <label>Authorize Endpoint</label> <input ng-model=$ctrl.identityProvider.configuration.authorizeEndpoint type=url required> </md-input-container> <md-input-container class=md-block flex-gt-xs> <label>UserInfo Endpoint</label> <input ng-model=$ctrl.identityProvider.configuration.userInfoEndpoint type=url required> </md-input-container> <md-input-container class=md-block flex-gt-xs> <label>User Logout Endpoint</label> <input ng-model=$ctrl.identityProvider.configuration.userLogoutEndpoint type=url> </md-input-container> <md-input-container class=md-block flex-gt-xs> <label>Scopes</label> <md-chips ng-model=$ctrl.identityProvider.configuration.scopes md-add-on-blur=true placeholder="Enter a scope and press Enter"></md-chips> </md-input-container> <label>Authentication button color</label> <div flex md-color-picker=$ctrl.buttonConfig ng-model=$ctrl.identityProvider.configuration.color md-color-history=true> </div> </div> </div> </div> <div class=gv-form> <h2>User profile mapping</h2> <div class=gv-form-content layout=column> <div layout=column> <md-input-container class=md-block flex-gt-xs> <label>ID</label> <input ng-model=$ctrl.identityProvider.userProfileMapping.id type=text placeholder=sub required> </md-input-container> <md-input-container class=md-block flex-gt-xs> <label>First name</label> <input ng-model=$ctrl.identityProvider.userProfileMapping.firstname type=text placeholder=given_name> </md-input-container> <md-input-container class=md-block flex-gt-xs> <label>Last name</label> <input ng-model=$ctrl.identityProvider.userProfileMapping.lastname type=text placeholder=family_name> </md-input-container> <md-input-container class=md-block flex-gt-xs> <label>Email</label> <input ng-model=$ctrl.identityProvider.userProfileMapping.email type=text placeholder=email> </md-input-container> <md-input-container class=md-block flex-gt-xs> <label>Picture</label> <input ng-model=$ctrl.identityProvider.userProfileMapping.picture type=text placeholder=picture> </md-input-container> </div> </div> </div> '},function(e,t,i){"use strict";t.__esModule=!0;var n=function(){function e(e,t){this.$http=e,this.URL=t.baseURL+"configuration/identities/"}return e.$inject=["$http","Constants"],e.prototype.list=function(){return this.$http.get(this.URL).then((function(e){return e.data}))},e.prototype.get=function(e){return this.$http.get(this.URL+e).then((function(e){var t=e.data;return t.configuration=t.configuration||{},t.configuration.scopes=t.configuration.scopes||[],t.groupMappings=t.groupMappings||[],t.roleMappings=t.roleMappings||[],t.userProfileMapping=t.userProfileMapping||{},t}))},e.prototype.create=function(e){return this.$http.post(this.URL,e)},e.prototype.update=function(e){return this.$http.put(this.URL+e.id,{name:e.name,description:e.description,configuration:e.configuration,enabled:e.enabled,groupMappings:e.groupMappings,roleMappings:e.roleMappings,userProfileMapping:e.userProfileMapping,emailRequired:e.emailRequired,syncMappings:e.syncMappings}).then((function(e){var t=e.data;return t.configuration=t.configuration||{},t.configuration.scopes=t.configuration.scopes||[],t.groupMappings=t.groupMappings||[],t.roleMappings=t.roleMappings||[],t.userProfileMapping=t.userProfileMapping||{},t}))},e.prototype.delete=function(e){return this.$http.delete(this.URL+e.id)},e}();t.default=n},function(e,t,i){"use strict";t.__esModule=!0;var n=function(){function e(){}return e.prototype.hashCode=function(e){var t=0;if(0===e.length)return t;for(var i=0;i<e.length;i++){t=(t<<5)-t+e.charCodeAt(i),t&=t}return t},e}();t.default=n},function(e,t,i){"use strict";t.__esModule=!0;var n=i(3),a=function(){function e(e,t,i,n,a,o,r,s){this.$rootScope=e,this.Constants=t,this.$window=i,this.$state=n,this.$auth=a,this.UserService=o,this.RouterService=r,this.SatellizerConfig=s}return e.$inject=["$rootScope","Constants","$window","$state","$auth","UserService","RouterService","SatellizerConfig"],e.prototype.authenticate=function(e,t){var i=this;e.type="oidc"===e.type?"oauth2":e.type;var a=this.SatellizerConfig.providers[e.id];a?(e.scope=e.scopes,n.merge(a,e)):a=n.merge(e,{oauthType:"2.0",requiredUrlParams:["scope","state"],scopeDelimiter:" ",scope:e.scopes}),this.SatellizerConfig.providers[e.id]=n.merge(a,{state:t||this.nonce(32),url:this.Constants.baseURL+"auth/oauth2/"+e.id,redirectUri:window.location.origin+("/"===window.location.pathname?"":window.location.pathname)}),this.$auth.authenticate(e.id).then((function(t){i.UserService.current().then((function(n){e.userLogoutEndpoint&&i.$window.localStorage.setItem("user-logout-url",e.userLogoutEndpoint),i.$rootScope.$broadcast("graviteeUserRefresh",{user:n});var a=t.data.state;if(void 0!==a){var o=JSON.parse(i.$window.localStorage[a]);if(o.redirectUri)return void(i.$window.location.href="#!"+o.redirectUri)}var r=i.RouterService.getLastRoute();r.from&&""!==r.from.name&&"logout"!==r.from.name&&"confirm"!==r.from.name?i.$state.go(r.from.name,r.fromParams):i.$state.go("management")}))})).catch((function(){}))},e.prototype.nonce=function(e){for(var t="",i="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789",n=0;n<e;n++)t+=i.charAt(Math.floor(Math.random()*i.length));return t},e}();t.default=a},function(e,t,i){"use strict";function n(e,t,i,n){e.debugEnabled(!1),t.deferIntercept(),i.suppressUndefinedPermissionWarning(!0),n.errorOnUnhandledRejections(!1)}n.$inject=["$logProvider","$urlServiceProvider","$permissionProvider","$qProvider"],t.__esModule=!0,t.default=n},function(e,t,i){"use strict";function n(e,t){e.state("root",{abstract:!0,template:"<div layout='row'><div ui-view='sidenav' class='gravitee-sidenav'></div><md-content ui-view layout='column' flex style='height: 100vh' class='md-content'></md-content></div>",resolve:{graviteeUser:["UserService",function(e){return e.current()}]}}).state("withSidenav",{parent:"root",abstract:!0,views:{sidenav:{component:"gvSidenav"},"":{template:'<div flex layout="row"><div class="gv-main-container" ui-view layout="column" flex></div><gv-contextual-doc></gv-contextual-doc></div>'}},resolve:{allMenuItems:["$state",function(e){return e.get()}],menuItems:["$state","graviteeUser","Constants",function(e,t,i){return e.get().filter((function(e){return!e.abstract&&e.data&&e.data.menu})).filter((function(e){var i=e.data.menu.firstLevel,n=!e.data.perms||!e.data.perms.only||t.allowedTo(e.data.perms.only);return i&&n}))}]}}).state("user",{url:"/user",component:"user",parent:"withSidenav",resolve:{user:["graviteeUser",function(e){return e}]}}).state("login",{url:"/login?redirectUri",template:i(1061),controller:"LoginController",controllerAs:"$ctrl",resolve:{checkUser:["UserService","$state",function(e,t){e.currentUser&&e.currentUser.id&&t.go("management")}],identityProviders:["PortalService",function(e){return e.listSocialIdentityProviders().then((function(e){return e.data}))}]},params:{redirectUri:{type:"string"}}}).state("registration",{url:"/registration",template:i(1062),controller:"RegistrationController",controllerAs:"$ctrl",resolve:{checkUser:["UserService","$state",function(e,t){e.currentUser&&e.currentUser.id&&t.go("management")}]}}).state("confirm",{url:"/registration/confirm/:token",template:i(1063),controller:"ConfirmController",controllerAs:"confirmCtrl"}).state("resetPassword",{url:"/resetPassword/:token",template:i(1064),controller:"ResetPasswordController",controllerAs:"resetPasswordCtrl"}).state("logout",{template:'<div class="gravitee-no-sidenav-container"></div>',controller:["UserService","$state","$rootScope","$window",function(e,t,i,n){e.logout().then((function(){t.go("login"),i.$broadcast("graviteeUserRefresh",{}),i.$broadcast("graviteeUserCancelScheduledServices");var e=n.localStorage.getItem("user-logout-url");n.localStorage.removeItem("user-logout-url"),null!=e&&(n.location.href=e+encodeURIComponent(window.location.origin))}))}]}).state("confirmProfile",{url:"/confirmProfile",template:i(1065),controller:"ConfirmProfileController",controllerAs:"$ctrl"}),t.rules.otherwise("/login")}n.$inject=["$stateProvider","$urlServiceProvider"],t.__esModule=!0,t.default=n},function(e,t){e.exports=' <md-content class=gravitee-no-sidenav-container flex> <div class=login-page> <div class=form> <div class=gravitee-no-sidenav-header layout=column> <label>Sign In</label> <label class=subtitle>to continue to the Administration Portal</label> </div> <form name=formUser class=form-content ng-submit=$ctrl.login() layout=column ng-if="!$ctrl.localLoginDisabled || $ctrl.providers.length == 0"> <div layout=row> <md-input-container class="md-icon-float md-block" flex> <label>Username</label> <input ng-model=$ctrl.user.username type=text placeholder="" required autofocus> </md-input-container> </div> <div layout=row> <md-input-container class="md-icon-float md-block" flex> <label>Password</label> <input ng-model=$ctrl.user.password placeholder="" type=password required> </md-input-container> </div> <button type=submit class="btn btn-block btn-signin" ng-disabled="canBeDisabled && (formUser.$invalid || formUser.$pristine)"> <md-icon md-svg-icon=assets/logo_sign-in.svg style=fill:#fff></md-icon> <span>Sign in</span> </button> <p class="text-center text-muted" ng-if=$ctrl.userCreationEnabled> <small>Don\'t have an account yet? <a ui-sref=registration>Sign up</a></small> </p> </form> <div class=form-content> <button class="btn btn-block btn-{{provider.type}}" ng-style="{{ $ctrl.getProviderStyle(provider) }}" data-ng-repeat="provider in $ctrl.identityProviders" ng-click=$ctrl.authenticate(provider.id)> <md-icon md-svg-icon="assets/logo_{{provider.type | lowercase}}-idp.svg" ng-style="{\'fill\': $ctrl.getProviderColor(provider)}"></md-icon> <span>{{provider.name}}</span> </button> </div> </div> </div> </md-content> '},function(e,t){e.exports=' <md-content class=gravitee-no-sidenav-container flex> <div class=login-page> <div class=form> <div class=gravitee-no-sidenav-header layout=column> <label>Sign Up</label> </div> <form name=formRegistration ng-submit=$ctrl.register() layout=column> <md-input-container class=md-icon-float> <label>First name</label> <input ng-model=$ctrl.user.firstname type=text required autofocus> </md-input-container> <md-input-container class=md-icon-float> <label>Last name</label> <input ng-model=$ctrl.user.lastname type=text required> </md-input-container> <md-input-container class=md-icon-float> <label>Email</label> <input ng-model=$ctrl.user.email type=email required> </md-input-container> <md-button type=submit class="md-raised md-primary" ng-disabled="formRegistration.$invalid || formRegistration.$pristine || isLoading"> Sign up </md-button> <br> <p class="text-center text-muted"> <small>I have already an account! <a ui-sref=login>Sign in</a></small> </p> </form> </div> </div> </md-content> '},function(e,t){e.exports=' <md-content class=gravitee-no-sidenav-container flex> <div class=login-page> <div class=form> <div class=gravitee-no-sidenav-header layout=column> <label>Confirm your registration</label> </div> <label style=color:red ng-show=error>{{error}}</label> <form name=formConfirm ng-show=!error ng-submit=confirmRegistration() layout=column> <md-input-container class=md-icon-float> <label>First name</label> <input ng-if=registrationMode ng-model=user.firstname ng-disabled=registrationMode type=text required> </md-input-container> <md-input-container class=md-icon-float> <label>Last name</label> <input ng-model=user.lastname ng-disabled=registrationMode type=text required> </md-input-container> <md-input-container class=md-icon-float> <label>Email</label> <input ng-model=user.email type=email disabled=disabled required> </md-input-container> <md-input-container class=md-icon-float ng-class="{\'md-input-invalid\': isInvalidPassword()}"> <label>Password</label> <input ng-if=registrationMode ng-model=user.password type=password required autofocus> </md-input-container> <md-input-container class=md-icon-float ng-class="{\'md-input-invalid\': isInvalidPassword()}"> <label>Confirm password</label> <input ng-model=confirmPassword type=password required> </md-input-container> <label style=color:red!important ng-if=isInvalidPassword()>The confirm password is different!</label> <md-button type=submit class="md-raised md-primary" ng-disabled="formConfirm.$invalid || formConfirm.$pristine || isLoading || isInvalidPassword() || error"> Confirm registration </md-button> <a ui-sref=login class=text-right>Back to login</a> </form> </div> </div> </md-content> '},function(e,t){e.exports=' <md-content class=gravitee-no-sidenav-container flex> <div class=login-page> <div class=form> <div class=gravitee-no-sidenav-header layout=column> <label>Reset password</label> </div> <label style=color:red ng-show=error>{{error}}</label> <form name=formConfirm ng-show=!error ng-submit=changePassword() layout=column> <md-input-container class=md-icon-float> <label>First name</label> <input ng-model=user.firstname type=text ng-disabled=true required> </md-input-container> <md-input-container class=md-icon-float> <label>Last name</label> <input ng-model=user.lastname type=text ng-disabled=true required> </md-input-container> <md-input-container class=md-icon-float> <label>Email</label> <input ng-model=user.email type=email ng-disabled=true required> </md-input-container> <md-input-container class=md-icon-float ng-class="{\'md-input-invalid\': isInvalidPassword()}"> <label>Password</label> <input ng-model=user.password type=password ng-required=true autofocus> </md-input-container> <md-input-container class=md-icon-float ng-class="{\'md-input-invalid\': isInvalidPassword()}"> <label>Confirm password</label> <input ng-model=confirmPassword type=password ng-required=true> <div class=hint><i>Passwords must follow the rules in place.</i></div> </md-input-container> <label style=color:red!important ng-if=isInvalidPassword()>The confirm password is different!</label> <md-button type=submit class="md-raised md-primary" ng-disabled="formConfirm.$invalid || formConfirm.$pristine || isLoading || isInvalidPassword() || error" style=margin-top:50px> Confirm change password </md-button> <a ui-sref=login class=text-right>Back to login</a> </form> </div> </div> </md-content> '},function(e,t){e.exports=' <md-content class=gravitee-no-sidenav-container flex> <div class=login-page> <div class=form> <div class=gravitee-no-sidenav-header layout=column> <label>Confirm profile</label> </div> <form name=formConfirm ng-submit=save() layout=column> <gravitee-image image-id=user.id image=user.picture image-border-radius=true image-url=$ctrl.UserService.currentUserPicture() image-name=user.displayName image-form=formConfirm></gravitee-image> <md-input-container ng-show=!hasEmail class=md-block flex-gt-sm flex=20> <label>Email</label> <input ng-model=user.email type=email ng-required=user.newsletter> </md-input-container> <div style=font-size:9px;padding-bottom:5px> <md-checkbox ng-show=$ctrl.newsletterEnabled ng-model=user.newsletter aria-label="Subscribe to newsletter" flex> Subscribe to newsletter and receive information about new versions and updates </md-checkbox> For more information check our <a href=https://gravitee.io/privacy target=_blank>privacy policy</a> </div> <md-button type=submit class="md-raised md-primary" ng-disabled="isLoading || formConfirm.$invalid">Confirm profile</md-button> </form> </div> </div> </md-content> '},function(e,t,i){"use strict";function n(e){e.state("management",{redirectTo:"management.apis.list",parent:"withSidenav",controller:["$rootScope","Constants",function(e,t){e.portalTitle=t.management.title}]}).state("management.instances",{abstract:!0,url:"/instances",template:"<div ui-view></div>"}).state("management.instances.list",{url:"/",component:"instances",resolve:{instances:["InstancesService",function(e){return e.search().then((function(e){return e.data}))}]},data:{menu:{label:"Gateways",icon:"developer_dashboard",firstLevel:!0,order:30},perms:{only:["environment-instance-r"]},docs:{page:"management-gateways"}}}).state("management.instances.detail",{abstract:!0,url:"/:instanceId",component:"instance",resolve:{instance:["$stateParams","InstancesService",function(e,t){return t.get(e.instanceId).then((function(e){return e.data}))}]}}).state("management.instances.detail.environment",{url:"/environment",component:"instanceEnvironment",data:{menu:{label:"Environment",icon:"computer"},docs:{page:"management-gateway-environment"}}}).state("management.instances.detail.monitoring",{url:"/monitoring",component:"instanceMonitoring",data:{menu:{label:"Monitoring",icon:"graphic_eq"},docs:{page:"management-gateway-monitoring"}},resolve:{monitoringData:["$stateParams","InstancesService","instance",function(e,t,i){return t.getMonitoringData(e.instanceId,i.id).then((function(e){return e.data}))}]}}).state("management.platform",{url:"/platform?from&to&q&dashboard",template:i(1067),controller:"DashboardController",controllerAs:"dashboardCtrl",resolve:{dashboards:["DashboardService",function(e){return e.list("PLATFORM").then((function(e){return e.data}))}]},data:{menu:{label:"Dashboard",icon:"show_chart",firstLevel:!0,order:40},perms:{only:["environment-platform-r"]},docs:{page:"management-dashboard"}},params:{from:{type:"int",dynamic:!0},to:{type:"int",dynamic:!0},q:{type:"string",dynamic:!0},dashboard:{type:"string",dynamic:!0}}}).state("management.logs",{url:"/logs?from&to&q&page&size",component:"platformLogs",data:{menu:null,devMode:!0,perms:{only:["environment-platform-r"]},docs:{page:"management-api-logs"}},params:{from:{type:"int",dynamic:!0},to:{type:"int",dynamic:!0},q:{type:"string",dynamic:!0},page:{type:"int",dynamic:!0},size:{type:"int",dynamic:!0}},resolve:{apis:["$stateParams","ApiService",function(e,t){return t.list()}],applications:["$stateParams","ApplicationService",function(e,t){return t.list()}]}}).state("management.log",{url:"/logs/:logId?timestamp&from&to&q&page&size",component:"platformLog",resolve:{log:["$stateParams","AnalyticsService",function(e,t){return t.getLog(e.logId,e.timestamp).then((function(e){return e.data}))}]},data:{devMode:!0,menu:null,perms:{only:["environment-platform-r"]},docs:{page:"management-api-log"}}}).state("management.audit",{url:"/audit",template:i(1068),controller:"AuditController",controllerAs:"auditCtrl",data:{menu:{label:"Audit",icon:"visibility",firstLevel:!0,order:50},perms:{only:["environment-audit-r"]},docs:{page:"management-audit"}},resolve:{resolvedApis:["ApiService",function(e){return e.list().then((function(e){return e.data}))}],resolvedApplications:["ApplicationService",function(e){return e.list().then((function(e){return e.data}))}],resolvedEvents:["AuditService",function(e){return e.listEvents().then((function(e){return e.data}))}]}}).state("management.messages",{url:"/messages",component:"messages",data:{menu:{label:"Messages",icon:"message",firstLevel:!0,order:50},perms:{only:["environment-message-c"]},docs:{page:"management-messages"}},resolve:{resolvedScope:function(){return"ENVIRONMENT"},resolvedRoles:["RoleService",function(e){return e.list("ENVIRONMENT")}]}}).state("management.tasks",{url:"/tasks",component:"tasks",data:{docs:{page:"management-tasks"}},resolve:{tasks:["graviteeUser",function(e){return e.tasks}]}}).state("management.support",{url:"/support",template:i(1069),controller:"SupportTicketController",controllerAs:"supportTicketCtrl"})}n.$inject=["$stateProvider"],t.__esModule=!0,t.default=n},function(e,t){e.exports=' <div class=gv-sub-content> <div class="gv-forms gv-forms-fluid" layout=column> <div layout=row> <h1 flex>Platform Overview</h1> <div layout=row ng-if=dashboardCtrl.dashboards.length> <label style=padding:27px>Select a dashboard</label> <md-input-container> <md-select ng-model=dashboardCtrl.dashboard ng-change=dashboardCtrl.onDashboardChanged(dashboardCtrl.dashboard.id) aria-label="Dashboard selection"> <md-option ng-repeat="dashboard in dashboardCtrl.dashboards" ng-value=dashboard> {{dashboard.name}} </md-option> </md-select> </md-input-container> </div> </div> <div class=gv-form> <gv-dashboard model=dashboardCtrl.dashboard on-timeframe-change=dashboardCtrl.onTimeframeChange(timeframe) on-view-log-click=dashboardCtrl.viewLogs() access-logs=true></gv-dashboard> </div> <div class=gv-form ng-if="dashboardCtrl.events.content.length > 0"> <h2>API Events</h2> <div class=gv-form-content layout=column> <md-list> <md-list-item class=eventType ng-class="{eventTypeSelected: selection}" ng-repeat="eventType in dashboardCtrl.eventTypes"> <a ng-click="selection= !selection; dashboardCtrl.selectEvent(eventType)"> <span><strong>{{dashboardCtrl.getEventLabel(eventType.toLowerCase())}}</strong></span> </a> </md-list-item> </md-list> <div> <md-table-container> <table md-table> <thead md-head> <tr md-row> <th md-column>Date</th> <th md-column>Type</th> <th md-column>API</th> </tr> </thead> <tbody md-body> <tr md-row ng-repeat="event in dashboardCtrl.events.content" style=height:25px> <td md-cell>{{event.updated_at | humanDatetimeFilter }}</td> <td md-cell>{{dashboardCtrl.getEventLabel(event.type)}}</td> <td md-cell> <a ui-sref="management.apis.detail.analytics.overview({ apiId: event.properties.api_id, from: dashboardCtrl.$state.params.from, to: dashboardCtrl.$state.params.to} )"> {{event.properties.api_name}} <small>({{event.properties.api_version}})</small> </a> </td> </tr> <tr ng-if="dashboardCtrl.events.content.length === 0"> <td md-cell colspan=2>No event</td> </tr> </tbody> </table> </md-table-container> <md-table-pagination md-limit=dashboardCtrl.query.limit md-limit-options="[10, 25, 50, 75, 100]" md-page=dashboardCtrl.query.page md-total={{dashboardCtrl.events.totalElements}} md-on-limit=dashboardCtrl.searchEvents md-on-paginate=dashboardCtrl.searchEvents md-page-select></md-table-pagination> </div> <div ng-if=eventsFetchData layout=column layout-align="center center" flex><md-progress-circular md-mode=indeterminate></md-progress-circular></div> <div ng-if="!eventsFetchData && dashboardCtrl.events.content.length == 0" layout=column layout-align="center center" flex> <p><ng-md-icon icon=block style=fill:grey></ng-md-icon></p> <p>No data</p> </div> </div> </div> </div> </div> '},function(e,t){e.exports=" <div class=gv-sub-content> <gv-audit apis=apis applications=applications events=events></gv-audit> </div> "},function(e,t){e.exports=" <div class=gv-sub-content> <form name=supportTicketCtrl.formTicket ng-submit=supportTicketCtrl.create() novalidate> <div class=gv-forms layout=column> <h1>{{'support.ticket.title' | translate}}</h1> <h5 ng-if=!supportTicketCtrl.userHasAnEmail style=color:red;margin-left:10px> <ng-md-icon icon=warning class=gv-warning></ng-md-icon> <span>{{'support.ticket.userWithoutEmail.message' | translate}}</span> </h5> <div class=gv-form> <h2></h2> <div class=gv-form-content layout=column style=background-color:#fafafa> <md-input-container ng-if=!supportTicketCtrl.stateParams.apiId> <label>{{'support.ticket.api' | translate}}</label> <md-select ng-model=supportTicketCtrl.ticket.api ng-disabled=!supportTicketCtrl.userHasAnEmail> <md-option ng-repeat=\"api in supportTicketCtrl.apis\" ng-value=api.id>{{api.name}} ({{api.version}})</md-option> </md-select> </md-input-container> <md-input-container> <label>{{'support.ticket.application' | translate}}</label> <md-select ng-model=supportTicketCtrl.ticket.application ng-disabled=!supportTicketCtrl.userHasAnEmail> <md-option ng-repeat=\"application in supportTicketCtrl.applications\" ng-value=application.id>{{application.name}} ({{application.owner.displayName}})</md-option> </md-select> </md-input-container> <md-input-container> <label>{{'support.ticket.subject' | translate}}</label> <input ng-model=supportTicketCtrl.ticket.subject ng-required=true ng-disabled=!supportTicketCtrl.userHasAnEmail> </md-input-container> <md-input-container> <label>{{'support.ticket.content' | translate}}</label> <textarea ng-model=supportTicketCtrl.ticket.content ng-required=true rows=10 ng-disabled=!supportTicketCtrl.userHasAnEmail></textarea> </md-input-container> <md-input-container> <md-checkbox ng-model=supportTicketCtrl.ticket.copyToSender ng-disabled=!supportTicketCtrl.userHasAnEmail aria-label=cb-copy-to-sender> <span>{{'support.ticket.copyToSender' | translate}}</span> </md-checkbox> </md-input-container> <div class=md-actions layout=row> <md-button type=submit class=\"md-raised md-primary\" ng-disabled=\"supportTicketCtrl.formTicket.$pristine || supportTicketCtrl.formTicket.$invalid || !supportTicketCtrl.userHasAnEmail\" aria-label=create-ticket>{{'support.ticket.create' | translate}}</md-button> </div> </div> </div> </div> </form> </div> "},function(e,t,i){"use strict";function n(e){var t;e.defaults.headers.common["X-Requested-With"]="XMLHttpRequest",e.defaults.withCredentials=!0,e.defaults.xsrfCookieName="none",e.defaults.xsrfHeaderName="none";var i=function(e,i,n,a){return{responseError:function(o){if(o.config&&!o.config.tryItMode){var r=!o||401===o.status,s="",l=i.get("NotificationService"),c=i.get("UserService"),d=i.get("$timeout");if(r){if(o.config.headers.Authorization)t=!1,s="Wrong user or password";else if(o.config.forceSessionExpired=""!==n.$$path&&"/"!==n.$$path&&"/login"!==n.$$path&&!n.$$path.startsWith("/registration")&&!n.$$path.startsWith("/resetPassword"),o.config.forceSessionExpired||!t&&!o.config.silentCall){t=!0,l.showError(o,"Session expired, redirecting to home...");var p=n.$$path;d((function(){c.removeCurrentUserData(),i.get("$rootScope").$broadcast("graviteeUserRefresh",{}),i.get("$rootScope").$broadcast("graviteeUserCancelScheduledServices"),i.get("$rootScope").$broadcast("graviteeLogout",{redirectUri:p})}),2e3)}}else 500===o.status?s=o.data?o.data.message:"Unexpected error":503===o.status&&(o.data&&o.data.message&&(document.getElementsByTagName("body").item(0).innerText=o.data.message),s=o.data?o.data.message:"Server unavailable");!t&&o&&o.status>0&&!o.config.silentCall&&(l.showError(o,s),403===o.status&&d((function(){a.go("management")})))}return e.reject(o)}}};i.$inject=["$q","$injector","$location","$state"];var n,a=function(e,t){return{request:function(e){return e.timeout=e.timeout||1e4,e},responseError:function(i){var n=t.get("NotificationService");return i.config&&i.config.silentCall||(i.config&&!i.config.tryItMode?i&&i.status<=0&&"abort"!==i.xhrStatus&&n.showError("Server unreachable"):n.showError("Unable to call the remote service.")),e.reject(i)}}};a.$inject=["$q","$injector"];var o=function(e,t){return{request:function(e){return e.headers["X-Xsrf-Token"]=n,e},response:function(e){return e.headers("X-Xsrf-Token")&&(n=e.headers("X-Xsrf-Token")),e},responseError:function(t){return t.headers("X-Xsrf-Token")&&(n=t.headers("X-Xsrf-Token")),e.reject(t)}}};o.$inject=["$q","$injector"];var r=function(e,t){return{request:function(e){var i=t.get("ReCaptchaService");return i&&i.isEnabled()&&(e.headers[i.getHeaderName()]=i.getCurrentToken()),e}}};r.$inject=["$q","$injector"],e.interceptors&&(e.interceptors.push(o),e.interceptors.push(r),e.interceptors.push(i),e.interceptors.push(a))}n.$inject=["$httpProvider"],t.__esModule=!0,t.default=n},function(e,t,i){"use strict";function n(e,t){e.resourceUrlWhitelist(["self",t.baseURL+"**"])}n.$inject=["$sceDelegateProvider","Constants"],t.__esModule=!0,t.default=n},function(e,t,i){"use strict";function n(e,t,i,n,a,o,r,s,l,c,d){a.onStart({to:function(e){return"login"!==e.name&&"registration"!==e.name&&"confirm"!==e.name&&"confirmProfile"!==e.name&&"resetPassword"!==e.name}},(function(e){return l.authentication.forceLogin.enabled&&!s.isAuthenticated()?e.router.stateService.target("login"):s.isAuthenticated()&&s.currentUser.firstLogin&&!t.localStorage.getItem("profileConfirmed")?e.router.stateService.target("confirmProfile"):void 0})),a.onFinish({},(function(e){d.hideBadge();var t=e.from(),i=e.to();return!l.portal.userCreation.enabled&&("registration"===t.name||"confirm"===t)?e.router.stateService.target("login"):i.data&&i.data.perms&&i.data.perms.only&&!s.isUserHasPermissions(i.data.perms.only)?e.router.stateService.target(s.isAuthenticated()?"management.apis.list":"login"):void 0})),e.$on("graviteeLogout",(function(e,t){o.go("login",{redirectUri:t.redirectUri})})),e.$watch((function(){return i.pendingRequests.length>0}),(function(t){e.isLoading=t})),e.displayLoader=!0,r((function(){e.displayLoader=!1})),e.PermissionStrategies=c,e.isWindowFocused=!0,t.onblur=function(){e.isWindowFocused=!1},t.onfocus=function(){e.isWindowFocused=!0}}n.$inject=["$rootScope","$window","$http","$mdSidenav","$transitions","$state","$timeout","UserService","Constants","PermissionStrategies","ReCaptchaService"],t.__esModule=!0,t.default=n},,function(e,t,i){"use strict";t.__esModule=!0;var n=i(3),a=function(){function e(e,t,i,n){this.ApiService=e,this.NotificationService=t,this.$mdDialog=i,this.$rootScope=n}return e.$inject=["ApiService","NotificationService","$mdDialog","$rootScope"],e.prototype.$onInit=function(){this.apiEnabled="started"===this.api.state},e.prototype.changeLifecycle=function(){var e=this,t="started"===this.api.state;this.apiEnabled=!this.apiEnabled,this.$mdDialog.show({controller:"DialogConfirmController",controllerAs:"ctrl",template:i(5),clickOutsideToClose:!0,locals:{title:"Are you sure you want to "+(t?"stop":"start")+" the API ?",msg:"",confirmButton:t?"stop":"start"}}).then((function(i){i&&(t?e.ApiService.stop(e.api).then((function(t){e.api.state="stopped",e.api.etag=t.headers("etag"),e.apiEnabled=!1,e.NotificationService.show("API "+e.api.name+" has been stopped!"),e.$rootScope.$broadcast("apiChangeSuccess",{api:n.cloneDeep(e.api)})})):e.ApiService.start(e.api).then((function(t){e.api.state="started",e.api.etag=t.headers("etag"),e.apiEnabled=!0,e.NotificationService.show("API "+e.api.name+" has been started!"),e.$rootScope.$broadcast("apiChangeSuccess",{api:n.cloneDeep(e.api)})})))}))},e}();t.default=a},function(e,t,i){"use strict";t.__esModule=!0;var n=function(){this.colorByBucket=["#673ab7","#cddc39","#ff5722","#e91e63","#9c27b0","#8bc34a","#ffc107","#607d8b","#ff9800","#009688","#3f51b5","#9c27b0","#f44336","#00bcd4","#795548","#311b92","#827717","#bf360c","#880e4f","#4a148c","#33691e","#ff6f00","#263238","#e65100","#004d40","#1a237e","#4a148c","#b71c1c","#006064","#3e2723"],this.bgColorByBucket=["#b39ddb","#e6ee9c","#ffab91","#f48fb1","#ce93d8","#c5e1a5","#ffe082","#b0bec5","#ffcc80","#80cbc4","#9fa8da","#ce93d8","#ef9a9a","#80deea","#bcaaa4","#9575cd","#dce775","#ff8a65","#f06292","#ba68c8","#aed581","#ffd54f","#90a4ae","#ffb74d","#4db6ac","#7986cb","#ba68c8","#e57373","#4dd0e1","#a1887f"]};t.default=n},function(e,t,i){"use strict";function n(e,t,i){this.notifiers=i,this.selectedNotifier=i[0],this.name="",this.hide=function(){t.hide()},this.save=function(){var e={name:this.name,notifierId:this.selectedNotifier.id};t.hide(e)}}n.$inject=["$scope","$mdDialog","notifiers"],t.__esModule=!0,t.default=n},function(e,t,i){"use strict";t.__esModule=!0;var n=i(3),a=function(){function e(e,t,i,n){this.TopApiService=e,this.$mdDialog=t,this.NotificationService=i,this.$rootScope=n,this.$rootScope=n}return e.$inject=["TopApiService","$mdDialog","NotificationService","$rootScope"],e.prototype.refreshTopApis=function(){var e=this;this.TopApiService.list().then((function(t){e.topApis=t.data}))},e.prototype.showAddTopAPIModal=function(){var e=this;this.$mdDialog.show({controller:"AddTopApiDialogController",controllerAs:"$ctrl",template:i(1078),locals:{topApis:this.topApis}}).then((function(t){t&&(e.topApis=t)}))},e.prototype.delete=function(e){var t=this;this.$mdDialog.show({controller:"DeleteTopApiDialogController",template:i(1079),locals:{topApi:e}}).then((function(e){e&&t.refreshTopApis()}))},e.prototype.upward=function(e){e>0&&this.reorder(e,e-1)},e.prototype.downward=function(e){e<n.size(this.topApis)-1&&this.reorder(e,e+1)},e.prototype.reorder=function(e,t){var i=this;this.topApis[e].order=t,this.topApis[t].order=e,this.topApis=n.sortBy(this.topApis,"order"),this.TopApiService.update(this.topApis).then((function(e){i.topApis=e.data,i.NotificationService.show("Top APIs saved with success")})).catch((function(){i.refreshTopApis()}))},e}();t.default=a},function(e,t){e.exports=' <md-dialog aria-label="Add top API" flex=50> <md-dialog-content layout-padding> <h4>Add top API</h4> <form> <md-autocomplete md-selected-item=$ctrl.selectedApi md-search-text=$ctrl.searchText md-items="api in $ctrl.apis | filter:$ctrl.searchText" md-item-text=api.name placeholder="Search APIs ..." md-autofocus=true> <md-item-template> <md-list-item class=md-2-line style=height:50px;min-height:50px> <gravitee-identity-picture image-id=api.id image-url=api.picture_url image-name="api.name + \'  \' + api.version" image-width=40 class=md-avatar></gravitee-identity-picture> <div class=md-list-item-text> <h3>{{api.name}}</h3> <p>{{item.description}}</p> </div> </md-list-item> </md-item-template> <md-not-found> No APIs matching "{{$ctrl.searchText}}" were found. </md-not-found> </md-autocomplete> </form> </md-dialog-content> <md-dialog-actions layout=row> <md-button ng-click=$ctrl.hide()> Cancel </md-button> <md-button type=submit class="md-raised md-primary" ng-click=$ctrl.addApi()> Add </md-button> </md-dialog-actions> </md-dialog> '},function(e,t){e.exports=" <md-dialog aria-label=\"Delete top API '{{topApi}}'\"> <md-dialog-content layout-padding> <p>Are you sure you want to delete the top API '{{topApi.name}}' version '{{topApi.version}}'?</p> </md-dialog-content> <md-dialog-actions layout=row> <md-button ng-click=cancel() md-auto-focus> Cancel </md-button> <md-button ng-click=ok() class=\"md-raised md-warn\"> Delete top API </md-button> </md-dialog-actions> </md-dialog> "},function(e,t,i){"use strict";t.__esModule=!0;var n=i(3),a=function(){function e(e,t){this.$http=e,this.topApisURL=t.baseURL+"configuration/top-apis/"}return e.$inject=["$http","Constants"],e.prototype.list=function(){return this.$http.get(this.topApisURL)},e.prototype.create=function(e){if(e)return this.$http.post(this.topApisURL,{api:e.id})},e.prototype.update=function(e){if(e&&e.length)return this.$http.put(this.topApisURL,n.map(e,(function(e){return{api:e.api}})))},e.prototype.delete=function(e){if(e)return this.$http.delete(this.topApisURL+e.api)},e}();t.default=a},function(e,t,i){"use strict";t.__esModule=!0;var n={bindings:{topApis:"<"},controller:"TopApisController",template:i(1082)};t.default=n},function(e,t){e.exports=' <div class="gv-forms gv-forms-fluid" layout=column> <h1>Top APIs</h1> <div class=gv-form> <h2></h2> <div class=gv-form-content layout=column> <md-table-container> <table md-table class=gv-table-dense> <thead md-head> <tr md-row> <th md-column width=1% nowrap=nowrap>Name</th> <th md-column width=1% nowrap=nowrap>Version</th> <th md-column>Description</th> <th md-column width=96px nowrap=nowrap></th> <th md-column width=48px nowrap=nowrap></th> </tr> </thead> <tbody md-body> <tr md-row ng-repeat="topApi in $ctrl.topApis | orderBy:\'order\'"> <td md-cell width=1% nowrap=nowrap> <gravitee-identity-picture image-id=topApi.api image-url=::topApi.picture_url image-name="topApi.name + \'  \' + topApi.version" image-width=40></gravitee-identity-picture> {{::topApi.name}} </td> <td md-cell width=1% nowrap=nowrap>{{::topApi.version}}</td> <td md-cell>{{::topApi.description}}</td> <td md-cell width=96px style=text-align:center nowrap=nowrap> <ng-md-icon permission permission-only="\'environment-top_apis-u\'" ng-if=!$first icon=arrow_upwards ng-click=$ctrl.upward(topApi.order)></ng-md-icon> <ng-md-icon permission permission-only="\'environment-top_apis-u\'" ng-if=!$last icon=arrow_downward ng-click=$ctrl.downward(topApi.order)></ng-md-icon> </td> <td md-cell width=48px> <ng-md-icon permission permission-only="\'environment-top_apis-d\'" icon=delete ng-click=$ctrl.delete(topApi) style=height:24px;font-size:24px></ng-md-icon> </td> </tr> </tbody> </table> </md-table-container> </div> </div> </div> <md-button permission permission-only="\'environment-top_apis-c\'" aria-label="Add top API" class="md-fab md-fab-bottom-right md-fab-scrollable" ng-class="{\'gv-help-displayed\': $ctrl.$rootScope.helpDisplayed}" ng-click=$ctrl.showAddTopAPIModal()> <md-tooltip md-direction=top md-visible=false>Add a </md-tooltip> <ng-md-icon icon=add></ng-md-icon> </md-button> '},function(e,t,i){"use strict";a.$inject=["$mdDialog","ApiService","TopApiService","NotificationService","topApis"],t.__esModule=!0;var n=i(3);function a(e,t,i,a,o){var r=this;t.list().then((function(e){r.apis=n.filter(e.data,(function(e){return!n.includes(n.map(o,"api"),e.id)}))})),this.addApi=function(){var t=this;i.create(this.selectedApi).then((function(i){a.show("Api '"+t.selectedApi.name+"' added with success to the list of top APIs"),e.hide(i.data)}))},this.hide=function(){e.cancel()}}t.default=a},function(e,t,i){"use strict";function n(e,t,i,n,a){e.topApi=i,e.cancel=function(){t.cancel()},e.ok=function(){n.delete(i).then((function(){a.show("Api '"+i.name+"' deleted with success from the list of top APIs"),t.hide(i)}))}}n.$inject=["$scope","$mdDialog","topApi","TopApiService","NotificationService"],t.__esModule=!0,t.default=n},function(e,t,i){"use strict";t.__esModule=!0;var n=i(3),a=i(7),o=function(){function e(e,t,i,a,o,r,s,l,c,d,p,m,u,g,h){var f=this;this.ApiService=e,this.NotificationService=t,this.UserService=i,this.$scope=a,this.$mdDialog=o,this.$mdEditDialog=r,this.$rootScope=s,this.$state=l,this.GroupService=c,this.SidenavService=d,this.resolvedCategories=p,this.resolvedGroups=m,this.resolvedTags=u,this.resolvedTenants=g,this.userTags=h,this.ApiService=e,this.NotificationService=t,this.UserService=i,this.GroupService=c,this.$scope=a,this.$rootScope=s,this.$mdEditDialog=r,this.$mdDialog=o,this.initialApi=n.cloneDeep(this.$scope.$parent.apiCtrl.api),this.api=n.cloneDeep(this.$scope.$parent.apiCtrl.api),this.discovery=this.api.services&&this.api.services.discovery,this.discovery=this.discovery||{enabled:!1,configuration:{}},this.initialDiscovery=n.cloneDeep(this.discovery),this.tenants=g.data,this.$scope.selected=[],this.$scope.searchHeaders=null,this.api.labels=this.api.labels||[],this.virtualHostModeEnabled=this.api.proxy.virtual_hosts.length>1||void 0!==this.api.proxy.virtual_hosts[0].host,this.$scope.lbs=[{name:"Round-Robin",value:"ROUND_ROBIN"},{name:"Random",value:"RANDOM"},{name:"Weighted Round-Robin",value:"WEIGHTED_ROUND_ROBIN"},{name:"Weighted Random",value:"WEIGHTED_RANDOM"}],this.$scope.methods=["GET","DELETE","PATCH","POST","PUT","OPTIONS","TRACE","HEAD"],this.initState(),this.categories=p,this.tags=u,this.groups=m,this.headers=e.defaultHttpHeaders(),this.$scope.$on("apiChangeSuccess",(function(e,t){f.api=t.api}))}return e.$inject=["ApiService","NotificationService","UserService","$scope","$mdDialog","$mdEditDialog","$rootScope","$state","GroupService","SidenavService","resolvedCategories","resolvedGroups","resolvedTags","resolvedTenants","userTags"],e.prototype.toggleVisibility=function(){"public"===this.api.visibility?this.api.visibility="private":this.api.visibility="public",this.formApi.$setDirty()},e.prototype.initState=function(){this.$scope.apiEnabled="started"===this.$scope.$parent.apiCtrl.api.state,this.$scope.apiPublic="public"===this.$scope.$parent.apiCtrl.api.visibility,this.failoverEnabled=void 0!==this.api.proxy.failover,this.contextPathEditable=this.UserService.currentUser.id===this.api.owner.id,this.api.proxy.cors=this.api.proxy.cors||{allowOrigin:[],allowHeaders:[],allowMethods:[],exposeHeaders:[],maxAge:-1,allowCredentials:!1}},e.prototype.removeEndpoints=function(){var e=this,t=this;this.$mdDialog.show({controller:"DialogConfirmController",controllerAs:"ctrl",template:i(5),clickOutsideToClose:!0,locals:{title:"Are you sure you want to delete endpoint(s) ?",msg:"",confirmButton:"Delete"}}).then((function(i){i&&(n(e.$scope.selected).forEach((function(t){n(e.api.proxy.groups).forEach((function(e){n(e.endpoints).forEach((function(e,i,n){void 0!==e&&e.name===t.name&&n.splice(i,1)}))}))})),t.update(t.api))}))},e.prototype.reset=function(){this.api=n.cloneDeep(this.initialApi),this.discovery=n.cloneDeep(this.initialDiscovery),this.initState(),this.formApi&&(this.formApi.$setPristine(),this.formApi.$setUntouched())},e.prototype.delete=function(e){var t=this;this.$mdDialog.show({controller:"DialogConfirmController",controllerAs:"ctrl",template:i(5),clickOutsideToClose:!0,locals:{title:"Are you sure you want to delete '"+this.api.name+"' API ?",msg:"",confirmButton:"Delete"}}).then((function(i){i&&t.ApiService.delete(e).then((function(){t.NotificationService.show("API '"+t.initialApi.name+"' has been removed"),t.$state.go("management.apis.list",{},{reload:!0})}))}))},e.prototype.onApiUpdate=function(e){this.api=e,this.initialApi=n.cloneDeep(e),this.initState(),this.formApi.$setPristine(),this.$rootScope.$broadcast("apiChangeSuccess",{api:n.cloneDeep(e)}),this.NotificationService.show("API '"+this.initialApi.name+"' saved"),this.SidenavService.setCurrentResource(this.api.name)},e.prototype.update=function(e){var t=this;this.failoverEnabled||delete e.proxy.failover,this.ApiService.update(e).then((function(e){e.data.etag=e.headers("etag"),t.onApiUpdate(e.data)}))},e.prototype.getTenants=function(e){var t=this;return void 0!==e?n(e).map((function(e){return n.find(t.tenants,{id:e})})).map((function(e){return e.name})).join(", "):""},e.prototype.hasTenants=function(){return this.tenants&&this.tenants.length},e.prototype.getGroup=function(e){return n.find(this.groups,{id:e})},e.prototype.querySearchHeaders=function(e){return e?this.headers.filter(this.createFilterFor(e)):[]},e.prototype.createFilterFor=function(e){var t=a.lowercase(e);return function(e){return 0===a.lowercase(e).indexOf(t)}},e.prototype.createGroup=function(){this.$state.go("management.apis.detail.proxy.group",{groupName:""})},e.prototype.deleteGroup=function(e){var t=this;this.$mdDialog.show({controller:"DialogConfirmController",controllerAs:"ctrl",template:i(5),clickOutsideToClose:!0,locals:{title:"Are you sure you want to delete group "+e+"?",msg:"",confirmButton:"Delete group"}}).then((function(i){i&&n(t.api.proxy.groups).forEach((function(i,n,a){void 0!==i.name&&i.name===e&&(a.splice(n,1),t.update(t.api))}))}))},e.prototype.hasHealthCheck=function(e){return!e.backup&&(void 0!==e.healthcheck?e.healthcheck.enabled:this.api.services&&this.api.services["health-check"]&&this.api.services["health-check"].enabled)},e.prototype.isTagDisabled=function(e){return!n.includes(this.userTags,e.id)},e.prototype.controlAllowOrigin=function(e,t){var n=this;"*"===e&&this.$mdDialog.show({controller:"DialogConfirmController",controllerAs:"ctrl",template:i(5),clickOutsideToClose:!0,locals:{title:"Are you sure you want to remove all cross-origin restrictions?",confirmButton:"Yes, I want to allow all origins."}}).then((function(e){e||n.api.proxy.cors.allowOrigin.splice(t,1)}))},e.prototype.isRegexValid=function(){var e=!0;return this.api.proxy.cors.allowOrigin.forEach((function(t){if("*"!==t&&(t.includes("(")||t.includes("[")||t.includes("*")))try{new RegExp(t)}catch(t){e=!1}})),e},e.prototype.switchVirtualHostMode=function(){if(this.virtualHostModeEnabled){var e=this;this.$mdDialog.show({controller:"DialogConfirmController",controllerAs:"ctrl",template:i(5),clickOutsideToClose:!0,locals:{title:"Switch to context-path mode",msg:"By moving back to context-path you will loose all virtual-hosts. Are you sure to continue?",confirmButton:"Switch"}}).then((function(t){t&&(e.api.proxy.virtual_hosts.splice(1),e.api.proxy.virtual_hosts[0].host=void 0,e.virtualHostModeEnabled=!e.virtualHostModeEnabled,e.update(e.api))}))}else this.formApi.$dirty?(this.virtualHostModeEnabled=!this.virtualHostModeEnabled,this.update(this.api)):this.virtualHostModeEnabled=!this.virtualHostModeEnabled},e.prototype.addVirtualHost=function(){void 0===this.api.proxy.virtual_hosts&&(this.api.proxy.virtual_hosts=[]),this.api.proxy.virtual_hosts.push({host:void 0,path:void 0})},e.prototype.removeVirtualHost=function(e){void 0!==this.api.proxy.virtual_hosts&&(this.api.proxy.virtual_hosts.splice(e,1),this.formApi.$setDirty())},e}();t.default=o},function(e,t,i){"use strict";t.__esModule=!0;var n=i(3),a={bindings:{tags:"<"},template:i(1087),controller:["NotificationService","PortalConfigService","$state","Constants",function(e,t,i,a){var o=this;this.settings=n.cloneDeep(a),this.$onInit=function(){o.settings.authentication.localLogin.enabled=o.settings.authentication.localLogin.enabled||!o.hasIdpDefined()},this.save=function(){t.save(o.settings).then((function(t){n.merge(a,t.data),e.show("Configuration saved"),o.formSettings.$setPristine(),i.reload()}))},this.reset=function(){o.settings=n.cloneDeep(a),o.formSettings.$setPristine()},this.hasIdpDefined=function(){return o.settings.authentication.google.clientId||o.settings.authentication.github.clientId||o.settings.authentication.oauth2.clientId}}]};t.default=a},function(e,t){e.exports=' <form name=$ctrl.formSettings class=gv-forms layout=column ng-submit=$ctrl.save()> <h1>Settings</h1> <blockquote> <p style=font-size:12px> <ng-md-icon icon=info style=fill:grey></ng-md-icon> Depending on your architecture, this configuration may be overridden by a local configuration file. See documentation for more information. </p> </blockquote> <div class=gv-form> <h2>Company</h2> <div class=gv-form-content layout=column> <md-input-container class=md-block flex-gt-xs> <label>Company name</label> <input ng-model=$ctrl.settings.company.name> </md-input-container> </div> </div> <div class=gv-form> <h2>Management</h2> <div class=gv-form-content layout=column> <md-input-container class=md-block flex> <label>Title</label> <input ng-model=$ctrl.settings.management.title> </md-input-container> <md-input-container class=md-block flex-gt-xs> <label>Management URL</label> <input type=text ng-model=$ctrl.settings.management.url> </md-input-container> <h6>Security plans type available</h6> <md-input-container class=gv-input-container-dense> <md-checkbox ng-model=$ctrl.settings.plan.security.keyless.enabled aria-label=A> Keyless plans </md-checkbox> </md-input-container> <md-input-container class=gv-input-container-dense> <md-checkbox ng-model=$ctrl.settings.plan.security.apikey.enabled aria-label=A> Api-key plans </md-checkbox> </md-input-container> <md-input-container class=gv-input-container-dense> <md-checkbox ng-model=$ctrl.settings.plan.security.oauth2.enabled aria-label=A> Oauth2 plans </md-checkbox> </md-input-container> <md-input-container class=gv-input-container-dense> <md-checkbox ng-model=$ctrl.settings.plan.security.jwt.enabled aria-label=A> JWT plans </md-checkbox> </md-input-container> <h6>Theme</h6> <md-input-container class=md-block flex-gt-xs> <label>Name</label> <input ng-model=$ctrl.settings.theme.name> </md-input-container> <md-input-container class=md-block flex-gt-xs> <label>Logo</label> <input ng-model=$ctrl.settings.theme.logo> </md-input-container> <md-input-container class=md-block flex-gt-xs> <label>Loader</label> <input ng-model=$ctrl.settings.theme.loader> </md-input-container> </div> </div> <div class=gv-form> <h2>Portal</h2> <div class=gv-form-content layout=column> <md-input-container class=md-block flex-gt-xs> <label>Title</label> <input ng-model=$ctrl.settings.portal.title> </md-input-container> <md-input-container class=md-block flex-gt-xs> <label>Api-key Header <small>(Used by portal to display the CURL command, change the YAML configuration to impact the gateway)</small> </label> <input ng-model=$ctrl.settings.portal.apikeyHeader> </md-input-container> <md-input-container class=gv-input-container-dense> <md-checkbox ng-model=$ctrl.settings.portal.apis.tilesMode.enabled aria-label="Tiles Mode"> Use Tiles Mode for apis by default (if not overridden by user) </md-checkbox> </md-input-container> <md-input-container class=gv-input-container-dense> <md-checkbox ng-model=$ctrl.settings.portal.support.enabled aria-label=Support> Activate Support </md-checkbox> </md-input-container> <md-input-container class=gv-input-container-dense> <md-checkbox ng-model=$ctrl.settings.portal.rating.enabled aria-label=Rating> Activate Rating </md-checkbox> </md-input-container> <md-input-container class=gv-input-container-dense> <md-checkbox ng-model=$ctrl.settings.portal.rating.comment.mandatory aria-label="Rating comment mandatory"> Force user to fill comment before to save a rating </md-checkbox> </md-input-container> <md-input-container class=gv-input-container-dense> <md-checkbox ng-model=$ctrl.settings.portal.userCreation.enabled aria-label="Allow user creation"> Allow User Registration </md-checkbox> </md-input-container> <md-input-container class=gv-input-container-dense> <md-checkbox ng-model=$ctrl.settings.portal.analytics.enabled aria-label="Add Google Analytics"> Add Google Analytics </md-checkbox> </md-input-container> <md-input-container class=md-block flex-gt-xs> <label>Google Analytics TrackingId</label> <input ng-model=$ctrl.settings.portal.analytics.trackingId> </md-input-container> <md-input-container class=gv-input-container-dense> <md-checkbox ng-model=$ctrl.settings.portal.uploadMedia.enabled aria-label="Allow upload media"> Allow Upload Images </md-checkbox> </md-input-container> <md-input-container class=md-block flex-gt-xs> <label>Max size upload file (bytes)</label> <input type=number min=0 ng-model=$ctrl.settings.portal.uploadMedia.maxSizeInOctet> </md-input-container> <md-input-container class=md-block flex-gt-xs> <label>Portal URL</label> <input type=text ng-model=$ctrl.settings.portal.url> </md-input-container> </div></div> <div class=gv-form> <h2>Schedulers</h2> <div class=gv-form-content layout=column> <md-input-container class=md-block flex-gt-xs> <label>Tasks (in seconds)</label> <input type=number min=0 ng-model=$ctrl.settings.scheduler.tasks> </md-input-container> <md-input-container class=md-block flex-gt-xs> <label>Notifications (in seconds)</label> <input type=number min=0 ng-model=$ctrl.settings.scheduler.notifications> </md-input-container> </div></div> <div class=gv-form> <h2>Documentation</h2> <div class=gv-form-content layout=column> <md-input-container class=md-block flex-gt-xs> <label>Documentation URL</label> <input ng-model=$ctrl.settings.documentation.url> </md-input-container> </div> </div> <div class=gv-form> <h2>Alerting</h2> <div class=gv-form-content layout=column> <md-input-container class=md-block flex-gt-xs> <md-checkbox ng-model=$ctrl.settings.alert.enabled aria-label="Alerting enabled"> Enable Alerting </md-checkbox> </md-input-container> </div> </div> <md-card-actions> <md-button type=submit class="md-raised md-primary" ng-disabled="$ctrl.formSettings.$invalid || $ctrl.formSettings.$pristine" permission permission-only="[\'environment-settings-c\', \'environment-settings-u\', \'environment-settings-d\']">Save</md-button> <md-button type=button class=md-raised ng-click=$ctrl.reset() ng-disabled="$ctrl.formSettings.$invalid || $ctrl.formSettings.$pristine" permission permission-only="[\'environment-settings-c\', \'environment-settings-u\', \'environment-settings-d\']">Reset</md-button> </md-card-actions> </form> '},function(e,t,i){"use strict";t.__esModule=!0;var n=function(){function e(){this.last={}}return e.prototype.setLastRoute=function(e,t){this.last.from=e,this.last.fromParams=t},e.prototype.getLastRoute=function(){return this.last},e}();t.default=n},function(e,t,i){"use strict";t.__esModule=!0;var n=function(){function e(e,t){this.$http=e,this.baseURL=t.baseURL}return e.$inject=["$http","Constants"],e.prototype.sendFromPortal=function(e,t,i,n,a,o,r,s){return this.$http.post(this.baseURL+"messages",this.getPayload(e,t,i,n,a,o,r,s))},e.prototype.sendFromApi=function(e,t,i,n,a,o,r,s,l){return this.$http.post(this.baseURL+"apis/"+e+"/messages",this.getPayload(t,i,n,a,o,r,s,l))},e.prototype.getPayload=function(e,t,i,n,a,o,r,s){if(o){for(var l={},c=0;c<s.length;c++)""!==s[c].key&&(l[s[c].key]=s[c].value);return{text:t,recipient:{url:o},channel:i,params:l,useSystemProxy:r}}return{title:e,text:t,recipient:{role_scope:n,role_value:a},channel:i}},e}();t.default=n},function(e,t,i){"use strict";t.__esModule=!0;var n=i(3),a={bindings:{resolvedScope:"<",resolvedRoles:"<",resolvedApiId:"<"},template:i(1091),controller:["$state","NotificationService","MessageService","ApiService",function(e,t,i,a){var o=this;this.$onInit=function(){o.roles=n.sortBy(o.resolvedRoles,["name"]),o.channels=[{id:"PORTAL",name:"Portal Notifications"},{id:"MAIL",name:"Email"},{id:"HTTP",name:"POST HTTP message"}],o.channel="PORTAL",o.defaultHttpHeaders=a.defaultHttpHeaders(),o.httpHeaders=[],o.roleValues=[],o.newHttpHeader()},this.send=function(){o.resolvedApiId?i.sendFromApi(o.resolvedApiId,o.title,o.text,o.channel,o.resolvedScope,o.roleValues,o.url,o.useSystemProxy,o.httpHeaders).then((function(e){t.show(e.data+" messages has been sent."),o.resetForm()})):i.sendFromPortal(o.title,o.text,o.channel,o.resolvedScope,o.roleValues,o.url,o.useSystemProxy,o.httpHeaders).then((function(e){t.show(e.data+" messages has been sent."),o.resetForm()}))},this.resetForm=function(){o.title="",o.url="",o.text="",o.roleValues=[],o.httpHeaders=[],o.newHttpHeader(),o.formMsg.$setPristine(),o.formMsg.$setUntouched()},this.newHttpHeader=function(){o.httpHeaders.push({key:"",value:""})},this.deleteHttpHeader=function(e){o.httpHeaders.splice(e,1)}}]};t.default=a},function(e,t){e.exports=' <div class=gv-sub-content> <form name=$ctrl.formMsg ng-submit=$ctrl.send() novalidate> <div class=gv-forms layout=column> <h1>Message</h1> <div class=gv-form> <h2></h2> <div class=gv-form-content layout=column> <div layout=row layout-align="space-around start"> <div layout=column flex=50> <label>Choose the channel you want to use</label> <md-radio-group ng-model=$ctrl.channel> <md-radio-button ng-repeat="chan in $ctrl.channels" value={{chan.id}}> {{chan.name}} </md-radio-button> </md-radio-group> </div> <div layout=column flex=50 ng-if="$ctrl.channel !== \'HTTP\'"> <label>Choose the <b>{{$ctrl.resolvedScope}}</b> role you want to contact</label> <md-select ng-model=$ctrl.roleValues ng-required=true multiple=multiple> <md-option ng-repeat="r in $ctrl.roles" ng-value=r.name>{{r.name}}</md-option> </md-select> </div> <div layout=column flex=50 ng-if="$ctrl.channel === \'HTTP\'"> <datalist id=http-headers> <option ng-repeat="h in $ctrl.defaultHttpHeaders" value={{h}}> </option></datalist> <label>Add HTTP headers</label> <md-table-container> <table md-table> <thead md-head> <tr md-row> <th md-column>Name</th> <th md-column>Value</th> <th></th> </tr> </thead> <tbody md-body> <tr md-row ng-repeat="header in $ctrl.httpHeaders track by $index"> <td md-cell><input list=http-headers type=text ng-model=header.key></td> <td md-cell><input type=text ng-model=header.value></td> <td md-cell><ng-md-icon icon=delete ng-click=$ctrl.deleteHttpHeader($index)></ng-md-icon></td> </tr> </tbody> <tfoot> <tr> <td colspan=3 md-cell ng-click=$ctrl.newHttpHeader($event)><a>Add a new header</a></td> </tr> </tfoot> </table> </md-table-container> </div> </div> <md-input-container ng-if="$ctrl.channel !== \'HTTP\'"> <label>Title</label> <input ng-model=$ctrl.title ng-required=true> </md-input-container> <div layout=row> <md-input-container ng-if="$ctrl.channel === \'HTTP\'" flex> <label>URL</label> <input ng-model=$ctrl.url ng-required=true> </md-input-container> <md-input-container ng-if="$ctrl.channel === \'HTTP\'"> <md-checkbox ng-model=$ctrl.useSystemProxy aria-label="Use system proxy">Use system proxy</md-checkbox> </md-input-container> </div> <md-input-container> <label>Text</label> <textarea ng-model=$ctrl.text ng-required=true rows=5 tabindex=2>\n        </textarea> </md-input-container> <div class=md-actions layout=row> <md-button type=submit class="md-raised md-primary" ng-disabled="$ctrl.formMsg.$pristine || $ctrl.formMsg.$invalid" aria-label=send-message>Send</md-button> </div> </div> </div> </div> </form> </div> '},function(e,t,i){"use strict";function n(e){e.state("management.apis.detail.messages",{url:"/messages",component:"messages",resolve:{resolvedScope:function(){return"APPLICATION"},resolvedApiId:["$stateParams",function(e){return e.apiId}],resolvedRoles:["RoleService",function(e){return e.list("APPLICATION")}]},data:{menu:{label:"Messages",icon:"message"},perms:{only:["api-message-c"]},docs:{page:"management-messages"}}})}n.$inject=["$stateProvider"],t.__esModule=!0,t.default=n},function(e,t,i){"use strict";t.__esModule=!0;var n=i(3),a={bindings:{apiPortalHeaders:"<"},template:i(1094),controller:["ApiHeaderService","NotificationService","PortalConfigService","$mdDialog","Constants","$rootScope",function(e,t,a,o,r,s){var l=this;this.$rootScope=s,this.$mdDialog=o,this.settings=n.cloneDeep(r),this.$onInit=function(){},this.upward=function(i){i.order=i.order-1,e.update(i).then((function(n){t.show("Header '"+i.name+"' saved"),e.list().then((function(e){return l.apiPortalHeaders=e.data}))}))},this.downward=function(i){i.order=i.order+1,e.update(i).then((function(n){t.show("Header '"+i.name+"' saved"),e.list().then((function(e){return l.apiPortalHeaders=e.data}))}))},this.createHeader=function(){var n=l;l.$mdDialog.show({controller:"NewApiPortalHeaderDialogController",controllerAs:"$ctrl",template:i(263),locals:{}}).then((function(i){t.show("Header '"+i.name+"' saved"),e.list().then((function(e){return n.apiPortalHeaders=e.data}))}))},this.updateHeader=function(n){var a=l;l.$mdDialog.show({controller:"UpdateApiPortalHeaderDialogController",controllerAs:"$ctrl",template:i(263),locals:{header:Object.assign({},n)}}).then((function(i){t.show("Header '"+i.name+"' saved"),e.list().then((function(e){return a.apiPortalHeaders=e.data}))}))},this.deleteHeader=function(n){var a=l;l.$mdDialog.show({controller:"DialogConfirmController",controllerAs:"ctrl",template:i(5),clickOutsideToClose:!0,locals:{title:"Are you sure you want to delete this header ?",msg:"",confirmButton:"Delete"}}).then((function(i){i&&e.delete(n).then((function(i){t.show("Header '"+n.name+"' deleted"),e.list().then((function(e){return a.apiPortalHeaders=e.data}))}))}))},this.saveShowCategories=function(){a.save({portal:{apis:{apiHeaderShowCategories:{enabled:l.settings.portal.apis.apiHeaderShowCategories.enabled}}}}).then((function(e){t.show("Categories are now "+(l.settings.portal.apis.apiHeaderShowCategories.enabled?"visible":"hidden")),r.portal.apis.apiHeaderShowCategories=e.data.portal.apis.apiHeaderShowCategories}))},this.saveShowTags=function(){a.save({portal:{apis:{apiHeaderShowTags:{enabled:l.settings.portal.apis.apiHeaderShowTags.enabled}}}}).then((function(e){t.show("Tags are now "+(l.settings.portal.apis.apiHeaderShowTags.enabled?"visible":"hidden")),r.portal.apis.apiHeaderShowTags=e.data.portal.apis.apiHeaderShowTags}))}}]};t.default=a},function(e,t){e.exports=' <div class=gv-forms layout=column> <h1>API Portal Informations</h1> <div class=gv-form> <h2></h2> <div class=gv-form-content layout=column> <h3>Add extra informations</h3> <md-input-container class=gv-input-container-dense> <md-checkbox ng-model=$ctrl.settings.portal.apis.apiHeaderShowTags.enabled aria-label="Show Tags" ng-change=$ctrl.saveShowTags()> Show tags list in the API header </md-checkbox> </md-input-container> <md-input-container class=gv-input-container-dense> <md-checkbox ng-model=$ctrl.settings.portal.apis.apiHeaderShowCategories.enabled aria-label="Show Categories" ng-change=$ctrl.saveShowCategories()> Show categories list in the API header </md-checkbox> </md-input-container> <h3>Configure the informations list</h3> <md-table-container> <table md-table class=gv-table-dense> <thead md-head> <tr md-row> <th width=1% nowrap=nowrap md-column>Name</th> <th md-column>Value</th> <th md-column width=76px nowrap=nowrap></th> <th md-column width=48px nowrap=nowrap></th> </tr> </thead> <tbody md-body> <tr md-row ng-repeat="header in $ctrl.apiPortalHeaders"> <td md-cell width=1% nowrap=nowrap><a ng-click=$ctrl.updateHeader(header)>{{header.name}}</a></td> <td md-cell><code>{{header.value}}</code></td> <td md-cell width=76px nowrap=nowrap layout=row layout-align="center center"> <div permission permission-only="\'environment-api_header-u\'"> <ng-md-icon ng-if=!$first icon=arrow_upwards ng-click=$ctrl.upward(header)></ng-md-icon> <ng-md-icon ng-if=!$last icon=arrow_downward ng-click=$ctrl.downward(header)></ng-md-icon> </div> </td> <td md-cell width=48px nowrap=nowrap> <ng-md-icon permission permission-only="\'environment-api_header-d\'" icon=delete ng-click=$ctrl.deleteHeader(header)> <md-tooltip md-direction=top md-visible=false>Delete</md-tooltip> </ng-md-icon> </td> </tr> </tbody> </table> </md-table-container> </div> </div> </div> <md-button permission permission-only="\'environment-api_header-c\'" aria-label=Add class="md-fab md-fab-bottom-right md-fab-scrollable" ng-class="{\'gv-help-displayed\': $ctrl.$rootScope.helpDisplayed}" ng-click=$ctrl.createHeader()> <md-tooltip md-direction=top md-visible=false>Add a new header</md-tooltip> <ng-md-icon icon=add></ng-md-icon> </md-button> '},function(e,t,i){"use strict";t.__esModule=!0;var n=function(){function e(e,t){this.$http=e,this.URL=t.baseURL+"configuration/apiheaders/"}return e.$inject=["$http","Constants"],e.prototype.list=function(){return this.$http.get(this.URL)},e.prototype.create=function(e){return this.$http.post(this.URL,e)},e.prototype.update=function(e){return this.$http.put(this.URL+e.id,{name:e.name,value:e.value,order:e.order})},e.prototype.delete=function(e){return this.$http.delete(this.URL+e.id)},e}();t.default=n},function(e,t,i){"use strict";function n(e,t,i){this.header=i,this.cancel=function(){t.cancel()},this.save=function(){e.update(this.header).then((function(e){t.hide(e.data)}))}}n.$inject=["ApiHeaderService","$mdDialog","header"],t.__esModule=!0,t.default=n},function(e,t,i){"use strict";a.$inject=["ApiHeaderService","$mdDialog"],t.__esModule=!0;var n=i(1098);function a(e,t){this.header=new n.ApiPortalHeader,this.cancel=function(){t.cancel()},this.save=function(){e.create(this.header).then((function(e){t.hide(e.data)}))}}t.default=a},function(e,t,i){"use strict";t.__esModule=!0;var n=function(){};t.ApiPortalHeader=n},function(e,t,i){"use strict";t.__esModule=!0;var n=function(){this.encode=function(e){return btoa(encodeURIComponent(e).replace(/%([0-9A-F]{2})/g,(function(e,t){return String.fromCharCode("0x"+t)})))},this.decode=function(e){return decodeURIComponent(atob(e).split("").map((function(e){return"%"+("00"+e.charCodeAt(0).toString(16)).slice(-2)})).join(""))}};t.default=n},function(e,t,i){"use strict";t.__esModule=!0;var n=i(10),a=function(){function e(e,t){this.$http=e,this.apisURL=t.baseURL+"apis/",this.applicationsURL=t.baseURL+"applications/",this.configurationURL=t.baseURL+"platform/",this.alertsURL=t.baseURL+"alerts/"}return e.$inject=["$http","Constants"],e.prototype.listMetrics=function(){return this.$http.get(this.alertsURL+"metrics")},e.prototype.getStatus=function(e,t){return this.$http.get(this.getReferenceURL(t,e)+"alerts/status")},e.prototype.listAlerts=function(e,t){return this.$http.get(this.getReferenceURL(t,e)+"alerts")},e.prototype.create=function(e){return this.$http.post(this.getReferenceURL(e.reference_type,e.reference_id)+"alerts",{name:e.name,severity:e.severity,source:e.source,description:e.description,type:e.type,enabled:e.enabled,reference_type:n.Scope[e.reference_type],reference_id:e.reference_id,conditions:e.conditions,notifications:e.notifications,filters:e.filters,projections:e.projections,dampening:e.dampening})},e.prototype.update=function(e){return this.$http.put(this.getReferenceURL(e.reference_type,e.reference_id)+"alerts/"+e.id,{id:e.id,name:e.name,severity:e.severity,source:e.source,description:e.description,type:e.type,enabled:e.enabled,reference_type:n.Scope[e.reference_type],reference_id:e.reference_id,conditions:e.conditions,notifications:e.notifications,filters:e.filters,projections:e.projections,dampening:e.dampening})},e.prototype.listAlertEvents=function(e,t){var i=this.getReferenceURL(e.reference_type,e.reference_id)+"alerts/"+e.id+"/events?";return void 0!==t&&(void 0!==t.from&&(i+="&from="+t.from),void 0!==t.to&&(i+="&to="+t.to),void 0!==t.page&&(i+="&page="+t.page),void 0!==t.size&&(i+="&size="+t.size)),this.$http.get(i)},e.prototype.delete=function(e){return this.$http.delete(this.getReferenceURL(e.reference_type,e.reference_id)+"alerts/"+e.id)},e.prototype.getReferenceURL=function(e,t){switch(e){case n.Scope.API:return this.apisURL+t+"/";case n.Scope.APPLICATION:return this.applicationsURL+t+"/";default:return this.configurationURL}},e}();t.default=a},function(e,t,i){"use strict";t.__esModule=!0;var n=i(10),a={bindings:{alerts:"<",api:"<",application:"<"},template:i(1102),controller:["$state","AlertService","NotificationService","$mdDialog",function(e,t,a,o){var r=this;this.goTo=function(t,i){r.api?e.go("management.apis.detail."+t,{apiId:r.api.id,alertId:i}):r.application?e.go("management.applications.application."+t,{applicationId:r.application.id,alertId:i}):e.go("management.settings."+t,{alertId:i})},this.delete=function(n){r.enhanceAlert(n),o.show({controller:"DialogConfirmController",controllerAs:"ctrl",template:i(5),clickOutsideToClose:!0,locals:{title:"Are you sure you want to delete the alert '"+n.name+"'?",msg:"",confirmButton:"Delete"}}).then((function(i){i&&t.delete(n).then((function(t){a.show("Alert '"+n.name+"' has been deleted"),e.go(e.current,{},{reload:!0})}))}))},this.update=function(i){r.enhanceAlert(i),t.update(i).then((function(){a.show("Alert saved with success")})).finally((function(){e.go(e.current,{},{reload:!0})}))},this.toggleEnable=function(e){e.enabled=!e.enabled,r.update(e)},this.enhanceAlert=function(e){r.api?e.reference_type=n.Scope.API:r.application?e.reference_type=n.Scope.APPLICATION:e.reference_type=n.Scope.PLATFORM},this.getSeverityColor=function(e){switch(e.severity){case"info":return"#54a3ff";case"warning":return"#FF950D";case"critical":return"#d73a49"}}}]};t.default=a},function(e,t){e.exports=" <div class=gv-sub-content> <div class=\"gv-forms gv-forms-fluid\" layout=column> <div class=gv-form> <h1>Alerts</h1> <div class=gv-form-content layout=column> <md-table-container ng-if=\"$ctrl.alerts.length > 0\"> <table md-table class=gv-table-dense> <thead md-head> <tr md-row> <th md-column width=1% nowrap=nowrap></th> <th md-column>Name</th> <th md-column>Description</th> <th md-column>Last 5m / 1h / 1d / 1M</th> <th md-column>Last alert</th> <th md-column>Last message</th> <th permission permission-only=\"'environment-alert-d'\" width=48px nowrap=nowrap></th> <th permission permission-only=\"'environment-alert-d'\" width=48px nowrap=nowrap></th> </tr> </thead> <tbody md-body> <tr md-row ng-repeat=\"alert in $ctrl.alerts\" style=height:25px> <td md-cell> <span class=\"badge gravitee-policy-method-badge-info ng-binding ng-scope\" ng-style=\"{'background-color': $ctrl.getSeverityColor(alert)}\"> {{alert.severity}} </span> </td> <td md-cell permission permission-only=\"'environment-alert-u'\"> <a ng-style=\"alert.enabled?'':{'font-style': 'italic', 'color': 'grey'}\" ng-click=\"$ctrl.goTo('alert', alert.id)\">{{alert.name}}</a> </td> <td md-cell> {{alert.description}} </td> <td md-cell permission permission-except=\"'environment-alert-u'\"> <span ng-style=\"alert.enabled?'':{'font-style': 'italic', 'color': 'grey'}\">{{alert.name}}</span> </td> <td md-cell> <span> {{ alert.counters['5m'] }} / {{ alert.counters['1h'] }} / {{ alert.counters['1d'] }} / {{ alert.counters['1M'] }} <md-tooltip> {{ alert.counters['5m'] }} during the last 5 minutes / {{ alert.counters['1h'] }} during the last 1 hour / {{ alert.counters['1d'] }} during the last 1 day / {{ alert.counters['1M'] }} during the last 1 month </md-tooltip> </span> </td> <td md-cell> <span ng-if=alert.last_alert_at>{{ alert.last_alert_at | humanDatetimeFilter }} <md-tooltip>{{ alert.last_alert_at | date:'medium' }}</md-tooltip> </span> <span ng-if=\"alert.last_alert_at === undefined\">-</span> </td> <td md-cell> <span ng-if=alert.last_alert_message>{{alert.last_alert_message}}</span> <span ng-if=\"alert.last_alert_message === undefined\">-</span> </td> <td md-cell width=48px> <ng-md-icon ng-if=!alert.enabled icon=not_interested ng-click=$ctrl.toggleEnable(alert) style=font-size:24px;height:24px permission permission-only=\"'environment-alert-u'\"> <md-tooltip md-direction=top md-visible=false>Enable this alert</md-tooltip> </ng-md-icon> <ng-md-icon ng-if=alert.enabled icon=done ng-click=$ctrl.toggleEnable(alert) style=font-size:24px;height:24px permission permission-only=\"'environment-alert-u'\"> <md-tooltip md-direction=top md-visible=false>Disable this alert</md-tooltip> </ng-md-icon> </td> <td md-cell permission permission-only=\"'environment-alert-d'\"> <ng-md-icon icon=delete ng-click=$ctrl.delete(alert)></ng-md-icon> </td> </tr> </tbody> </table> </md-table-container> <gravitee-empty-state ng-if=\"$ctrl.alerts.length === 0\" icon=insert_chart model=Alert message=\"Alerts will appear here\" sub-message=\"Start creating an alert\" create-mode=true></gravitee-empty-state> </div> </div> </div> <div ng-style=\"{'text-align': $ctrl.alerts.length == 0 ? 'center' : 'none' }\"> <md-button permission permission-only=\"['api-alert-c', 'application-alert-c', 'environment-alert-c']\" ng-class=\"{'md-fab-bottom-right': $ctrl.alerts.length > 0}\" class=md-fab aria-label=create-alert ng-click=\"$ctrl.goTo('alertnew')\"> <ng-md-icon icon=add style=fill:#fff></ng-md-icon> </md-button> </div> </div>"},function(e,t,i){"use strict";t.__esModule=!0;var n=i(3),a=i(10),o=i(163),r={bindings:{alerts:"<",notifiers:"<",status:"<"},template:i(1104),controller:["Constants","AlertService","NotificationService","$state","$mdDialog",function(e,t,i,r,s){var l=this;this.$onInit=function(){l.tabs=["general","notifications"],l.severities=["info","warning","critical"];var e,t,i=l.tabs.indexOf(r.params.tab);l.selectedTab=i>-1?i:0,l.currentTab=l.tabs[l.selectedTab],r.params.apiId?(t=a.Scope.API,e=r.params.apiId,l.groups=["API metrics","Health-check"]):r.params.applicationId?(t=a.Scope.APPLICATION,e=r.params.applicationId,l.groups=["Application"]):(t=a.Scope.PLATFORM,l.groups=["Node","API metrics"]),l.rules=o.Rule.findByScope(t),l.updateMode=void 0!==r.params.alertId,l.updateMode?(l.alert=n.find(l.alerts,{id:r.params.alertId})||l.alerts[0],l.alert.type=(l.alert.source+"@"+l.alert.type).toUpperCase(),l.alert.reference_type=t):(l.alert=new a.Alert("New alert","info",void 0,void 0,void 0,t,e),l.alerts.push(l.alert)),l.initialAlert=n.cloneDeep(l.alert)},this.selectTab=function(e){l.selectedTab=e,l.currentTab=l.tabs[l.selectedTab]},this.$onDestroy=function(){l.updateMode||l.alerts.pop()},this.save=function(e){return e.type=e.type.split("@")[1],(l.updateMode?t.update(e):t.create(e)).then((function(e){l.formAlert.$setPristine(),i.show("Alert has been saved successfully");var t=e.data;return r.go("^.alert",{alertId:t.id},{reload:!0}),t}))},this.delete=function(){l.alert.id?s.show(s.confirm({title:"Warning",content:"Are you sure you want to remove this alert?",ok:"OK",cancel:"Cancel"})).then((function(){t.delete(l.alert).then((function(){i.show("Alert deleted with success"),l.backToAlerts()}))})):l.backToAlerts()},this.reset=function(){l.alert=n.cloneDeep(l.initialAlert),l.formAlert.$setPristine()},this.onRuleChange=function(){var e=n.find(l.rules,(function(e){return e.source+"@"+e.type===l.alert.type}));l.alert.source=e.source,l.alert.filters&&(l.alert.filters.length=0),l.alert.description=e.description},this.backToAlerts=function(){r.params.apiId?r.go("management.apis.detail.alerts",{apiId:r.params.apiId}):r.params.applicationId?r.go("management.applications.application.alerts",{applicationId:r.params.applicationId}):r.go("management.settings.alerts")}}]};t.default=r},function(e,t){e.exports=' <div class=gv-sub-content> <div class="gv-forms gv-forms-fluid" layout=column> <div class=gv-forms layout=column> <div class=gv-forms-header> <h1 ng-if=$ctrl.updateMode>Alert - {{$ctrl.alert.name}}</h1> <h1 ng-if=!$ctrl.updateMode>Create a new alert</h1> <a ng-click=$ctrl.backToAlerts()>Back to alerts</a> </div> <div class=gv-page-draft-banner ng-if="$ctrl.status.available_plugins === 0"> <ng-md-icon icon=warning class=gv-warning></ng-md-icon> No alert plugin is installed. Please install a plugin before being able to define alert rules. <br/> </div> <form name=$ctrl.formAlert ng-submit=$ctrl.save($ctrl.alert) novalidate> <md-tabs md-dynamic-height md-selected=$ctrl.selectedTab> <md-tab md-on-select="$ctrl.currentTab=$ctrl.selectTab(0)"> <md-tab-label>Alert</md-tab-label> <md-tab-body> <div class=gv-form> <h3>General</h3> <div class=gv-form-content layout=column> <div layout-gt-sm=row> <md-input-container class=md-block flex=50> <label>Name</label> <input ng-model=$ctrl.alert.name name=name minlength=3 md-maxlength=50 required autofocus aria-label="Alert name"/> <div class=hint ng-if="$ctrl.formAlert.name.$valid || $ctrl.formAlert.name.$pristine"> Alert name. </div> <div ng-messages=$ctrl.formAlert.name.$error> <div ng-message=required>Name is required.</div> <div ng-message=minlength>Name has to be more than 3 characters long.</div> <div ng-message=md-maxlength>Name has to be less than 50 characters long.</div> </div> </md-input-container> <div flex></div> <md-input-container class=md-block flex=20> <md-checkbox ng-model=$ctrl.alert.enabled aria-label="Enable this alert trigger" class="md-primary md-align-top-left" flex> Enable this alert </md-checkbox> </md-input-container> </div> <div layout-gt-sm=row> <md-input-container class=md-block> <label>Rule</label> <md-select ng-model=$ctrl.alert.type required ng-disabled=$ctrl.updateMode ng-change=$ctrl.onRuleChange()> <md-optgroup label={{group}} ng-repeat="group in $ctrl.groups"> <md-option ng-value="rule.source + \'@\' + rule.type" ng-repeat="rule in $ctrl.rules | filter: {category: group}">{{rule.description}}</md-option> </md-optgroup> </md-select> </md-input-container> <div flex></div> <md-input-container class=md-block flex=30> <label>Severity</label> <md-select ng-model=$ctrl.alert.severity required> <md-option ng-value=severity ng-repeat="severity in $ctrl.severities">{{severity}}</md-option> </md-select> </md-input-container> </div> <div layout-gt-sm=row> <md-input-container class=md-block flex-gt-sm> <label>Description</label> <input ng-model=$ctrl.alert.description name=name aria-label="Alert description"/> </md-input-container> </div> </div> </div> <div layout-gt-sm=column> <div class=gv-forms-header> <h3>Condition</h3> <div class=ipsum>Field metrics and condition for the rule</div> </div> <div class=gv-form-content layout=column> <div style=margin-bottom:5px ng-if="$ctrl.alert.type === undefined"> <span style=font-style:italic>Select a rule before setting the condition.</span> <br/> </div> <gv-alert-trigger-metrics-simple-condition ng-if="$ctrl.alert.type === \'REQUEST@METRICS_SIMPLE_CONDITION\'" alert=$ctrl.alert></gv-alert-trigger-metrics-simple-condition> <gv-alert-trigger-metrics-simple-condition ng-if="$ctrl.alert.type === \'NODE_HEARTBEAT@METRICS_SIMPLE_CONDITION\'" alert=$ctrl.alert></gv-alert-trigger-metrics-simple-condition> <gv-alert-trigger-metrics-aggregation ng-if="$ctrl.alert.type === \'REQUEST@METRICS_AGGREGATION\'" alert=$ctrl.alert></gv-alert-trigger-metrics-aggregation> <gv-alert-trigger-metrics-aggregation ng-if="$ctrl.alert.type === \'NODE_HEARTBEAT@METRICS_AGGREGATION\'" alert=$ctrl.alert></gv-alert-trigger-metrics-aggregation> <gv-alert-trigger-metrics-rate ng-if="$ctrl.alert.type === \'REQUEST@METRICS_RATE\'" alert=$ctrl.alert></gv-alert-trigger-metrics-rate> <gv-alert-trigger-metrics-rate ng-if="$ctrl.alert.type === \'NODE_HEARTBEAT@METRICS_RATE\'" alert=$ctrl.alert></gv-alert-trigger-metrics-rate> <gv-alert-trigger-api-health-check-status-changed ng-if="$ctrl.alert.type === \'ENDPOINT_HEALTH_CHECK@API_HC_ENDPOINT_STATUS_CHANGED\'" alert=$ctrl.alert></gv-alert-trigger-api-health-check-status-changed> <gv-alert-trigger-node-lifecycle-changed ng-if="$ctrl.alert.type === \'NODE_LIFECYCLE@NODE_LIFECYCLE_CHANGED\'" alert=$ctrl.alert></gv-alert-trigger-node-lifecycle-changed> <gv-alert-trigger-application-quota ng-if="$ctrl.alert.type === \'REQUEST@APPLICATION_QUOTA\'" alert=$ctrl.alert></gv-alert-trigger-application-quota> </div> </div> <gv-alert-trigger-filters alert=$ctrl.alert></gv-alert-trigger-filters> </md-tab-body> </md-tab> <md-tab md-on-select="$ctrl.currentTab=$ctrl.selectTab(1)"> <md-tab-label>Notifications</md-tab-label> <md-tab-body> <gv-alert-trigger-dampening dampening=$ctrl.alert.dampening></gv-alert-trigger-dampening> <gv-alert-notifications alert=$ctrl.alert></gv-alert-notifications> </md-tab-body> </md-tab> <md-tab md-on-select="$ctrl.currentTab=$ctrl.selectTab(2)" ng-disabled=!$ctrl.updateMode> <md-tab-label>History</md-tab-label> <md-tab-body> <gv-alert-history alert=$ctrl.alert></gv-alert-history> </md-tab-body> </md-tab> </md-tabs> <div class="md-actions gravitee-api-save-button" layout=row> <md-button ng-if=$ctrl.updateMode class="md-raised md-primary" type=submit ng-disabled="$ctrl.status.available_plugins === 0 || $ctrl.formAlert.$invalid || $ctrl.formAlert.$pristine" permission permission-only="[\'api-alert-u\', \'application-alert-u\', \'environment-alert-u\']"> Update </md-button> <md-button ng-if=!$ctrl.updateMode class="md-raised md-primary" type=submit ng-disabled="$ctrl.status.available_plugins === 0 || $ctrl.formAlert.$invalid || $ctrl.formAlert.$pristine" permission permission-only="[\'api-alert-c\', \'application-alert-c\', \'environment-alert-c\']"> Create </md-button> <md-button class=md-raised type=button ng-click=$ctrl.reset() permission permission-only="[\'api-alert-d\', \'application-alert-d\', \'environment-alert-d\']" ng-disabled="$ctrl.status.available_plugins === 0 || $ctrl.formAlert.$invalid || $ctrl.formAlert.$pristine"> Reset </md-button> <md-button class="md-raised md-warn float-right" ng-if=$ctrl.updateMode ng-disabled="$ctrl.status.available_plugins === 0" type=button ng-click=$ctrl.delete() permission permission-only="[\'api-alert-d\', \'application-alert-d\', \'environment-alert-d\']"> Delete </md-button> </div> </form> </div> </div> </div> '},function(e,t,i){"use strict";t.__esModule=!0;var n={bindings:{alert:"<"},require:{parent:"^alertComponent"},template:i(1106),controller:function(){var e=this;this.addNotification=function(){void 0===e.alert.notifications&&(e.alert.notifications=[]),e.alert.notifications.push({})},this.removeNotification=function(t){e.alert.notifications.splice(t,1),e.parent.formAlert.$setDirty()}}};t.default=n},function(e,t){e.exports=' <a style=margin-top:5px;margin-bottom:5px ng-click=$ctrl.addNotification() style=font-style:italic>> Add a notification</a> <gv-alert-notification ng-repeat="notification in $ctrl.alert.notifications" notification=notification on-notification-remove=$ctrl.removeNotification($index)> </gv-alert-notification> '},function(e,t,i){"use strict";t.__esModule=!0;var n={bindings:{notification:"<",onNotificationRemove:"&"},require:{parent:"^gvAlertNotifications"},template:i(1108),controller:["NotificationService","NotifierService",function(e,t){var i=this;this.notifierJsonSchemaForm=["*"],this.$onInit=function(){i.notification.type&&i.reloadNotifierSchema()},this.onNotifierChange=function(){i.notification.configuration={},i.reloadNotifierSchema()},this.reloadNotifierSchema=function(){t.getSchema(i.notification.type).then((function(e){var t=e.data;return i.notifierJsonSchema=t,{schema:t}}),(function(t){if(404===t.status)return i.notifierJsonSchema={},{schema:{}};e.showError("Unexpected error while loading notifier schema for "+i.notifier.type)}))},this.remove=function(){i.onNotificationRemove()}}]};t.default=n},function(e,t){e.exports=' <div class=gv-form> <h2 layout=row> Notification <ng-md-icon icon=cancel style=top:5px;margin-right:10px;fill:grey size=20px ng-click=$ctrl.remove()></ng-md-icon> </h2> <div class=gv-form-content layout=column> <md-input-container class=md-block flex-gt-xs> <label>Channel</label> <md-select ng-model=$ctrl.notification.type placeholder=Channel required ng-change=$ctrl.onNotifierChange()> <md-option ng-repeat="type in $ctrl.parent.parent.notifiers" ng-value=type.id>{{type.name}}</md-option> </md-select> </md-input-container> <form style=width:100% name=notificationConfigurationForm sf-schema=$ctrl.notifierJsonSchema sf-form=$ctrl.notifierJsonSchemaForm sf-model=$ctrl.notification.configuration sf-options="{ validateOnRender: true, formDefaults: { startEmpty: true } }" novalidate></form> </div> </div> '},function(e,t,i){"use strict";t.__esModule=!0;var n={bindings:{alert:"<"},require:{parent:"^alertComponent"},template:i(1110),controller:["AlertService",function(e){var t=this;this.query={limit:10,page:1},this.$onInit=function(){e.listAlertEvents(t.alert).then((function(e){t.events=e.data}))},this.search=function(){e.listAlertEvents(t.alert,{from:t.lastFrom,to:t.lastTo,page:t.query.page-1,size:t.query.limit}).then((function(e){t.events=e.data,t.$scope.eventsFetchData=!1}))}}]};t.default=n},function(e,t){e.exports=' <div class=gv-form> <div class=gv-forms-header> <h2>History</h2> <div class=ipsum>History of events for this alert</div> </div> <div class=gv-form-content layout=column> <md-table-container> <table md-table> <thead md-head> <tr md-row> <th md-column>Date</th> <th md-column>Message</th> </tr> </thead> <tbody md-body> <tr md-row ng-repeat="event in $ctrl.events.content" style=height:25px> <td md-cell> <span>{{event.created_at | humanDatetimeFilter }} <md-tooltip>{{ event.created_at | date:\'medium\' }}</md-tooltip> </span> </td> <td md-cell>{{event.message}}</td> </tr> <tr ng-if="$ctrl.events.content.length === 0"> <td md-cell colspan=2>No event</td> </tr> </tbody> </table> </md-table-container> <md-table-pagination md-limit=$ctrl.query.limit md-limit-options="[10, 25, 50, 75, 100]" md-page=$ctrl.query.page md-total={{$ctrl.events.totalElements}} md-on-limit=$ctrl.search md-on-paginate=$ctrl.search md-page-select></md-table-pagination> </div> </div> '},function(e,t,i){"use strict";t.__esModule=!0;var n=i(10),a={bindings:{dampening:"<"},require:{parent:"^alertComponent"},template:i(1112),controller:function(){var e=this;this.$onInit=function(){e.modes=n.DampeningMode.MODES,e.timeUnits=n.DurationTimeUnit.TIME_UNITS},this.onModeChange=function(){delete e.dampening.duration,delete e.dampening.timeUnit,delete e.dampening.trueEvaluations,delete e.dampening.totalEvaluations}}};t.default=a},function(e,t){e.exports=' <div class=gv-form> <div class=gv-forms-header> <h2>Dampening</h2> <div class=ipsum>Allows you to limit the number of notifications if the trigger is fired multiple times for the same condition</div> </div> <div class=gv-form-content layout=column> <md-input-container class=md-block> <label>Mode</label> <md-select ng-model=$ctrl.dampening.mode required ng-change=$ctrl.onModeChange()> <md-option ng-value=mode.type ng-repeat="mode in $ctrl.modes"> {{::mode.description}} </md-option> </md-select> <div class=hint> Select the most appropriate dampening mode for this alert. </div> </md-input-container> <div layout=column ng-switch=$ctrl.dampening.mode> <div ng-switch-when=strict_count> <md-input-container class=md-block flex-gt-sm flex=30> <label>Number of true evaluations</label> <input ng-model=$ctrl.dampening.trueEvaluations required type=number min=1 max=100 name=dampening.trueevaluations aria-label="dampening true evaluations"/> <div class=hint> The number of consecutive true evaluations. </div> <div ng-messages="$ctrl.parent.formAlert[\'dampening.trueevaluations\'].$error"> <div ng-message=required>Number of true evaluations is required.</div> <div ng-message=min>Number of true evaluations must be higher or equals to 1.</div> </div> </md-input-container> </div> <div ng-switch-when=relaxed_count layout=row> <md-input-container class=md-block flex-gt-sm flex=30> <label>Number of true evaluations</label> <input ng-model=$ctrl.dampening.trueEvaluations required type=number min=1 max=100 name=dampening.trueevaluations aria-label="dampening true evaluations"/> <div class=hint> The number of true evaluations. </div> <div ng-messages="$ctrl.parent.formAlert[\'dampening.trueevaluations\'].$error"> <div ng-message=required>Number of true evaluations is required.</div> <div ng-message=min>Number of true evaluations must be higher or equals to 1.</div> </div> </md-input-container> <span flex=10 style=display:grid;align-items:center align=center> of </span> <md-input-container class=md-block flex-gt-sm flex=30> <label>Number of total evaluations</label> <input ng-model=$ctrl.dampening.totalEvaluations required type=number min={{$ctrl.dampening.trueEvaluations}} max=100 name=dampening.totalevaluations aria-label="dampening total evaluations"/> <div class=hint> The number of total evaluations. </div> <div ng-messages="$ctrl.parent.formAlert[\'dampening.totalevaluations\'].$error"> <div ng-message=required>Number of total evaluations is required.</div> <div ng-message=min>Number of total evaluations must be higher than the number of true evaluations.</div> </div> </md-input-container> </div> <div ng-switch-when=strict_time layout=row> <md-input-container class=md-block flex-gt-sm flex=10> <label>Duration</label> <input ng-model=$ctrl.dampening.duration required type=number min=1 max=100 name=dampening.duration aria-label="dampening duration"/> <div ng-messages="$ctrl.parent.formAlert[\'dampening.duration\'].$error"> <div ng-message=required>Number of true evaluations is required.</div> <div ng-message=min>Number of true evaluations must be higher or equals to 1.</div> </div> </md-input-container> <md-input-container class=md-block flex-gt-sm flex=15> <label>TimeUnit</label> <md-select ng-model=$ctrl.dampening.timeUnit required> <md-option ng-value=unit.key ng-repeat="unit in $ctrl.timeUnits"> {{::unit.name}} </md-option> </md-select> </md-input-container> </div> <div ng-switch-when=relaxed_time layout=row> <md-input-container class=md-block flex-gt-sm flex=30> <label>Number of true evaluations</label> <input ng-model=$ctrl.dampening.trueEvaluations required type=number min=1 max=100 name=dampening.trueevaluations aria-label="dampening true evaluations"/> <div class=hint> The number of true evaluations. </div> <div ng-messages="$ctrl.parent.formAlert[\'dampening.trueevaluations\'].$error"> <div ng-message=required>Number of true evaluations is required.</div> <div ng-message=min>Number of true evaluations must be higher or equals to 1.</div> </div> </md-input-container> <span flex=10 style=display:grid;align-items:center align=center> for </span> <md-input-container class=md-block flex-gt-sm flex=10> <label>Duration</label> <input ng-model=$ctrl.dampening.duration required type=number min=1 max=100 name=dampening.duration aria-label="dampening duration"/> <div ng-messages="$ctrl.parent.formAlert[\'dampening.duration\'].$error"> <div ng-message=required>Number of true evaluations is required.</div> <div ng-message=min>Number of true evaluations must be higher or equals to 1.</div> </div> </md-input-container> <md-input-container class=md-block flex-gt-sm flex=15> <label>TimeUnit</label> <md-select ng-model=$ctrl.dampening.timeUnit required> <md-option ng-value=unit.key ng-repeat="unit in $ctrl.timeUnits"> {{::unit.name}} </md-option> </md-select> </md-input-container> </div> </div> </div> </div> '},function(e,t,i){"use strict";t.__esModule=!0;var n=i(10),a={bindings:{condition:"<"},template:i(1114),controller:function(){var e=this;this.$onInit=function(){e.timeUnits=n.DurationTimeUnit.TIME_UNITS}}};t.default=a},function(e,t){e.exports=' <div layout=row> <span flex=15 style=display:grid;align-items:center align=center>For</span> <md-input-container class=md-block flex-gt-sm flex=10> <label>Duration</label> <input ng-model=$ctrl.condition.duration required type=number min=1 name=window-duration aria-label="trigger time-window duration"/> <div ng-messages="$ctrl.formAlert[\'window-duration\'].$error"> <div ng-message=required>Duration is required.</div> <div ng-message=min>Duration must be higher than 0.</div> </div> </md-input-container> <md-input-container class=md-block flex-gt-sm flex=15> <label>TimeUnit</label> <md-select ng-model=$ctrl.condition.timeUnit required> <md-option ng-value=unit.key ng-repeat="unit in $ctrl.timeUnits"> {{::unit.name}} </md-option> </md-select> </md-input-container> </div> '},function(e,t,i){"use strict";t.__esModule=!0;var n={bindings:{alert:"<"},template:i(1116),controller:function(){var e=this;this.addFilter=function(){void 0===e.alert.filters&&(e.alert.filters=[]),e.alert.filters.push({})},this.removeFilter=function(t){e.alert.filters.splice(t,1)}}};t.default=n},function(e,t){e.exports=' <div class=gv-forms-header> <h3>Filters</h3> <div class=ipsum>Filters to apply condition only on a subset of events</div> </div> <div class=gv-form-content layout=column> <div style=margin-bottom:5px ng-if="$ctrl.alert.filters === undefined || $ctrl.alert.filters.length === 0"> <span style=font-style:italic>Filters allow you to apply conditions only on a subset of events.</span> <br/> </div> <a style=margin-bottom:5px ng-click=$ctrl.addFilter() style=font-style:italic>> Add a filter</a> <gv-alert-trigger-filter alert=$ctrl.alert ng-repeat="condition in $ctrl.alert.filters" condition=condition on-filter-remove=$ctrl.removeFilter($index)> ></gv-alert-trigger-filter> </div> '},function(e,t,i){"use strict";t.__esModule=!0;var n=i(164),a=i(183),o=i(264),r=i(10),s={bindings:{condition:"<",alert:"<",onFilterRemove:"&"},template:i(1118),controller:function(){var e=this;this.$onInit=function(){"REQUEST"===e.alert.source?e.metrics=r.Metrics.filterByScope(n.ApiMetrics.METRICS,e.alert.reference_type):"NODE_HEARTBEAT"===e.alert.source?e.metrics=r.Metrics.filterByScope(a.NodeMetrics.METRICS,e.alert.reference_type):"ENDPOINT_HEALTH_CHECK"===e.alert.source?e.metrics=r.Metrics.filterByScope(o.HealthcheckMetrics.METRICS,e.alert.reference_type):"NODE_LIFECYCLE"===e.alert.source?e.metrics=r.Metrics.filterByScope(a.NodeLifecycleMetrics.METRICS,e.alert.reference_type):"NODE_HEALTHCHECK"===e.alert.source&&(e.metrics=r.Metrics.filterByScope(a.NodeHealthcheckMetrics.METRICS,e.alert.reference_type))},this.deleteFilter=function(){e.onFilterRemove()}}};t.default=s},function(e,t){e.exports=' <div class=gv-form-content layout=row style=margin-bottom:3px> <div flex=5 layout=row layout-align="center center" style="border-right:1px solid #d3d3d3;margin-right:10px"> <ng-md-icon icon=close style=fill:grey size=20px ng-click=$ctrl.deleteFilter()></ng-md-icon> </div> <gv-alert-trigger-condition condition=$ctrl.condition metrics=$ctrl.metrics label=false flex></gv-alert-trigger-condition> </div> '},function(e,t,i){"use strict";t.__esModule=!0;var n=i(3),a=i(10),o={bindings:{condition:"<",metrics:"<",label:"<"},template:i(1120),controller:function(){var e=this;this.$onInit=function(){e.onMetricsChange(!1)},this.onMetricsChange=function(t){t&&(delete e.condition.type,delete e.condition.operator,delete e.condition.multiplier,delete e.condition.property2),void 0===e.condition.property&&(e.condition.property=e.metrics[0].key),e.conditions=n.find(e.metrics,(function(t){return t.key===e.condition.property})).conditions,e.onConditionChange()},this.onConditionChange=function(){var t=a.Conditions.findByType(e.condition.type);void 0!==t&&(e.operators=t.getOperators(),1===e.operators.length&&(e.condition.operator=e.operators[0].key))}}};t.default=o},function(e,t){e.exports=' <div layout-gt-sm=row> <span ng-if="$ctrl.label === undefined || $ctrl.label === true" flex=15 style=display:grid;align-items:center align=center>When</span> <md-input-container class=md-block flex-gt-sm flex=15> <label>Metrics</label> <md-select ng-model=$ctrl.condition.property required ng-change=$ctrl.onMetricsChange(true)> <md-option ng-value=type.key ng-repeat="type in $ctrl.metrics"> {{::type.name}} </md-option> </md-select> </md-input-container> <span flex=5>&nbsp;</span> <md-input-container class=md-block flex-gt-sm flex=15> <label>Type</label> <md-select ng-model=$ctrl.condition.type required ng-change=$ctrl.onConditionChange()> <md-option ng-value=type ng-repeat="type in $ctrl.conditions"> {{::type}} </md-option> </md-select> </md-input-container> <div ng-if="$ctrl.operators.length > 1" layout=row> <span flex=5>&nbsp;</span> <md-input-container class=md-block flex-gt-sm> <label>Operator</label> <md-select ng-model=$ctrl.condition.operator required> <md-option ng-value=operator.key ng-repeat="operator in $ctrl.operators"> {{::operator.name}} </md-option> </md-select> </md-input-container> </div> <span flex=5>&nbsp;</span> <div ng-if="$ctrl.condition.operator && $ctrl.condition.type" ng-switch=$ctrl.condition.type flex> <gv-alert-trigger-condition-threshold ng-switch-when=threshold condition=$ctrl.condition></gv-alert-trigger-condition-threshold> <gv-alert-trigger-condition-threshold-range ng-switch-when=threshold_range condition=$ctrl.condition></gv-alert-trigger-condition-threshold-range> <gv-alert-trigger-condition-string ng-switch-when=string metrics=$ctrl.metrics condition=$ctrl.condition></gv-alert-trigger-condition-string> <gv-alert-trigger-condition-compare ng-switch-when=compare metrics=$ctrl.metrics condition=$ctrl.condition></gv-alert-trigger-condition-compare> </div> </div> '},function(e,t,i){"use strict";t.__esModule=!0;var n={bindings:{condition:"<"},template:i(1122),controller:function(){}};t.default=n},function(e,t){e.exports=' <md-input-container class=md-block flex=30> <label>Threshold</label> <input ng-model=$ctrl.condition.threshold required type=number min=1 name=threshold aria-label="trigger threshold"/> <div ng-messages=$ctrl.formAlert.threshold.$error> <div ng-message=required>Threshold is required.</div> <div ng-message=min>Threshold must be higher than 0.</div> </div> </md-input-container> '},function(e,t,i){"use strict";t.__esModule=!0;var n={bindings:{condition:"<"},template:i(1124),controller:function(){var e=this;this.$onInit=function(){e.condition.operatorLow="INCLUSIVE",e.condition.operatorHigh="INCLUSIVE"}}};t.default=n},function(e,t){e.exports=' <div layout=row> <md-input-container> <label>Low threshold</label> <input ng-model=$ctrl.condition.thresholdLow required type=number min=1 name=thresholdLow aria-label="trigger threshold low"/> <div ng-messages=$ctrl.formAlert.thresholdLow.$error> <div ng-message=required>Threshold is required.</div> <div ng-message=min>Threshold must be higher than 0.</div> </div> </md-input-container> <span flex=10 style=display:grid;align-items:center align=center> and </span> <md-input-container> <label>High threshold</label> <input ng-model=$ctrl.condition.thresholdHigh required type=number min={{$ctrl.condition.thresholdLow}} name=thresholdHigh aria-label="trigger threshold high"/> <div ng-messages=$ctrl.formAlert.thresholdHigh.$error> <div ng-message=required>Threshold is required.</div> <div ng-message=min>Threshold must be higher than 0.</div> </div> </md-input-container> </div> '},function(e,t,i){"use strict";t.__esModule=!0;var n=i(3),a=i(10),o={bindings:{condition:"<",metrics:"<"},template:i(1126),controller:["$injector","$state",function(e,t){var i=this;this.$onInit=function(){var o=n.find(i.metrics,(function(e){return e.key===i.condition.property}));if(o.loader){var r=void 0,s=void 0;t.params.apiId?(s=a.Scope.API,r=t.params.apiId):t.params.applicationId?(s=a.Scope.APPLICATION,r=t.params.applicationId):s=a.Scope.PLATFORM,i.values=o.loader(s,r,e)}}}]};t.default=o},function(e,t){e.exports=' <md-input-container class=md-block ng-if="$ctrl.values === undefined"> <label>Pattern</label> <input ng-model=$ctrl.condition.pattern required type=text name=condition-string-value aria-label="string value condition"/> <div ng-messages="$ctrl.formAlert[\'condition-string-value\'].$error"> <div ng-message=required>Pattern is required.</div> </div> </md-input-container> <md-input-container class=md-block ng-if="$ctrl.values !== undefined"> <label>Value</label> <md-select ng-model=$ctrl.condition.pattern required> <md-option ng-value=type.key ng-repeat="type in $ctrl.values"> {{::type.value}} </md-option> </md-select> </md-input-container> '},function(e,t,i){"use strict";t.__esModule=!0;var n=i(3),a={bindings:{condition:"<",metrics:"<"},template:i(1128),controller:function(){var e=this;this.$onInit=function(){e.metrics=n.filter(e.metrics,(function(t){return-1!==t.conditions.indexOf("compare")&&t.key!==e.condition.property}))}}};t.default=a},function(e,t){e.exports=' <div layout=row> <md-input-container class=md-block flex-gt-sm flex=15> <label>Multiplier</label> <input ng-model=$ctrl.condition.multiplier required type=number min=1 name=condition-compare-multiplier aria-label="compare multiplier"/> <div ng-messages="$ctrl.formAlert[\'condition-compare-multiplier\'].$error"> <div ng-message=required>Multiplier is required.</div> <div ng-message=min>Multiplier must be higher than 0.</div> </div> </md-input-container> <md-input-container class=md-block flex-gt-sm flex=30> <label>Property</label> <md-select ng-model=$ctrl.condition.property2 required name=condition-compare-property aria-label="compare property"/> <md-option ng-value=type.key ng-repeat="type in $ctrl.metrics"> {{::type.name}} </md-option>  <div ng-messages="$ctrl.formAlert[\'condition-compare-property\'].$error"> <div ng-message=required>Property is required.</div> </div> </md-input-container> </div> '},function(e,t,i){"use strict";t.__esModule=!0;var n=i(163),a=i(10),o={bindings:{alert:"<"},require:{parent:"^alertComponent"},template:i(1130),controller:function(){var e=this;this.$onInit=function(){e.metrics=a.Metrics.filterByScope(n.Rule.findByScopeAndType(e.alert.reference_type,e.alert.type).metrics,e.alert.reference_type),void 0===e.alert.id&&(e.alert.conditions=[{property:e.metrics[0].key}],e.alert.dampening={mode:"strict_count",trueEvaluations:1,totalEvaluations:1})}}};t.default=o},function(e,t){e.exports=" <gv-alert-trigger-condition condition=$ctrl.alert.conditions[0] metrics=$ctrl.metrics></gv-alert-trigger-condition> "},function(e,t,i){"use strict";t.__esModule=!0;var n=i(163),a=i(10),o={bindings:{alert:"<"},require:{parent:"^alertComponent"},template:i(1132),controller:function(){var e=this;this.$onInit=function(){e.metrics=n.Rule.findByScopeAndType(e.alert.reference_type,e.alert.type).metrics,e.operators=a.AggregationCondition.OPERATORS,e.functions=a.AggregationCondition.FUNCTIONS,void 0===e.alert.id&&(e.alert.conditions=[{function:"avg",property:e.metrics[0].key,operator:"GT",type:"AGGREGATION"}],e.alert.dampening={mode:"strict_count",trueEvaluations:1,totalEvaluations:1})}}};t.default=o},function(e,t){e.exports=' <div layout-gt-sm=row> <span flex=15 style=display:grid;align-items:center align=center>Calculate</span> <md-input-container class=md-block flex-gt-sm flex=20> <label>Function</label> <md-select ng-model=$ctrl.alert.conditions[0].function required> <md-option ng-value=type.key ng-repeat="type in $ctrl.functions"> {{::type.name}} </md-option> </md-select> </md-input-container> <span flex=5 style=display:grid;align-items:center align=center ng-if="$ctrl.alert.conditions[0].function !== \'count\'">on</span> <md-input-container class=md-block flex-gt-sm flex=20 ng-if="$ctrl.alert.conditions[0].function !== \'count\'"> <label>Metric</label> <md-select ng-model=$ctrl.alert.conditions[0].property required> <md-option ng-value=type.key ng-repeat="type in $ctrl.metrics"> {{::type.name}} </md-option> </md-select> </md-input-container> </div> <div layout-gt-sm=row> <span flex=15 style=display:grid;align-items:center align=center>If result is</span> <md-input-container class=md-block flex-gt-sm flex=20> <label>Operator</label> <md-select ng-model=$ctrl.alert.conditions[0].operator required> <md-option ng-value=type.key ng-repeat="type in $ctrl.operators"> {{::type.name}} </md-option> </md-select> </md-input-container> <span flex=5>&nbsp;</span> <md-input-container class=md-block flex-gt-sm flex=15> <label>Threshold</label> <input ng-model=$ctrl.alert.conditions[0].threshold required type=number min=1 name=threshold aria-label="trigger threshold"/> <div ng-messages=$ctrl.parent.formAlert.threshold.$error> <div ng-message=required>Threshold is required.</div> <div ng-message=min>Threshold must be higher than 0.</div> </div> </md-input-container> </div> <gv-alert-trigger-window condition=$ctrl.alert.conditions[0]></gv-alert-trigger-window> <gv-alert-trigger-projections condition=$ctrl.alert.conditions[0] alert=$ctrl.alert></gv-alert-trigger-projections> '},function(e,t,i){"use strict";t.__esModule=!0;var n=i(10),a=i(163),o={bindings:{alert:"<"},require:{parent:"^alertComponent"},template:i(1134),controller:function(){var e=this;this.$onInit=function(){e.metrics=n.Metrics.filterByScope(a.Rule.findByScopeAndType(e.alert.reference_type,e.alert.type).metrics,e.alert.reference_type),e.operators=n.RateCondition.OPERATORS,void 0===e.alert.id&&(e.alert.conditions=[{operator:"GT",type:"RATE",comparison:{property:e.metrics[0].key,operator:"GT",threshold:100,type:"THRESHOLD"}}],e.alert.dampening={mode:"strict_count",trueEvaluations:1,totalEvaluations:1})}}};t.default=o},function(e,t){e.exports=' <gv-alert-trigger-condition condition=$ctrl.alert.conditions[0].comparison metrics=$ctrl.metrics></gv-alert-trigger-condition> <div layout-gt-sm=row> <span flex=15 style=display:grid;align-items:center align=center>If rate is</span> <md-input-container class=md-block flex-gt-sm flex=20> <label>Operator</label> <md-select ng-model=$ctrl.alert.conditions[0].operator required> <md-option ng-value=type.key ng-repeat="type in $ctrl.operators"> {{::type.name}} </md-option> </md-select> </md-input-container> <span flex=5>&nbsp;</span> <md-input-container class=md-block flex-gt-sm flex=15> <label>Threshold (%)</label> <input ng-model=$ctrl.alert.conditions[0].threshold required type=number min=1 max=99 name=threshold aria-label="trigger threshold"/> <div ng-messages=$ctrl.parent.formAlert.threshold.$error> <div ng-message=required>Threshold is required.</div> <div ng-message=min>Threshold must be higher than 0.</div> <div ng-message=max>Threshold must be lower than 100.</div> </div> </md-input-container> </div> <gv-alert-trigger-window condition=$ctrl.alert.conditions[0]></gv-alert-trigger-window> <gv-alert-trigger-projections condition=$ctrl.alert.conditions[0] alert=$ctrl.alert></gv-alert-trigger-projections> '},function(e,t,i){"use strict";t.__esModule=!0;var n={bindings:{alert:"<"},template:i(1136),controller:function(){var e=this;this.$onInit=function(){void 0===e.alert.id&&(e.alert.conditions=[{type:"STRING_COMPARE",operator:"NOT_EQUALS",property:"status.old",property2:"status.new"}],e.alert.dampening={mode:"strict_count",trueEvaluations:1,totalEvaluations:1})}}};t.default=n},function(e,t){e.exports=" <span style=font-style:italic>This rule does not require any configuration.</span> "},function(e,t,i){"use strict";t.__esModule=!0;var n={bindings:{alert:"<"},template:i(1138),controller:function(){var e=this;this.$onInit=function(){void 0===e.alert.id&&(e.alert.conditions=[{type:"STRING",operator:"MATCHES",property:"node.event",pattern:"NODE_START|NODE_STOP"}],e.alert.dampening={mode:"strict_count",trueEvaluations:1,totalEvaluations:1})}}};t.default=n},function(e,t){e.exports=" <span style=font-style:italic>This rule does not require any configuration.</span> "},function(e,t,i){"use strict";t.__esModule=!0;var n={bindings:{alert:"<"},template:i(1140),controller:function(){var e=this;this.$onInit=function(){void 0===e.alert.id&&(e.alert.conditions=[{type:"STRING",operator:"MATCHES",property:"node.healthy",pattern:".*"}],e.alert.dampening={mode:"strict_count",trueEvaluations:1,totalEvaluations:1})}}};t.default=n},function(e,t){e.exports=" <span style=font-style:italic>This rule does not require any configuration.</span> "},function(e,t,i){"use strict";t.__esModule=!0;var n=i(164),a={bindings:{alert:"<"},require:{parent:"^alertComponent"},template:i(1142),controller:function(){var e=this;this.$onInit=function(){e.metrics=[n.ApiMetrics.QUOTA_COUNTER],void 0===e.alert.id&&(e.alert.conditions=[{type:"COMPARE",operator:"GTE",property:"quota.counter",property2:"quota.limit"}],e.alert.dampening={mode:"strict_count",trueEvaluations:1,totalEvaluations:1}),e.threshold=100*e.alert.conditions[0].multiplier},this.calculateMultiplier=function(){e.alert.conditions[0].multiplier=e.threshold/100}}};t.default=a},function(e,t){e.exports=' <div layout-gt-sm=row> <span ng-if="$ctrl.label === undefined || $ctrl.label === true" flex=15 style=display:grid;align-items:center align=center>When quota reaches </span> <md-input-container class=md-block flex=5> <input ng-model=$ctrl.threshold required type=number min=1 max=100 name=threshold aria-label="trigger threshold" ng-change=$ctrl.calculateMultiplier() /> <div ng-messages=$ctrl.parent.formAlert.threshold.$error> <div ng-message=required>Threshold is required.</div> <div ng-message=min>Threshold must be higher than 0.</div> <div ng-message=max>Threshold must be lower than 100.</div> </div> </md-input-container> <span ng-if="$ctrl.label === undefined || $ctrl.label === true" flex style=margin-left:10px;display:grid;align-items:center;text-align:left align=center> % of the limit fixed by the API\'s plan.</span> </div> '},function(e,t,i){"use strict";t.__esModule=!0;var n={bindings:{alert:"<",condition:"<",metrics:"<"},template:i(1144),controller:function(){var e=this;this.addProjection=function(){void 0===e.condition.projections&&(e.condition.projections=[]),e.condition.projections.push({type:"PROPERTY"})},this.removeProjection=function(t){e.condition.projections.splice(t,1)}}};t.default=n},function(e,t){e.exports=' <div class=gv-forms-header> <h3>Aggregation</h3> <div class=ipsum>Projection to apply to the condition</div> </div> <div class=gv-form-content layout=column> <div style=margin-bottom:5px ng-if="$ctrl.condition.projections === undefined || $ctrl.condition.projections.length === 0"> <span style=font-style:italic>Aggregation allow you to group results based on a property</span> <br/> </div> <a style=margin-bottom:5px ng-if="$ctrl.condition.projections === undefined || $ctrl.condition.projections.length < 1" ng-click=$ctrl.addProjection() style=font-style:italic>> Set a projection</a> <gv-alert-trigger-projection alert=$ctrl.alert ng-repeat="projection in $ctrl.condition.projections" projection=projection on-projection-remove=$ctrl.removeProjection($index)> ></gv-alert-trigger-projection> </div> '},function(e,t,i){"use strict";t.__esModule=!0;var n=i(164),a=i(183),o=i(264),r=i(10),s=i(3),l={bindings:{projection:"<",alert:"<",onProjectionRemove:"&"},template:i(1146),controller:function(){var e=this;this.$onInit=function(){"REQUEST"===e.alert.source?e.metrics=r.Metrics.filterByScope(n.ApiMetrics.METRICS,e.alert.reference_type):"NODE_HEARTBEAT"===e.alert.source?e.metrics=r.Metrics.filterByScope(a.NodeMetrics.METRICS,e.alert.reference_type):"ENDPOINT_HEALTH_CHECK"===e.alert.source?e.metrics=r.Metrics.filterByScope(o.HealthcheckMetrics.METRICS,e.alert.reference_type):"NODE_LIFECYCLE"===e.alert.source&&(e.metrics=r.Metrics.filterByScope(a.NodeLifecycleMetrics.METRICS,e.alert.reference_type)),e.metrics=s.filter(e.metrics,(function(e){return e.supportPropertyProjection}))},this.deleteProjection=function(){e.onProjectionRemove()}}};t.default=l},function(e,t){e.exports=' <div class=gv-form-content layout=row style=margin-bottom:3px> <div flex=5 layout=row layout-align="center center" style="border-right:1px solid #d3d3d3;margin-right:10px"> <ng-md-icon icon=close style=fill:grey size=20px ng-click=$ctrl.deleteProjection()></ng-md-icon> </div> <div layout-gt-sm=row flex=30> <md-input-container class=md-block flex-gt-sm flex=50> <label>Property</label> <md-select ng-model=$ctrl.projection.property required> <md-option ng-value=type.key ng-repeat="type in $ctrl.metrics"> {{::type.name}} </md-option> </md-select> </md-input-container> </div> </div> '},function(e,t,i){"use strict";t.__esModule=!0;var n={bindings:{score:"<"},controller:"CircularPercentageController",template:i(1148)};t.default=n},function(e,t){e.exports=' <svg viewBox="0 0 36 36" class=circular-chart ng-class=$ctrl.qualityMetricCssClass> <path class=circle-bg d="M18 2.0845\n            a 15.9155 15.9155 0 0 1 0 31.831\n            a 15.9155 15.9155 0 0 1 0 -31.831"/> <path class=circle stroke-dasharray="{{$ctrl.percentageCircle}}, 100" d="M18 2.0845\n            a 15.9155 15.9155 0 0 1 0 31.831\n            a 15.9155 15.9155 0 0 1 0 -31.831"/> <text x=18 y=21.80 class=percentage>{{$ctrl.getScore()}}%</text> </svg>'},function(e,t,i){"use strict";t.__esModule=!0;var n=function(){function e(){this.score=0,this.percentage=0,this.percentageCircle=100}return e.prototype.getScore=function(){return this.score>0&&(this.percentage=parseInt((100*this.score).toFixed(0),10),this.percentageCircle=this.percentage),this.percentage<50?this.qualityMetricCssClass="gravitee-qm-score-bad":this.percentage>=50&&this.percentage<80?this.qualityMetricCssClass="gravitee-qm-score-medium":this.qualityMetricCssClass="gravitee-qm-score-good",this.percentage},e}();t.default=n},function(e,t,i){"use strict";t.__esModule=!0;var n=function(){function e(e,t){this.$http=e,this.entrypointsURL=t.baseURL+"configuration/entrypoints/"}return e.$inject=["$http","Constants"],e.prototype.findById=function(e){return this.$http.get(this.entrypointsURL+e)},e.prototype.list=function(){return this.$http.get(this.entrypointsURL)},e.prototype.create=function(e){if(e)return this.$http.post(this.entrypointsURL,e)},e.prototype.update=function(e){if(e)return this.$http.put(this.entrypointsURL,e)},e.prototype.delete=function(e){if(e)return this.$http.delete(this.entrypointsURL+e.id)},e}();t.default=n},function(e,t,i){"use strict";t.__esModule=!0;var n={bindings:{tags:"<"},controller:"EntrypointController",template:i(1152)};t.default=n},function(e,t){e.exports=' <div class=gv-sub-content> <div class=gv-forms layout=column> <form name=$ctrl.formEntrypoint ng-submit=$ctrl.save($ctrl.entrypoint) novalidate> <h1>Entrypoint configuration</h1> <a ui-sref=management.settings.tags>Back to sharding tags configuration</a> <div class=gv-form> <div class=gv-form-content layout=column> <md-input-container style=margin:0> <label>Value</label> <input ng-model=$ctrl.entrypoint.value placeholder=https://api.mycompany.com required aria-label="Entrypoint value" type=url /> </md-input-container> <md-input-container> <label>Sharding tags</label> <md-select ng-model=$ctrl.entrypoint.tags multiple=multiple required> <md-option ng-repeat="tag in $ctrl.tags" ng-value=tag.id> {{tag.name}}<span ng-if=tag.description class=gravitee-general-description> - {{tag.description}}</span> </md-option> </md-select> </md-input-container> </div> </div> <div class="md-actions gravitee-api-save-button" layout=row> <md-button class=md-raised type=submit permission permission-only="[\'environment-entrypoint-c\', \'environment-entrypoint-u\']" ng-disabled="$ctrl.formEntrypoint.$pristine || $ctrl.formEntrypoint.$invalid"> Save </md-button> </div> </form> </div> </div> '},function(e,t,i){"use strict";t.__esModule=!0;var n=function(){function e(e,t,i){var n=this;this.EntrypointService=e,this.$state=t,this.NotificationService=i,t.params.entrypointId?e.findById(t.params.entrypointId).then((function(e){n.entrypoint=e.data})):this.entrypoint={tags:[]}}return e.$inject=["EntrypointService","$state","NotificationService"],e.prototype.save=function(e){var t=this;e.id?this.EntrypointService.update(e).then((function(){t.NotificationService.show("Entrypoint updated with success"),t.$state.go("management.settings.tags")})):this.EntrypointService.create(e).then((function(){t.NotificationService.show("Entrypoint created with success"),t.$state.go("management.settings.tags")}))},e}();t.default=n},function(e,t,i){"use strict";function n(e,t,i){e.entrypoint=i.value,e.cancel=function(){t.cancel()},e.ok=function(){t.hide(i)}}n.$inject=["$scope","$mdDialog","entrypoint"],t.__esModule=!0,t.default=n},function(e,t,i){"use strict";t.__esModule=!0;var n={bindings:{groups:"<"},controller:"TagController",template:i(1156)};t.default=n},function(e,t){e.exports=' <div class=gv-sub-content> <div class=gv-forms layout=column> <form name=$ctrl.formTag ng-submit=$ctrl.save($ctrl.tag) novalidate> <h1>Tag <md-input-container style=margin:0> <input ng-model=$ctrl.tag.name style=margin-top:18px required aria-label="Tag name" maxlength=64 /> </md-input-container> </h1> <div class=gv-form> <h2>Settings</h2> <div class=gv-form-content layout=column> <h5> <md-input-container style=width:100%> <label>Description</label> <input ng-model=$ctrl.tag.description /> </md-input-container> </h5> <md-input-container> <label>Restricted groups</label> <md-select ng-model=$ctrl.tag.restricted_groups multiple=multiple> <md-option ng-repeat="group in $ctrl.groups" ng-value=group.id> {{group.name}}<span ng-if=group.description class=gravitee-general-description> - {{group.description}}</span> </md-option> </md-select> </md-input-container> <div class="md-actions gravitee-api-save-button" layout=row> <md-button class=md-raised type=submit permission permission-only="[\'environment-tag-c\', \'environment-tag-u\']" ng-disabled="$ctrl.formTag.$pristine || $ctrl.formTag.$invalid"> Save </md-button> <md-button class="md-raised md-warn float-right" type=button ui-sref=management.settings.tags> Cancel </md-button> </div> </div> </div> </form> </div> </div> '},function(e,t,i){"use strict";t.__esModule=!0;var n=function(){function e(e,t,i){var n=this;this.TagService=e,this.$state=t,this.NotificationService=i,this.$onInit=function(){"new"===n.$state.params.tagId?n.tag={}:n.TagService.get(n.$state.params.tagId).then((function(e){n.tag=e.data}))}}return e.$inject=["TagService","$state","NotificationService"],e.prototype.save=function(e){var t=this;e.id?this.TagService.update(e).then((function(){t.NotificationService.show("Tag updated with success"),t.$state.go("management.settings.tags")})):this.TagService.create(e).then((function(){t.NotificationService.show("Tag created with success"),t.$state.go("management.settings.tags")}))},e}();t.default=n},function(e,t,i){"use strict";function n(e,t,i){e.folders=i.folders,e.title=i.title,this.cancel=function(){t.hide()},this.select=function(e){t.hide(e)}}n.$inject=["$scope","$mdDialog","locals"],t.__esModule=!0,t.default=n},function(e,t,i){"use strict";t.__esModule=!0;var n=i(3),a=function(){function e(e,t,i,a,o,r,s){this.ApiService=e,this.NotificationService=t,this.$rootScope=i,this.$scope=a,this.$stateParams=o,this.$state=r,this.$mdDialog=s,this.api=n.cloneDeep(this.$scope.$parent.apiCtrl.api),this.templates=this.api.response_templates}return e.$inject=["ApiService","NotificationService","$rootScope","$scope","$stateParams","$state","$mdDialog"],e.prototype.hasTemplates=function(){return this.api.response_templates&&Object.keys(this.api.response_templates).length>0},e.prototype.countTypes=function(e){return Object.keys(e).length},e.prototype.remove=function(e){var t=this;this.$mdDialog.show({controller:"DialogConfirmController",controllerAs:"ctrl",template:i(5),clickOutsideToClose:!0,locals:{title:"Are you sure you want to delete response templates?",confirmButton:"Delete"}}).then((function(i){i&&(delete t.api.response_templates[e],t.ApiService.update(t.api).then((function(i){t.api=i.data,t.api.etag=i.headers("etag"),t.$rootScope.$broadcast("apiChangeSuccess",{api:t.api}),t.NotificationService.show("Response templates for key "+e+" have been deleted !"),t.$state.go("management.apis.detail.proxy.responsetemplates.list")})))}))},e}();t.default=a},function(e,t,i){"use strict";t.__esModule=!0;var n=i(3),a=function(){function e(e,t,i,a,o,r){var s=this;this.ApiService=e,this.NotificationService=t,this.$rootScope=i,this.$scope=a,this.$stateParams=o,this.$state=r,this.creation=!1,this.creation=void 0===this.$stateParams.key,this.templateKey=this.$stateParams.key,this.api=n.cloneDeep(this.$scope.$parent.apiCtrl.api),this.templates=[],this.api.response_templates&&this.api.response_templates[this.$stateParams.key]&&Object.keys(this.api.response_templates[this.$stateParams.key]).forEach((function(e){var t=s.api.response_templates[s.$stateParams.key][e];s.templates.push({type:e,status:t.status,body:t.body,headers:t.headers?Object.keys(t.headers).map((function(e){return{name:e,value:t.headers[e]}})):[]})})),this.keys=["API_KEY_MISSING","API_KEY_INVALID","QUOTA_TOO_MANY_REQUESTS","RATE_LIMIT_TOO_MANY_REQUESTS","REQUEST_CONTENT_LIMIT_TOO_LARGE","REQUEST_CONTENT_LIMIT_LENGTH_REQUIRED","REQUEST_TIMEOUT","REQUEST_VALIDATION_INVALID","RESOURCE_FILTERING_FORBIDDEN","RBAC_FORBIDDEN","RBAC_INVALID_USER_ROLES","RBAC_NO_USER_ROLE","OAUTH2_MISSING_SERVER","OAUTH2_MISSING_HEADER","OAUTH2_MISSING_ACCESS_TOKEN","OAUTH2_INVALID_ACCESS_TOKEN","OAUTH2_INVALID_SERVER_RESPONSE","OAUTH2_INSUFFICIENT_SCOPE","OAUTH2_SERVER_UNAVAILABLE","JWT_MISSING_TOKEN","JWT_INVALID_TOKEN","JSON_INVALID_PAYLOAD","JSON_INVALID_FORMAT","JSON_INVALID_RESPONSE_PAYLOAD","JSON_INVALID_RESPONSE_FORMAT","GATEWAY_INVALID_REQUEST","GATEWAY_INVALID_RESPONSE","GATEWAY_OAUTH2_ACCESS_DENIED","GATEWAY_OAUTH2_SERVER_ERROR","GATEWAY_OAUTH2_INVALID_CLIENT","GATEWAY_MISSING_SECURITY_PROVIDER","GATEWAY_POLICY_INTERNAL_ERROR","GATEWAY_PLAN_UNRESOLVABLE"],this.creation&&this.addTemplate("*/*")}return e.$inject=["ApiService","NotificationService","$rootScope","$scope","$stateParams","$state"],e.prototype.onSelectedTemplateKey=function(e){this.templateKey=e},e.prototype.querySearchTemplateKey=function(e){var t=e?this.keys.filter(this.createFilterForTemplateKey(e)):this.keys;return e&&!n.includes(t,e)&&(this.selectedTemplateKey=e),t},e.prototype.createFilterForTemplateKey=function(e){return function(t){return n.includes(t.toLowerCase(),e.toLowerCase())}},e.prototype.addTemplate=function(e){this.templates.push({type:e,status:400,headers:[]})},e.prototype.deleteTemplate=function(e){n.remove(this.templates,(function(t){return t.type===e})),this.formResponseTemplate.$setDirty()},e.prototype.update=function(){var e=this,t=this.api.response_templates||{};this.templates.length>0?(t[this.templateKey]=n.mapValues(n.keyBy(this.templates,(function(e){return e.type})),(function(e){return{status:e.status,headers:n.mapValues(n.keyBy(e.headers,"name"),"value"),body:e.body}})),this.api.response_templates=t):delete this.api.response_templates[this.templateKey],this.ApiService.update(this.api).then((function(t){e.api=t.data,e.api.etag=t.headers("etag"),e.onApiUpdate()}))},e.prototype.onApiUpdate=function(){this.$rootScope.$broadcast("apiChangeSuccess",{api:this.api}),this.NotificationService.show("Response template saved for key: "+this.templateKey),this.$state.go("management.apis.detail.proxy.responsetemplates.list")},e.prototype.reset=function(){this.$state.reload()},e}();t.default=a},function(e,t,i){"use strict";t.__esModule=!0;var n=i(3),a={template:i(1162),bindings:{template:"<"},require:{parent:"^gvResponseTemplate"},controller:function(){this.statuses=[{code:100,label:"100 - CONTINUE"},{code:101,label:"101 - SWITCHING_PROTOCOLS"},{code:102,label:"102 - PROCESSING"},{code:200,label:"200 - OK"},{code:201,label:"201 - CREATED"},{code:202,label:"202 - ACCEPTED"},{code:203,label:"203 - NON_AUTHORITATIVE_INFORMATION"},{code:204,label:"204 - NO_CONTENT"},{code:205,label:"205 - RESET_CONTENT"},{code:206,label:"206 - PARTIAL_CONTENT"},{code:207,label:"207 - MULTI_STATUS"},{code:300,label:"300 - MULTIPLE_CHOICES"},{code:301,label:"301 - MOVED_PERMANENTLY"},{code:302,label:"302 - MOVED_TEMPORARILY"},{code:302,label:"302 - FOUND"},{code:303,label:"303 - SEE_OTHER"},{code:304,label:"304 - NOT_MODIFIED"},{code:305,label:"305 - USE_PROXY"},{code:307,label:"307 - TEMPORARY_REDIRECT"},{code:400,label:"400 - BAD_REQUEST"},{code:401,label:"401 - UNAUTHORIZED"},{code:402,label:"402 - PAYMENT_REQUIRED"},{code:403,label:"403 - FORBIDDEN"},{code:404,label:"404 - NOT_FOUND"},{code:405,label:"405 - METHOD_NOT_ALLOWED"},{code:406,label:"406 - NOT_ACCEPTABLE"},{code:407,label:"407 - PROXY_AUTHENTICATION_REQUIRED"},{code:408,label:"408 - REQUEST_TIMEOUT"},{code:409,label:"409 - CONFLICT"},{code:410,label:"410 - GONE"},{code:411,label:"411 - LENGTH_REQUIRED"},{code:412,label:"412 - PRECONDITION_FAILED"},{code:413,label:"413 - REQUEST_ENTITY_TOO_LARGE"},{code:414,label:"414 - REQUEST_URI_TOO_LONG"},{code:415,label:"415 - UNSUPPORTED_MEDIA_TYPE"},{code:416,label:"416 - REQUESTED_RANGE_NOT_SATISFIABLE"},{code:417,label:"417 - EXPECTATION_FAILED"},{code:422,label:"422 - UNPROCESSABLE_ENTITY"},{code:423,label:"423 - LOCKED"},{code:424,label:"424 - FAILED_DEPENDENCY"},{code:429,label:"429 - TOO_MANY_REQUESTS"},{code:500,label:"500 - INTERNAL_SERVER_ERROR"},{code:501,label:"501 - NOT_IMPLEMENTED"},{code:502,label:"502 - BAD_GATEWAY"},{code:503,label:"503 - SERVICE_UNAVAILABLE"},{code:504,label:"504 - GATEWAY_TIMEOUT"},{code:505,label:"505 - HTTP_VERSION_NOT_SUPPORTED"},{code:507,label:"507 - INSUFFICIENT_STORAGE"}],this.$onInit=function(){var e=this;this.selectedStatusCode=n.find(this.statuses,(function(t){return t.code===e.template.status})),this.bodyOptions={placeholder:"Edit your response body here.",lineWrapping:!0,lineNumbers:!0,allowDropFileTypes:!0,autoCloseTags:!0,mode:this.template.type}},this.addHTTPHeader=function(){this.template.headers.push({name:"",value:""})},this.removeHTTPHeader=function(e){void 0!==this.template.headers&&(this.template.headers.splice(e,1),this.parent.formResponseTemplate.$setDirty())},this.onSelectedStatusCode=function(e){e&&(this.template.status=e.code)},this.querySearchStatusCode=function(e){return e?this.statuses.filter(this.createFilterForStatusCode(e)):this.statuses},this.createFilterForStatusCode=function(e){return function(t){return n.includes(t.label.toLowerCase(),e.toLowerCase())}},this.deleteTemplate=function(){this.parent.deleteTemplate(this.template.type)}}};t.default=a},function(e,t){e.exports=' <div class=gv-form> <div class=gv-forms-header> <h2>Template</h2> <a ng-click=$ctrl.deleteTemplate() permission permission-only="[\'api-response_templates-u\']">Delete</a> </div> <div class=gv-form-content> <div flex-xs flex=50> <md-input-container class=md-block> <label>Content-type</label> <input ng-model=$ctrl.template.type type=text required> </md-input-container> <div class=hint>The content-type for which this template response must be send.</div> </div> <div flex-xs flex=50> <md-autocomplete flex required md-input-name=autocompleteStatusCodeField md-selected-item=$ctrl.selectedStatusCode md-selected-item-change=$ctrl.onSelectedStatusCode(status) md-search-text=$ctrl.searchStatusCode md-items="status in $ctrl.querySearchStatusCode($ctrl.searchStatusCode)" md-item-text=status.label md-min-length=0 md-require-match=false md-floating-label="HTTP status Code"> <md-item-template> <span md-highlight-text=$ctrl.searchStatusCode md-highlight-flags=^i>{{status.label}}</span> </md-item-template> </md-autocomplete> <div class=hint>The status code send to the API consumer.</div> </div> <div flex-xs flex=50 layout=column layout-sm=column> <h5 style=color:rgba(0,0,0,.54);font-size:12px;font-weight:700> <span>HTTP Headers</span> <ng-md-icon icon=add_circle_outline style=fill:#b1bdc5 aria-label="Add HTTP header" ng-click=$ctrl.addHTTPHeader()>Add headers</ng-md-icon> </h5> <div layout=row layout-sm=column layout-align="center center" ng-repeat="header in $ctrl.template.headers"> <ng-md-icon icon=remove_circle_outline style=fill:#b1bdc5 aria-label="Delete header" ng-click=$ctrl.removeHTTPHeader($index)></ng-md-icon> <div flex=5 hide-xs hide-sm> </div> <md-input-container flex-gt-sm> <input aria-label="Header name" ng-model=header.name type=text placeholder="Header name" ng-required=true> </md-input-container> <div flex=5 hide-xs hide-sm> </div> <md-input-container flex-gt-sm> <input aria-label="Header value" ng-model=header.value type=text placeholder="Header value" ng-required=true> </md-input-container> </div> </div> <div flex-xs flex=50> <md-input-container class=md-block flex-gt-sm> <h5 style=color:rgba(0,0,0,.54);font-size:12px;font-weight:700> <span>Body</span> </h5> <textarea ui-codemirror ui-codemirror-opts=$ctrl.bodyOptions ng-model=$ctrl.template.body rows=5 aria-label="Response template body"></textarea> </md-input-container> </div> </div> </div> '},function(e,t,i){"use strict";t.__esModule=!0;var n={template:i(1164),controller:"ApiResponseTemplateController"};t.default=n},function(e,t){e.exports=' <form name=$ctrl.formResponseTemplate novalidate> <div class=gv-forms layout=column> <div class=gv-forms-header> <h1 ng-if=$ctrl.creation>New Response Template</h1> <h1 ng-if=!$ctrl.creation>Response Template: {{$ctrl.templateKey}}</h1> <a ui-sref=management.apis.detail.proxy.responsetemplates.list>Back to response templates</a> </div> <div class=gv-form ng-if=$ctrl.creation> <div class=gv-forms-header> <h2>Define the key</h2> </div> <div class=gv-form-content> <div flex-xs flex=50> <md-autocomplete flex required md-input-name=autocompleteTemplateKeyField md-selected-item=$ctrl.selectedTemplateKey md-selected-item-change=$ctrl.onSelectedTemplateKey(key) md-search-text=$ctrl.searchTemplateKey md-items="key in $ctrl.querySearchTemplateKey($ctrl.searchTemplateKey)" md-item-text=key md-min-length=0 md-require-match=false md-floating-label="Template key"> <md-item-template> <span md-highlight-text=$ctrl.searchTemplateKey md-highlight-flags=^i>{{key}}</span> </md-item-template> </md-autocomplete> <div class=hint>The template key for which template responses will be applied.</div> </div> </div> </div> <gv-response-template-type ng-repeat="template in $ctrl.templates" template=template> </gv-response-template-type> <md-content layout=row> <md-button class=md-raised permission permission-only="\'api-response_templates-u\'" ng-click=$ctrl.addTemplate()> Add a new response template </md-button> </md-content> <div class="md-actions gravitee-api-save-button" layout=row> <md-button permission permission-only="\'api-response_templates-u\'" class="md-raised md-primary" ng-click=$ctrl.update() ng-disabled="$ctrl.formResponseTemplate.$invalid || $ctrl.formResponseTemplate.$pristine"> Save </md-button> <md-button permission permission-only="\'api-response_templates-u\'" class=md-raised type=button ng-click=$ctrl.reset() ng-disabled=$ctrl.formResponseTemplate.$pristine> Reset </md-button> </div> </div> </form> '},function(e,t,i){"use strict";t.__esModule=!0;var n=i(3),a={bindings:{dashboardsPlatform:"<",dashboardsApi:"<",dashboardsApplication:"<"},template:i(1166),controller:["NotificationService","PortalConfigService","$state","Constants","$mdDialog","DashboardService","$rootScope",function(e,t,a,o,r,s,l){var c=this;this.settings=n.cloneDeep(o),this.$rootScope=l,this.$onInit=function(){c.dashboardsByType={Platform:c.dashboardsPlatform,API:c.dashboardsApi,Application:c.dashboardsApplication}},this.isDashboardsEmpty=function(){return 0===n.flattenDeep(n.values(c.dashboardsByType)).length},this.save=function(){t.save(c.settings).then((function(t){n.merge(o,t.data),e.show("Configuration saved"),c.formSettings.$setPristine()}))},this.reset=function(){c.settings=n.cloneDeep(o),c.formSettings.$setPristine()},this.delete=function(t){r.show({controller:"DialogConfirmController",controllerAs:"ctrl",template:i(5),clickOutsideToClose:!0,locals:{title:"Are you sure you want to delete the dashboard '"+t.name+"'?",msg:"",confirmButton:"Delete"}}).then((function(i){i&&s.delete(t).then((function(i){e.show("Dashboard '"+t.name+"' has been deleted"),a.go(a.current,{},{reload:!0})}))}))},this.update=function(t){s.update(t).then((function(){e.show("Dashboard saved with success")})).finally((function(){a.go(a.current,{},{reload:!0})}))},this.upward=function(e){e.order--,c.update(e)},this.downward=function(e){e.order++,c.update(e)},this.toggleEnable=function(e){e.enabled=!e.enabled,c.update(e)}}]};t.default=a},function(e,t){e.exports=' <div class=gv-forms layout=column> <h1>Analytics</h1> <h2>Dashboards</h2> <div class=gv-form ng-repeat="(type, dashboards) in $ctrl.dashboardsByType"> <h3>{{type}}</h3> <div class=gv-form-content layout=column> <md-table-container ng-if="dashboards.length > 0"> <table md-table class=gv-table-dense> <thead md-head> <tr md-row> <th md-column class=column-with-logo>Name</th> <th permission permission-only="\'environment-dashboard-u\'" width=64px nowrap=nowrap></th> <th permission permission-only="\'environment-dashboard-u\'" width=48px nowrap=nowrap></th> <th permission permission-only="\'environment-dashboard-u\'" width=48px nowrap=nowrap></th> <th permission permission-only="\'environment-dashboard-d\'" width=48px nowrap=nowrap></th> </tr> </thead> <tbody md-body> <tr md-row ng-repeat="dashboard in dashboards"> <td md-cell permission permission-only="\'environment-dashboard-u\'"> <a ng-style="dashboard.enabled?\'\':{\'font-style\': \'italic\', \'color\': \'grey\'}" ui-sref="management.settings.dashboard({type: type, dashboardId: dashboard.id})">{{dashboard.name}}</a> </td> <td md-cell permission permission-except="\'environment-dashboard-u\'"> <span ng-style="dashboard.enabled?\'\':{\'font-style\': \'italic\', \'color\': \'grey\'}">{{dashboard.name}}</span> </td> <td md-cell width=48px> <ng-md-icon ng-if=!dashboard.enabled icon=not_interested ng-click=$ctrl.toggleEnable(dashboard) style=font-size:24px;height:24px permission permission-only="\'environment-dashboard-u\'"> <md-tooltip md-direction=top md-visible=false>Enable this dashboard</md-tooltip> </ng-md-icon> <ng-md-icon ng-if=dashboard.enabled icon=done ng-click=$ctrl.toggleEnable(dashboard) style=font-size:24px;height:24px permission permission-only="\'environment-dashboard-u\'"> <md-tooltip md-direction=top md-visible=false>Disable this dashboard</md-tooltip> </ng-md-icon> </td> <td md-cell permission permission-only="\'environment-dashboard-u\'" width=76px nowrap=nowrap> <ng-md-icon ng-if=!$first icon=arrow_upwards ng-click=$ctrl.upward(dashboard)> <md-tooltip md-direction=top md-visible=false>Move upward</md-tooltip> </ng-md-icon> <span ng-if=$first style=padding-right:28px></span> <ng-md-icon ng-if=!$last icon=arrow_downward ng-click=$ctrl.downward(dashboard)> <md-tooltip md-direction=top md-visible=false>Move downward</md-tooltip> </ng-md-icon> </td> <td md-cell permission permission-only="\'environment-dashboard-d\'"> <ng-md-icon icon=delete ng-click=$ctrl.delete(dashboard)></ng-md-icon> </td> </tr> </tbody> </table> </md-table-container> <gravitee-empty-state ng-if="dashboards.length === 0" icon=insert_chart model=Dashboard message="Dashboards will appear here" sub-message="Start creating a dashboard" create-mode=true></gravitee-empty-state> <div class="md-actions gravitee-api-save-button" layout=row> <md-button permission permission-only="\'environment-dashboard-c\'" aria-label="Add dashboard {{type}}" ui-sref="management.settings.dashboardnew({type: type})" class="md-raised md-primary"> Add a new dashboard {{type}} </md-button> </div> </div> </div> <h2>Settings</h2> <div class=gv-form> <form name=$ctrl.formSettings class=gv-form-content layout=column ng-submit=$ctrl.save()> <md-input-container class=md-block flex-gt-sm> <label>HTTP Client Timeout</label> <input type=number min=0 ng-model=$ctrl.settings.analytics.clientTimeout> </md-input-container> <md-card-actions> <md-button type=submit class="md-raised md-primary" ng-disabled="$ctrl.formSettings.$invalid || $ctrl.formSettings.$pristine" permission permission-only="[\'environment-settings-c\', \'environment-settings-u\', \'environment-settings-d\']">Save</md-button> <md-button type=button class=md-raised ng-click=$ctrl.reset() ng-disabled="$ctrl.formSettings.$invalid || $ctrl.formSettings.$pristine" permission permission-only="[\'environment-settings-c\', \'environment-settings-u\', \'environment-settings-d\']">Reset</md-button> </md-card-actions> </form> </div> </div> '},function(e,t,i){"use strict";t.__esModule=!0;var n=function(){function e(e,t){this.$http=e,this.URL=t.baseURL+"configuration/applications/registration/providers/"}return e.$inject=["$http","Constants"],e.prototype.list=function(){return this.$http.get(this.URL).then((function(e){return e.data}))},e.prototype.get=function(e){return this.$http.get(this.URL+e).then((function(e){var t=e.data;return t.scopes=t.scopes||[],t}))},e.prototype.create=function(e){return this.$http.post(this.URL,e)},e.prototype.update=function(e){return this.$http.put(this.URL+e.id,{name:e.name,description:e.description,discovery_endpoint:e.discovery_endpoint,initial_access_token_type:e.initial_access_token_type,client_id:e.client_id,client_secret:e.client_secret,scopes:e.scopes,initial_access_token:e.initial_access_token,renew_client_secret_support:e.renew_client_secret_support,renew_client_secret_endpoint:e.renew_client_secret_endpoint,renew_client_secret_method:e.renew_client_secret_method,software_id:e.software_id}).then((function(e){var t=e.data;return t.scopes=t.scopes||[],t}))},e.prototype.delete=function(e){return this.$http.delete(this.URL+e.id)},e}();t.default=n},function(e,t,i){"use strict";t.__esModule=!0;var n=i(3),a={bindings:{clientRegistrationProviders:"<"},template:i(1169),controller:["$mdDialog","ClientRegistrationProviderService","PortalConfigService","NotificationService","$state","Constants",function(e,t,a,o,r,s){var l=this;this.settings=n.cloneDeep(s),this.select=function(e){r.go("management.settings.clientregistrationproviders.clientregistrationprovider",{id:e.id})},this.create=function(e){r.go("management.settings.clientregistrationproviders.create",{type:e})},this.delete=function(n){e.show({controller:"DialogConfirmController",controllerAs:"ctrl",template:i(5),clickOutsideToClose:!0,locals:{title:"Are you sure you want to delete this client registration provider ?",msg:"",confirmButton:"Delete"}}).then((function(e){e&&t.delete(n).then((function(e){o.show("Client registration provider '"+n.name+"' has been deleted"),r.go("management.settings.clientregistrationproviders.list",{},{reload:!0})}))}))},this.saveClientRegistration=function(){a.save({application:{registration:{enabled:l.settings.application.registration.enabled}}}).then((function(e){o.show("Client registration is now "+(l.settings.application.registration.enabled?"mandatory":"optional")),n.merge(s,e.data)}))},this.saveApplicationType=function(e){var t,i={application:{types:(t={},t[e]={enabled:l.settings.application.types[e].enabled},t)}};i.application.types[e]={enabled:l.settings.application.types[e].enabled},a.save(i).then((function(t){o.show("Application type '"+e+"' is now "+(l.settings.application.types[e].enabled?"allowed":"disallowed")),n.merge(s,t.data)}))}}]};t.default=a},function(e,t){e.exports=' <div class="gv-forms gv-forms-fluid" layout=column> <h1>Client Registration</h1> <div class=gv-form> <h2>Configuration</h2> <div class=gv-form-content layout=column> <h6>Enable Dynamic Client Registration</h6> <md-input-container class=gv-input-container-dense> <md-checkbox ng-model=$ctrl.settings.application.registration.enabled aria-label="Client registration" ng-change=$ctrl.saveClientRegistration()> Client registration for applications (OpenID Connect - Dynamic Client Registration) </md-checkbox> </md-input-container> <h6>Allowed application types</h6> <md-input-container class=gv-input-container-dense> <md-checkbox ng-model=$ctrl.settings.application.types.simple.enabled aria-label="Allow or deny simple application type" ng-change="$ctrl.saveApplicationType(\'simple\')"> Simple (A hands-free application. Using this type, you will be able to define the client_id by your own) </md-checkbox> </md-input-container> <md-input-container class=gv-input-container-dense> <md-checkbox ng-model=$ctrl.settings.application.types.browser.enabled aria-label="Allow or deny browser application type" ng-change="$ctrl.saveApplicationType(\'browser\')"> Browser (Angular, React, ...) </md-checkbox> </md-input-container> <md-input-container class=gv-input-container-dense> <md-checkbox ng-model=$ctrl.settings.application.types.web.enabled aria-label="Allow or deny web application type" ng-change="$ctrl.saveApplicationType(\'web\')"> Web (Java, .Net, ...) </md-checkbox> </md-input-container> <md-input-container class=gv-input-container-dense> <md-checkbox ng-model=$ctrl.settings.application.types.native.enabled aria-label="Allow or deny native application type" ng-change="$ctrl.saveApplicationType(\'native\')"> Native (iOS, Android, ...) </md-checkbox> </md-input-container> <md-input-container class=gv-input-container-dense> <md-checkbox ng-model=$ctrl.settings.application.types.backend_to_backend.enabled aria-label="Allow or deny machine to machine application type" ng-change="$ctrl.saveApplicationType(\'backend_to_backend\')"> Backend-to-Backend </md-checkbox> </md-input-container> </div> </div> <div class=gv-form> <h2>Providers</h2> <div class=gv-form-content layout=column> <md-table-container ng-if="$ctrl.clientRegistrationProviders.length > 0"> <table md-table class=gv-table-dense> <thead md-head> <tr md-row> <th md-column>Name</th> <th md-column>Description</th> <th md-column>Last updated at</th> <th md-column width=48px nowrap=nowrap></th> </tr> </thead> <tbody md-body> <tr md-row ng-repeat="clientRegistrationProvider in $ctrl.clientRegistrationProviders | orderBy: name"> <td md-cell> <a ng-click=$ctrl.select(clientRegistrationProvider)>{{clientRegistrationProvider.name}}</a> </td> <td md-cell>{{clientRegistrationProvider.description}}</td> <td md-cell>{{clientRegistrationProvider.updated_at | date:\'MMM d, y h:mm:ss a\'}}</td> <td md-cell width=40 nowrap=nowrap> <ng-md-icon permission permission-only="\'environment-client_registration_provider-d\'" icon=delete ng-click=$ctrl.delete(clientRegistrationProvider)> <md-tooltip md-direction=top md-visible=false>Delete</md-tooltip> </ng-md-icon> </td> </tr> </tbody> </table> </md-table-container> <gravitee-empty-state ng-if="$ctrl.clientRegistrationProviders.length === 0" icon=perm_identity model="Client Registration Provider" message="Client Registration providers will appear here" sub-message="Start creating a client registration provider" create-mode=true></gravitee-empty-state> <div style=text-align:center> <md-button permission permission-only="\'environment-client_registration_provider-c\'" ng-if="$ctrl.clientRegistrationProviders.length === 0" aria-label="Add client registration provider" class=md-fab ng-click=$ctrl.create()> <md-tooltip md-direction=top md-visible=false>New client registration provider</md-tooltip> <ng-md-icon icon=add></ng-md-icon> </md-button> </div> </div> </div> </div> '},function(e,t,i){"use strict";t.__esModule=!0;var n={bindings:{clientRegistrationProvider:"<"},controller:"ClientRegistrationProviderController",template:i(1171)};t.default=n},function(e,t){e.exports=' <div class=gv-forms layout=column> <div layout=row layout-align="start end" class=gv-forms-header> <h1 ng-if=$ctrl.updateMode>{{$ctrl.clientRegistrationProvider.name}}</h1> <h1 ng-if=!$ctrl.updateMode>Create a new client registration provider</h1> <a ui-sref=management.settings.clientregistrationproviders.list>Back to client registration providers</a> </div> <form name=formClientRegistrationProvider ng-submit=$ctrl.update() novalidate> <div class=gv-form> <h2>General</h2> <div class=gv-form-content layout=column> <div layout-gt-sm=row> <md-input-container class=md-block flex-gt-sm> <label>Name</label> <input ng-model=$ctrl.clientRegistrationProvider.name type=text name=name minlength=3 md-maxlength=50 required autofocus> <div class=hint ng-if="formClientRegistrationProvider.name.$valid || formClientRegistrationProvider.name.$pristine"> Client registration provider name.</div> <div ng-messages=formClientRegistrationProvider.name.$error> <div ng-message=required>Name is required.</div> <div ng-message=minlength>Name has to be more than 3 characters long.</div> <div ng-message=md-maxlength>Name has to be less than 50 characters long.</div> </div> </md-input-container> </div> <div layout-gt-sm=row> <md-input-container class=md-block flex-gt-sm> <label>Description</label> <input ng-model=$ctrl.clientRegistrationProvider.description type=text name=description> <div class=hint ng-if="formClientRegistrationProvider.description.$valid || formClientRegistrationProvider.description.$pristine"> Provide a description to the client registration provider </div> </md-input-container> </div> </div> </div> <div class=gv-form> <h2>Configuration</h2> <div class=gv-form-content layout=column> <h6>OpenID Connect - Dynamic Client Registration</h6> <md-input-container class=md-block flex-gt-xs> <label>OpenID Connect Discovery Endpoint</label> <input ng-model=$ctrl.clientRegistrationProvider.discovery_endpoint type=url required> </md-input-container> <md-input-container class=md-block> <label>Initial Access Token Provider</label> <md-select ng-model=$ctrl.clientRegistrationProvider.initial_access_token_type required> <md-option ng-value=initialAccessTokenType.value ng-repeat="initialAccessTokenType in $ctrl.initialAccessTokenTypes"> {{::initialAccessTokenType.name}} </md-option> </md-select> <div class=hint> Define the way the initial access token must be provided. </div> </md-input-container> <div ng-if="$ctrl.clientRegistrationProvider.initial_access_token_type === \'client_credentials\'"> <md-input-container class=md-block flex-gt-xs> <label>Client ID</label> <input ng-model=$ctrl.clientRegistrationProvider.client_id type=text required> </md-input-container> <md-input-container class=md-block flex-gt-xs> <label>Client Secret</label> <input ng-model=$ctrl.clientRegistrationProvider.client_secret type=text required> </md-input-container> <md-input-container class=md-block flex-gt-xs> <label>Scopes</label> <md-chips ng-model=$ctrl.clientRegistrationProvider.scopes md-add-on-blur=true placeholder="Add a scope"></md-chips> <div class=hint>Press Enter after writing your scope to save it.</div> </md-input-container> <md-input-container class=md-block flex-gt-xs> <label>Client Template (software_id)</label> <input ng-model=$ctrl.clientRegistrationProvider.software_id type=text> </md-input-container> </div> <div ng-if="$ctrl.clientRegistrationProvider.initial_access_token_type === \'initial_access_token\'"> <md-input-container class=md-block flex-gt-xs> <label>Initial Access Token</label> <input ng-model=$ctrl.clientRegistrationProvider.initial_access_token type=text required> </md-input-container> </div> <h6>Renew client_secret (outside DCR specification)</h6> <md-input-container class=gv-input-container-dense> <md-checkbox ng-model=$ctrl.clientRegistrationProvider.renew_client_secret_support aria-label="Renew client secret support"> Enable renew client_secret support </md-checkbox> </md-input-container> <div layout=row> <md-input-container class=md-block> <label>HTTP Method</label> <md-select ng-model=$ctrl.clientRegistrationProvider.renew_client_secret_method ng-required=$ctrl.clientRegistrationProvider.renew_client_secret_support> <md-option ng-value=method ng-repeat="method in $ctrl.renewClientSecretMethods"> {{::method}} </md-option> </md-select> <div class=hint> Define the HTTP method to call the renew secret endpoint </div> </md-input-container> <md-input-container class=md-block flex-gt-xs> <label>Endpoint</label> <input ng-model=$ctrl.clientRegistrationProvider.renew_client_secret_endpoint type=url ng-required=$ctrl.clientRegistrationProvider.renew_client_secret_support> <div class=hint> Provide an URL to reach the renew client secret endpoint, for example: http://authorization_server/oidc/dcr/{#client_id}/renew_secret </div> </md-input-container> </div> </div> </div> <div class="md-actions gravitee-api-save-button" layout=row> <md-button ng-if=$ctrl.updateMode class="md-raised md-primary" type=submit ng-disabled="formClientRegistrationProvider.$invalid || formClientRegistrationProvider.$pristine" permission permission-only="[\'environment-client_registration_provider-u\']"> Update </md-button> <md-button ng-if=!$ctrl.updateMode class="md-raised md-primary" type=submit ng-disabled="formClientRegistrationProvider.$invalid || formClientRegistrationProvider.$pristine" permission permission-only="[\'environment-client_registration_provider-c\']"> Create </md-button> <md-button class=md-raised type=button ng-click=$ctrl.reset() permission permission-only="[\'environment-client_registration_provider-u\']" ng-disabled="formClientRegistrationProvider.$invalid || formClientRegistrationProvider.$pristine"> Reset </md-button> </div> </form> </div> '},function(e,t,i){"use strict";t.__esModule=!0;var n=i(1173),a=i(3),o=function(){function e(e,t,i,n,a,o,r){this.$scope=e,this.$state=t,this.$mdEditDialog=i,this.Constants=n,this.$mdDialog=a,this.NotificationService=o,this.ClientRegistrationProviderService=r}return e.$inject=["$scope","$state","$mdEditDialog","Constants","$mdDialog","NotificationService","ClientRegistrationProviderService"],e.prototype.$onInit=function(){this.renewClientSecretMethods=["POST","PATCH","PUT"],this.initialAccessTokenTypes=[],this.initialAccessTokenTypes.push({name:"Client Credentials",value:"client_credentials"}),this.initialAccessTokenTypes.push({name:"Initial Access Token",value:"initial_access_token"}),this.updateMode=void 0!==this.clientRegistrationProvider&&void 0!==this.clientRegistrationProvider.id,this.updateMode||(this.clientRegistrationProvider=new n.ClientRegistrationProvider,this.clientRegistrationProvider.scopes=[]),this.initialClientRegistrationProvider=a.cloneDeep(this.clientRegistrationProvider)},e.prototype.reset=function(){this.clientRegistrationProvider=a.cloneDeep(this.initialClientRegistrationProvider),this.$scope.formClientRegistrationProvider.$setPristine()},e.prototype.update=function(){var e=this;this.updateMode?this.ClientRegistrationProviderService.update(this.clientRegistrationProvider).then((function(t){e.NotificationService.show("Client registration provider "+e.clientRegistrationProvider.name+" has been updated"),e.clientRegistrationProvider=t,e.$scope.formClientRegistrationProvider.$setPristine()})):this.ClientRegistrationProviderService.create(this.clientRegistrationProvider).then((function(t){e.NotificationService.show("Client registration provider "+e.clientRegistrationProvider.name+" has been created"),e.$state.go("management.settings.clientregistrationproviders.clientregistrationprovider",{id:t.data.id},{reload:!0})}))},e}();t.default=o},function(e,t,i){"use strict";t.__esModule=!0;var n=function(){};t.ClientRegistrationProvider=n},function(e,t,i){"use strict";t.__esModule=!0;var n=i(3),a=function(){function e(e,t,i){this.$http=e,this.dashboardsURL=t.baseURL+"configuration/dashboards/",this.AnalyticsService=i}return e.$inject=["$http","Constants","AnalyticsService"],e.prototype.get=function(e){return this.$http.get(this.dashboardsURL+e)},e.prototype.list=function(e){return this.$http.get(this.dashboardsURL+"?reference_type="+e)},e.prototype.create=function(e){return this.$http.post(this.dashboardsURL,e)},e.prototype.update=function(e){return this.$http.put(this.dashboardsURL+e.id,{id:e.id,reference_type:e.reference_type,reference_id:e.reference_id,name:e.name,query_filter:e.query_filter,order:e.order,enabled:e.enabled,definition:e.definition})},e.prototype.delete=function(e){return this.$http.delete(this.dashboardsURL+e.id)},e.prototype.getChartService=function(){return{chart:{service:{caller:this.AnalyticsService,function:this.AnalyticsService.analytics}}}},e.prototype.getAverageableFields=function(){return[{label:"Global latency (ms)",value:"response-time"},{label:"API latency (ms)",value:"api-response-time"},{label:"Proxy latency (ms)",value:"proxy-latency"},{label:"Request content length (byte)",value:"request-content-length"},{label:"Response content length (byte)",value:"response-content-length"}]},e.prototype.getProjectionAggregates=function(){return[{label:"Average",value:"avg"},{label:"Minimum",value:"min"},{label:"Maximum",value:"max"}]},e.prototype.getHttpStatusField=function(){return{label:"HTTP Status",value:"status"}},e.prototype.getIndexedFields=function(){return[{label:"API",value:"api"},{label:"Application",value:"application"},{label:"Plan",value:"plan"},{label:"Path",value:"path"},{label:"Mapped path",value:"mapped-path"},this.getHttpStatusField(),{label:"Tenant",value:"tenant"},{label:"Host",value:"host"},{label:"Consumer IP",value:"remote-address"},{label:"Country",value:"geoip.country_iso_code"},{label:"City",value:"geoip.city_name"},{label:"User",value:"user"},{label:"User agent",value:"user_agent.name"},{label:"Operating system",value:"user_agent.os_name"}]},e.prototype.getNumericFields=function(){return n.concat(this.getHttpStatusField(),this.getAverageableFields())},e.prototype.getAggregateFields=function(){return n.concat(n.map(this.getAverageableFields(),(function(e){return e.aggLabel="Average "+n.lowerCase(e.label),e.aggValue="avg:"+e.value,e})),n.map(this.getIndexedFields(),(function(e){return e.aggLabel="By "+n.lowerCase(e.label),e.aggValue="field:"+e.value,e})))},e}();t.default=a},function(e,t,i){"use strict";t.__esModule=!0;var n=i(3),a=i(7),o={template:i(1176),controller:["DashboardService","NotificationService","$state","$scope","$rootScope","$mdDialog","$timeout",function(e,t,o,r,s,l,c){var d=this,p=!0;this.fields=e.getIndexedFields(),this.$rootScope=s,this.updateMode=!0,this.$onInit=function(){d.editMode=!!o.params.dashboardId,o.params.dashboardId?e.get(o.params.dashboardId).then((function(t){d.dashboard=t.data,d.dashboard.definition&&(d.dashboard.definition=JSON.parse(d.dashboard.definition),n.forEach(d.dashboard.definition,(function(t){n.merge(t,e.getChartService())}))),r.$watch("$ctrl.dashboard.definition",(function(e,t){n.isEqual(e,t)||d.formDashboard.$setDirty()}),!0)})):d.dashboard={reference_type:o.params.type,reference_id:"DEFAULT",enabled:!0,definition:[]}},this.save=function(){var i=n.cloneDeep(d.dashboard);i.definition&&(n.forEach(i.definition,(function(e){e.chart&&(e.chart.service&&delete e.chart.service,e.chart.request&&(delete e.chart.request.interval,delete e.chart.request.from,delete e.chart.request.to))})),i.definition=a.toJson(i.definition)),(d.editMode?e.update(i):e.create(i)).then((function(e){o.go("management.settings.dashboard",n.merge(o.params,{dashboardId:e.data.id}),{reload:!0}),d.formDashboard.$setPristine(),t.show("Dashboard "+(d.editMode?"updated":"created")+" with success")}))},this.reset=function(){o.reload()},this.displayPreview=function(){return!!(d.dashboard&&d.dashboard.definition&&d.dashboard.definition.length)&&n.every(d.dashboard.definition,(function(e){return e.chart.type}))},this.addWidget=function(){d.dashboard.definition.push(e.getChartService())},this.showQueryFilterInformation=function(){l.show({controller:"DialogQueryFilterInformationController",controllerAs:"ctrl",template:i(1177),parent:a.element(document.body),clickOutsideToClose:!0})},this.tooglePreview=function(){d.updateMode=!d.updateMode,d.updateMode?p?d.formDashboard.$setPristine():c((function(){d.formDashboard.$setDirty()}),100):p=d.formDashboard.$pristine}}]};t.default=o},function(e,t){e.exports=' <div class="gv-forms gv-forms-fluid" layout=column> <div class=gv-forms-header> <h1 ng-if=!$ctrl.editMode>New dashboard [{{$ctrl.dashboard.reference_type}}]</h1> <h1 ng-if=$ctrl.editMode>{{::$ctrl.dashboard.name}} [{{$ctrl.dashboard.reference_type}}]</h1> <a ui-sref=management.settings.analytics>Back to dashboards</a> </div> <form name=$ctrl.formDashboard ng-submit=$ctrl.save() novalidate> <div class=gv-form> <h2>Details</h2> <div class=gv-form-content layout=column> <div layout=row layout-align="end center"> <md-input-container flex> <label>Dashboard name</label> <input ng-model=$ctrl.dashboard.name required> </md-input-container> <md-input-container> <md-checkbox ng-model=$ctrl.dashboard.enabled>Enabled dashboard</md-checkbox> </md-input-container> </div> <div layout=row layout-align="end center"> <md-input-container flex> <label>Query filter</label> <input type=text ng-model=$ctrl.dashboard.query_filter> </md-input-container> <ng-md-icon icon=info style=fill:#b1bdc5 aria-label="Query filter info" ng-click=$ctrl.showQueryFilterInformation()></ng-md-icon> <md-input-container ng-if=$ctrl.displayPreview()> <md-button type=button ng-if=$ctrl.updateMode class="md-raised md-primary" ng-click=$ctrl.tooglePreview()> <ng-md-icon icon=play_arrow style=fill:#fff></ng-md-icon>Enable preview </md-button> <md-button type=button ng-if=!$ctrl.updateMode class="md-raised md-warn" ng-click=$ctrl.tooglePreview()> <ng-md-icon icon=stop style=fill:#fff></ng-md-icon>Disable preview </md-button> </md-input-container> </div> <gv-dashboard model=$ctrl.dashboard update-mode=$ctrl.updateMode></gv-dashboard> <md-card-actions layout=row ng-if=$ctrl.updateMode> <md-button type=submit class="md-raised md-primary" permission permission-only="[\'environment-dashboard-c\', \'environment-dashboard-u\']" ng-disabled="$ctrl.formDashboard.$invalid || $ctrl.formDashboard.$pristine"> Save </md-button> <md-button type=button class=md-raised permission permission-only="[\'environment-dashboard-c\', \'environment-dashboard-u\']" ng-click=$ctrl.reset() ng-disabled=$ctrl.formDashboard.$pristine> Reset </md-button> </md-card-actions> </div> </div> </form> </div> <md-button permission permission-only="[\'environment-dashboard-c\', \'environment-dashboard-u\']" ng-if=$ctrl.updateMode aria-label="Add widget" class="md-fab md-fab-bottom-right md-fab-scrollable" ng-class="{\'gv-help-displayed\': $ctrl.$rootScope.helpDisplayed}" ng-click=$ctrl.addWidget()> <md-tooltip md-direction=top md-visible=false>Add a new widget</md-tooltip> <ng-md-icon icon=add></ng-md-icon> </md-button> '},function(e,t){e.exports=' <md-dialog aria-label="Query filter"> <md-dialog-content layout-padding> <h4>How to write a query filter</h4> <p> Example 1: Get error calls in tenant europe<br> <code>tenant:europe AND status:[500 TO 599]</code> </p> <br> <p> Example 2: Get hits geo-localized in France<br> <code>geoip.country_iso_code:FR</code> </p> </md-dialog-content> <md-dialog-actions layout=row> <md-button class=md-primary ng-click=ctrl.cancel()> Close </md-button> </md-dialog-actions> </md-dialog> '},function(e,t,i){"use strict";a.$inject=["$scope","$mdDialog","api","QualityRuleService","$q","apiQualityRules","qualityRules"],t.__esModule=!0;var n=i(3);function a(e,t,i,a,o,r,s){var l=this;this.apiQualityRules=r,this.qualityRules=s,this.cancel=function(){t.hide()},this.confirm=function(e){var r=this,s=[];n.forEach(this.qualityRules,(function(e){var t=n.find(r.apiQualityRules,{quality_rule:e.id}),o=t&&t.checked;!t||t.new?s.push(a.createApiRule(i.id,e.id,o)):s.push(a.updateApiRule(i.id,e.id,o))})),o.all(s).then((function(){t.hide({accept:e,message:r.message})}))},this.toggleQualityRule=function(e){var t=n.find(l.apiQualityRules,{quality_rule:e.id});t?t.checked=!t.checked:l.apiQualityRules.push({api:i.id,quality_rule:e.id,checked:!0,new:!0})},this.isChecked=function(e){var t=n.find(l.apiQualityRules,{quality_rule:e.id});return t&&t.checked}}t.default=a},function(e,t,i){"use strict";function n(e,t){this.cancel=function(){t.hide()},this.confirm=function(){t.hide({message:this.message})}}n.$inject=["$scope","$mdDialog"],t.__esModule=!0,t.default=n},function(e,t,i){"use strict";t.__esModule=!0;var n={bindings:{application:"<",apis:"<",subscriptions:"<"},template:i(1181),controller:"ApplicationSubscribeController"};t.default=n},function(e,t){e.exports=' <div class=gv-forms layout=column> <application-header application=$ctrl.application hide-subscribe-link=true></application-header> <div layout=column layout-align="space-around center" class=layout-padding> <div layout=row layout-align="space-around center" class=layout-padding style=width:100%> <md-autocomplete md-input-id=new-view-apis-autocomplete-id flex=70 md-search-text=$ctrl.filterAPI md-selected-item-change=$ctrl.onSelectAPI(api) md-items="api in $ctrl.apis | filter:$ctrl.filterAPI" md-item-text=api.name placeholder="Select an API to subscribe" md-autofocus=false md-min-length=0 md-no-cache=true md-menu-class=autocomplete-custom-template> <md-item-template> <md-list-item class="md-2-line contact-item"> <div class=md-list-item-text style="margin:15px 0"> <h3>{{api.name}} <small>{{api.version}}</small></h3> </div> </md-list-item> </md-item-template> <md-not-found> No API matching "{{$ctrl.filterAPI}}" were found. </md-not-found> </md-autocomplete> </div> <div class=gv-forms style=width:100%> <div class=gv-form> <div class=gv-form-content> <gravitee-empty-state ng-if="$ctrl.subscribedAPIs.length === 0 && !$ctrl.selectedAPI" icon=dashboard model=API message="No API selected for your application"></gravitee-empty-state> <div layout=row layout-wrap class=inset ng-if="$ctrl.subscribedAPIs.length > 0"> <md-table-container style=width:100%;min-height:100px;text-align:center> <table md-table> <thead md-head md-order=query.order> <tr md-row> <th md-column width=1% md-order-by=name><span>Name</span></th> <th md-column width=1%>Plans</th> <th md-column width=1%></th> </tr> </thead> <tbody md-body> <tr md-row ng-repeat="api in $ctrl.subscribedAPIs track by api.id"> <td md-cell nowrap=nowrap> <gravitee-identity-picture image-id=api.id image-url=::api.picture_url image-name="api.name + \'  \' + api.version" image-width=40></gravitee-identity-picture> {{api.name}} </td> <td md-cell>{{api.plans}}</td> <td md-cell> <md-button class=md-icon-button aria-label="Edit Plans" ng-click=$ctrl.onSelectAPI(api);> <ng-md-icon icon=settings></ng-md-icon> <md-tooltip md-direction=left>Edit Plans</md-tooltip> </md-button> </td> </tr> </tbody> </table> </md-table-container> </div> <div ng-if="$ctrl.plans && $ctrl.selectedAPI" layout=column flex layout-align=center class=layout-padding style=overflow:auto;align-items:center> <div style=width:100%> <div flex layout=row> <h4>Choose <b>Echo</b> plans that suit your business</h4> <span flex></span> <md-button class=md-icon-button aria-label=Finish> <ng-md-icon icon=close ng-click="$ctrl.selectedAPI = null; $ctrl.filterAPI = \'\';"></ng-md-icon> <md-tooltip>Close the API</md-tooltip> </md-button> </div> <md-divider></md-divider> <div layout=row layout-align=center class=layout-padding flex layout-wrap> <api-plan ng-repeat="plan in $ctrl.plans" plan=plan subscribable=true unsubscribable=true on-subscribe="$ctrl.onSubscribe($ctrl.selectedAPI, plan)" on-unsubscribe="$ctrl.onUnsubscribe($ctrl.selectedAPI, plan)"></api-plan> <h3 ng-if="$ctrl.plans.length === 0">There is no published plan for this API that you can subscribe with this type of application</h3> </div> </div> </div> </div> </div> </div> </div> </div> '},function(e,t,i){"use strict";t.__esModule=!0;var n=i(3),a=function(){function e(e,t,i,a,o,r){var s=this;this.ApiService=e,this.ApplicationService=t,this.NotificationService=i,this.$mdDialog=a,this.$state=o,this.$transitions=r,this.subscribedAPIs=[],this.subscribedPlans=[],this.apis=[],this.plans=[],this.$onInit=function(){var e=n.groupBy(s.subscriptions.data,"api");n.forEach(e,(function(e,t){s.subscribedAPIs.push(n.merge(n.find(s.apis,{id:t}),{plans:n.join(n.map(e,(function(e){return s.subscriptions.metadata[e.plan].name})),", ")}))})),s.subscribedPlans=n.map(s.subscriptions.data,"plan")},this.onSelectAPI=function(e){if(e){var t=s.getAuthorizedSecurity();s.ApiService.getApiPlans(e.id,"published").then((function(i){s.plans=n.filter(i.data,(function(e){e.alreadySubscribed=n.includes(s.subscribedPlans,e.id);var i=n.find(s.subscriptions.data,{plan:e.id});return e.pending=i&&"pending"===i.status,n.includes(t,e.security)})),s.selectedAPI=e}))}else delete s.plans,delete s.selectedAPI},this.getAuthorizedSecurity=function(){var e=["api_key"];return s.application.settings&&(s.application.settings.oauth||s.application.settings.app&&s.application.settings.app.client_id)&&e.push("jwt","oauth2"),e}}return e.$inject=["ApiService","ApplicationService","NotificationService","$mdDialog","$state","$transitions"],e.prototype.onSubscribe=function(e,t){var i=this;if(t.comment_required){var n=this.$mdDialog.prompt().title("Subscription message").placeholder(t.comment_message?t.comment_message:"Fill a message to the API owner").ariaLabel("Subscription message").required(!0).ok("Confirm").cancel("Cancel");this.$mdDialog.show(n).then((function(e){i.ApplicationService.subscribe(i.application.id,t.id,e).then((function(){i.NotificationService.show("Subscription to application "+i.application.name+" has been successfully created"),i.$state.reload()}))}),(function(){}))}else this.ApplicationService.subscribe(this.application.id,t.id).then((function(){i.NotificationService.show("Subscription to application "+i.application.name+" has been successfully created"),i.$state.reload()}))},e.prototype.onUnsubscribe=function(e,t){var i=this,a=this.$mdDialog.confirm({title:"Close subscription?",content:"Are you sure you want to close this subscription?",ok:"CLOSE",cancel:"CANCEL"});this.$mdDialog.show(a).then((function(){i.ApplicationService.closeSubscription(i.application.id,n.find(i.subscriptions.data,{plan:t.id}).id).then((function(){i.NotificationService.show("Subscription has been successfully closed"),i.$state.reload()}))}),(function(){}))},e}();t.default=a},function(e,t,i){"use strict";t.__esModule=!0;var n=function(){function e(e,t){this.$http=e,this.URL=t.baseURL+"configuration/quality-rules/",this.URL_API=t.baseURL+"apis/"}return e.$inject=["$http","Constants"],e.prototype.list=function(){return this.$http.get(this.URL)},e.prototype.get=function(e){return this.$http.get(this.URL+e)},e.prototype.create=function(e){return this.$http.post(this.URL,e)},e.prototype.update=function(e){return this.$http.put(this.URL+e.id,{name:e.name,description:e.description,weight:e.weight})},e.prototype.delete=function(e){return this.$http.delete(this.URL+e.id)},e.prototype.listByApi=function(e){return this.$http.get(this.URL_API+e+"/quality-rules/")},e.prototype.createApiRule=function(e,t,i){return this.$http.post(this.URL_API+e+"/quality-rules/",{api:e,quality_rule:t,checked:i})},e.prototype.updateApiRule=function(e,t,i){return this.$http.put(this.URL_API+e+"/quality-rules/"+t,{checked:i})},e}();t.default=n},function(e,t,i){"use strict";t.__esModule=!0;var n=i(3),a={bindings:{qualityRules:"<"},template:i(1185),controller:["Constants","$rootScope","PortalConfigService","NotificationService","$mdDialog",function(e,t,a,o,r){var s=this;this.$rootScope=t,this.settings=n.cloneDeep(e),this.save=function(){a.save(s.settings).then((function(t){n.merge(e,t.data),o.show("API Quality settings saved!"),s.formQuality.$setPristine()}))},this.reset=function(){s.settings=n.cloneDeep(e),s.formQuality.$setPristine()},this.delete=function(e){r.show({controller:"DeleteApiQualityRuleDialogController",controllerAs:"$ctrl",template:i(1186),locals:{qualityRule:e}}).then((function(t){t&&(o.show("Quality rule '"+e.name+"' deleted with success"),n.remove(s.qualityRules,e))}))}}]};t.default=a},function(e,t){e.exports=' <form name=$ctrl.formQuality class=gv-forms layout=column ng-submit=$ctrl.save()> <h1>API Quality</h1> <div class=gv-form layout=column> <h2></h2> <div class=gv-form-content layout=column> <div> <md-checkbox ng-model=$ctrl.settings.apiReview.enabled aria-label="API reviews"> Enable API review </md-checkbox> <md-checkbox ng-model=$ctrl.settings.apiQualityMetrics.enabled aria-label=Rating> Enable API Quality Metrics </md-checkbox> </div> <h4>General</h4> <div layout=row layout-wrap=""> <md-input-container class=md-block flex=50 flex-gt-xs=100 flex-gt-sm=50> <label>Description weight</label> <input type=number min=0 max=99999 ng-model=$ctrl.settings.apiQualityMetrics.descriptionWeight> </md-input-container> <md-input-container class=md-block flex=50 flex-gt-xs=100 flex-gt-sm=50> <label>Description minimum length</label> <input type=number min=0 max=99999 ng-model=$ctrl.settings.apiQualityMetrics.descriptionMinLength> </md-input-container> <md-input-container class=md-block flex=50 flex-gt-xs=100 flex-gt-sm=50> <label>Logo weight</label> <input type=number min=0 max=99999 ng-model=$ctrl.settings.apiQualityMetrics.logoWeight> </md-input-container> <md-input-container class=md-block flex=50 flex-gt-xs=100 flex-gt-sm=50> <label>Categories weight</label> <input type=number min=0 max=99999 ng-model=$ctrl.settings.apiQualityMetrics.categoriesWeight> </md-input-container> <md-input-container class=md-block flex=50 flex-gt-xs=100 flex-gt-sm=50> <label>Labels weight</label> <input type=number min=0 max=99999 ng-model=$ctrl.settings.apiQualityMetrics.labelsWeight> </md-input-container> </div> <h4>Documentation</h4> <div layout=row layout-wrap=""> <md-input-container class=md-block flex=50 flex-gt-xs=100 flex-gt-sm=50> <label>Functional documentation weight</label> <input type=number min=0 max=99999 ng-model=$ctrl.settings.apiQualityMetrics.functionalDocumentationWeight> </md-input-container> <md-input-container class=md-block flex=50 flex-gt-xs=100 flex-gt-sm=50> <label>Technical documentation weight</label> <input type=number min=0 max=99999 ng-model=$ctrl.settings.apiQualityMetrics.technicalDocumentationWeight> </md-input-container> </div> <h4>Endpoint</h4> <div layout=row layout-wrap=""> <md-input-container class=md-block flex=50 flex-gt-xs=100 flex-gt-sm=50> <label>Healthcheck weight</label> <input type=number min=0 max=99999 ng-model=$ctrl.settings.apiQualityMetrics.healthcheckWeight> </md-input-container> </div> <md-card-actions> <md-button type=submit class="md-raised md-primary" ng-disabled="$ctrl.formQuality.$invalid || $ctrl.formQuality.$pristine" permission permission-only="[\'environment-settings-c\', \'environment-settings-u\', \'environment-settings-d\']">Save</md-button> <md-button type=button class=md-raised ng-click=$ctrl.reset() ng-disabled="$ctrl.formQuality.$invalid || $ctrl.formQuality.$pristine" permission permission-only="[\'environment-settings-c\', \'environment-settings-u\', \'environment-settings-d\']">Reset</md-button> </md-card-actions> </div> </div> </form> <div class=gv-forms ng-if="$ctrl.qualityRules && $ctrl.qualityRules.length"> <div class=gv-form> <div class=gv-form-content> <div class=gv-forms-header layout=column> <h2>Manual rules</h2> <div class=gv-form-content layout=column> <md-table-container> <table md-table> <thead md-head> <tr md-row> <th md-column>Quality rule</th> <th md-column>Weight</th> <th permission permission-only="\'environment-quality_rule-u\'" width=64px nowrap=nowrap></th> <th permission permission-only="\'environment-quality_rule-d\'" width=64px nowrap=nowrap></th> </tr> </thead> <tbody md-body> <tr md-row ng-repeat="qualityRule in $ctrl.qualityRules"> <td md-cell>{{qualityRule.name}}</td> <td md-cell>{{qualityRule.weight}}</td> <td md-cell permission permission-only="\'environment-quality_rule-u\'"> <ng-md-icon icon=edit ui-sref="management.settings.qualityRule({qualityRuleId: qualityRule.id})"></ng-md-icon> </td> <td md-cell permission permission-only="\'environment-quality_rule-d\'"> <ng-md-icon icon=delete ng-click=$ctrl.delete(qualityRule)></ng-md-icon> </td> </tr> </tbody> </table> </md-table-container> </div> </div> </div> </div> </div> <md-button permission permission-only="\'environment-quality_rule-c\'" aria-label="Add quality rule" class="md-fab md-fab-bottom-right md-fab-scrollable" ng-class="{\'gv-help-displayed\': $ctrl.$rootScope.helpDisplayed}" ui-sref=management.settings.qualityRulenew> <md-tooltip md-direction=top md-visible=false>Add a new quality rule</md-tooltip> <ng-md-icon icon=add></ng-md-icon> </md-button> '},function(e,t){e.exports=' <md-dialog aria-label="Delete quality rule \'{{$ctrl.qualityRule.name}}\'"> <md-dialog-content layout-padding> <p>Are you sure you want to delete the quality rule "{{$ctrl.qualityRule.name}}" ?</p> </md-dialog-content> <md-dialog-actions layout=row> <md-button ng-click=$ctrl.cancel() md-auto-focus> Cancel </md-button> <md-button ng-click=$ctrl.ok() class="md-raised md-warn"> Delete </md-button> </md-dialog-actions> </md-dialog> '},function(e,t,i){"use strict";t.__esModule=!0;var n={bindings:{qualityRule:"<"},controller:"ApiQualityRuleController",template:i(1188)};t.default=n},function(e,t){e.exports=' <div class=gv-forms layout=column> <div class=gv-forms-header> <h1>{{$ctrl.createMode ? \'New\' : \'Edit\'}} quality rule</h1> <a ui-sref=management.settings.apiQuality>Back to quality rules</a> </div> <form name=$ctrl.qualityRuleForm ng-submit=$ctrl.save()> <div class=gv-form> <h2>General</h2> <div class=gv-form-content layout=column> <div layout=row> <div layout=column flex> <div layout-gt-sm=row> <md-input-container class=md-block flex-gt-sm> <label>Name</label> <input ng-model=$ctrl.qualityRule.name type=text required name=name maxlength=64> <div class=hint ng-if="$ctrl.qualityRuleForm.name.$valid || $ctrl.qualityRuleForm.name.$pristine">Quality rule name</div> <div ng-messages=$ctrl.qualityRuleForm.name.$error> <div ng-message=required>Quality rule name is required.</div> <div ng-message=md-maxlength>The name has to be less than 64 characters long.</div> </div> </md-input-container> </div> <div layout-gt-sm=row> <md-input-container class=md-block flex-gt-sm> <label>Description</label> <input ng-model=$ctrl.qualityRule.description type=text required name=description maxlength=256> <div class=hint ng-if="$ctrl.qualityRuleForm.description.$valid || $ctrl.qualityRuleForm.description.$pristine">Quality rule description</div> <div ng-messages=$ctrl.qualityRuleForm.description.$error> <div ng-message=required>Quality rule description is required.</div> <div ng-message=md-maxlength>The description has to be less than 256 characters long.</div> </div> </md-input-container> </div> <md-input-container class=md-block flex=50 flex-gt-xs=100 flex-gt-sm=50> <label>Weight</label> <input type=number min=0 max=99999 ng-model=$ctrl.qualityRule.weight> </md-input-container> </div> </div> </div> </div> <div layout=row> <md-button ng-disabled="$ctrl.qualityRuleForm.$invalid || $ctrl.qualityRuleForm.$pristine && !$ctrl.formChanged" type=submit permission permission-only="[\'environment-quality_rule-c\', \'environment-quality_rule-u\']" class="md-raised md-primary"> Save </md-button> </div> </form> </div> '},function(e,t,i){"use strict";t.__esModule=!0;var n=function(){function e(e,t,i,n){this.QualityRuleService=e,this.NotificationService=t,this.$state=i,this.$location=n,this.createMode=!1,this.createMode=n.path().endsWith("new")}return e.$inject=["QualityRuleService","NotificationService","$state","$location"],e.prototype.$onInit=function(){this.qualityRule||(this.qualityRule={weight:0})},e.prototype.save=function(){var e=this;(this.createMode?this.QualityRuleService.create(this.qualityRule):this.QualityRuleService.update(this.qualityRule)).then((function(t){var i=t.data;e.NotificationService.show("Quality rule "+i.name+" has been saved."),e.$state.go("management.settings.qualityRule",{qualityRuleId:i.id},{reload:!0})}))},e}();t.default=n},function(e,t,i){"use strict";function n(e,t,i,n){this.qualityRule=i,this.cancel=function(){t.cancel()},this.ok=function(){n.delete(i).then((function(){t.hide(!0)}))}}n.$inject=["$scope","$mdDialog","qualityRule","QualityRuleService"],t.__esModule=!0,t.default=n},function(e,t,i){"use strict";function n(e){this.cancel=e.cancel}n.$inject=["$mdDialog"],t.__esModule=!0,t.default=n},function(e,t,i){"use strict";var n=this&&this.__awaiter||function(e,t,i,n){return new(i||(i=Promise))((function(a,o){function r(e){try{l(n.next(e))}catch(e){o(e)}}function s(e){try{l(n.throw(e))}catch(e){o(e)}}function l(e){e.done?a(e.value):new i((function(t){t(e.value)})).then(r,s)}l((n=n.apply(e,t||[])).next())}))},a=this&&this.__generator||function(e,t){var i,n,a,o,r={label:0,sent:function(){if(1&a[0])throw a[1];return a[1]},trys:[],ops:[]};return o={next:s(0),throw:s(1),return:s(2)},"function"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function s(o){return function(s){return function(o){if(i)throw new TypeError("Generator is already executing.");for(;r;)try{if(i=1,n&&(a=2&o[0]?n.return:o[0]?n.throw||((a=n.return)&&a.call(n),0):n.next)&&!(a=a.call(n,o[1])).done)return a;switch(n=0,a&&(o=[2&o[0],a.value]),o[0]){case 0:case 1:a=o;break;case 4:return r.label++,{value:o[1],done:!1};case 5:r.label++,n=o[1],o=[0];continue;case 7:o=r.ops.pop(),r.trys.pop();continue;default:if(!(a=r.trys,(a=a.length>0&&a[a.length-1])||6!==o[0]&&2!==o[0])){r=0;continue}if(3===o[0]&&(!a||o[1]>a[0]&&o[1]<a[3])){r.label=o[1];break}if(6===o[0]&&r.label<a[1]){r.label=a[1],a=o;break}if(a&&r.label<a[2]){r.label=a[2],r.ops.push(o);break}a[2]&&r.ops.pop(),r.trys.pop();continue}o=t.call(e,r)}catch(e){o=[6,e],n=0}finally{i=a=0}if(5&o[0])throw o[1];return{value:o[0]?o[1]:void 0,done:!0}}([o,s])}}};t.__esModule=!0;var o=function(){function e(e,t){this.$http=e,this.headerName="X-Recaptcha-Token",this.scriptId="reCaptcha",this.enabled=!1,this.loaded=!1,this.display=!1,this.enabled=t.reCaptcha&&!!t.reCaptcha.enabled,this.enabled&&(this.siteKey=t.reCaptcha.siteKey,this.load().then())}return e.$inject=["$http","Constants"],e.prototype.load=function(){var e=this,t=this;return new Promise((function(i,n){if(e.enabled&&!document.getElementById(e.scriptId))if(e.siteKey){var a=document.createElement("script");a.id=e.scriptId,a.src="https://www.google.com/recaptcha/api.js?render="+e.siteKey,a.async=!0,a.onload=function(){grecaptcha.ready((function(){i(),t.loaded=!0,t.displayOrHideBadge()}))},document.head.appendChild(a)}else n("[reCaptchaService] Missing public site_key");else i()}))},e.prototype.execute=function(e){return n(this,void 0,Promise,(function(){var t=this;return a(this,(function(i){switch(i.label){case 0:return this.enabled?this.loaded?[3,2]:[4,this.load()]:[3,3];case 1:i.sent(),i.label=2;case 2:return[2,grecaptcha.execute(this.siteKey,{action:e}).then((function(e){t.reCaptchaToken=e}))];case 3:return[2,Promise.resolve(null)]}}))}))},e.prototype.getCurrentToken=function(){return this.reCaptchaToken},e.prototype.getHeaderName=function(){return this.headerName},e.prototype.isEnabled=function(){return this.enabled},e.prototype.displayBadge=function(){this.display=!0,this.enabled&&this.loaded&&document.getElementsByClassName("grecaptcha-badge")[0].style.setProperty("visibility","initial")},e.prototype.hideBadge=function(){this.display=!1,this.enabled&&this.loaded&&document.getElementsByClassName("grecaptcha-badge")[0].style.setProperty("visibility","collapse","important")},e.prototype.displayOrHideBadge=function(){!0===this.display?this.displayBadge():this.hideBadge()},e}();t.default=o},function(e,t,i){"use strict";t.__esModule=!0;var n=function(){function e(e,t,i,n,a,o,r){var s=this;this.$http=e,this.$scope=t,this.$mdDialog=i,this.Constants=n,this.ThemeService=a,this.NotificationService=o,this.$sce=r,this.connected=!1,this.$onInit=function(){s.$scope.hasPreview()?(s.handleEventHandlers=s.handleEvent.bind(s),window.addEventListener("message",s.handleEventHandlers,!1),s.loadTheme().then((function(){s.connectionRequest(),s.$scope.href=s.$scope.targetURL+s.getQueryParams()}))):s.loadTheme()},this.$onDestroy=function(){s.$scope.hasPreview()&&(window.removeEventListener("message",s.handleEventHandlers),clearInterval(s.connectionRequestInterval))},this.getData=function(e){void 0===e&&(e={});var t=s.$scope.theme;return null==t.optionalLogo&&(t.optionalLogo=t.logo),Object.assign({},{type:"gravitee",theme:t,isDetached:s.$scope.isDetached,date:Date.now()},e)},this.getWindow=function(){if(!s.$scope.isDetached){s.detachedWindow=null;var e=document.getElementById("preview");return e?e.contentWindow:null}return null!=s.detachedWindow&&null!=s.detachedWindow.opener||(s.$scope.isDetached=!1),s.detachedWindow},this.connectionRequest=function(){s.connectionRequestInterval&&clearInterval(s.connectionRequestInterval);var e=0;s.connectionRequestInterval=setInterval((function(){s.connected||!s.postMessage(s.getData({requestAnswer:!0}),"*")&&++e>=3&&(clearInterval(s.connectionRequestInterval),s.$scope.isDetached=!1,s._reloadIframe())}),500)},this.handleEvent=function(e){"gravitee"===e.data.type&&(s.connectionRequestInterval&&s.connect(),e.data.href&&(s.currentHref=e.data.href),e.data.unload&&s.$scope.isDetached&&s._reloadIframe())},this.open=function(e){s.$scope.isDetached?s.detachedWindow.close():(clearInterval(s.connectionRequestInterval),s.$scope.isDetached=!0,s.disconnect(),setTimeout((function(){s.$scope.accordion.expandAll()}),0),setTimeout((function(){s.detachedWindow=window.open(s.currentHref+s.getQueryParams(),s.$scope.previewName,"width=1024, height="+window.screen.height+", left="+(window.screen.width-1024)),s.connectionRequest()}),500))},this.loadTheme=function(){return s.ThemeService.get().then((function(e){var t=e.data;s.setTheme(t)}))},this.reset=function(){s.loadTheme().then((function(){s.NotificationService.show("The theme has been reset."),s.postMessage(s.getData(),s.$scope.targetURL)}))},this.restoreDefaultTheme=function(){var e=s.$mdDialog.confirm({title:"Restore default theme ?",content:"Are you sure you want to restore the default theme? All your changes will be deleted.",ok:"RESTORE",cancel:"CANCEL"});s.$mdDialog.show(e).then((function(){s.ThemeService.restoreDefaultTheme(s.$scope.theme).then((function(e){var t=e.data;s.setTheme(t),s.onDataChanged(),s.$scope.themeForm.$commitViewValue(),s.$scope.themeForm.$setSubmitted(),s.$scope.themeForm.$setPristine(),s.NotificationService.show('The "Gravitee" default theme has been restore.')}))}),(function(){}))},this.update=function(){s.ThemeService.update(s.$scope.theme).then((function(){s.$scope.themeForm.$setPristine(),s.NotificationService.show("The theme has been saved.")}))},this.onDataChanged=function(){s.postMessage(s.getData(),s.$scope.targetURL)},this.exportTheme=function(){var e=s.$scope.theme,t={name:e.name,definition:e.definition,logo:e.logo,optionalLogo:e.optionalLogo,backgroundImage:e.backgroundImage},i=document.createElement("a");i.style="display:none;",document.body.appendChild(i);var n=new Blob([angular.toJson(t,2)],{type:"application/octet-stream"}),a=URL.createObjectURL(n);i.href=a,i.download="gv-theme-"+(new Date).getTime()+".json",i.click(),window.URL.revokeObjectURL(a),i.remove()},t.themeForm={},t.targetURL=n.portal.url,t.trustSrc=function(e){return r.trustAsResourceUrl(e)},t.previewName="GvPreviewName",t.buttonConfig={hasBackdrop:!0,clickOutsideToClose:!0,materialPalette:!1,history:!0,clearButton:!1},t.fonts=["Arial, Helvetica, 'Liberation Sans', FreeSans, sans-serif","'Trebuchet MS', Arial, Helvetica, sans-serif","'Lucida Sans', 'Lucida Grande', 'Lucida Sans Unicode', 'Luxi Sans', sans-serif","Tahoma, Geneva, Kalimati, sans-serif","Verdana, DejaVu Sans, Bitstream Vera Sans, Geneva, sans-serif","Impact, Arial Black, sans-serif","Courier, 'Courier New', FreeMono, 'Liberation Mono', monospace","Monaco, 'DejaVu Sans Mono', 'Lucida Console', 'Andale Mono', monospace","Times, 'Times New Roman', 'Liberation Serif', FreeSerif, serif","Georgia, 'DejaVu Serif', Norasi, serif"],t.hasPreview=function(){return null!=t.targetURL&&""!==t.targetURL.trim()},t.onFullscreen=function(){return!t.hasPreview()||t.hasPreview()&&t.isDetached},t.getThemeVariables=function(e){var t=s.$scope.theme?s.$scope.themeComponent:{};return t.css?e?t.css.filter(e):t.css:[]},t.$on("accordion:onReady",(function(){setTimeout((function(){t.hasPreview()?t.accordion.toggle("image"):t.accordion.expandAll()}),0)})),t.getGlobalColorVariables=function(){return s.$scope.getThemeVariables((function(e){return"color"===e.type&&e.name.startsWith("--gv-theme-font-color")}))},t.getGlobalPrimaryColorVariables=function(){return s.$scope.getThemeVariables((function(e){return"color"===e.type&&e.description.includes("Primary")}))},t.getGlobalHomepageColorVariables=function(){return s.$scope.getThemeVariables((function(e){return"color"===e.type&&e.description.includes("Homepage")}))},t.getGlobalNeutralColorVariables=function(){return s.$scope.getThemeVariables((function(e){return"color"===e.type&&e.name.startsWith("--gv-theme-neutral-color")}))},t.getGlobalHomepageVariables=function(){return s.$scope.getThemeVariables((function(e){return"color"!==e.type&&e.description.includes("Homepage")}))},t.getGlobalFontFamilyVariables=function(){return s.$scope.getThemeVariables((function(e){return e.name.startsWith("--gv-theme-font-family")}))},t.getGlobalFontSizeVariables=function(){return s.$scope.getThemeVariables((function(e){return e.name.startsWith("--gv-theme-font-size")}))},t.getComponents=function(){return t.theme?t.theme.definition.data.filter((function(e){return"gv-theme"!==e.name})):[]},t.isDetached=!1,t.$on("apiPictureChangeSuccess",(function(e,i){t.hasPreview()&&setTimeout((function(){s.onDataChanged()}),0)})),t.getOptionalLogo=function(){return t.theme?t.theme.optionalLogo?t.theme.optionalLogo:t.theme.logo:""}}return e.$inject=["$http","$scope","$mdDialog","Constants","ThemeService","NotificationService","$sce"],e.prototype.getDisplayName=function(e){return e.replace("gv-","").replace("-"," ")},e.prototype.getQueryParams=function(){return"?preview=on"},e.prototype.getValue=function(e){return e.value.startsWith("var(")?"":e.value},e.prototype.getColorTitle=function(e){var t=e.value;if(""===e.value&&e.default.startsWith("var(")){var i=e.default.split(",")[0].replace("var(",""),n=this.$scope.themeComponent.css.find((function(e){return e.name===i}));n&&(t="(inherited from "+n.description+")")}return e.description+": "+t},e.prototype.hasColors=function(e){return null!=e.css.find((function(e){return"color"===e.type.toLowerCase()}))},e.prototype.getPlaceholder=function(e){if(""===e.value&&e.default.startsWith("var(")){var t=e.default.split(",")[0].replace("var(",""),i=this.$scope.themeComponent.css.find((function(e){return e.name===t}));return"Use "+i.description+": "+i.value}return e.description},e.prototype.connect=function(){var e=this;clearInterval(this.connectionRequestInterval),this.connectionRequestInterval=null,this.connected=!0,clearInterval(this.checkConnectionRequestInterval),this.checkConnectionRequestInterval=setInterval((function(){e.postMessage(e.getData(),e.$scope.targetURL)}),3e4)},e.prototype.disconnect=function(){this.connected=!1,clearInterval(this.checkConnectionRequestInterval)},e.prototype._reloadIframe=function(){var e=this;this.$scope.$apply((function(){e.$scope.href=e.currentHref+e.getQueryParams(),e.$scope.isDetached=!1,e.disconnect(),e.connectionRequest()}))},e.prototype.setTheme=function(e){this.$scope.theme=e,this.$scope.themeComponent=e.definition.data.find((function(e){return"gv-theme"===e.name}))},e.prototype.postMessage=function(e,t){var i=this.getWindow();return!!i&&(i.postMessage(e,t),!0)},e.prototype.getLogoUrl=function(){return this.$scope.theme?this.ThemeService.getLogoUrl(this.$scope.theme):""},e.prototype.getOptionalLogoUrl=function(){return this.$scope.theme?this.$scope.theme.optionalLogo?this.ThemeService.getOptionalLogoUrl(this.$scope.theme):this.getLogoUrl():""},e.prototype.getBackgroundImageUrl=function(){return this.$scope.theme?this.ThemeService.getBackgroundImageUrl(this.$scope.theme):""},e.prototype.importTheme=function(e,t){var i=this;if(e){var n=new FileReader;n.readAsText(e),n.onload=function(e){var t=Object.assign({},i.$scope.theme,JSON.parse(e.target.result));i.setTheme(t),i.onDataChanged(),i.$scope.themeForm.$commitViewValue(),i.$scope.themeForm.$setDirty(),i.NotificationService.show("The theme has been loaded successfully, save it to validate the import.")}}if(t&&t.length>0){var a=t[0];"maxSize"===a.$error?this.NotificationService.showError('Theme "'+a.name+'" exceeds the maximum authorized size ('+this.$scope.maxSize+")"):this.NotificationService.showError("File is not valid (error: "+a.$error+")")}},e}();t.default=n},function(e,t,i){"use strict";t.__esModule=!0;var n={bindings:{views:"<"},controller:"ThemeController",template:i(1195)};t.default=n},function(e,t){e.exports=' <div class=theme-component> <form name=themeForm class=gv-forms layout=column ng-submit=$ctrl.save()> <div class=theme-component-actions ng-class="{\'theme-component-container-fullscreen\': onFullscreen()}"> <h1 class=theme-component-title>Theme</h1> <div class=theme-component-actions-primary> <md-button class=md-flat ng-if=hasPreview() ng-class="{\'md-primary\': isDetached}" aria-label="Switch fullscreen" type=button ng-click=$ctrl.open()> <ng-md-icon ng-if=!isDetached icon=fullscreen></ng-md-icon> <span ng-if=!isDetached>Fullscreen</span> <ng-md-icon ng-if=isDetached icon=fullscreen_exit></ng-md-icon> <span ng-if=isDetached>Exit</span> </md-button> <md-button class=md-flat type=button ng-click=$ctrl.reset() ng-disabled=themeForm.$pristine> <ng-md-icon icon=replay></ng-md-icon> Reset </md-button> <md-button class=md-primary type=button ng-click=$ctrl.update() ng-disabled="themeForm.$invalid || themeForm.$pristine" permission permission-only="\'environment-theme-u\'"> <ng-md-icon ng-if=themeForm.$dirty icon=sync_disabled></ng-md-icon> <ng-md-icon ng-if=!themeForm.$dirty icon=sync></ng-md-icon> Save </md-button> <md-switch aria-label=Enabled ng-model=theme.enabled ng-change=$ctrl.update() permission permission-only="\'environment-theme-u\'"> ENABLED </md-switch> </div> <md-button class=md-raised type=button ngf-select=$ctrl.importTheme($file,$invalidFiles) ngf-pattern="\'application/json\'" ngf-accept="\'application/json\'" ngf-max-size=1MB permission permission-only="[\'environment-theme-u\']"> Import </md-button> <md-button class=md-raised type=button ng-click=$ctrl.exportTheme()> Export </md-button> <md-button class="md-raised md-warn" type=button ng-click=$ctrl.restoreDefaultTheme() permission permission-only="[\'environment-theme-u\']"> Restore default theme </md-button> </div> <div class=theme-component-container ng-class="{\'theme-component-container-fullscreen\': onFullscreen()}"> <div class=gv-form> <div class=gv-form-content> <v-accordion class=vAccordion--default control=accordion id=accordion multiple=multiple> <v-pane id=image> <v-pane-header>Images</v-pane-header> <v-pane-content> <div> <label class=theme-component-label>Logo</label> <gravitee-image image-id="\'theme-logo\'" image=theme.logo image-url=$ctrl.getLogoUrl() image-form=themeForm no-default-image=true ng-model=theme.logo change-label=Change> </gravitee-image> </div> <div> <label class=theme-component-label>Optional logo</label> <gravitee-image image-id="\'theme-optionalLogo\'" image=theme.optionalLogo image-default=theme.logo image-url=$ctrl.getOptionalLogoUrl() image-form=themeForm no-default-image=true ng-model=theme.optionalLogo can-delete=true change-label=Change delete-label="Use default logo"> </gravitee-image> </div> </v-pane-content> </v-pane> <v-pane> <v-pane-header>Homepage</v-pane-header> <v-pane-content> <div> <label class=theme-component-label>Homepage background image</label> <gravitee-image image-id="\'theme-backgroundImage\'" image=theme.backgroundImage image-url=$ctrl.getBackgroundImageUrl() image-form=themeForm no-default-image=true ng-model=theme.backgroundImage can-delete=true change-label=Change> </gravitee-image> </div> <label class=theme-component-label>Colors</label> <div class=theme-component-colors> <div class=theme-component-colors> <div ng-repeat="property in getGlobalHomepageColorVariables()" title="{{property.description}}: {{property.value}}" type=text class=theme-component-color-picker ng-change=$ctrl.onDataChanged() md-color-picker ng-model=property.value default={{property.default}} md-color-history=true md-color-clear-button=false></div> </div> </div> <div layout=row ng-repeat="property in getGlobalHomepageVariables()" ng-if="(property.type.toLowerCase() === \'length\' || property.type.toLowerCase()=== \'string\') && !property.name.endsWith(\'--ff\')"> <md-input-container class=md-block flex> <label>{{property.description}}</label> <input ng-model=property.value type=text placeholder={{$ctrl.getPlaceholder(property)}} aria-label={{property.description}} ng-change=$ctrl.onDataChanged()> </md-input-container> </div> </v-pane-content> </v-pane> <v-pane> <v-pane-header>Colors</v-pane-header> <v-pane-content> <label class=theme-component-label>Primary</label> <div class=theme-component-colors> <div class=theme-component-colors> <div ng-repeat="property in getGlobalPrimaryColorVariables()" title="{{property.description}}: {{property.value}}" type=text class=theme-component-color-picker ng-change=$ctrl.onDataChanged() md-color-picker ng-model=property.value default={{property.default}} md-color-history=true md-color-clear-button=false></div> </div> </div> <hr/> <label class=theme-component-label>Neutral</label> <div class=theme-component-colors> <div class=theme-component-colors> <div ng-repeat="property in getGlobalNeutralColorVariables()" type=text title="{{property.description}}: {{property.value}}" class=theme-component-color-picker ng-change=$ctrl.onDataChanged() md-color-picker default={{property.default}} ng-model=property.value md-color-history=true md-color-clear-button=false></div> </div> </div> <label class=theme-component-label>Fonts</label> <div class=theme-component-colors> <div class=theme-component-colors> <div ng-repeat="property in getGlobalColorVariables()" type=text title="{{property.description}}: {{property.value}}" class=theme-component-color-picker ng-change=$ctrl.onDataChanged() md-color-picker default={{property.default}} ng-model=property.value md-color-history=true md-color-clear-button=false></div> </div> </div> </v-pane-content> </v-pane> <v-pane> <v-pane-header>Fonts</v-pane-header> <v-pane-content> <div layout=column class=theme-component-text> <div layout=row ng-repeat="property in getGlobalFontFamilyVariables()"> <md-input-container class=md-block flex> <label>Family</label> <md-select ng-model=property.value ng-change=$ctrl.onDataChanged()> <md-option ng-value=property.default ng-selected="{{property.default === property.value}}"> {{property.default}} </md-option> <md-option ng-repeat="font in fonts" ng-value=font ng-selected="{{font === property.value}}"> {{font}} </md-option> </md-select> </md-input-container> </div> <div layout=row ng-repeat="property in getGlobalFontSizeVariables()"> <md-input-container class=md-block flex> <input ng-model=property.value type=text placeholder={{property.description}} aria-label={{property.description}} ng-change=$ctrl.onDataChanged()> </md-input-container> </div> </div> </v-pane-content> </v-pane> <v-pane ng-repeat="component in getComponents()" id="{{ ::component.name }}"> <v-pane-header>{{ $ctrl.getDisplayName(component.name) }}</v-pane-header> <v-pane-content> <label class=theme-component-label ng-if=$ctrl.hasColors(component)>Colors</label> <div class=theme-component-colors> <div class=theme-component-colors> <div ng-repeat="property in component.css" ng-if="property.type.toLowerCase() === \'color\'" title={{$ctrl.getColorTitle(property)}} class=theme-component-color-picker ng-change=$ctrl.onDataChanged() md-color-picker ng-model=property.value md-color-history=true md-color-clear-button=false></div> </div> </div> <div layout=column class=theme-component-text> <div layout=row ng-repeat="property in component.css" ng-if="property.name.endsWith(\'--ff\')"> <md-input-container class=md-block flex> <label>Family</label> <md-select ng-model=property.value ng-change=$ctrl.onDataChanged()> <md-option ng-value=property.default ng-selected="{{property.default === property.value}}"> {{property.default}} </md-option> <md-option ng-repeat="font in fonts" ng-value=font ng-selected="{{font === property.value}}"> {{font}} </md-option> </md-select> </md-input-container> </div> <div layout=row ng-repeat="property in component.css" ng-if="(property.type.toLowerCase() === \'length\' || property.type.toLowerCase()=== \'string\') && !property.name.endsWith(\'--ff\')"> <md-input-container class=md-block flex> <label>{{property.description}}</label> <input ng-model=property.value type=text placeholder={{$ctrl.getPlaceholder(property)}} aria-label={{property.description}} ng-change=$ctrl.onDataChanged()> </md-input-container> </div> </div> </v-pane-content> </v-pane> </v-accordion> </div> </div> <iframe id=preview name={{previewName}} ng-if="hasPreview() && !isDetached" ng-src={{trustSrc(href)}} frameborder=0></iframe> </div> </form> </div> '},function(e,t,i){"use strict";t.__esModule=!0;var n=function(){function e(e,t,i){this.$http=e,this.$q=t,this.themeURL=i.baseURL+"configuration/themes/"}return e.$inject=["$http","$q","Constants"],e.prototype.get=function(){return this.$http.get(this.themeURL+"default")},e.prototype.restoreDefaultTheme=function(e){return this.$http.post(""+this.themeURL+e.id+"/reset")},e.prototype.update=function(e){if(e)return this.$http.put(""+this.themeURL+e.id,{id:e.id,name:e.name,reference_type:e.reference_type,reference_id:e.reference_id,enabled:e.enabled,definition:e.definition,logo:e.logo,optionalLogo:e.optionalLogo,backgroundImage:e.backgroundImage})},e.prototype.getLogoUrl=function(e){return e?this.getImageUrl(e,"logo"):""},e.prototype.getOptionalLogoUrl=function(e){return e?this.getImageUrl(e,"optionalLogo"):""},e.prototype.getBackgroundImageUrl=function(e){return e?this.getImageUrl(e,"backgroundImage"):""},e.prototype.getImageUrl=function(e,t){return""+this.themeURL+e.id+"/"+t+"?"+e.updated_at},e}();t.default=n},function(e,t,i){"use strict";function n(e){e.withCredentials=!0}n.$inject=["$authProvider"],t.__esModule=!0,t.default=n},function(e,t,i){"use strict";t.__esModule=!0;var n=function(){function e(e,t,i,n,a,o,r){this.UserService=i,t.user=i.currentUser,this.hasEmail=!!t.user.email,this.newsletterEnabled=a.newsletter.enabled,t.save=function(){i.save(t.user).then((function(){o.localStorage.setItem("profileConfirmed",!0),r.$broadcast("graviteeUserRefresh",{user:t.user}),n.show("Your profile has been updated successfully"),e.go("management")}))}}return e.$inject=["$state","$scope","UserService","NotificationService","Constants","$window","$rootScope"],e}();t.default=n},,,,,,,,,,,,,,function(e,t){angular.module("schemaForm").run(["$templateCache",function(e){e.put("directives/decorators/bootstrap/actions-trcl.html",'<div class="btn-group schema-form-actions {{form.htmlClass}}" ng-transclude=""></div>'),e.put("directives/decorators/bootstrap/actions.html",'<div class="btn-group schema-form-actions {{form.htmlClass}}"><input ng-repeat-start="item in form.items" type="submit" class="btn {{ item.style || \'btn-default\' }} {{form.fieldHtmlClass}}" value="{{item.title}}" ng-if="item.type === \'submit\'"> <button ng-repeat-end="" class="btn {{ item.style || \'btn-default\' }} {{form.fieldHtmlClass}}" type="button" ng-disabled="form.readonly" ng-if="item.type !== \'submit\'" ng-click="buttonClick($event,item)"><span ng-if="item.icon" class="{{item.icon}}"></span>{{item.title}}</button></div>'),e.put("directives/decorators/bootstrap/array.html",'<div sf-array="form" class="schema-form-array {{form.htmlClass}}" ng-model="$$value$$" ng-model-options="form.ngModelOptions"><label class="control-label" ng-show="showTitle()">{{ form.title }}</label><ol class="list-group" ng-model="modelArray" ui-sortable=""><li class="list-group-item {{form.fieldHtmlClass}}" ng-repeat="item in modelArray track by $index"><button ng-hide="form.readonly || form.remove === null" ng-click="deleteFromArray($index)" style="position: relative; z-index: 20;" type="button" class="close pull-right"><span aria-hidden="true">&times;</span><span class="sr-only">Close</span></button><sf-decorator ng-init="arrayIndex = $index" form="copyWithIndex($index)"></sf-decorator></li></ol><div class="clearfix" style="padding: 15px;"><button ng-hide="form.readonly || form.add === null" ng-click="appendToArray()" type="button" class="btn {{ form.style.add || \'btn-default\' }} pull-right"><i class="glyphicon glyphicon-plus"></i> {{ form.add || \'Add\'}}</button></div><div class="help-block" ng-show="(hasError() && errorMessage(schemaError())) || form.description" ng-bind-html="(hasError() && errorMessage(schemaError())) || form.description"></div></div>'),e.put("directives/decorators/bootstrap/checkbox.html",'<div class="checkbox schema-form-checkbox {{form.htmlClass}}" ng-class="{\'has-error\': form.disableErrorState !== true && hasError(), \'has-success\': form.disableSuccessState !== true && hasSuccess()}"><label class="{{form.labelHtmlClass}}"><input type="checkbox" sf-changed="form" ng-disabled="form.readonly" ng-model="$$value$$" ng-model-options="form.ngModelOptions" schema-validate="form" class="{{form.fieldHtmlClass}}" name="{{form.key.slice(-1)[0]}}"> <span ng-bind-html="form.title"></span></label><div class="help-block" sf-message="form.description"></div></div>'),e.put("directives/decorators/bootstrap/checkboxes.html",'<div sf-array="form" ng-model="$$value$$" class="form-group schema-form-checkboxes {{form.htmlClass}}" ng-class="{\'has-error\': form.disableErrorState !== true && hasError(), \'has-success\': form.disableSuccessState !== true && hasSuccess()}"><label class="control-label {{form.labelHtmlClass}}" ng-show="showTitle()">{{form.title}}</label><div class="checkbox" ng-repeat="val in titleMapValues track by $index"><label><input type="checkbox" ng-disabled="form.readonly" sf-changed="form" class="{{form.fieldHtmlClass}}" ng-model="titleMapValues[$index]" name="{{form.key.slice(-1)[0]}}"> <span ng-bind-html="form.titleMap[$index].name"></span></label></div><div class="help-block" sf-message="form.description"></div></div>'),e.put("directives/decorators/bootstrap/default.html",'<div class="form-group schema-form-{{form.type}} {{form.htmlClass}}" ng-class="{\'has-error\': form.disableErrorState !== true && hasError(), \'has-success\': form.disableSuccessState !== true && hasSuccess(), \'has-feedback\': form.feedback !== false }"><label class="control-label {{form.labelHtmlClass}}" ng-class="{\'sr-only\': !showTitle()}" for="{{form.key.slice(-1)[0]}}">{{form.title}}</label> <input ng-if="!form.fieldAddonLeft && !form.fieldAddonRight" ng-show="form.key" type="{{form.type}}" step="any" sf-changed="form" placeholder="{{form.placeholder}}" class="form-control {{form.fieldHtmlClass}}" id="{{form.key.slice(-1)[0]}}" ng-model-options="form.ngModelOptions" ng-model="$$value$$" ng-disabled="form.readonly" schema-validate="form" name="{{form.key.slice(-1)[0]}}" aria-describedby="{{form.key.slice(-1)[0] + \'Status\'}}"><div ng-if="form.fieldAddonLeft || form.fieldAddonRight" ng-class="{\'input-group\': (form.fieldAddonLeft || form.fieldAddonRight)}"><span ng-if="form.fieldAddonLeft" class="input-group-addon" ng-bind-html="form.fieldAddonLeft"></span> <input ng-show="form.key" type="{{form.type}}" step="any" sf-changed="form" placeholder="{{form.placeholder}}" class="form-control {{form.fieldHtmlClass}}" id="{{form.key.slice(-1)[0]}}" ng-model-options="form.ngModelOptions" ng-model="$$value$$" ng-disabled="form.readonly" schema-validate="form" name="{{form.key.slice(-1)[0]}}" aria-describedby="{{form.key.slice(-1)[0] + \'Status\'}}"> <span ng-if="form.fieldAddonRight" class="input-group-addon" ng-bind-html="form.fieldAddonRight"></span></div><span ng-if="form.feedback !== false" class="form-control-feedback" ng-class="evalInScope(form.feedback) || {\'glyphicon\': true, \'glyphicon-ok\': hasSuccess(), \'glyphicon-remove\': hasError() }" aria-hidden="true"></span> <span ng-if="hasError() || hasSuccess()" id="{{form.key.slice(-1)[0] + \'Status\'}}" class="sr-only">{{ hasSuccess() ? \'(success)\' : \'(error)\' }}</span><div class="help-block" sf-message="form.description"></div></div>'),e.put("directives/decorators/bootstrap/fieldset-trcl.html",'<fieldset ng-disabled="form.readonly" class="schema-form-fieldset {{form.htmlClass}}"><legend ng-class="{\'sr-only\': !showTitle() }">{{ form.title }}</legend><div class="help-block" ng-show="form.description" ng-bind-html="form.description"></div><div ng-transclude=""></div></fieldset>'),e.put("directives/decorators/bootstrap/fieldset.html",'<fieldset ng-disabled="form.readonly" class="schema-form-fieldset {{form.htmlClass}}"><legend ng-class="{\'sr-only\': !showTitle() }">{{ form.title }}</legend><div class="help-block" ng-show="form.description" ng-bind-html="form.description"></div><sf-decorator ng-repeat="item in form.items" form="item"></sf-decorator></fieldset>'),e.put("directives/decorators/bootstrap/help.html",'<div class="helpvalue schema-form-helpvalue {{form.htmlClass}}" ng-bind-html="form.helpvalue"></div>'),e.put("directives/decorators/bootstrap/radio-buttons.html",'<div class="form-group schema-form-radiobuttons {{form.htmlClass}}" ng-class="{\'has-error\': form.disableErrorState !== true && hasError(), \'has-success\': form.disableSuccessState !== true && hasSuccess()}"><div><label class="control-label {{form.labelHtmlClass}}" ng-show="showTitle()">{{form.title}}</label></div><div class="btn-group"><label class="btn {{ (item.value === $$value$$) ? form.style.selected || \'btn-default\' : form.style.unselected || \'btn-default\'; }}" ng-class="{ active: item.value === $$value$$ }" ng-repeat="item in form.titleMap"><input type="radio" class="{{form.fieldHtmlClass}}" sf-changed="form" style="display: none;" ng-disabled="form.readonly" ng-model="$$value$$" ng-model-options="form.ngModelOptions" schema-validate="form" ng-value="item.value" name="{{form.key.join(\'.\')}}"> <span ng-bind-html="item.name"></span></label></div><div class="help-block" sf-message="form.description"></div></div>'),e.put("directives/decorators/bootstrap/radios-inline.html",'<div class="form-group schema-form-radios-inline {{form.htmlClass}}" ng-class="{\'has-error\': form.disableErrorState !== true && hasError(), \'has-success\': form.disableSuccessState !== true && hasSuccess()}"><label ng-model="$$value$$" ng-model-options="form.ngModelOptions" schema-validate="form" class="control-label {{form.labelHtmlClass}}" ng-show="showTitle()">{{form.title}}</label><div><label class="radio-inline" ng-repeat="item in form.titleMap"><input type="radio" class="{{form.fieldHtmlClass}}" sf-changed="form" ng-disabled="form.readonly" ng-model="$$value$$" ng-value="item.value" name="{{form.key.join(\'.\')}}"> <span ng-bind-html="item.name"></span></label></div><div class="help-block" sf-message="form.description"></div></div>'),e.put("directives/decorators/bootstrap/radios.html",'<div class="form-group schema-form-radios {{form.htmlClass}}" ng-class="{\'has-error\': form.disableErrorState !== true && hasError(), \'has-success\': form.disableSuccessState !== true && hasSuccess()}"><label ng-model="$$value$$" ng-model-options="form.ngModelOptions" schema-validate="form" class="control-label {{form.labelHtmlClass}}" ng-show="showTitle()">{{form.title}}</label><div class="radio" ng-repeat="item in form.titleMap"><label><input type="radio" class="{{form.fieldHtmlClass}}" sf-changed="form" ng-disabled="form.readonly" ng-model="$$value$$" ng-value="item.value" name="{{form.key.join(\'.\')}}"> <span ng-bind-html="item.name"></span></label></div><div class="help-block" sf-message="form.description"></div></div>'),e.put("directives/decorators/bootstrap/section.html",'<div class="schema-form-section {{form.htmlClass}}"><sf-decorator ng-repeat="item in form.items" form="item"></sf-decorator></div>'),e.put("directives/decorators/bootstrap/select.html",'<div class="form-group {{form.htmlClass}} schema-form-select" ng-class="{\'has-error\': form.disableErrorState !== true && hasError(), \'has-success\': form.disableSuccessState !== true && hasSuccess(), \'has-feedback\': form.feedback !== false}"><label class="control-label {{form.labelHtmlClass}}" ng-show="showTitle()">{{form.title}}</label><select ng-model="$$value$$" ng-model-options="form.ngModelOptions" ng-disabled="form.readonly" sf-changed="form" class="form-control {{form.fieldHtmlClass}}" schema-validate="form" ng-options="item.value as item.name group by item.group for item in form.titleMap" name="{{form.key.slice(-1)[0]}}"></select><div class="help-block" sf-message="form.description"></div></div>'),e.put("directives/decorators/bootstrap/submit.html",'<div class="form-group schema-form-submit {{form.htmlClass}}"><input type="submit" class="btn {{ form.style || \'btn-primary\' }} {{form.fieldHtmlClass}}" value="{{form.title}}" ng-disabled="form.readonly" ng-if="form.type === \'submit\'"> <button class="btn {{ form.style || \'btn-default\' }}" type="button" ng-click="buttonClick($event,form)" ng-disabled="form.readonly" ng-if="form.type !== \'submit\'"><span ng-if="form.icon" class="{{form.icon}}"></span> {{form.title}}</button></div>'),e.put("directives/decorators/bootstrap/tabarray.html",'<div sf-array="form" ng-init="selected = { tab: 0 }" class="clearfix schema-form-tabarray schema-form-tabarray-{{form.tabType || \'left\'}} {{form.htmlClass}}"><div ng-if="!form.tabType || form.tabType !== \'right\'" ng-class="{\'col-xs-3\': !form.tabType || form.tabType === \'left\'}"><ul class="nav nav-tabs" ng-class="{ \'tabs-left\': !form.tabType || form.tabType === \'left\'}"><li ng-repeat="item in modelArray track by $index" ng-click="$event.preventDefault() || (selected.tab = $index)" ng-class="{active: selected.tab === $index}"><a href="#">{{interp(form.title,{\'$index\':$index, value: item}) || $index}}</a></li><li ng-hide="form.readonly" ng-click="$event.preventDefault() || (selected.tab = appendToArray().length - 1)"><a href="#"><i class="glyphicon glyphicon-plus"></i> {{ form.add || \'Add\'}}</a></li></ul></div><div ng-class="{\'col-xs-9\': !form.tabType || form.tabType === \'left\' || form.tabType === \'right\'}"><div class="tab-content {{form.fieldHtmlClass}}"><div class="tab-pane clearfix" ng-repeat="item in modelArray track by $index" ng-show="selected.tab === $index" ng-class="{active: selected.tab === $index}"><sf-decorator ng-init="arrayIndex = $index" form="copyWithIndex($index)"></sf-decorator><button ng-hide="form.readonly" ng-click="selected.tab = deleteFromArray($index).length - 1" type="button" class="btn {{ form.style.remove || \'btn-default\' }} pull-right"><i class="glyphicon glyphicon-trash"></i> {{ form.remove || \'Remove\'}}</button></div></div></div><div ng-if="form.tabType === \'right\'" class="col-xs-3"><ul class="nav nav-tabs tabs-right"><li ng-repeat="item in modelArray track by $index" ng-click="$event.preventDefault() || (selected.tab = $index)" ng-class="{active: selected.tab === $index}"><a href="#">{{interp(form.title,{\'$index\':$index, value: item}) || $index}}</a></li><li ng-hide="form.readonly" ng-click="$event.preventDefault() || appendToArray()"><a href="#"><i class="glyphicon glyphicon-plus"></i> {{ form.add || \'Add\'}}</a></li></ul></div></div>'),e.put("directives/decorators/bootstrap/tabs.html",'<div ng-init="selected = { tab: 0 }" class="schema-form-tabs {{form.htmlClass}}"><ul class="nav nav-tabs"><li ng-repeat="tab in form.tabs" ng-disabled="form.readonly" ng-click="$event.preventDefault() || (selected.tab = $index)" ng-class="{active: selected.tab === $index}"><a href="#">{{ tab.title }}</a></li></ul><div class="tab-content {{form.fieldHtmlClass}}"><div class="tab-pane" ng-disabled="form.readonly" ng-repeat="tab in form.tabs" ng-show="selected.tab === $index" ng-class="{active: selected.tab === $index}"><bootstrap-decorator ng-repeat="item in tab.items" form="item"></bootstrap-decorator></div></div></div>'),e.put("directives/decorators/bootstrap/textarea.html",'<div class="form-group has-feedback {{form.htmlClass}} schema-form-textarea" ng-class="{\'has-error\': form.disableErrorState !== true && hasError(), \'has-success\': form.disableSuccessState !== true && hasSuccess()}"><label class="{{form.labelHtmlClass}}" ng-class="{\'sr-only\': !showTitle()}" for="{{form.key.slice(-1)[0]}}">{{form.title}}</label> <textarea ng-if="!form.fieldAddonLeft && !form.fieldAddonRight" class="form-control {{form.fieldHtmlClass}}" id="{{form.key.slice(-1)[0]}}" sf-changed="form" placeholder="{{form.placeholder}}" ng-disabled="form.readonly" ng-model="$$value$$" ng-model-options="form.ngModelOptions" schema-validate="form" name="{{form.key.slice(-1)[0]}}"></textarea><div ng-if="form.fieldAddonLeft || form.fieldAddonRight" ng-class="{\'input-group\': (form.fieldAddonLeft || form.fieldAddonRight)}"><span ng-if="form.fieldAddonLeft" class="input-group-addon" ng-bind-html="form.fieldAddonLeft"></span> <textarea class="form-control {{form.fieldHtmlClass}}" id="{{form.key.slice(-1)[0]}}" sf-changed="form" placeholder="{{form.placeholder}}" ng-disabled="form.readonly" ng-model="$$value$$" ng-model-options="form.ngModelOptions" schema-validate="form" name="{{form.key.slice(-1)[0]}}"></textarea> <span ng-if="form.fieldAddonRight" class="input-group-addon" ng-bind-html="form.fieldAddonRight"></span></div><span class="help-block" sf-message="form.description"></span></div>')}]),angular.module("schemaForm").config(["schemaFormDecoratorsProvider",function(e){const t="directives/decorators/bootstrap/";e.defineDecorator("bootstrapDecorator",{textarea:{template:t+"textarea.html",replace:!1},fieldset:{template:t+"fieldset.html",replace:!1},array:{template:t+"array.html",replace:!1},tabarray:{template:t+"tabarray.html",replace:!1},tabs:{template:t+"tabs.html",replace:!1},section:{template:t+"section.html",replace:!1},conditional:{template:t+"section.html",replace:!1},actions:{template:t+"actions.html",replace:!1},select:{template:t+"select.html",replace:!1},checkbox:{template:t+"checkbox.html",replace:!1},checkboxes:{template:t+"checkboxes.html",replace:!1},number:{template:t+"default.html",replace:!1},password:{template:t+"default.html",replace:!1},submit:{template:t+"submit.html",replace:!1},button:{template:t+"submit.html",replace:!1},radios:{template:t+"radios.html",replace:!1},"radios-inline":{template:t+"radios-inline.html",replace:!1},radiobuttons:{template:t+"radio-buttons.html",replace:!1},help:{template:t+"help.html",replace:!1},default:{template:t+"default.html",replace:!1}},[]),e.createDirectives({textarea:t+"textarea.html",select:t+"select.html",checkbox:t+"checkbox.html",checkboxes:t+"checkboxes.html",number:t+"default.html",submit:t+"submit.html",button:t+"submit.html",text:t+"default.html",date:t+"default.html",password:t+"default.html",datepicker:t+"datepicker.html",input:t+"default.html",radios:t+"radios.html","radios-inline":t+"radios-inline.html",radiobuttons:t+"radio-buttons.html"})}]).directive("sfFieldset",()=>({transclude:!0,scope:!0,templateUrl:"directives/decorators/bootstrap/fieldset-trcl.html",link(e,t,i){e.title=e.$eval(i.title)}}))},function(e,t){angular.module("schemaForm").run(["$templateCache",function(e){e.put("directives/decorators/bootstrap/codemirror/codemirror.html",'<div class="form-group" ng-class="{\'has-error\': hasError()}" ng-init="codemirrorOptions = {foo: \'bar\'}">\n  <label class="control-label" ng-show="showTitle()">{{form.title}}</label>\n  <div ng-if="form.codemirrorButtons" class="cm-buttons">\n    <span class="btn-group" ng-repeat="buttonGroup in form.codemirrorButtons">\n      <button ng-repeat="button in buttonGroup" ng-click="evalInScope(button.onClick)" type="button" class="btn btn-sm btn-default" id="btnBold" title="{{ button.title }}">\n        <span ng-if="button.icon" class="glyphicon" ng-class="\'glyphicon-\' + button.icon"></span>\n        <span ng-if="button.label" ng-bind-html="button.label"></span>\n      </button>\n    </span>\n  </div>\n  <div codemirror-buttons ui-codemirror ui-codemirror-opts="getCodemirrorOptions()" ng-style="form.style" ng-model="$$value$$" schema-validate="form"></div>\n  <span class="help-block">{{ (hasError() && errorMessage(schemaError())) || form.description}}</span>\n</div>\n')}]),angular.module("schemaForm").config(["schemaFormProvider","schemaFormDecoratorsProvider",function(e,t){t.addMapping("bootstrapDecorator","codemirror","directives/decorators/bootstrap/codemirror/codemirror.html"),t.createDirective("codemirror","directives/decorators/bootstrap/codemirror/codemirror.html")}]).directive("codemirrorButtons",()=>({controller:["$scope",function(e){e.getCodemirrorOptions=function(){const t=angular.copy(e.form.codemirrorOptions);return t.onLoad=function(t){e.cm=t},t}}]}))},function(e,t,i){"use strict";function n(e,t){return{restrict:"EA",require:"?ngModel",compile:function(){if(angular.isUndefined(window.CodeMirror))throw new Error("ui-codemirror needs CodeMirror to work... (o rly?)");return i}};function i(i,n,a,o){const r=angular.extend({value:n.text()},t.codemirror||{},i.$eval(a.uiCodemirror),i.$eval(a.uiCodemirrorOpts)),s=function(e,t){let i;"TEXTAREA"===e[0].tagName?i=window.CodeMirror.fromTextArea(e[0],t):(e.html(""),i=new window.CodeMirror(t=>{e.append(t)},t));return i}(n,r);!function(e,t,i){if(!t)return;const n=Object.keys(window.CodeMirror.defaults);i.$watch(t,(function(t,i){angular.isObject(t)&&n.forEach(n=>{if(t.hasOwnProperty(n)){if(i&&t[n]===i[n])return;e.setOption(n,t[n])}})}),!0)}(s,a.uiCodemirror||a.uiCodemirrorOpts,i),function(e,t,i){if(!t)return;t.$formatters.push(e=>{if(angular.isUndefined(e)||null===e)return"";if(angular.isObject(e)||angular.isArray(e))throw new Error("ui-codemirror cannot use an object or an array as a model");return e}),t.$render=function(){const i=t.$viewValue||"";e.setValue(i)},e.on("change",e=>{const n=e.getValue();n!==t.$viewValue&&i.$evalAsync(()=>{t.$setViewValue(n)})})}(s,o,i),function(t,i,n){if(!i)return;n.$watch(i,(i,n)=>{i!==n&&e(()=>{t.refresh()})})}(s,a.uiRefresh,i),i.$on("CodeMirror",(e,t)=>{if(!angular.isFunction(t))throw new Error("the CodeMirror event requires a callback function");t(s)}),angular.isFunction(r.onLoad)&&r.onLoad(s)}}angular.module("ui.codemirror",[]).constant("uiCodemirrorConfig",{}).directive("uiCodemirror",n),n.$inject=["$timeout","uiCodemirrorConfig"]},function(e,t,i){var n,a,o;!function(r){"use strict";"undefined"!=typeof showdown?r(showdown):(a=[i(23)],void 0===(o="function"==typeof(n=r)?n.apply(t,a):n)||(e.exports=o))}(e=>{"use strict";e.extension("docHelper",()=>[{type:"lang",regex:"(!){2}(>){1}",replace:(e,t,i)=>'<p class="box alert">'},{type:"lang",regex:"(!){1}(>){1}",replace:(e,t,i)=>'<p class="box warn">'},{type:"lang",regex:"(\\?){1}(>){1}",replace:(e,t,i)=>'<p class="box tip">'}])})},,,,,,,,,function(e,t,i){"use strict";t.__esModule=!0;var n=i(7);i(169),i(170);var a=i(1225),o=i(1226);n.module("gravitee-i18n",["pascalprecht.translate"]).config(o.default).factory("i18nCustomLoader",a.default)},function(e,t,i){"use strict";a.$inject=["$q","$http"],t.__esModule=!0;var n=i(7);function a(e,t){return function(i){if(!(i&&(n.isArray(i.files)||n.isString(i.prefix)&&n.isString(i.suffix))))throw new Error("Couldn't load static files, no files and prefix or suffix specified!");i.files||(i.files=[{prefix:i.prefix,suffix:i.suffix}]);for(var a=function(a){if(!a||!n.isString(a.prefix)||!n.isString(a.suffix))throw new Error("Couldn't load static file, no prefix or suffix specified!");var o=[a.prefix,i.key,a.suffix].join("");return n.isObject(i.fileMap)&&i.fileMap[o]&&(o=i.fileMap[o]),t(n.extend({url:o,method:"GET",headers:{"Cache-Control":"no-cache",Pragma:"no-cache"},silentCall:!0},i.$http)).then((function(e){return e.data}),(function(){return e.reject(i.key)}))},o=[],r=i.files.length,s=0;s<r;s++)o.push(a({prefix:i.files[s].prefix,key:i.key,suffix:i.files[s].suffix}));return e.all(o).then((function(e){for(var t=e.length,i={},n=0;n<t;n++)for(var a in e[n])i[a]=e[n][a];return i}))}}t.default=a},function(e,t,i){"use strict";a.$inject=["$translateProvider","$windowProvider"],t.__esModule=!0;var n=i(1);function a(e,t){e.useLoader("i18nCustomLoader",{prefix:"assets/i18n/",suffix:".json"}),e.registerAvailableLanguageKeys(["en","fr","pt-BR","zh","ru","nl","es","cs"],{"en*":"en","fr*":"fr","pt*":"pt-BR","zh*":"zh","ru*":"ru","nl*":"nl","es*":"es","cs*":"cs","*":"en"}).determinePreferredLanguage(),e.fallbackLanguage("en"),e.useSanitizeValueStrategy("escape");var i=window.navigator.userLanguage||window.navigator.language;n.locale(i)}t.default=a},,function(e,t){}]);